// NAME: David Tassoni
// Lab 3
// FILENAME: part_1.c

#include "io.h"
#include <stdio.h>
#include <stdbool.h>
#include "system.h"
#include "altera_avalon_timer_regs.h"
#include "altera_avalon_timer.h"

// create standard embedded type definitions
typedef signed char    sint8 ; // signed 8 bit values
typedef unsigned char  uint8 ; // unsigned 8 bit values
typedef signed short   sint16; // signed 16 bit values
typedef unsigned short uint16; // unsigned 16 bit values
typedef signed long    sint32; // signed 32 bit values
typedef unsigned long  uint32; // unsigned 32 bit values
typedef float          real32; // 32 bit real values

#define HEX_MAX 15
#define HEX_MIN 0

volatile uint8* Switches_Pointer         = (uint8*)SWITCHES_BASE;       // points to SWITCHES_BASE
uint8* Hex_Pointer              = (uint8*)HEX0_BASE;           // points to HEX0_BASE
volatile uint8* Pushbuttons_Pointer      = (uint8*)PUSHBUTTONS_BASE;    // points to PUSHBUTTONS_BASE

uint8 KEYONEPUSHED   = 0b1101;
uint8 KEYONERELEASED = 0b1111;
uint8 pushbuttons;
uint8 count = 0;
uint8 switches;

uint8 hexNumbers[] = // array of hex numbers
{
	0x40, // 0
	0x79, // 1
	0x24, // 2
	0x30, // 3
	0x19, // 4
	0x12, // 5
	0x02, // 6
	0x78, // 7
	0x00, // 8
	0x18, // 9
	0x08, // A
	0x03, // b
	0x46, // c
	0x21, // d
	0x06, // E
	0x0E  // F
};  // End of Array

bool checkPushbutton()
{
	bool pbPushed = false; // create a bool to store the state of the pushbuttons, initialize to false
	if(pushbuttons == KEYONEPUSHED) // check to see if KEY1 is pushed
	{
		pbPushed = true; // if it is pushed, set to true
	}
	
	else
	{
		while(pbPushed = true) // infinitely loop while KEY1 is pushed
		{
			pushbuttons = *Pushbuttons_Pointer; // Read the Pushbuttons
			
			if(pushbuttons == KEYONERELEASED) // check to see if KEY1 is released
			{
				pbPushed = false; // set to false, now the while loop will be exited
			}
		}
	}
	return pbPushed; // return the value of pbPushed (true or false)
}

int main(void)
{
	count = 0; // set count to 0 to start at 0
    *Hex_Pointer = hexNumbers[count]; // display the array on the hex display
    bool CPB = true; // a bool for the pushbuttons
	
	while(1)
	{
		switches = *Switches_Pointer; // Read Switches
		*Hex_Pointer = hexNumbers[count]; // display the array on the hex display
		pushbuttons = *Pushbuttons_Pointer; // pushbuttons 
		pushbuttons |= 13; // OR the pushbuttons to bitmask them
		
		if (pushbuttons == 13) // check to see if KEY1 is pressed
		{
			CPB = checkPushbutton(); // assign the output of checkPushbutton to the bool, and run the function checkPushbutton
        }
		
		if (CPB == true)
		{
			if((switches == 0b00000001))
			{
				if(count == HEX_MAX)
				{
					count = HEX_MIN - 1;
				}
			count++;
			}
		
			else if((switches == 0b00000000))
			{
				if(count == HEX_MIN)
				{
					count = HEX_MAX + 1;
				}
			count--;
			}
		}
		CPB = false; // reset to false for the next iteration
	}
	return 0;
}
