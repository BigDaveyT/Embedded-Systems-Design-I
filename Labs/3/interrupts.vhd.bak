-------------------------------------------------------------------------
-- David Tassoni
-- Jan. 29, 2020
-- Lab 2
-------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.std_logic_arith.all;

ENTITY assembly_count is
  port (
  
    ----- CLOCK -----
    CLOCK_50  : in std_logic;

    ----- SEG7_DISPLAY -----
    HEX0 : out std_logic_vector(6 downto 0);

    ----- KEYS -----
    KEY : in std_logic_vector(3 downto 0);

    ----- LED -----
    LEDR : out  std_logic_vector(9 downto 0);

    ----- SWITCHES -----
    SW : in  std_logic_vector(9 downto 0)
 
  );
end entity assembly_count;

architecture assembly_count_arch of assembly_count is
  -- signal declarations

  signal cntr : std_logic_vector(25 downto 0);
  signal reset_n   : std_logic;
  signal sw_d2     : std_logic_vector(9 downto 0);
  
  component nios_system is
    port (
			clk_clk            : in  std_logic                    := 'X';             -- clk
			reset_reset_n      : in  std_logic                    := 'X';             -- reset_n
			switches_export    : in  std_logic_vector(7 downto 0) := (others => 'X'); -- export
			pushbuttons_export : in  std_logic_vector(3 downto 0) := (others => 'X'); -- export
			hex0_export        : out std_logic_vector(6 downto 0)                     -- export
		);
  end component nios_system;
  
begin
    
  --- heartbeat counter -------- to check for proper loading of the program
  counter_proc : process (CLOCK_50) begin
    if (rising_edge(CLOCK_50)) then
      if (reset_n = '0') then
        cntr <= "00" & x"000000";
      else
        cntr <= cntr + ("00" & x"000001");
      end if;
    end if;
  end process counter_proc;
  
  LEDR(8) <= cntr(24); -- LED 8 will blink to check proper loading of the program

  ----- Instantiate the nios processor
  u0 : component nios_system
		port map (
			clk_clk            => CLOCK_50,         -- clk.clk
			reset_reset_n      => reset_n,           -- reset.reset_n
			switches_export    => sw_d2(7 downto 0), -- switches.export
			pushbuttons_export => KEY  (3 downto 0), -- pushbuttons.export
			hex0_export        => HEX0 (6 downto 0)  -- hex0.export
		);

end architecture assembly_count_arch;
