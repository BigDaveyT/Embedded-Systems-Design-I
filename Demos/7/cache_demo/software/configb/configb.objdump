
configb.elf:     file format elf32-littlenios2
configb.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x040001c0

Program Header:
    LOAD off    0x00001000 vaddr 0x04000000 paddr 0x04000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x04000020 paddr 0x04000020 align 2**12
         filesz 0x00010580 memsz 0x00010580 flags r-x
    LOAD off    0x000115a0 vaddr 0x040105a0 paddr 0x0401208c align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00013b78 vaddr 0x04013b78 paddr 0x04013b78 align 2**12
         filesz 0x00000000 memsz 0x00000a74 flags rw-
    LOAD off    0x00014000 vaddr 0x08000000 paddr 0x08000000 align 2**12
         filesz 0x000004ac memsz 0x000004ac flags r--

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  04000000  04000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   000001a0  04000020  04000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000103e0  040001c0  040001c0  000011c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000004ac  08000000  08000000  00014000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  040105a0  0401208c  000115a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000a74  04013b78  04013b78  00013b78  2**2
                  ALLOC, SMALL_DATA
  6 .new_sdram_controller_0 00000000  040145ec  040145ec  000144ac  2**0
                  CONTENTS
  7 .onchip_memory2_0 00000000  080004ac  080004ac  000144ac  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  000144ac  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000f98  00000000  00000000  000144d0  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00025346  00000000  00000000  00015468  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 000099e7  00000000  00000000  0003a7ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000bd75  00000000  00000000  00044195  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  0000231c  00000000  00000000  0004ff0c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003664  00000000  00000000  00052228  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00018f95  00000000  00000000  0005588c  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000020  00000000  00000000  0006e824  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001a80  00000000  00000000  0006e848  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  000736e5  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  000736e8  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  000736f4  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  000736f5  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  000736f6  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  000736fa  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  000736fe  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  00073702  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  0007370d  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  00073718  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000007  00000000  00000000  00073723  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000033  00000000  00000000  0007372a  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0003c074  00000000  00000000  0007375d  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
04000000 l    d  .entry	00000000 .entry
04000020 l    d  .exceptions	00000000 .exceptions
040001c0 l    d  .text	00000000 .text
08000000 l    d  .rodata	00000000 .rodata
040105a0 l    d  .rwdata	00000000 .rwdata
04013b78 l    d  .bss	00000000 .bss
040145ec l    d  .new_sdram_controller_0	00000000 .new_sdram_controller_0
080004ac l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../configb_bsp//obj/HAL/src/crt0.o
040001f8 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
04000094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 MatrixAddition.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 floatunsisf.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
080002f2 l     O .rodata	00000010 zeroes.4404
04004a0c l     F .text	000000bc __sbprintf
08000302 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
04004c1c l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0400674c l     F .text	00000008 __fp_unlock
04006760 l     F .text	0000019c __sinit.part.1
040068fc l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
040105a0 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
040109e4 l     O .rwdata	00000020 lc_ctype_charset
040109c4 l     O .rwdata	00000020 lc_message_charset
04010a04 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
08000334 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
04009e60 l     F .text	000000fc __sprint_r.part.0
08000468 l     O .rodata	00000010 blanks.4348
08000458 l     O .rodata	00000010 zeroes.4349
0400b3ec l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0400de90 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
0400dfbc l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0400dfe8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0400e108 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0400e1e8 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0400e2d4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0400e4a8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0401207c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0400e6f4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0400e828 l     F .text	00000034 alt_dev_reg
04010fec l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0400eb1c l     F .text	0000020c altera_avalon_jtag_uart_irq
0400ed28 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_ts.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_vars.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0400f5a4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0400fa74 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0400fbb4 l     F .text	0000003c alt_get_errno
0400fbf0 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
04002674 g     F .text	00000018 putchar
0400933c g     F .text	00000074 _mprec_log10
04009428 g     F .text	0000008c __any_on
0400bae0 g     F .text	00000054 _isatty_r
08000340 g     O .rodata	00000028 __mprec_tinytens
0400e3e4 g     F .text	0000007c alt_main
0400268c g     F .text	000000c0 _puts_r
040144ec g     O .bss	00000100 alt_irq
0400bb34 g     F .text	00000060 _lseek_r
0401208c g       *ABS*	00000000 __flash_rwdata_start
0400d138 g     F .text	00000088 .hidden __eqdf2
080004ac g       *ABS*	00000000 __alt_heap_start
04002630 g     F .text	0000003c printf
0400bbf4 g     F .text	0000009c _wcrtomb_r
04009d20 g     F .text	0000005c __sseek
04006a9c g     F .text	00000010 __sinit
0400b4a8 g     F .text	00000140 __swbuf_r
04007564 g     F .text	0000007c _setlocale_r
04006904 g     F .text	00000068 __sfmoreglue
0400e484 g     F .text	00000024 __malloc_unlock
04000a3c g     F .text	00000440 .hidden __divsf3
04013bb4 g     O .bss	00000004 altera_avalon_timer_ts_freq
04008234 g     F .text	0000015c memmove
04006a84 g     F .text	00000018 _cleanup
040084b8 g     F .text	000000a8 _Balloc
0400d1c0 g     F .text	000000dc .hidden __gtdf2
04000000 g     F .entry	0000001c __reset
04000020 g       *ABS*	00000000 __flash_exceptions_start
0400ba84 g     F .text	0000005c _fstat_r
04013ba0 g     O .bss	00000004 errno
04009c9c g     F .text	00000008 __seofread
040001fc g     F .text	0000007c microseconds
04013ba8 g     O .bss	00000004 alt_argv
0401a04c g       *ABS*	00000000 _gp
04010e6c g     O .rwdata	00000180 alt_fd_list
0400266c g     F .text	00000008 _putchar_r
0400ffd0 g     F .text	00000090 alt_find_dev
040080ec g     F .text	00000148 memcpy
04006754 g     F .text	0000000c _cleanup_r
0400dd0c g     F .text	000000dc .hidden __floatsidf
0400fb38 g     F .text	0000007c alt_io_redirect
0400d29c g     F .text	000000f4 .hidden __ltdf2
040105a0 g       *ABS*	00000000 __DTOR_END__
0400274c g     F .text	00000014 puts
04009b80 g     F .text	00000074 __fpclassifyd
04009298 g     F .text	000000a4 __ratio
0400b3d0 g     F .text	0000001c __vfiprintf_internal
0400ef20 g     F .text	0000021c altera_avalon_jtag_uart_read
04002600 g     F .text	00000030 _printf_r
08000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
04000980 g     F .text	00000064 .hidden __udivsi3
0400e144 g     F .text	000000a4 isatty
08000390 g     O .rodata	000000c8 __mprec_tens
040075e0 g     F .text	0000000c __locale_charset
040002b4 g     F .text	00000040 stop_measurement
0400f744 g     F .text	00000090 alt_icache_flush
04013b9c g     O .bss	00000004 __malloc_top_pad
04013b78 g     O .bss	00000004 time_1
04012054 g     O .rwdata	00000004 __mb_cur_max
04007610 g     F .text	0000000c _localeconv_r
040088c4 g     F .text	0000003c __i2b
04006f20 g     F .text	000004bc __sfvwrite_r
04009bf4 g     F .text	00000054 _sbrk_r
0400bb94 g     F .text	00000060 _read_r
04012074 g     O .rwdata	00000004 alt_max_fd
0400b778 g     F .text	000000f0 _fclose_r
0400671c g     F .text	00000030 fflush
04013b98 g     O .bss	00000004 __malloc_max_sbrked_mem
0400248c g     F .text	00000110 .hidden __extendsfdf2
0400c88c g     F .text	000008ac .hidden __adddf3
04009040 g     F .text	0000010c __b2d
0400c354 g     F .text	00000538 .hidden __umoddi3
0400e310 g     F .text	000000d4 lseek
0401204c g     O .rwdata	00000004 _global_impure_ptr
0400961c g     F .text	00000564 _realloc_r
040145ec g       *ABS*	00000000 __bss_end
0400f984 g     F .text	000000f0 alt_iic_isr_register
0400fea4 g     F .text	00000108 alt_tick
0400bddc g     F .text	00000578 .hidden __udivdi3
0400b9e0 g     F .text	00000024 _fputwc_r
08000368 g     O .rodata	00000028 __mprec_bigtens
040086a8 g     F .text	00000104 __s2b
0400dde8 g     F .text	000000a8 .hidden __floatunsidf
04008d80 g     F .text	00000060 __mcmp
04006abc g     F .text	00000018 __fp_lock_all
0400f938 g     F .text	0000004c alt_ic_irq_enabled
0400fe08 g     F .text	0000009c alt_alarm_stop
04013bb8 g     O .bss	00000004 alt_irq_active
040000ec g     F .exceptions	000000d4 alt_irq_handler
04010e44 g     O .rwdata	00000028 alt_dev_null
0400df9c g     F .text	00000020 alt_dcache_flush_all
040087ac g     F .text	00000068 __hi0bits
0400dc8c g     F .text	00000080 .hidden __fixdfsi
0401208c g       *ABS*	00000000 __ram_rwdata_end
0401206c g     O .rwdata	00000008 alt_dev_list
0400e730 g     F .text	000000f8 write
040094b4 g     F .text	000000a0 _putc_r
0400f458 g     F .text	00000020 alt_timestamp_freq
080004ac g       *ABS*	00000000 __ram_rodata_end
0400e024 g     F .text	000000b0 fstat
0400d29c g     F .text	000000f4 .hidden __ledf2
04008af8 g     F .text	00000140 __pow5mult
04009f74 g     F .text	0000145c ___vfiprintf_internal_r
04013b90 g     O .bss	00000004 __nlocale_changed
040009e4 g     F .text	00000058 .hidden __umodsi3
080004ac g       *ABS*	00000000 end
0400ea5c g     F .text	000000c0 altera_avalon_jtag_uart_init
040105a0 g       *ABS*	00000000 __CTOR_LIST__
08008000 g       *ABS*	00000000 __alt_stack_pointer
0400259c g     F .text	00000064 .hidden __clzsi2
0400f13c g     F .text	00000224 altera_avalon_jtag_uart_write
04006aac g     F .text	00000004 __sfp_lock_acquire
04008008 g     F .text	000000e4 memchr
040027f8 g     F .text	000021f8 ___vfprintf_internal_r
04006c10 g     F .text	00000310 _free_r
040075ec g     F .text	00000010 __locale_mb_cur_max
040103ec g     F .text	00000180 __call_exitprocs
04013b8c g     O .bss	00000004 __mlocale_changed
04012058 g     O .rwdata	00000004 __malloc_sbrk_base
040001c0 g     F .text	0000003c _start
04013bbc g     O .bss	00000004 _alt_tick_rate
04008c38 g     F .text	00000148 __lshift
04013bc0 g     O .bss	00000004 _alt_nticks
0400e4e4 g     F .text	000000fc read
0400e894 g     F .text	00000064 alt_sys_init
04001278 g     F .text	00000124 .hidden __floatsisf
040102d4 g     F .text	00000118 __register_exitproc
04008900 g     F .text	000001f8 __multiply
0400edc8 g     F .text	00000068 altera_avalon_jtag_uart_close
040105a0 g       *ABS*	00000000 __ram_rwdata_start
08000000 g       *ABS*	00000000 __ram_rodata_start
04013bc4 g     O .bss	00000028 __malloc_current_mallinfo
0400914c g     F .text	0000014c __d2b
0400e8f8 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
04010168 g     F .text	000000a4 alt_get_fd
0400b660 g     F .text	00000054 _close_r
04010258 g     F .text	0000007c memcmp
0400e9b8 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
080004ac g       *ABS*	00000000 __alt_stack_base
0400ea08 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
04004ac8 g     F .text	00000154 __swsetup_r
0400148c g     F .text	000008e8 .hidden __divdf3
0400696c g     F .text	00000118 __sfp
040093b0 g     F .text	00000078 __copybits
04010a3c g     O .rwdata	00000408 __malloc_av_
04006ab8 g     F .text	00000004 __sinit_lock_release
04001d74 g     F .text	00000718 .hidden __muldf3
04009c48 g     F .text	00000054 __sread
04010060 g     F .text	00000108 alt_find_file
0400f5e0 g     F .text	000000a4 alt_dev_llist_insert
0400e460 g     F .text	00000024 __malloc_lock
0400e644 g     F .text	000000b0 sbrk
040066c0 g     F .text	0000005c _fflush_r
0400b6b4 g     F .text	000000c4 _calloc_r
04013b78 g       *ABS*	00000000 __bss_start
04008390 g     F .text	00000128 memset
040002f4 g     F .text	000003c8 main
04013b7c g     O .bss	00000004 timer_overhead
04013bac g     O .bss	00000004 alt_envp
04013b94 g     O .bss	00000004 __malloc_max_total_mem
0400e958 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0400b5e8 g     F .text	00000018 __swbuf
040007ec g     F .text	0000009c SumByRowCol
04009d7c g     F .text	00000008 __sclose
08008000 g       *ABS*	00000000 __alt_heap_limit
0400b868 g     F .text	00000014 fclose
0400f360 g     F .text	00000078 alt_timestamp_start
04004e1c g     F .text	00001688 _dtoa_r
040077fc g     F .text	0000080c _malloc_r
0400bd50 g     F .text	00000030 __ascii_wctomb
04012078 g     O .rwdata	00000004 alt_errno
040073dc g     F .text	000000c4 _fwalk
04013bec g     O .bss	00000900 matrix
04009554 g     F .text	000000c8 putc
04000888 g     F .text	00000084 .hidden __divsi3
04006aec g     F .text	00000124 _malloc_trim_r
040105a0 g       *ABS*	00000000 __CTOR_END__
04000e7c g     F .text	000003fc .hidden __mulsf3
04000278 g     F .text	0000003c start_measurement
04009d84 g     F .text	000000dc strcmp
08000000 g       *ABS*	00000000 __flash_rodata_start
040105a0 g       *ABS*	00000000 __DTOR_LIST__
0400d138 g     F .text	00000088 .hidden __nedf2
0400e85c g     F .text	00000038 alt_irq_init
0400e5e0 g     F .text	00000064 alt_release_fd
080001aa g     O .rodata	00000100 .hidden __clz_tab
04013b88 g     O .bss	00000004 _PathLocale
0401020c g     F .text	00000014 atexit
0400b600 g     F .text	00000060 _write_r
0400761c g     F .text	00000018 setlocale
04012050 g     O .rwdata	00000004 _impure_ptr
04013ba4 g     O .bss	00000004 alt_argc
040064a4 g     F .text	0000021c __sflush_r
04013bb0 g     O .bss	00000004 altera_avalon_timer_ts_base
0400f6e4 g     F .text	00000060 _do_dtors
04013b80 g     O .bss	00000004 ticks
04007608 g     F .text	00000008 __locale_cjk_lang
040006bc g     F .text	00000094 InitMatrix
04000020 g       .exceptions	00000000 alt_irq_entry
04008fdc g     F .text	00000064 __ulp
04006ad4 g     F .text	00000018 __fp_unlock_all
04012064 g     O .rwdata	00000008 alt_fs_list
04000020 g       *ABS*	00000000 __ram_exceptions_start
04007634 g     F .text	0000000c localeconv
0400f3d8 g     F .text	00000080 alt_timestamp
04000000 g       *ABS*	00000000 __alt_mem_new_sdram_controller_0
0400f7d4 g     F .text	00000050 alt_ic_isr_register
0401208c g       *ABS*	00000000 _edata
080004ac g       *ABS*	00000000 _end
0400b87c g     F .text	00000164 __fputwc
040001c0 g       *ABS*	00000000 __ram_exceptions_end
0400ee30 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0400f8ac g     F .text	0000008c alt_ic_irq_disable
04009ca4 g     F .text	0000007c __swrite
0401205c g     O .rwdata	00000004 __malloc_trim_threshold
0400ffac g     F .text	00000024 altera_nios2_qsys_irq_init
040075fc g     F .text	0000000c __locale_msgcharset
04010220 g     F .text	00000038 exit
040074a0 g     F .text	000000c4 _fwalk_reent
0400139c g     F .text	000000f0 .hidden __floatunsisf
04008de0 g     F .text	000001fc __mdiff
0400090c g     F .text	00000074 .hidden __modsi3
08008000 g       *ABS*	00000000 __alt_data_end
04000020 g     F .exceptions	00000000 alt_exception
04006ab0 g     F .text	00000004 __sfp_lock_release
0401056c g     F .text	00000034 _exit
04000750 g     F .text	0000009c SumByColRow
0400f478 g     F .text	0000012c alt_alarm_start
04007640 g     F .text	000001bc __smakebuf_r
04002760 g     F .text	00000098 strlen
0400fcb4 g     F .text	00000154 open
0400d1c0 g     F .text	000000dc .hidden __gedf2
04013b84 g     O .bss	00000004 time_2
04012060 g     O .rwdata	00000004 __wctomb
04009f5c g     F .text	00000018 __sprint_r
0400e0d4 g     F .text	00000034 alt_icache_flush_all
04012080 g     O .rwdata	00000004 alt_priority_mask
0400f824 g     F .text	00000088 alt_ic_irq_enable
040049f0 g     F .text	0000001c __vfprintf_internal
0400bd80 g     F .text	0000005c _wctomb_r
0400d390 g     F .text	000008fc .hidden __subdf3
04008814 g     F .text	000000b0 __lo0bits
04012084 g     O .rwdata	00000008 alt_alarm_list
0400f684 g     F .text	00000060 _do_ctors
0400bc90 g     F .text	000000c0 wcrtomb
0400decc g     F .text	000000d0 close
0400e250 g     F .text	00000084 alt_load
0400ba04 g     F .text	00000080 fputwc
04006ab4 g     F .text	00000004 __sinit_lock_acquire
04008588 g     F .text	00000120 __multadd
04008560 g     F .text	00000028 _Bfree



Disassembly of section .entry:

04000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
 4000000:	00808014 	movui	r2,512
#endif

0:
    initi r2
 4000004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
 4000008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 400000c:	00bffd16 	blt	zero,r2,4000004 <__alt_data_end+0xfbff8004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 4000010:	00410034 	movhi	at,1024
    ori r1, r1, %lo(_start)
 4000014:	08407014 	ori	at,at,448
    jmp r1
 4000018:	0800683a 	jmp	at
 400001c:	00000000 	call	0 <__alt_mem_new_sdram_controller_0-0x4000000>

Disassembly of section .exceptions:

04000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 4000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 4000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 4000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 400002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 4000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 4000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 4000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 400003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 4000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 4000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 4000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 400004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 4000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 4000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 4000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 400005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 4000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 4000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 4000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 400006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 4000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 4000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 4000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 400007c:	10000326 	beq	r2,zero,400008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 4000080:	20000226 	beq	r4,zero,400008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 4000084:	40000ec0 	call	40000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 4000088:	00000306 	br	4000098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
 400008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
 4000090:	e8bfff17 	ldw	r2,-4(ea)

04000094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
 4000094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 4000098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 400009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 40000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 40000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 40000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 40000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 40000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 40000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 40000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 40000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 40000c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 40000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 40000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 40000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 40000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 40000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 40000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 40000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 40000e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 40000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 40000e8:	ef80083a 	eret

040000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 40000ec:	defff904 	addi	sp,sp,-28
 40000f0:	dfc00615 	stw	ra,24(sp)
 40000f4:	df000515 	stw	fp,20(sp)
 40000f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 40000fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 4000100:	0005313a 	rdctl	r2,ipending
 4000104:	e0bffe15 	stw	r2,-8(fp)

  return active;
 4000108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 400010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 4000110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 4000114:	00800044 	movi	r2,1
 4000118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 400011c:	e0fffb17 	ldw	r3,-20(fp)
 4000120:	e0bffc17 	ldw	r2,-16(fp)
 4000124:	1884703a 	and	r2,r3,r2
 4000128:	10001426 	beq	r2,zero,400017c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 400012c:	00810074 	movhi	r2,1025
 4000130:	10913b04 	addi	r2,r2,17644
 4000134:	e0fffd17 	ldw	r3,-12(fp)
 4000138:	180690fa 	slli	r3,r3,3
 400013c:	10c5883a 	add	r2,r2,r3
 4000140:	10c00017 	ldw	r3,0(r2)
 4000144:	00810074 	movhi	r2,1025
 4000148:	10913b04 	addi	r2,r2,17644
 400014c:	e13ffd17 	ldw	r4,-12(fp)
 4000150:	200890fa 	slli	r4,r4,3
 4000154:	1105883a 	add	r2,r2,r4
 4000158:	10800104 	addi	r2,r2,4
 400015c:	10800017 	ldw	r2,0(r2)
 4000160:	1009883a 	mov	r4,r2
 4000164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 4000168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 400016c:	0005313a 	rdctl	r2,ipending
 4000170:	e0bfff15 	stw	r2,-4(fp)

  return active;
 4000174:	e0bfff17 	ldw	r2,-4(fp)
 4000178:	00000706 	br	4000198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 400017c:	e0bffc17 	ldw	r2,-16(fp)
 4000180:	1085883a 	add	r2,r2,r2
 4000184:	e0bffc15 	stw	r2,-16(fp)
      i++;
 4000188:	e0bffd17 	ldw	r2,-12(fp)
 400018c:	10800044 	addi	r2,r2,1
 4000190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 4000194:	003fe106 	br	400011c <__alt_data_end+0xfbff811c>

    active = alt_irq_pending ();
 4000198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 400019c:	e0bffb17 	ldw	r2,-20(fp)
 40001a0:	103fdb1e 	bne	r2,zero,4000110 <__alt_data_end+0xfbff8110>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 40001a4:	0001883a 	nop
}
 40001a8:	0001883a 	nop
 40001ac:	e037883a 	mov	sp,fp
 40001b0:	dfc00117 	ldw	ra,4(sp)
 40001b4:	df000017 	ldw	fp,0(sp)
 40001b8:	dec00204 	addi	sp,sp,8
 40001bc:	f800283a 	ret

Disassembly of section .text:

040001c0 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 40001c0:	06c20034 	movhi	sp,2048
    ori sp, sp, %lo(__alt_stack_pointer)
 40001c4:	dee00014 	ori	sp,sp,32768
    movhi gp, %hi(_gp)
 40001c8:	06810074 	movhi	gp,1025
    ori gp, gp, %lo(_gp)
 40001cc:	d6a81314 	ori	gp,gp,41036
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 40001d0:	00810074 	movhi	r2,1025
    ori r2, r2, %lo(__bss_start)
 40001d4:	108ede14 	ori	r2,r2,15224

    movhi r3, %hi(__bss_end)
 40001d8:	00c10074 	movhi	r3,1025
    ori r3, r3, %lo(__bss_end)
 40001dc:	18d17b14 	ori	r3,r3,17900

    beq r2, r3, 1f
 40001e0:	10c00326 	beq	r2,r3,40001f0 <_start+0x30>

0:
    stw zero, (r2)
 40001e4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 40001e8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 40001ec:	10fffd36 	bltu	r2,r3,40001e4 <__alt_data_end+0xfbff81e4>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 40001f0:	400e2500 	call	400e250 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 40001f4:	400e3e40 	call	400e3e4 <alt_main>

040001f8 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 40001f8:	003fff06 	br	40001f8 <__alt_data_end+0xfbff81f8>

040001fc <microseconds>:
alt_u32 time_2;
alt_u32 timer_overhead;
  

float microseconds(int ticks)
{
 40001fc:	defffc04 	addi	sp,sp,-16
 4000200:	dfc00315 	stw	ra,12(sp)
 4000204:	df000215 	stw	fp,8(sp)
 4000208:	dc000115 	stw	r16,4(sp)
 400020c:	df000204 	addi	fp,sp,8
 4000210:	e13ffe15 	stw	r4,-8(fp)
  return (float) 1000000 * (float) ticks / (float) alt_timestamp_freq();
 4000214:	e13ffe17 	ldw	r4,-8(fp)
 4000218:	40012780 	call	4001278 <__floatsisf>
 400021c:	1007883a 	mov	r3,r2
 4000220:	01525d34 	movhi	r5,18804
 4000224:	29490004 	addi	r5,r5,9216
 4000228:	1809883a 	mov	r4,r3
 400022c:	4000e7c0 	call	4000e7c <__mulsf3>
 4000230:	1007883a 	mov	r3,r2
 4000234:	1821883a 	mov	r16,r3
 4000238:	400f4580 	call	400f458 <alt_timestamp_freq>
 400023c:	1009883a 	mov	r4,r2
 4000240:	400139c0 	call	400139c <__floatunsisf>
 4000244:	1007883a 	mov	r3,r2
 4000248:	180b883a 	mov	r5,r3
 400024c:	8009883a 	mov	r4,r16
 4000250:	4000a3c0 	call	4000a3c <__divsf3>
 4000254:	1009883a 	mov	r4,r2
 4000258:	2007883a 	mov	r3,r4
 400025c:	1805883a 	mov	r2,r3
}
 4000260:	e6ffff04 	addi	sp,fp,-4
 4000264:	dfc00217 	ldw	ra,8(sp)
 4000268:	df000117 	ldw	fp,4(sp)
 400026c:	dc000017 	ldw	r16,0(sp)
 4000270:	dec00304 	addi	sp,sp,12
 4000274:	f800283a 	ret

04000278 <start_measurement>:

void start_measurement()
{
 4000278:	defffe04 	addi	sp,sp,-8
 400027c:	dfc00115 	stw	ra,4(sp)
 4000280:	df000015 	stw	fp,0(sp)
 4000284:	d839883a 	mov	fp,sp
  /* Flush caches */
  alt_dcache_flush_all();
 4000288:	400df9c0 	call	400df9c <alt_dcache_flush_all>
  alt_icache_flush_all();   
 400028c:	400e0d40 	call	400e0d4 <alt_icache_flush_all>
  /* Measure */
  alt_timestamp_start();
 4000290:	400f3600 	call	400f360 <alt_timestamp_start>
  time_1 = alt_timestamp();
 4000294:	400f3d80 	call	400f3d8 <alt_timestamp>
 4000298:	d0a6cb15 	stw	r2,-25812(gp)
}
 400029c:	0001883a 	nop
 40002a0:	e037883a 	mov	sp,fp
 40002a4:	dfc00117 	ldw	ra,4(sp)
 40002a8:	df000017 	ldw	fp,0(sp)
 40002ac:	dec00204 	addi	sp,sp,8
 40002b0:	f800283a 	ret

040002b4 <stop_measurement>:

void stop_measurement()
{
 40002b4:	defffe04 	addi	sp,sp,-8
 40002b8:	dfc00115 	stw	ra,4(sp)
 40002bc:	df000015 	stw	fp,0(sp)
 40002c0:	d839883a 	mov	fp,sp
  time_2 = alt_timestamp();
 40002c4:	400f3d80 	call	400f3d8 <alt_timestamp>
 40002c8:	d0a6ce15 	stw	r2,-25800(gp)
  ticks = time_2 - time_1;
 40002cc:	d0e6ce17 	ldw	r3,-25800(gp)
 40002d0:	d0a6cb17 	ldw	r2,-25812(gp)
 40002d4:	1885c83a 	sub	r2,r3,r2
 40002d8:	d0a6cd15 	stw	r2,-25804(gp)
}
 40002dc:	0001883a 	nop
 40002e0:	e037883a 	mov	sp,fp
 40002e4:	dfc00117 	ldw	ra,4(sp)
 40002e8:	df000017 	ldw	fp,0(sp)
 40002ec:	dec00204 	addi	sp,sp,8
 40002f0:	f800283a 	ret

040002f4 <main>:

int main ()
{
 40002f4:	defff804 	addi	sp,sp,-32
 40002f8:	dfc00715 	stw	ra,28(sp)
 40002fc:	df000615 	stw	fp,24(sp)
 4000300:	dc400515 	stw	r17,20(sp)
 4000304:	dc000415 	stw	r16,16(sp)
 4000308:	df000604 	addi	fp,sp,24
  int a, b;
  int size = N;
 400030c:	00800604 	movi	r2,24
 4000310:	e0bffb15 	stw	r2,-20(fp)
     
  InitMatrix(matrix);
 4000314:	01010074 	movhi	r4,1025
 4000318:	210efb04 	addi	r4,r4,15340
 400031c:	40006bc0 	call	40006bc <InitMatrix>

    /* Print Information about the system */
  printf("Working Set\n\n");
 4000320:	01020034 	movhi	r4,2048
 4000324:	21000004 	addi	r4,r4,0
 4000328:	400274c0 	call	400274c <puts>
  printf("Information about the system:\n");
 400032c:	01020034 	movhi	r4,2048
 4000330:	21000404 	addi	r4,r4,16
 4000334:	400274c0 	call	400274c <puts>
  printf("\n");
 4000338:	01000284 	movi	r4,10
 400033c:	40026740 	call	4002674 <putchar>
  printf("Processor Type: %s\n", NIOS2_CPU_IMPLEMENTATION);
 4000340:	01420034 	movhi	r5,2048
 4000344:	29400c04 	addi	r5,r5,48
 4000348:	01020034 	movhi	r4,2048
 400034c:	21000e04 	addi	r4,r4,56
 4000350:	40026300 	call	4002630 <printf>
  printf("Size Instruction Cache: %d\n", NIOS2_ICACHE_SIZE);
 4000354:	01408004 	movi	r5,512
 4000358:	01020034 	movhi	r4,2048
 400035c:	21001304 	addi	r4,r4,76
 4000360:	40026300 	call	4002630 <printf>
  printf("Line Size Instruction Cache: %d\n", NIOS2_ICACHE_LINE_SIZE);
 4000364:	01400804 	movi	r5,32
 4000368:	01020034 	movhi	r4,2048
 400036c:	21001a04 	addi	r4,r4,104
 4000370:	40026300 	call	4002630 <printf>
  printf("Size Data Cache: %d\n", NIOS2_DCACHE_SIZE);
 4000374:	000b883a 	mov	r5,zero
 4000378:	01020034 	movhi	r4,2048
 400037c:	21002304 	addi	r4,r4,140
 4000380:	40026300 	call	4002630 <printf>
  printf("Line Size Data Cache: %d\n\n", NIOS2_DCACHE_LINE_SIZE);
 4000384:	000b883a 	mov	r5,zero
 4000388:	01020034 	movhi	r4,2048
 400038c:	21002904 	addi	r4,r4,164
 4000390:	40026300 	call	4002630 <printf>
    
  if (alt_timestamp_start() < 0)
 4000394:	400f3600 	call	400f360 <alt_timestamp_start>
 4000398:	1000040e 	bge	r2,zero,40003ac <main+0xb8>
    printf("No timestamp device available!");
 400039c:	01020034 	movhi	r4,2048
 40003a0:	21003004 	addi	r4,r4,192
 40003a4:	40026300 	call	4002630 <printf>
 40003a8:	0000bc06 	br	400069c <main+0x3a8>
  else {

    /* Print frequency and period */
    printf("Timestamp frequency: %3.1f MHz\n", 
          (float)alt_timestamp_freq()/1000000.0);
 40003ac:	400f4580 	call	400f458 <alt_timestamp_freq>
 40003b0:	1009883a 	mov	r4,r2
 40003b4:	400139c0 	call	400139c <__floatunsisf>
 40003b8:	1007883a 	mov	r3,r2
  if (alt_timestamp_start() < 0)
    printf("No timestamp device available!");
  else {

    /* Print frequency and period */
    printf("Timestamp frequency: %3.1f MHz\n", 
 40003bc:	1809883a 	mov	r4,r3
 40003c0:	400248c0 	call	400248c <__extendsfdf2>
 40003c4:	1011883a 	mov	r8,r2
 40003c8:	1813883a 	mov	r9,r3
 40003cc:	000d883a 	mov	r6,zero
 40003d0:	01d04bf4 	movhi	r7,16687
 40003d4:	39e12004 	addi	r7,r7,-31616
 40003d8:	4009883a 	mov	r4,r8
 40003dc:	480b883a 	mov	r5,r9
 40003e0:	400148c0 	call	400148c <__divdf3>
 40003e4:	1009883a 	mov	r4,r2
 40003e8:	180b883a 	mov	r5,r3
 40003ec:	2005883a 	mov	r2,r4
 40003f0:	2807883a 	mov	r3,r5
 40003f4:	100b883a 	mov	r5,r2
 40003f8:	180d883a 	mov	r6,r3
 40003fc:	01020034 	movhi	r4,2048
 4000400:	21003804 	addi	r4,r4,224
 4000404:	40026300 	call	4002630 <printf>
          (float)alt_timestamp_freq()/1000000.0);
    printf("Timestamp period:    %f ms\n\n", 
	   1000.0/(float)alt_timestamp_freq());  
 4000408:	400f4580 	call	400f458 <alt_timestamp_freq>
 400040c:	1009883a 	mov	r4,r2
 4000410:	400139c0 	call	400139c <__floatunsisf>
 4000414:	1007883a 	mov	r3,r2
  else {

    /* Print frequency and period */
    printf("Timestamp frequency: %3.1f MHz\n", 
          (float)alt_timestamp_freq()/1000000.0);
    printf("Timestamp period:    %f ms\n\n", 
 4000418:	1809883a 	mov	r4,r3
 400041c:	400248c0 	call	400248c <__extendsfdf2>
 4000420:	1009883a 	mov	r4,r2
 4000424:	180b883a 	mov	r5,r3
 4000428:	200d883a 	mov	r6,r4
 400042c:	280f883a 	mov	r7,r5
 4000430:	0009883a 	mov	r4,zero
 4000434:	015023f4 	movhi	r5,16527
 4000438:	29500004 	addi	r5,r5,16384
 400043c:	400148c0 	call	400148c <__divdf3>
 4000440:	1009883a 	mov	r4,r2
 4000444:	180b883a 	mov	r5,r3
 4000448:	2005883a 	mov	r2,r4
 400044c:	2807883a 	mov	r3,r5
 4000450:	100b883a 	mov	r5,r2
 4000454:	180d883a 	mov	r6,r3
 4000458:	01020034 	movhi	r4,2048
 400045c:	21004004 	addi	r4,r4,256
 4000460:	40026300 	call	4002630 <printf>
	   1000.0/(float)alt_timestamp_freq());  

      /* Calculate Timer Overhead */
      // Average of 10 measurements */
      int i;
      timer_overhead = 0;
 4000464:	d026cc15 	stw	zero,-25808(gp)
      for (i = 0; i < 10; i++) {      
 4000468:	e03ffa15 	stw	zero,-24(fp)
 400046c:	00000b06 	br	400049c <main+0x1a8>
        start_measurement();
 4000470:	40002780 	call	4000278 <start_measurement>
        stop_measurement();
 4000474:	40002b40 	call	40002b4 <stop_measurement>
        timer_overhead = timer_overhead + time_2 - time_1;
 4000478:	d0e6cc17 	ldw	r3,-25808(gp)
 400047c:	d0a6ce17 	ldw	r2,-25800(gp)
 4000480:	1887883a 	add	r3,r3,r2
 4000484:	d0a6cb17 	ldw	r2,-25812(gp)
 4000488:	1885c83a 	sub	r2,r3,r2
 400048c:	d0a6cc15 	stw	r2,-25808(gp)

      /* Calculate Timer Overhead */
      // Average of 10 measurements */
      int i;
      timer_overhead = 0;
      for (i = 0; i < 10; i++) {      
 4000490:	e0bffa17 	ldw	r2,-24(fp)
 4000494:	10800044 	addi	r2,r2,1
 4000498:	e0bffa15 	stw	r2,-24(fp)
 400049c:	e0bffa17 	ldw	r2,-24(fp)
 40004a0:	10800290 	cmplti	r2,r2,10
 40004a4:	103ff21e 	bne	r2,zero,4000470 <__alt_data_end+0xfbff8470>
        start_measurement();
        stop_measurement();
        timer_overhead = timer_overhead + time_2 - time_1;
      }
      timer_overhead = timer_overhead / 10;
 40004a8:	d0a6cc17 	ldw	r2,-25808(gp)
 40004ac:	01400284 	movi	r5,10
 40004b0:	1009883a 	mov	r4,r2
 40004b4:	40009800 	call	4000980 <__udivsi3>
 40004b8:	d0a6cc15 	stw	r2,-25808(gp)
        
      printf("Timer overhead in ticks: %d\n", (int) timer_overhead);
 40004bc:	d0a6cc17 	ldw	r2,-25808(gp)
 40004c0:	100b883a 	mov	r5,r2
 40004c4:	01020034 	movhi	r4,2048
 40004c8:	21004804 	addi	r4,r4,288
 40004cc:	40026300 	call	4002630 <printf>
      printf("Timer overhead in ms:    %f\n", 
       1000.0 * (float)timer_overhead/(float)alt_timestamp_freq());
 40004d0:	d0a6cc17 	ldw	r2,-25808(gp)
 40004d4:	1009883a 	mov	r4,r2
 40004d8:	400139c0 	call	400139c <__floatunsisf>
 40004dc:	1007883a 	mov	r3,r2
 40004e0:	1809883a 	mov	r4,r3
 40004e4:	400248c0 	call	400248c <__extendsfdf2>
 40004e8:	1011883a 	mov	r8,r2
 40004ec:	1813883a 	mov	r9,r3
 40004f0:	000d883a 	mov	r6,zero
 40004f4:	01d023f4 	movhi	r7,16527
 40004f8:	39d00004 	addi	r7,r7,16384
 40004fc:	4009883a 	mov	r4,r8
 4000500:	480b883a 	mov	r5,r9
 4000504:	4001d740 	call	4001d74 <__muldf3>
 4000508:	1009883a 	mov	r4,r2
 400050c:	180b883a 	mov	r5,r3
 4000510:	2021883a 	mov	r16,r4
 4000514:	2823883a 	mov	r17,r5
 4000518:	400f4580 	call	400f458 <alt_timestamp_freq>
 400051c:	1009883a 	mov	r4,r2
 4000520:	400139c0 	call	400139c <__floatunsisf>
 4000524:	1007883a 	mov	r3,r2
        timer_overhead = timer_overhead + time_2 - time_1;
      }
      timer_overhead = timer_overhead / 10;
        
      printf("Timer overhead in ticks: %d\n", (int) timer_overhead);
      printf("Timer overhead in ms:    %f\n", 
 4000528:	1809883a 	mov	r4,r3
 400052c:	400248c0 	call	400248c <__extendsfdf2>
 4000530:	1009883a 	mov	r4,r2
 4000534:	180b883a 	mov	r5,r3
 4000538:	200d883a 	mov	r6,r4
 400053c:	280f883a 	mov	r7,r5
 4000540:	8009883a 	mov	r4,r16
 4000544:	880b883a 	mov	r5,r17
 4000548:	400148c0 	call	400148c <__divdf3>
 400054c:	1009883a 	mov	r4,r2
 4000550:	180b883a 	mov	r5,r3
 4000554:	2005883a 	mov	r2,r4
 4000558:	2807883a 	mov	r3,r5
 400055c:	100b883a 	mov	r5,r2
 4000560:	180d883a 	mov	r6,r3
 4000564:	01020034 	movhi	r4,2048
 4000568:	21005004 	addi	r4,r4,320
 400056c:	40026300 	call	4002630 <printf>
       1000.0 * (float)timer_overhead/(float)alt_timestamp_freq());


      // Calculate Time for SumByColRow
      printf("SumByColRow: ");
 4000570:	01020034 	movhi	r4,2048
 4000574:	21005804 	addi	r4,r4,352
 4000578:	40026300 	call	4002630 <printf>
      start_measurement();
 400057c:	40002780 	call	4000278 <start_measurement>
      a = SumByColRow (matrix, size);
 4000580:	e17ffb17 	ldw	r5,-20(fp)
 4000584:	01010074 	movhi	r4,1025
 4000588:	210efb04 	addi	r4,r4,15340
 400058c:	40007500 	call	4000750 <SumByColRow>
 4000590:	e0bffc15 	stw	r2,-16(fp)
      stop_measurement(); 
 4000594:	40002b40 	call	40002b4 <stop_measurement>
      printf("Result: %d\n", a);
 4000598:	e17ffc17 	ldw	r5,-16(fp)
 400059c:	01020034 	movhi	r4,2048
 40005a0:	21005c04 	addi	r4,r4,368
 40005a4:	40026300 	call	4002630 <printf>
      printf("%5.2f us", microseconds(ticks - timer_overhead));
 40005a8:	d0e6cd17 	ldw	r3,-25804(gp)
 40005ac:	d0a6cc17 	ldw	r2,-25808(gp)
 40005b0:	1885c83a 	sub	r2,r3,r2
 40005b4:	1009883a 	mov	r4,r2
 40005b8:	40001fc0 	call	40001fc <microseconds>
 40005bc:	1007883a 	mov	r3,r2
 40005c0:	1809883a 	mov	r4,r3
 40005c4:	400248c0 	call	400248c <__extendsfdf2>
 40005c8:	100d883a 	mov	r6,r2
 40005cc:	180f883a 	mov	r7,r3
 40005d0:	300b883a 	mov	r5,r6
 40005d4:	380d883a 	mov	r6,r7
 40005d8:	01020034 	movhi	r4,2048
 40005dc:	21005f04 	addi	r4,r4,380
 40005e0:	40026300 	call	4002630 <printf>
      printf("(%d ticks)\n", (int) (ticks - timer_overhead)); 
 40005e4:	d0e6cd17 	ldw	r3,-25804(gp)
 40005e8:	d0a6cc17 	ldw	r2,-25808(gp)
 40005ec:	1885c83a 	sub	r2,r3,r2
 40005f0:	100b883a 	mov	r5,r2
 40005f4:	01020034 	movhi	r4,2048
 40005f8:	21006204 	addi	r4,r4,392
 40005fc:	40026300 	call	4002630 <printf>
    
      // Calculate Time for SumByRowCol 
      printf("SumByRowCol: ");
 4000600:	01020034 	movhi	r4,2048
 4000604:	21006504 	addi	r4,r4,404
 4000608:	40026300 	call	4002630 <printf>
      start_measurement();
 400060c:	40002780 	call	4000278 <start_measurement>
      b = SumByRowCol (matrix, size);
 4000610:	e17ffb17 	ldw	r5,-20(fp)
 4000614:	01010074 	movhi	r4,1025
 4000618:	210efb04 	addi	r4,r4,15340
 400061c:	40007ec0 	call	40007ec <SumByRowCol>
 4000620:	e0bffd15 	stw	r2,-12(fp)
      stop_measurement();    
 4000624:	40002b40 	call	40002b4 <stop_measurement>
      printf("Result: %d\n", b);
 4000628:	e17ffd17 	ldw	r5,-12(fp)
 400062c:	01020034 	movhi	r4,2048
 4000630:	21005c04 	addi	r4,r4,368
 4000634:	40026300 	call	4002630 <printf>
      printf("%5.2f us", microseconds(ticks - timer_overhead));
 4000638:	d0e6cd17 	ldw	r3,-25804(gp)
 400063c:	d0a6cc17 	ldw	r2,-25808(gp)
 4000640:	1885c83a 	sub	r2,r3,r2
 4000644:	1009883a 	mov	r4,r2
 4000648:	40001fc0 	call	40001fc <microseconds>
 400064c:	1007883a 	mov	r3,r2
 4000650:	1809883a 	mov	r4,r3
 4000654:	400248c0 	call	400248c <__extendsfdf2>
 4000658:	100d883a 	mov	r6,r2
 400065c:	180f883a 	mov	r7,r3
 4000660:	300b883a 	mov	r5,r6
 4000664:	380d883a 	mov	r6,r7
 4000668:	01020034 	movhi	r4,2048
 400066c:	21005f04 	addi	r4,r4,380
 4000670:	40026300 	call	4002630 <printf>
      printf("(%d ticks)\n", (int) (ticks - timer_overhead)); 
 4000674:	d0e6cd17 	ldw	r3,-25804(gp)
 4000678:	d0a6cc17 	ldw	r2,-25808(gp)
 400067c:	1885c83a 	sub	r2,r3,r2
 4000680:	100b883a 	mov	r5,r2
 4000684:	01020034 	movhi	r4,2048
 4000688:	21006204 	addi	r4,r4,392
 400068c:	40026300 	call	4002630 <printf>

      printf("Done!\n");
 4000690:	01020034 	movhi	r4,2048
 4000694:	21006904 	addi	r4,r4,420
 4000698:	400274c0 	call	400274c <puts>
  }
  return 0;
 400069c:	0005883a 	mov	r2,zero
}
 40006a0:	e6fffe04 	addi	sp,fp,-8
 40006a4:	dfc00317 	ldw	ra,12(sp)
 40006a8:	df000217 	ldw	fp,8(sp)
 40006ac:	dc400117 	ldw	r17,4(sp)
 40006b0:	dc000017 	ldw	r16,0(sp)
 40006b4:	dec00404 	addi	sp,sp,16
 40006b8:	f800283a 	ret

040006bc <InitMatrix>:

void InitMatrix (int matrix[N][N]){
 40006bc:	defffc04 	addi	sp,sp,-16
 40006c0:	df000315 	stw	fp,12(sp)
 40006c4:	df000304 	addi	fp,sp,12
 40006c8:	e13fff15 	stw	r4,-4(fp)
  int i, j;

  for (i = 0; i < N; i++) {
 40006cc:	e03ffd15 	stw	zero,-12(fp)
 40006d0:	00001706 	br	4000730 <InitMatrix+0x74>
    for (j = 0; j < N; j++) {
 40006d4:	e03ffe15 	stw	zero,-8(fp)
 40006d8:	00000f06 	br	4000718 <InitMatrix+0x5c>
      matrix[i][j] = i+j;
 40006dc:	e0bffd17 	ldw	r2,-12(fp)
 40006e0:	10801824 	muli	r2,r2,96
 40006e4:	e0ffff17 	ldw	r3,-4(fp)
 40006e8:	1889883a 	add	r4,r3,r2
 40006ec:	e0fffd17 	ldw	r3,-12(fp)
 40006f0:	e0bffe17 	ldw	r2,-8(fp)
 40006f4:	1887883a 	add	r3,r3,r2
 40006f8:	e0bffe17 	ldw	r2,-8(fp)
 40006fc:	1085883a 	add	r2,r2,r2
 4000700:	1085883a 	add	r2,r2,r2
 4000704:	2085883a 	add	r2,r4,r2
 4000708:	10c00015 	stw	r3,0(r2)

void InitMatrix (int matrix[N][N]){
  int i, j;

  for (i = 0; i < N; i++) {
    for (j = 0; j < N; j++) {
 400070c:	e0bffe17 	ldw	r2,-8(fp)
 4000710:	10800044 	addi	r2,r2,1
 4000714:	e0bffe15 	stw	r2,-8(fp)
 4000718:	e0bffe17 	ldw	r2,-8(fp)
 400071c:	10800610 	cmplti	r2,r2,24
 4000720:	103fee1e 	bne	r2,zero,40006dc <__alt_data_end+0xfbff86dc>
}

void InitMatrix (int matrix[N][N]){
  int i, j;

  for (i = 0; i < N; i++) {
 4000724:	e0bffd17 	ldw	r2,-12(fp)
 4000728:	10800044 	addi	r2,r2,1
 400072c:	e0bffd15 	stw	r2,-12(fp)
 4000730:	e0bffd17 	ldw	r2,-12(fp)
 4000734:	10800610 	cmplti	r2,r2,24
 4000738:	103fe61e 	bne	r2,zero,40006d4 <__alt_data_end+0xfbff86d4>
    for (j = 0; j < N; j++) {
      matrix[i][j] = i+j;
    }
  }
}
 400073c:	0001883a 	nop
 4000740:	e037883a 	mov	sp,fp
 4000744:	df000017 	ldw	fp,0(sp)
 4000748:	dec00104 	addi	sp,sp,4
 400074c:	f800283a 	ret

04000750 <SumByColRow>:

int SumByColRow (int matrix[N][N], int size)
{
 4000750:	defffa04 	addi	sp,sp,-24
 4000754:	df000515 	stw	fp,20(sp)
 4000758:	df000504 	addi	fp,sp,20
 400075c:	e13ffe15 	stw	r4,-8(fp)
 4000760:	e17fff15 	stw	r5,-4(fp)
  int i, j, Sum = 0;
 4000764:	e03ffd15 	stw	zero,-12(fp)

  for (j = 0; j < size; j ++) {
 4000768:	e03ffc15 	stw	zero,-16(fp)
 400076c:	00001706 	br	40007cc <SumByColRow+0x7c>
    for (i = 0; i < size; i ++) {
 4000770:	e03ffb15 	stw	zero,-20(fp)
 4000774:	00000f06 	br	40007b4 <SumByColRow+0x64>
      Sum += matrix[i][j];
 4000778:	e0bffb17 	ldw	r2,-20(fp)
 400077c:	10801824 	muli	r2,r2,96
 4000780:	e0fffe17 	ldw	r3,-8(fp)
 4000784:	1887883a 	add	r3,r3,r2
 4000788:	e0bffc17 	ldw	r2,-16(fp)
 400078c:	1085883a 	add	r2,r2,r2
 4000790:	1085883a 	add	r2,r2,r2
 4000794:	1885883a 	add	r2,r3,r2
 4000798:	10800017 	ldw	r2,0(r2)
 400079c:	e0fffd17 	ldw	r3,-12(fp)
 40007a0:	1885883a 	add	r2,r3,r2
 40007a4:	e0bffd15 	stw	r2,-12(fp)
int SumByColRow (int matrix[N][N], int size)
{
  int i, j, Sum = 0;

  for (j = 0; j < size; j ++) {
    for (i = 0; i < size; i ++) {
 40007a8:	e0bffb17 	ldw	r2,-20(fp)
 40007ac:	10800044 	addi	r2,r2,1
 40007b0:	e0bffb15 	stw	r2,-20(fp)
 40007b4:	e0fffb17 	ldw	r3,-20(fp)
 40007b8:	e0bfff17 	ldw	r2,-4(fp)
 40007bc:	18bfee16 	blt	r3,r2,4000778 <__alt_data_end+0xfbff8778>

int SumByColRow (int matrix[N][N], int size)
{
  int i, j, Sum = 0;

  for (j = 0; j < size; j ++) {
 40007c0:	e0bffc17 	ldw	r2,-16(fp)
 40007c4:	10800044 	addi	r2,r2,1
 40007c8:	e0bffc15 	stw	r2,-16(fp)
 40007cc:	e0fffc17 	ldw	r3,-16(fp)
 40007d0:	e0bfff17 	ldw	r2,-4(fp)
 40007d4:	18bfe616 	blt	r3,r2,4000770 <__alt_data_end+0xfbff8770>
    for (i = 0; i < size; i ++) {
      Sum += matrix[i][j];
    }
  }
  return Sum;
 40007d8:	e0bffd17 	ldw	r2,-12(fp)
}
 40007dc:	e037883a 	mov	sp,fp
 40007e0:	df000017 	ldw	fp,0(sp)
 40007e4:	dec00104 	addi	sp,sp,4
 40007e8:	f800283a 	ret

040007ec <SumByRowCol>:

int SumByRowCol (int matrix[N][N], int size)
{
 40007ec:	defffa04 	addi	sp,sp,-24
 40007f0:	df000515 	stw	fp,20(sp)
 40007f4:	df000504 	addi	fp,sp,20
 40007f8:	e13ffe15 	stw	r4,-8(fp)
 40007fc:	e17fff15 	stw	r5,-4(fp)
  int i, j, Sum = 0;
 4000800:	e03ffd15 	stw	zero,-12(fp)

  for (i = 0; i < size; i ++) {
 4000804:	e03ffb15 	stw	zero,-20(fp)
 4000808:	00001706 	br	4000868 <SumByRowCol+0x7c>
    for (j = 0; j < size; j ++) {
 400080c:	e03ffc15 	stw	zero,-16(fp)
 4000810:	00000f06 	br	4000850 <SumByRowCol+0x64>
      Sum += matrix[i][j];
 4000814:	e0bffb17 	ldw	r2,-20(fp)
 4000818:	10801824 	muli	r2,r2,96
 400081c:	e0fffe17 	ldw	r3,-8(fp)
 4000820:	1887883a 	add	r3,r3,r2
 4000824:	e0bffc17 	ldw	r2,-16(fp)
 4000828:	1085883a 	add	r2,r2,r2
 400082c:	1085883a 	add	r2,r2,r2
 4000830:	1885883a 	add	r2,r3,r2
 4000834:	10800017 	ldw	r2,0(r2)
 4000838:	e0fffd17 	ldw	r3,-12(fp)
 400083c:	1885883a 	add	r2,r3,r2
 4000840:	e0bffd15 	stw	r2,-12(fp)
int SumByRowCol (int matrix[N][N], int size)
{
  int i, j, Sum = 0;

  for (i = 0; i < size; i ++) {
    for (j = 0; j < size; j ++) {
 4000844:	e0bffc17 	ldw	r2,-16(fp)
 4000848:	10800044 	addi	r2,r2,1
 400084c:	e0bffc15 	stw	r2,-16(fp)
 4000850:	e0fffc17 	ldw	r3,-16(fp)
 4000854:	e0bfff17 	ldw	r2,-4(fp)
 4000858:	18bfee16 	blt	r3,r2,4000814 <__alt_data_end+0xfbff8814>

int SumByRowCol (int matrix[N][N], int size)
{
  int i, j, Sum = 0;

  for (i = 0; i < size; i ++) {
 400085c:	e0bffb17 	ldw	r2,-20(fp)
 4000860:	10800044 	addi	r2,r2,1
 4000864:	e0bffb15 	stw	r2,-20(fp)
 4000868:	e0fffb17 	ldw	r3,-20(fp)
 400086c:	e0bfff17 	ldw	r2,-4(fp)
 4000870:	18bfe616 	blt	r3,r2,400080c <__alt_data_end+0xfbff880c>
    for (j = 0; j < size; j ++) {
      Sum += matrix[i][j];
    }
  }
  return Sum;
 4000874:	e0bffd17 	ldw	r2,-12(fp)
}
 4000878:	e037883a 	mov	sp,fp
 400087c:	df000017 	ldw	fp,0(sp)
 4000880:	dec00104 	addi	sp,sp,4
 4000884:	f800283a 	ret

04000888 <__divsi3>:
 4000888:	20001b16 	blt	r4,zero,40008f8 <__divsi3+0x70>
 400088c:	000f883a 	mov	r7,zero
 4000890:	28001616 	blt	r5,zero,40008ec <__divsi3+0x64>
 4000894:	200d883a 	mov	r6,r4
 4000898:	29001a2e 	bgeu	r5,r4,4000904 <__divsi3+0x7c>
 400089c:	00800804 	movi	r2,32
 40008a0:	00c00044 	movi	r3,1
 40008a4:	00000106 	br	40008ac <__divsi3+0x24>
 40008a8:	10000d26 	beq	r2,zero,40008e0 <__divsi3+0x58>
 40008ac:	294b883a 	add	r5,r5,r5
 40008b0:	10bfffc4 	addi	r2,r2,-1
 40008b4:	18c7883a 	add	r3,r3,r3
 40008b8:	293ffb36 	bltu	r5,r4,40008a8 <__alt_data_end+0xfbff88a8>
 40008bc:	0005883a 	mov	r2,zero
 40008c0:	18000726 	beq	r3,zero,40008e0 <__divsi3+0x58>
 40008c4:	0005883a 	mov	r2,zero
 40008c8:	31400236 	bltu	r6,r5,40008d4 <__divsi3+0x4c>
 40008cc:	314dc83a 	sub	r6,r6,r5
 40008d0:	10c4b03a 	or	r2,r2,r3
 40008d4:	1806d07a 	srli	r3,r3,1
 40008d8:	280ad07a 	srli	r5,r5,1
 40008dc:	183ffa1e 	bne	r3,zero,40008c8 <__alt_data_end+0xfbff88c8>
 40008e0:	38000126 	beq	r7,zero,40008e8 <__divsi3+0x60>
 40008e4:	0085c83a 	sub	r2,zero,r2
 40008e8:	f800283a 	ret
 40008ec:	014bc83a 	sub	r5,zero,r5
 40008f0:	39c0005c 	xori	r7,r7,1
 40008f4:	003fe706 	br	4000894 <__alt_data_end+0xfbff8894>
 40008f8:	0109c83a 	sub	r4,zero,r4
 40008fc:	01c00044 	movi	r7,1
 4000900:	003fe306 	br	4000890 <__alt_data_end+0xfbff8890>
 4000904:	00c00044 	movi	r3,1
 4000908:	003fee06 	br	40008c4 <__alt_data_end+0xfbff88c4>

0400090c <__modsi3>:
 400090c:	20001716 	blt	r4,zero,400096c <__modsi3+0x60>
 4000910:	000f883a 	mov	r7,zero
 4000914:	2005883a 	mov	r2,r4
 4000918:	28001216 	blt	r5,zero,4000964 <__modsi3+0x58>
 400091c:	2900162e 	bgeu	r5,r4,4000978 <__modsi3+0x6c>
 4000920:	01800804 	movi	r6,32
 4000924:	00c00044 	movi	r3,1
 4000928:	00000106 	br	4000930 <__modsi3+0x24>
 400092c:	30000a26 	beq	r6,zero,4000958 <__modsi3+0x4c>
 4000930:	294b883a 	add	r5,r5,r5
 4000934:	31bfffc4 	addi	r6,r6,-1
 4000938:	18c7883a 	add	r3,r3,r3
 400093c:	293ffb36 	bltu	r5,r4,400092c <__alt_data_end+0xfbff892c>
 4000940:	18000526 	beq	r3,zero,4000958 <__modsi3+0x4c>
 4000944:	1806d07a 	srli	r3,r3,1
 4000948:	11400136 	bltu	r2,r5,4000950 <__modsi3+0x44>
 400094c:	1145c83a 	sub	r2,r2,r5
 4000950:	280ad07a 	srli	r5,r5,1
 4000954:	183ffb1e 	bne	r3,zero,4000944 <__alt_data_end+0xfbff8944>
 4000958:	38000126 	beq	r7,zero,4000960 <__modsi3+0x54>
 400095c:	0085c83a 	sub	r2,zero,r2
 4000960:	f800283a 	ret
 4000964:	014bc83a 	sub	r5,zero,r5
 4000968:	003fec06 	br	400091c <__alt_data_end+0xfbff891c>
 400096c:	0109c83a 	sub	r4,zero,r4
 4000970:	01c00044 	movi	r7,1
 4000974:	003fe706 	br	4000914 <__alt_data_end+0xfbff8914>
 4000978:	00c00044 	movi	r3,1
 400097c:	003ff106 	br	4000944 <__alt_data_end+0xfbff8944>

04000980 <__udivsi3>:
 4000980:	200d883a 	mov	r6,r4
 4000984:	2900152e 	bgeu	r5,r4,40009dc <__udivsi3+0x5c>
 4000988:	28001416 	blt	r5,zero,40009dc <__udivsi3+0x5c>
 400098c:	00800804 	movi	r2,32
 4000990:	00c00044 	movi	r3,1
 4000994:	00000206 	br	40009a0 <__udivsi3+0x20>
 4000998:	10000e26 	beq	r2,zero,40009d4 <__udivsi3+0x54>
 400099c:	28000516 	blt	r5,zero,40009b4 <__udivsi3+0x34>
 40009a0:	294b883a 	add	r5,r5,r5
 40009a4:	10bfffc4 	addi	r2,r2,-1
 40009a8:	18c7883a 	add	r3,r3,r3
 40009ac:	293ffa36 	bltu	r5,r4,4000998 <__alt_data_end+0xfbff8998>
 40009b0:	18000826 	beq	r3,zero,40009d4 <__udivsi3+0x54>
 40009b4:	0005883a 	mov	r2,zero
 40009b8:	31400236 	bltu	r6,r5,40009c4 <__udivsi3+0x44>
 40009bc:	314dc83a 	sub	r6,r6,r5
 40009c0:	10c4b03a 	or	r2,r2,r3
 40009c4:	1806d07a 	srli	r3,r3,1
 40009c8:	280ad07a 	srli	r5,r5,1
 40009cc:	183ffa1e 	bne	r3,zero,40009b8 <__alt_data_end+0xfbff89b8>
 40009d0:	f800283a 	ret
 40009d4:	0005883a 	mov	r2,zero
 40009d8:	f800283a 	ret
 40009dc:	00c00044 	movi	r3,1
 40009e0:	003ff406 	br	40009b4 <__alt_data_end+0xfbff89b4>

040009e4 <__umodsi3>:
 40009e4:	2005883a 	mov	r2,r4
 40009e8:	2900122e 	bgeu	r5,r4,4000a34 <__umodsi3+0x50>
 40009ec:	28001116 	blt	r5,zero,4000a34 <__umodsi3+0x50>
 40009f0:	01800804 	movi	r6,32
 40009f4:	00c00044 	movi	r3,1
 40009f8:	00000206 	br	4000a04 <__umodsi3+0x20>
 40009fc:	30000c26 	beq	r6,zero,4000a30 <__umodsi3+0x4c>
 4000a00:	28000516 	blt	r5,zero,4000a18 <__umodsi3+0x34>
 4000a04:	294b883a 	add	r5,r5,r5
 4000a08:	31bfffc4 	addi	r6,r6,-1
 4000a0c:	18c7883a 	add	r3,r3,r3
 4000a10:	293ffa36 	bltu	r5,r4,40009fc <__alt_data_end+0xfbff89fc>
 4000a14:	18000626 	beq	r3,zero,4000a30 <__umodsi3+0x4c>
 4000a18:	1806d07a 	srli	r3,r3,1
 4000a1c:	11400136 	bltu	r2,r5,4000a24 <__umodsi3+0x40>
 4000a20:	1145c83a 	sub	r2,r2,r5
 4000a24:	280ad07a 	srli	r5,r5,1
 4000a28:	183ffb1e 	bne	r3,zero,4000a18 <__alt_data_end+0xfbff8a18>
 4000a2c:	f800283a 	ret
 4000a30:	f800283a 	ret
 4000a34:	00c00044 	movi	r3,1
 4000a38:	003ff706 	br	4000a18 <__alt_data_end+0xfbff8a18>

04000a3c <__divsf3>:
 4000a3c:	defff504 	addi	sp,sp,-44
 4000a40:	200cd5fa 	srli	r6,r4,23
 4000a44:	dcc00415 	stw	r19,16(sp)
 4000a48:	2026d7fa 	srli	r19,r4,31
 4000a4c:	00c02034 	movhi	r3,128
 4000a50:	dd800715 	stw	r22,28(sp)
 4000a54:	dd000515 	stw	r20,20(sp)
 4000a58:	dc800315 	stw	r18,12(sp)
 4000a5c:	18ffffc4 	addi	r3,r3,-1
 4000a60:	dfc00a15 	stw	ra,40(sp)
 4000a64:	df000915 	stw	fp,36(sp)
 4000a68:	ddc00815 	stw	r23,32(sp)
 4000a6c:	dd400615 	stw	r21,24(sp)
 4000a70:	dc400215 	stw	r17,8(sp)
 4000a74:	dc000115 	stw	r16,4(sp)
 4000a78:	35003fcc 	andi	r20,r6,255
 4000a7c:	1924703a 	and	r18,r3,r4
 4000a80:	9d803fcc 	andi	r22,r19,255
 4000a84:	a0005226 	beq	r20,zero,4000bd0 <__divsf3+0x194>
 4000a88:	00803fc4 	movi	r2,255
 4000a8c:	a0802e26 	beq	r20,r2,4000b48 <__divsf3+0x10c>
 4000a90:	91002034 	orhi	r4,r18,128
 4000a94:	202490fa 	slli	r18,r4,3
 4000a98:	a53fe044 	addi	r20,r20,-127
 4000a9c:	0021883a 	mov	r16,zero
 4000aa0:	002f883a 	mov	r23,zero
 4000aa4:	280cd5fa 	srli	r6,r5,23
 4000aa8:	282ad7fa 	srli	r21,r5,31
 4000aac:	00c02034 	movhi	r3,128
 4000ab0:	18ffffc4 	addi	r3,r3,-1
 4000ab4:	31803fcc 	andi	r6,r6,255
 4000ab8:	1962703a 	and	r17,r3,r5
 4000abc:	af003fcc 	andi	fp,r21,255
 4000ac0:	30004a26 	beq	r6,zero,4000bec <__divsf3+0x1b0>
 4000ac4:	00803fc4 	movi	r2,255
 4000ac8:	30804526 	beq	r6,r2,4000be0 <__divsf3+0x1a4>
 4000acc:	89402034 	orhi	r5,r17,128
 4000ad0:	282290fa 	slli	r17,r5,3
 4000ad4:	31bfe044 	addi	r6,r6,-127
 4000ad8:	000b883a 	mov	r5,zero
 4000adc:	2c20b03a 	or	r16,r5,r16
 4000ae0:	802090ba 	slli	r16,r16,2
 4000ae4:	00810034 	movhi	r2,1024
 4000ae8:	1082c204 	addi	r2,r2,2824
 4000aec:	80a1883a 	add	r16,r16,r2
 4000af0:	81000017 	ldw	r4,0(r16)
 4000af4:	9d46f03a 	xor	r3,r19,r21
 4000af8:	180f883a 	mov	r7,r3
 4000afc:	18803fcc 	andi	r2,r3,255
 4000b00:	a18dc83a 	sub	r6,r20,r6
 4000b04:	2000683a 	jmp	r4
 4000b08:	04000cec 	andhi	r16,zero,51
 4000b0c:	04000b70 	cmpltui	r16,zero,45
 4000b10:	04000ce0 	cmpeqi	r16,zero,51
 4000b14:	04000b5c 	xori	r16,zero,45
 4000b18:	04000ce0 	cmpeqi	r16,zero,51
 4000b1c:	04000cb8 	rdprs	r16,zero,50
 4000b20:	04000ce0 	cmpeqi	r16,zero,51
 4000b24:	04000b5c 	xori	r16,zero,45
 4000b28:	04000b70 	cmpltui	r16,zero,45
 4000b2c:	04000b70 	cmpltui	r16,zero,45
 4000b30:	04000cb8 	rdprs	r16,zero,50
 4000b34:	04000b5c 	xori	r16,zero,45
 4000b38:	04000dcc 	andi	r16,zero,55
 4000b3c:	04000dcc 	andi	r16,zero,55
 4000b40:	04000dcc 	andi	r16,zero,55
 4000b44:	04000d80 	call	4000d8 <__alt_mem_new_sdram_controller_0-0x3bfff28>
 4000b48:	9000581e 	bne	r18,zero,4000cac <__divsf3+0x270>
 4000b4c:	04000204 	movi	r16,8
 4000b50:	05c00084 	movi	r23,2
 4000b54:	003fd306 	br	4000aa4 <__alt_data_end+0xfbff8aa4>
 4000b58:	0023883a 	mov	r17,zero
 4000b5c:	e02d883a 	mov	r22,fp
 4000b60:	282f883a 	mov	r23,r5
 4000b64:	00800084 	movi	r2,2
 4000b68:	b8808f1e 	bne	r23,r2,4000da8 <__divsf3+0x36c>
 4000b6c:	b005883a 	mov	r2,r22
 4000b70:	11c0004c 	andi	r7,r2,1
 4000b74:	013fffc4 	movi	r4,-1
 4000b78:	000d883a 	mov	r6,zero
 4000b7c:	21003fcc 	andi	r4,r4,255
 4000b80:	200895fa 	slli	r4,r4,23
 4000b84:	38803fcc 	andi	r2,r7,255
 4000b88:	00c02034 	movhi	r3,128
 4000b8c:	100497fa 	slli	r2,r2,31
 4000b90:	18ffffc4 	addi	r3,r3,-1
 4000b94:	30c6703a 	and	r3,r6,r3
 4000b98:	1906b03a 	or	r3,r3,r4
 4000b9c:	1884b03a 	or	r2,r3,r2
 4000ba0:	dfc00a17 	ldw	ra,40(sp)
 4000ba4:	df000917 	ldw	fp,36(sp)
 4000ba8:	ddc00817 	ldw	r23,32(sp)
 4000bac:	dd800717 	ldw	r22,28(sp)
 4000bb0:	dd400617 	ldw	r21,24(sp)
 4000bb4:	dd000517 	ldw	r20,20(sp)
 4000bb8:	dcc00417 	ldw	r19,16(sp)
 4000bbc:	dc800317 	ldw	r18,12(sp)
 4000bc0:	dc400217 	ldw	r17,8(sp)
 4000bc4:	dc000117 	ldw	r16,4(sp)
 4000bc8:	dec00b04 	addi	sp,sp,44
 4000bcc:	f800283a 	ret
 4000bd0:	90002b1e 	bne	r18,zero,4000c80 <__divsf3+0x244>
 4000bd4:	04000104 	movi	r16,4
 4000bd8:	05c00044 	movi	r23,1
 4000bdc:	003fb106 	br	4000aa4 <__alt_data_end+0xfbff8aa4>
 4000be0:	8800251e 	bne	r17,zero,4000c78 <__divsf3+0x23c>
 4000be4:	01400084 	movi	r5,2
 4000be8:	00000206 	br	4000bf4 <__divsf3+0x1b8>
 4000bec:	88001a1e 	bne	r17,zero,4000c58 <__divsf3+0x21c>
 4000bf0:	01400044 	movi	r5,1
 4000bf4:	8160b03a 	or	r16,r16,r5
 4000bf8:	802090ba 	slli	r16,r16,2
 4000bfc:	00c10034 	movhi	r3,1024
 4000c00:	18c30604 	addi	r3,r3,3096
 4000c04:	80e1883a 	add	r16,r16,r3
 4000c08:	80c00017 	ldw	r3,0(r16)
 4000c0c:	9d44f03a 	xor	r2,r19,r21
 4000c10:	a18dc83a 	sub	r6,r20,r6
 4000c14:	1800683a 	jmp	r3
 4000c18:	04000b70 	cmpltui	r16,zero,45
 4000c1c:	04000b70 	cmpltui	r16,zero,45
 4000c20:	04000dbc 	xorhi	r16,zero,54
 4000c24:	04000b58 	cmpnei	r16,zero,45
 4000c28:	04000dbc 	xorhi	r16,zero,54
 4000c2c:	04000cb8 	rdprs	r16,zero,50
 4000c30:	04000dbc 	xorhi	r16,zero,54
 4000c34:	04000b58 	cmpnei	r16,zero,45
 4000c38:	04000b70 	cmpltui	r16,zero,45
 4000c3c:	04000b70 	cmpltui	r16,zero,45
 4000c40:	04000cb8 	rdprs	r16,zero,50
 4000c44:	04000b58 	cmpnei	r16,zero,45
 4000c48:	04000dcc 	andi	r16,zero,55
 4000c4c:	04000dcc 	andi	r16,zero,55
 4000c50:	04000dcc 	andi	r16,zero,55
 4000c54:	04000de4 	muli	r16,zero,55
 4000c58:	8809883a 	mov	r4,r17
 4000c5c:	400259c0 	call	400259c <__clzsi2>
 4000c60:	10fffec4 	addi	r3,r2,-5
 4000c64:	10801d84 	addi	r2,r2,118
 4000c68:	88e2983a 	sll	r17,r17,r3
 4000c6c:	008dc83a 	sub	r6,zero,r2
 4000c70:	000b883a 	mov	r5,zero
 4000c74:	003f9906 	br	4000adc <__alt_data_end+0xfbff8adc>
 4000c78:	014000c4 	movi	r5,3
 4000c7c:	003f9706 	br	4000adc <__alt_data_end+0xfbff8adc>
 4000c80:	9009883a 	mov	r4,r18
 4000c84:	d9400015 	stw	r5,0(sp)
 4000c88:	400259c0 	call	400259c <__clzsi2>
 4000c8c:	10fffec4 	addi	r3,r2,-5
 4000c90:	11801d84 	addi	r6,r2,118
 4000c94:	90e4983a 	sll	r18,r18,r3
 4000c98:	01a9c83a 	sub	r20,zero,r6
 4000c9c:	0021883a 	mov	r16,zero
 4000ca0:	002f883a 	mov	r23,zero
 4000ca4:	d9400017 	ldw	r5,0(sp)
 4000ca8:	003f7e06 	br	4000aa4 <__alt_data_end+0xfbff8aa4>
 4000cac:	04000304 	movi	r16,12
 4000cb0:	05c000c4 	movi	r23,3
 4000cb4:	003f7b06 	br	4000aa4 <__alt_data_end+0xfbff8aa4>
 4000cb8:	01802034 	movhi	r6,128
 4000cbc:	000f883a 	mov	r7,zero
 4000cc0:	31bfffc4 	addi	r6,r6,-1
 4000cc4:	013fffc4 	movi	r4,-1
 4000cc8:	003fac06 	br	4000b7c <__alt_data_end+0xfbff8b7c>
 4000ccc:	01400044 	movi	r5,1
 4000cd0:	2909c83a 	sub	r4,r5,r4
 4000cd4:	00c006c4 	movi	r3,27
 4000cd8:	19004b0e 	bge	r3,r4,4000e08 <__divsf3+0x3cc>
 4000cdc:	114e703a 	and	r7,r2,r5
 4000ce0:	0009883a 	mov	r4,zero
 4000ce4:	000d883a 	mov	r6,zero
 4000ce8:	003fa406 	br	4000b7c <__alt_data_end+0xfbff8b7c>
 4000cec:	9006917a 	slli	r3,r18,5
 4000cf0:	8822917a 	slli	r17,r17,5
 4000cf4:	1c40372e 	bgeu	r3,r17,4000dd4 <__divsf3+0x398>
 4000cf8:	31bfffc4 	addi	r6,r6,-1
 4000cfc:	010006c4 	movi	r4,27
 4000d00:	000b883a 	mov	r5,zero
 4000d04:	180f883a 	mov	r7,r3
 4000d08:	294b883a 	add	r5,r5,r5
 4000d0c:	18c7883a 	add	r3,r3,r3
 4000d10:	38000116 	blt	r7,zero,4000d18 <__divsf3+0x2dc>
 4000d14:	1c400236 	bltu	r3,r17,4000d20 <__divsf3+0x2e4>
 4000d18:	1c47c83a 	sub	r3,r3,r17
 4000d1c:	29400054 	ori	r5,r5,1
 4000d20:	213fffc4 	addi	r4,r4,-1
 4000d24:	203ff71e 	bne	r4,zero,4000d04 <__alt_data_end+0xfbff8d04>
 4000d28:	1806c03a 	cmpne	r3,r3,zero
 4000d2c:	1962b03a 	or	r17,r3,r5
 4000d30:	31001fc4 	addi	r4,r6,127
 4000d34:	013fe50e 	bge	zero,r4,4000ccc <__alt_data_end+0xfbff8ccc>
 4000d38:	88c001cc 	andi	r3,r17,7
 4000d3c:	18000426 	beq	r3,zero,4000d50 <__divsf3+0x314>
 4000d40:	88c003cc 	andi	r3,r17,15
 4000d44:	01400104 	movi	r5,4
 4000d48:	19400126 	beq	r3,r5,4000d50 <__divsf3+0x314>
 4000d4c:	8963883a 	add	r17,r17,r5
 4000d50:	88c2002c 	andhi	r3,r17,2048
 4000d54:	18000426 	beq	r3,zero,4000d68 <__divsf3+0x32c>
 4000d58:	00fe0034 	movhi	r3,63488
 4000d5c:	18ffffc4 	addi	r3,r3,-1
 4000d60:	31002004 	addi	r4,r6,128
 4000d64:	88e2703a 	and	r17,r17,r3
 4000d68:	00c03f84 	movi	r3,254
 4000d6c:	193f8016 	blt	r3,r4,4000b70 <__alt_data_end+0xfbff8b70>
 4000d70:	880c91ba 	slli	r6,r17,6
 4000d74:	11c0004c 	andi	r7,r2,1
 4000d78:	300cd27a 	srli	r6,r6,9
 4000d7c:	003f7f06 	br	4000b7c <__alt_data_end+0xfbff8b7c>
 4000d80:	9080102c 	andhi	r2,r18,64
 4000d84:	10000226 	beq	r2,zero,4000d90 <__divsf3+0x354>
 4000d88:	8880102c 	andhi	r2,r17,64
 4000d8c:	10001826 	beq	r2,zero,4000df0 <__divsf3+0x3b4>
 4000d90:	00802034 	movhi	r2,128
 4000d94:	91801034 	orhi	r6,r18,64
 4000d98:	10bfffc4 	addi	r2,r2,-1
 4000d9c:	980f883a 	mov	r7,r19
 4000da0:	308c703a 	and	r6,r6,r2
 4000da4:	003fc706 	br	4000cc4 <__alt_data_end+0xfbff8cc4>
 4000da8:	008000c4 	movi	r2,3
 4000dac:	b8802d26 	beq	r23,r2,4000e64 <__divsf3+0x428>
 4000db0:	00c00044 	movi	r3,1
 4000db4:	b005883a 	mov	r2,r22
 4000db8:	b8ffdd1e 	bne	r23,r3,4000d30 <__alt_data_end+0xfbff8d30>
 4000dbc:	11c0004c 	andi	r7,r2,1
 4000dc0:	0009883a 	mov	r4,zero
 4000dc4:	000d883a 	mov	r6,zero
 4000dc8:	003f6c06 	br	4000b7c <__alt_data_end+0xfbff8b7c>
 4000dcc:	9023883a 	mov	r17,r18
 4000dd0:	003f6406 	br	4000b64 <__alt_data_end+0xfbff8b64>
 4000dd4:	1c47c83a 	sub	r3,r3,r17
 4000dd8:	01000684 	movi	r4,26
 4000ddc:	01400044 	movi	r5,1
 4000de0:	003fc806 	br	4000d04 <__alt_data_end+0xfbff8d04>
 4000de4:	9080102c 	andhi	r2,r18,64
 4000de8:	103fe926 	beq	r2,zero,4000d90 <__alt_data_end+0xfbff8d90>
 4000dec:	0023883a 	mov	r17,zero
 4000df0:	00802034 	movhi	r2,128
 4000df4:	89801034 	orhi	r6,r17,64
 4000df8:	10bfffc4 	addi	r2,r2,-1
 4000dfc:	a80f883a 	mov	r7,r21
 4000e00:	308c703a 	and	r6,r6,r2
 4000e04:	003faf06 	br	4000cc4 <__alt_data_end+0xfbff8cc4>
 4000e08:	01c00804 	movi	r7,32
 4000e0c:	390fc83a 	sub	r7,r7,r4
 4000e10:	89ce983a 	sll	r7,r17,r7
 4000e14:	890ad83a 	srl	r5,r17,r4
 4000e18:	380ec03a 	cmpne	r7,r7,zero
 4000e1c:	29cab03a 	or	r5,r5,r7
 4000e20:	28c001cc 	andi	r3,r5,7
 4000e24:	18000426 	beq	r3,zero,4000e38 <__divsf3+0x3fc>
 4000e28:	28c003cc 	andi	r3,r5,15
 4000e2c:	01000104 	movi	r4,4
 4000e30:	19000126 	beq	r3,r4,4000e38 <__divsf3+0x3fc>
 4000e34:	290b883a 	add	r5,r5,r4
 4000e38:	28c1002c 	andhi	r3,r5,1024
 4000e3c:	18000426 	beq	r3,zero,4000e50 <__divsf3+0x414>
 4000e40:	11c0004c 	andi	r7,r2,1
 4000e44:	01000044 	movi	r4,1
 4000e48:	000d883a 	mov	r6,zero
 4000e4c:	003f4b06 	br	4000b7c <__alt_data_end+0xfbff8b7c>
 4000e50:	280a91ba 	slli	r5,r5,6
 4000e54:	11c0004c 	andi	r7,r2,1
 4000e58:	0009883a 	mov	r4,zero
 4000e5c:	280cd27a 	srli	r6,r5,9
 4000e60:	003f4606 	br	4000b7c <__alt_data_end+0xfbff8b7c>
 4000e64:	00802034 	movhi	r2,128
 4000e68:	89801034 	orhi	r6,r17,64
 4000e6c:	10bfffc4 	addi	r2,r2,-1
 4000e70:	b00f883a 	mov	r7,r22
 4000e74:	308c703a 	and	r6,r6,r2
 4000e78:	003f9206 	br	4000cc4 <__alt_data_end+0xfbff8cc4>

04000e7c <__mulsf3>:
 4000e7c:	defff504 	addi	sp,sp,-44
 4000e80:	dc000115 	stw	r16,4(sp)
 4000e84:	2020d5fa 	srli	r16,r4,23
 4000e88:	dd400615 	stw	r21,24(sp)
 4000e8c:	202ad7fa 	srli	r21,r4,31
 4000e90:	dc800315 	stw	r18,12(sp)
 4000e94:	04802034 	movhi	r18,128
 4000e98:	df000915 	stw	fp,36(sp)
 4000e9c:	dd000515 	stw	r20,20(sp)
 4000ea0:	94bfffc4 	addi	r18,r18,-1
 4000ea4:	dfc00a15 	stw	ra,40(sp)
 4000ea8:	ddc00815 	stw	r23,32(sp)
 4000eac:	dd800715 	stw	r22,28(sp)
 4000eb0:	dcc00415 	stw	r19,16(sp)
 4000eb4:	dc400215 	stw	r17,8(sp)
 4000eb8:	84003fcc 	andi	r16,r16,255
 4000ebc:	9124703a 	and	r18,r18,r4
 4000ec0:	a829883a 	mov	r20,r21
 4000ec4:	af003fcc 	andi	fp,r21,255
 4000ec8:	80005426 	beq	r16,zero,400101c <__mulsf3+0x1a0>
 4000ecc:	00803fc4 	movi	r2,255
 4000ed0:	80802f26 	beq	r16,r2,4000f90 <__mulsf3+0x114>
 4000ed4:	91002034 	orhi	r4,r18,128
 4000ed8:	202490fa 	slli	r18,r4,3
 4000edc:	843fe044 	addi	r16,r16,-127
 4000ee0:	0023883a 	mov	r17,zero
 4000ee4:	002f883a 	mov	r23,zero
 4000ee8:	2804d5fa 	srli	r2,r5,23
 4000eec:	282cd7fa 	srli	r22,r5,31
 4000ef0:	01002034 	movhi	r4,128
 4000ef4:	213fffc4 	addi	r4,r4,-1
 4000ef8:	10803fcc 	andi	r2,r2,255
 4000efc:	2166703a 	and	r19,r4,r5
 4000f00:	b1803fcc 	andi	r6,r22,255
 4000f04:	10004c26 	beq	r2,zero,4001038 <__mulsf3+0x1bc>
 4000f08:	00c03fc4 	movi	r3,255
 4000f0c:	10c04726 	beq	r2,r3,400102c <__mulsf3+0x1b0>
 4000f10:	99002034 	orhi	r4,r19,128
 4000f14:	202690fa 	slli	r19,r4,3
 4000f18:	10bfe044 	addi	r2,r2,-127
 4000f1c:	0007883a 	mov	r3,zero
 4000f20:	80a1883a 	add	r16,r16,r2
 4000f24:	010003c4 	movi	r4,15
 4000f28:	1c44b03a 	or	r2,r3,r17
 4000f2c:	b56af03a 	xor	r21,r22,r21
 4000f30:	81c00044 	addi	r7,r16,1
 4000f34:	20806b36 	bltu	r4,r2,40010e4 <__mulsf3+0x268>
 4000f38:	100490ba 	slli	r2,r2,2
 4000f3c:	01010034 	movhi	r4,1024
 4000f40:	2103d404 	addi	r4,r4,3920
 4000f44:	1105883a 	add	r2,r2,r4
 4000f48:	10800017 	ldw	r2,0(r2)
 4000f4c:	1000683a 	jmp	r2
 4000f50:	040010e4 	muli	r16,zero,67
 4000f54:	04000fa4 	muli	r16,zero,62
 4000f58:	04000fa4 	muli	r16,zero,62
 4000f5c:	04000fa0 	cmpeqi	r16,zero,62
 4000f60:	040010c8 	cmpgei	r16,zero,67
 4000f64:	040010c8 	cmpgei	r16,zero,67
 4000f68:	040010b4 	movhi	r16,66
 4000f6c:	04000fa0 	cmpeqi	r16,zero,62
 4000f70:	040010c8 	cmpgei	r16,zero,67
 4000f74:	040010b4 	movhi	r16,66
 4000f78:	040010c8 	cmpgei	r16,zero,67
 4000f7c:	04000fa0 	cmpeqi	r16,zero,62
 4000f80:	040010d4 	movui	r16,67
 4000f84:	040010d4 	movui	r16,67
 4000f88:	040010d4 	movui	r16,67
 4000f8c:	040011b0 	cmpltui	r16,zero,70
 4000f90:	90003b1e 	bne	r18,zero,4001080 <__mulsf3+0x204>
 4000f94:	04400204 	movi	r17,8
 4000f98:	05c00084 	movi	r23,2
 4000f9c:	003fd206 	br	4000ee8 <__alt_data_end+0xfbff8ee8>
 4000fa0:	302b883a 	mov	r21,r6
 4000fa4:	00800084 	movi	r2,2
 4000fa8:	18802626 	beq	r3,r2,4001044 <__mulsf3+0x1c8>
 4000fac:	008000c4 	movi	r2,3
 4000fb0:	1880ab26 	beq	r3,r2,4001260 <__mulsf3+0x3e4>
 4000fb4:	00800044 	movi	r2,1
 4000fb8:	1880a21e 	bne	r3,r2,4001244 <__mulsf3+0x3c8>
 4000fbc:	a829883a 	mov	r20,r21
 4000fc0:	0007883a 	mov	r3,zero
 4000fc4:	0009883a 	mov	r4,zero
 4000fc8:	18803fcc 	andi	r2,r3,255
 4000fcc:	100695fa 	slli	r3,r2,23
 4000fd0:	a0803fcc 	andi	r2,r20,255
 4000fd4:	100a97fa 	slli	r5,r2,31
 4000fd8:	00802034 	movhi	r2,128
 4000fdc:	10bfffc4 	addi	r2,r2,-1
 4000fe0:	2084703a 	and	r2,r4,r2
 4000fe4:	10c4b03a 	or	r2,r2,r3
 4000fe8:	1144b03a 	or	r2,r2,r5
 4000fec:	dfc00a17 	ldw	ra,40(sp)
 4000ff0:	df000917 	ldw	fp,36(sp)
 4000ff4:	ddc00817 	ldw	r23,32(sp)
 4000ff8:	dd800717 	ldw	r22,28(sp)
 4000ffc:	dd400617 	ldw	r21,24(sp)
 4001000:	dd000517 	ldw	r20,20(sp)
 4001004:	dcc00417 	ldw	r19,16(sp)
 4001008:	dc800317 	ldw	r18,12(sp)
 400100c:	dc400217 	ldw	r17,8(sp)
 4001010:	dc000117 	ldw	r16,4(sp)
 4001014:	dec00b04 	addi	sp,sp,44
 4001018:	f800283a 	ret
 400101c:	90000d1e 	bne	r18,zero,4001054 <__mulsf3+0x1d8>
 4001020:	04400104 	movi	r17,4
 4001024:	05c00044 	movi	r23,1
 4001028:	003faf06 	br	4000ee8 <__alt_data_end+0xfbff8ee8>
 400102c:	9806c03a 	cmpne	r3,r19,zero
 4001030:	18c00084 	addi	r3,r3,2
 4001034:	003fba06 	br	4000f20 <__alt_data_end+0xfbff8f20>
 4001038:	9800141e 	bne	r19,zero,400108c <__mulsf3+0x210>
 400103c:	00c00044 	movi	r3,1
 4001040:	003fb706 	br	4000f20 <__alt_data_end+0xfbff8f20>
 4001044:	a829883a 	mov	r20,r21
 4001048:	00ffffc4 	movi	r3,-1
 400104c:	0009883a 	mov	r4,zero
 4001050:	003fdd06 	br	4000fc8 <__alt_data_end+0xfbff8fc8>
 4001054:	9009883a 	mov	r4,r18
 4001058:	d9400015 	stw	r5,0(sp)
 400105c:	400259c0 	call	400259c <__clzsi2>
 4001060:	10fffec4 	addi	r3,r2,-5
 4001064:	10801d84 	addi	r2,r2,118
 4001068:	90e4983a 	sll	r18,r18,r3
 400106c:	00a1c83a 	sub	r16,zero,r2
 4001070:	0023883a 	mov	r17,zero
 4001074:	002f883a 	mov	r23,zero
 4001078:	d9400017 	ldw	r5,0(sp)
 400107c:	003f9a06 	br	4000ee8 <__alt_data_end+0xfbff8ee8>
 4001080:	04400304 	movi	r17,12
 4001084:	05c000c4 	movi	r23,3
 4001088:	003f9706 	br	4000ee8 <__alt_data_end+0xfbff8ee8>
 400108c:	9809883a 	mov	r4,r19
 4001090:	d9800015 	stw	r6,0(sp)
 4001094:	400259c0 	call	400259c <__clzsi2>
 4001098:	10fffec4 	addi	r3,r2,-5
 400109c:	10801d84 	addi	r2,r2,118
 40010a0:	98e6983a 	sll	r19,r19,r3
 40010a4:	0085c83a 	sub	r2,zero,r2
 40010a8:	0007883a 	mov	r3,zero
 40010ac:	d9800017 	ldw	r6,0(sp)
 40010b0:	003f9b06 	br	4000f20 <__alt_data_end+0xfbff8f20>
 40010b4:	01002034 	movhi	r4,128
 40010b8:	0029883a 	mov	r20,zero
 40010bc:	213fffc4 	addi	r4,r4,-1
 40010c0:	00ffffc4 	movi	r3,-1
 40010c4:	003fc006 	br	4000fc8 <__alt_data_end+0xfbff8fc8>
 40010c8:	9027883a 	mov	r19,r18
 40010cc:	b807883a 	mov	r3,r23
 40010d0:	003fb406 	br	4000fa4 <__alt_data_end+0xfbff8fa4>
 40010d4:	9027883a 	mov	r19,r18
 40010d8:	e02b883a 	mov	r21,fp
 40010dc:	b807883a 	mov	r3,r23
 40010e0:	003fb006 	br	4000fa4 <__alt_data_end+0xfbff8fa4>
 40010e4:	9004d43a 	srli	r2,r18,16
 40010e8:	9810d43a 	srli	r8,r19,16
 40010ec:	94bfffcc 	andi	r18,r18,65535
 40010f0:	993fffcc 	andi	r4,r19,65535
 40010f4:	910d383a 	mul	r6,r18,r4
 40010f8:	20a7383a 	mul	r19,r4,r2
 40010fc:	9225383a 	mul	r18,r18,r8
 4001100:	3006d43a 	srli	r3,r6,16
 4001104:	1211383a 	mul	r8,r2,r8
 4001108:	94e5883a 	add	r18,r18,r19
 400110c:	1c87883a 	add	r3,r3,r18
 4001110:	1cc0022e 	bgeu	r3,r19,400111c <__mulsf3+0x2a0>
 4001114:	00800074 	movhi	r2,1
 4001118:	4091883a 	add	r8,r8,r2
 400111c:	1804943a 	slli	r2,r3,16
 4001120:	31bfffcc 	andi	r6,r6,65535
 4001124:	1806d43a 	srli	r3,r3,16
 4001128:	1185883a 	add	r2,r2,r6
 400112c:	102691ba 	slli	r19,r2,6
 4001130:	1a07883a 	add	r3,r3,r8
 4001134:	1004d6ba 	srli	r2,r2,26
 4001138:	180891ba 	slli	r4,r3,6
 400113c:	9826c03a 	cmpne	r19,r19,zero
 4001140:	9884b03a 	or	r2,r19,r2
 4001144:	1126b03a 	or	r19,r2,r4
 4001148:	9882002c 	andhi	r2,r19,2048
 400114c:	10000426 	beq	r2,zero,4001160 <__mulsf3+0x2e4>
 4001150:	9804d07a 	srli	r2,r19,1
 4001154:	9900004c 	andi	r4,r19,1
 4001158:	3821883a 	mov	r16,r7
 400115c:	1126b03a 	or	r19,r2,r4
 4001160:	80c01fc4 	addi	r3,r16,127
 4001164:	00c0210e 	bge	zero,r3,40011ec <__mulsf3+0x370>
 4001168:	988001cc 	andi	r2,r19,7
 400116c:	10000426 	beq	r2,zero,4001180 <__mulsf3+0x304>
 4001170:	988003cc 	andi	r2,r19,15
 4001174:	01000104 	movi	r4,4
 4001178:	11000126 	beq	r2,r4,4001180 <__mulsf3+0x304>
 400117c:	9927883a 	add	r19,r19,r4
 4001180:	9882002c 	andhi	r2,r19,2048
 4001184:	10000426 	beq	r2,zero,4001198 <__mulsf3+0x31c>
 4001188:	00be0034 	movhi	r2,63488
 400118c:	10bfffc4 	addi	r2,r2,-1
 4001190:	80c02004 	addi	r3,r16,128
 4001194:	98a6703a 	and	r19,r19,r2
 4001198:	00803f84 	movi	r2,254
 400119c:	10ffa916 	blt	r2,r3,4001044 <__alt_data_end+0xfbff9044>
 40011a0:	980891ba 	slli	r4,r19,6
 40011a4:	a829883a 	mov	r20,r21
 40011a8:	2008d27a 	srli	r4,r4,9
 40011ac:	003f8606 	br	4000fc8 <__alt_data_end+0xfbff8fc8>
 40011b0:	9080102c 	andhi	r2,r18,64
 40011b4:	10000826 	beq	r2,zero,40011d8 <__mulsf3+0x35c>
 40011b8:	9880102c 	andhi	r2,r19,64
 40011bc:	1000061e 	bne	r2,zero,40011d8 <__mulsf3+0x35c>
 40011c0:	00802034 	movhi	r2,128
 40011c4:	99001034 	orhi	r4,r19,64
 40011c8:	10bfffc4 	addi	r2,r2,-1
 40011cc:	b029883a 	mov	r20,r22
 40011d0:	2088703a 	and	r4,r4,r2
 40011d4:	003fba06 	br	40010c0 <__alt_data_end+0xfbff90c0>
 40011d8:	00802034 	movhi	r2,128
 40011dc:	91001034 	orhi	r4,r18,64
 40011e0:	10bfffc4 	addi	r2,r2,-1
 40011e4:	2088703a 	and	r4,r4,r2
 40011e8:	003fb506 	br	40010c0 <__alt_data_end+0xfbff90c0>
 40011ec:	00800044 	movi	r2,1
 40011f0:	10c7c83a 	sub	r3,r2,r3
 40011f4:	008006c4 	movi	r2,27
 40011f8:	10ff7016 	blt	r2,r3,4000fbc <__alt_data_end+0xfbff8fbc>
 40011fc:	00800804 	movi	r2,32
 4001200:	10c5c83a 	sub	r2,r2,r3
 4001204:	9884983a 	sll	r2,r19,r2
 4001208:	98c6d83a 	srl	r3,r19,r3
 400120c:	1004c03a 	cmpne	r2,r2,zero
 4001210:	1884b03a 	or	r2,r3,r2
 4001214:	10c001cc 	andi	r3,r2,7
 4001218:	18000426 	beq	r3,zero,400122c <__mulsf3+0x3b0>
 400121c:	10c003cc 	andi	r3,r2,15
 4001220:	01000104 	movi	r4,4
 4001224:	19000126 	beq	r3,r4,400122c <__mulsf3+0x3b0>
 4001228:	1105883a 	add	r2,r2,r4
 400122c:	10c1002c 	andhi	r3,r2,1024
 4001230:	18000626 	beq	r3,zero,400124c <__mulsf3+0x3d0>
 4001234:	a829883a 	mov	r20,r21
 4001238:	00c00044 	movi	r3,1
 400123c:	0009883a 	mov	r4,zero
 4001240:	003f6106 	br	4000fc8 <__alt_data_end+0xfbff8fc8>
 4001244:	3821883a 	mov	r16,r7
 4001248:	003fc506 	br	4001160 <__alt_data_end+0xfbff9160>
 400124c:	100491ba 	slli	r2,r2,6
 4001250:	a829883a 	mov	r20,r21
 4001254:	0007883a 	mov	r3,zero
 4001258:	1008d27a 	srli	r4,r2,9
 400125c:	003f5a06 	br	4000fc8 <__alt_data_end+0xfbff8fc8>
 4001260:	00802034 	movhi	r2,128
 4001264:	99001034 	orhi	r4,r19,64
 4001268:	10bfffc4 	addi	r2,r2,-1
 400126c:	a829883a 	mov	r20,r21
 4001270:	2088703a 	and	r4,r4,r2
 4001274:	003f9206 	br	40010c0 <__alt_data_end+0xfbff90c0>

04001278 <__floatsisf>:
 4001278:	defffd04 	addi	sp,sp,-12
 400127c:	dfc00215 	stw	ra,8(sp)
 4001280:	dc400115 	stw	r17,4(sp)
 4001284:	dc000015 	stw	r16,0(sp)
 4001288:	20003526 	beq	r4,zero,4001360 <__floatsisf+0xe8>
 400128c:	2021883a 	mov	r16,r4
 4001290:	2022d7fa 	srli	r17,r4,31
 4001294:	20003616 	blt	r4,zero,4001370 <__floatsisf+0xf8>
 4001298:	8009883a 	mov	r4,r16
 400129c:	400259c0 	call	400259c <__clzsi2>
 40012a0:	00c02784 	movi	r3,158
 40012a4:	1887c83a 	sub	r3,r3,r2
 40012a8:	01002584 	movi	r4,150
 40012ac:	20c01416 	blt	r4,r3,4001300 <__floatsisf+0x88>
 40012b0:	20c9c83a 	sub	r4,r4,r3
 40012b4:	8120983a 	sll	r16,r16,r4
 40012b8:	00802034 	movhi	r2,128
 40012bc:	10bfffc4 	addi	r2,r2,-1
 40012c0:	8809883a 	mov	r4,r17
 40012c4:	80a0703a 	and	r16,r16,r2
 40012c8:	18803fcc 	andi	r2,r3,255
 40012cc:	100695fa 	slli	r3,r2,23
 40012d0:	20803fcc 	andi	r2,r4,255
 40012d4:	100897fa 	slli	r4,r2,31
 40012d8:	00802034 	movhi	r2,128
 40012dc:	10bfffc4 	addi	r2,r2,-1
 40012e0:	8084703a 	and	r2,r16,r2
 40012e4:	10c4b03a 	or	r2,r2,r3
 40012e8:	1104b03a 	or	r2,r2,r4
 40012ec:	dfc00217 	ldw	ra,8(sp)
 40012f0:	dc400117 	ldw	r17,4(sp)
 40012f4:	dc000017 	ldw	r16,0(sp)
 40012f8:	dec00304 	addi	sp,sp,12
 40012fc:	f800283a 	ret
 4001300:	01002644 	movi	r4,153
 4001304:	20c01c16 	blt	r4,r3,4001378 <__floatsisf+0x100>
 4001308:	20c9c83a 	sub	r4,r4,r3
 400130c:	8120983a 	sll	r16,r16,r4
 4001310:	013f0034 	movhi	r4,64512
 4001314:	213fffc4 	addi	r4,r4,-1
 4001318:	814001cc 	andi	r5,r16,7
 400131c:	8108703a 	and	r4,r16,r4
 4001320:	28000426 	beq	r5,zero,4001334 <__floatsisf+0xbc>
 4001324:	840003cc 	andi	r16,r16,15
 4001328:	01400104 	movi	r5,4
 400132c:	81400126 	beq	r16,r5,4001334 <__floatsisf+0xbc>
 4001330:	2149883a 	add	r4,r4,r5
 4001334:	2141002c 	andhi	r5,r4,1024
 4001338:	28000526 	beq	r5,zero,4001350 <__floatsisf+0xd8>
 400133c:	00c027c4 	movi	r3,159
 4001340:	1887c83a 	sub	r3,r3,r2
 4001344:	00bf0034 	movhi	r2,64512
 4001348:	10bfffc4 	addi	r2,r2,-1
 400134c:	2088703a 	and	r4,r4,r2
 4001350:	202091ba 	slli	r16,r4,6
 4001354:	8809883a 	mov	r4,r17
 4001358:	8020d27a 	srli	r16,r16,9
 400135c:	003fda06 	br	40012c8 <__alt_data_end+0xfbff92c8>
 4001360:	0009883a 	mov	r4,zero
 4001364:	0007883a 	mov	r3,zero
 4001368:	0021883a 	mov	r16,zero
 400136c:	003fd606 	br	40012c8 <__alt_data_end+0xfbff92c8>
 4001370:	0121c83a 	sub	r16,zero,r4
 4001374:	003fc806 	br	4001298 <__alt_data_end+0xfbff9298>
 4001378:	01002e44 	movi	r4,185
 400137c:	20c9c83a 	sub	r4,r4,r3
 4001380:	01400144 	movi	r5,5
 4001384:	8108983a 	sll	r4,r16,r4
 4001388:	288bc83a 	sub	r5,r5,r2
 400138c:	8160d83a 	srl	r16,r16,r5
 4001390:	2008c03a 	cmpne	r4,r4,zero
 4001394:	8120b03a 	or	r16,r16,r4
 4001398:	003fdd06 	br	4001310 <__alt_data_end+0xfbff9310>

0400139c <__floatunsisf>:
 400139c:	defffe04 	addi	sp,sp,-8
 40013a0:	dfc00115 	stw	ra,4(sp)
 40013a4:	dc000015 	stw	r16,0(sp)
 40013a8:	20002c26 	beq	r4,zero,400145c <__floatunsisf+0xc0>
 40013ac:	2021883a 	mov	r16,r4
 40013b0:	400259c0 	call	400259c <__clzsi2>
 40013b4:	00c02784 	movi	r3,158
 40013b8:	1887c83a 	sub	r3,r3,r2
 40013bc:	01002584 	movi	r4,150
 40013c0:	20c00f16 	blt	r4,r3,4001400 <__floatunsisf+0x64>
 40013c4:	20c9c83a 	sub	r4,r4,r3
 40013c8:	8108983a 	sll	r4,r16,r4
 40013cc:	00802034 	movhi	r2,128
 40013d0:	10bfffc4 	addi	r2,r2,-1
 40013d4:	2088703a 	and	r4,r4,r2
 40013d8:	18803fcc 	andi	r2,r3,255
 40013dc:	100695fa 	slli	r3,r2,23
 40013e0:	00802034 	movhi	r2,128
 40013e4:	10bfffc4 	addi	r2,r2,-1
 40013e8:	2084703a 	and	r2,r4,r2
 40013ec:	10c4b03a 	or	r2,r2,r3
 40013f0:	dfc00117 	ldw	ra,4(sp)
 40013f4:	dc000017 	ldw	r16,0(sp)
 40013f8:	dec00204 	addi	sp,sp,8
 40013fc:	f800283a 	ret
 4001400:	01002644 	movi	r4,153
 4001404:	20c01816 	blt	r4,r3,4001468 <__floatunsisf+0xcc>
 4001408:	20c9c83a 	sub	r4,r4,r3
 400140c:	8108983a 	sll	r4,r16,r4
 4001410:	017f0034 	movhi	r5,64512
 4001414:	297fffc4 	addi	r5,r5,-1
 4001418:	218001cc 	andi	r6,r4,7
 400141c:	214a703a 	and	r5,r4,r5
 4001420:	30000426 	beq	r6,zero,4001434 <__floatunsisf+0x98>
 4001424:	210003cc 	andi	r4,r4,15
 4001428:	01800104 	movi	r6,4
 400142c:	21800126 	beq	r4,r6,4001434 <__floatunsisf+0x98>
 4001430:	298b883a 	add	r5,r5,r6
 4001434:	2901002c 	andhi	r4,r5,1024
 4001438:	20000526 	beq	r4,zero,4001450 <__floatunsisf+0xb4>
 400143c:	00c027c4 	movi	r3,159
 4001440:	1887c83a 	sub	r3,r3,r2
 4001444:	00bf0034 	movhi	r2,64512
 4001448:	10bfffc4 	addi	r2,r2,-1
 400144c:	288a703a 	and	r5,r5,r2
 4001450:	280891ba 	slli	r4,r5,6
 4001454:	2008d27a 	srli	r4,r4,9
 4001458:	003fdf06 	br	40013d8 <__alt_data_end+0xfbff93d8>
 400145c:	0007883a 	mov	r3,zero
 4001460:	0009883a 	mov	r4,zero
 4001464:	003fdc06 	br	40013d8 <__alt_data_end+0xfbff93d8>
 4001468:	01402e44 	movi	r5,185
 400146c:	28cbc83a 	sub	r5,r5,r3
 4001470:	01000144 	movi	r4,5
 4001474:	2089c83a 	sub	r4,r4,r2
 4001478:	814a983a 	sll	r5,r16,r5
 400147c:	8108d83a 	srl	r4,r16,r4
 4001480:	2820c03a 	cmpne	r16,r5,zero
 4001484:	2408b03a 	or	r4,r4,r16
 4001488:	003fe106 	br	4001410 <__alt_data_end+0xfbff9410>

0400148c <__divdf3>:
 400148c:	defff204 	addi	sp,sp,-56
 4001490:	dd400915 	stw	r21,36(sp)
 4001494:	282ad53a 	srli	r21,r5,20
 4001498:	dd000815 	stw	r20,32(sp)
 400149c:	2828d7fa 	srli	r20,r5,31
 40014a0:	dc000415 	stw	r16,16(sp)
 40014a4:	04000434 	movhi	r16,16
 40014a8:	df000c15 	stw	fp,48(sp)
 40014ac:	843fffc4 	addi	r16,r16,-1
 40014b0:	dfc00d15 	stw	ra,52(sp)
 40014b4:	ddc00b15 	stw	r23,44(sp)
 40014b8:	dd800a15 	stw	r22,40(sp)
 40014bc:	dcc00715 	stw	r19,28(sp)
 40014c0:	dc800615 	stw	r18,24(sp)
 40014c4:	dc400515 	stw	r17,20(sp)
 40014c8:	ad41ffcc 	andi	r21,r21,2047
 40014cc:	2c20703a 	and	r16,r5,r16
 40014d0:	a7003fcc 	andi	fp,r20,255
 40014d4:	a8006126 	beq	r21,zero,400165c <__divdf3+0x1d0>
 40014d8:	0081ffc4 	movi	r2,2047
 40014dc:	2025883a 	mov	r18,r4
 40014e0:	a8803726 	beq	r21,r2,40015c0 <__divdf3+0x134>
 40014e4:	80800434 	orhi	r2,r16,16
 40014e8:	100490fa 	slli	r2,r2,3
 40014ec:	2020d77a 	srli	r16,r4,29
 40014f0:	202490fa 	slli	r18,r4,3
 40014f4:	ad7f0044 	addi	r21,r21,-1023
 40014f8:	80a0b03a 	or	r16,r16,r2
 40014fc:	0027883a 	mov	r19,zero
 4001500:	0013883a 	mov	r9,zero
 4001504:	3804d53a 	srli	r2,r7,20
 4001508:	382cd7fa 	srli	r22,r7,31
 400150c:	04400434 	movhi	r17,16
 4001510:	8c7fffc4 	addi	r17,r17,-1
 4001514:	1081ffcc 	andi	r2,r2,2047
 4001518:	3011883a 	mov	r8,r6
 400151c:	3c62703a 	and	r17,r7,r17
 4001520:	b5c03fcc 	andi	r23,r22,255
 4001524:	10006c26 	beq	r2,zero,40016d8 <__divdf3+0x24c>
 4001528:	00c1ffc4 	movi	r3,2047
 400152c:	10c06426 	beq	r2,r3,40016c0 <__divdf3+0x234>
 4001530:	88c00434 	orhi	r3,r17,16
 4001534:	180690fa 	slli	r3,r3,3
 4001538:	3022d77a 	srli	r17,r6,29
 400153c:	301090fa 	slli	r8,r6,3
 4001540:	10bf0044 	addi	r2,r2,-1023
 4001544:	88e2b03a 	or	r17,r17,r3
 4001548:	000f883a 	mov	r7,zero
 400154c:	a58cf03a 	xor	r6,r20,r22
 4001550:	3cc8b03a 	or	r4,r7,r19
 4001554:	a8abc83a 	sub	r21,r21,r2
 4001558:	008003c4 	movi	r2,15
 400155c:	3007883a 	mov	r3,r6
 4001560:	34c03fcc 	andi	r19,r6,255
 4001564:	11009036 	bltu	r2,r4,40017a8 <__divdf3+0x31c>
 4001568:	200890ba 	slli	r4,r4,2
 400156c:	00810034 	movhi	r2,1024
 4001570:	10856004 	addi	r2,r2,5504
 4001574:	2089883a 	add	r4,r4,r2
 4001578:	20800017 	ldw	r2,0(r4)
 400157c:	1000683a 	jmp	r2
 4001580:	040017a8 	cmpgeui	r16,zero,94
 4001584:	040015f8 	rdprs	r16,zero,87
 4001588:	04001798 	cmpnei	r16,zero,94
 400158c:	040015ec 	andhi	r16,zero,87
 4001590:	04001798 	cmpnei	r16,zero,94
 4001594:	0400176c 	andhi	r16,zero,93
 4001598:	04001798 	cmpnei	r16,zero,94
 400159c:	040015ec 	andhi	r16,zero,87
 40015a0:	040015f8 	rdprs	r16,zero,87
 40015a4:	040015f8 	rdprs	r16,zero,87
 40015a8:	0400176c 	andhi	r16,zero,93
 40015ac:	040015ec 	andhi	r16,zero,87
 40015b0:	040015dc 	xori	r16,zero,87
 40015b4:	040015dc 	xori	r16,zero,87
 40015b8:	040015dc 	xori	r16,zero,87
 40015bc:	04001a8c 	andi	r16,zero,106
 40015c0:	2404b03a 	or	r2,r4,r16
 40015c4:	1000661e 	bne	r2,zero,4001760 <__divdf3+0x2d4>
 40015c8:	04c00204 	movi	r19,8
 40015cc:	0021883a 	mov	r16,zero
 40015d0:	0025883a 	mov	r18,zero
 40015d4:	02400084 	movi	r9,2
 40015d8:	003fca06 	br	4001504 <__alt_data_end+0xfbff9504>
 40015dc:	8023883a 	mov	r17,r16
 40015e0:	9011883a 	mov	r8,r18
 40015e4:	e02f883a 	mov	r23,fp
 40015e8:	480f883a 	mov	r7,r9
 40015ec:	00800084 	movi	r2,2
 40015f0:	3881311e 	bne	r7,r2,4001ab8 <__divdf3+0x62c>
 40015f4:	b827883a 	mov	r19,r23
 40015f8:	98c0004c 	andi	r3,r19,1
 40015fc:	0081ffc4 	movi	r2,2047
 4001600:	000b883a 	mov	r5,zero
 4001604:	0025883a 	mov	r18,zero
 4001608:	1004953a 	slli	r2,r2,20
 400160c:	18c03fcc 	andi	r3,r3,255
 4001610:	04400434 	movhi	r17,16
 4001614:	8c7fffc4 	addi	r17,r17,-1
 4001618:	180697fa 	slli	r3,r3,31
 400161c:	2c4a703a 	and	r5,r5,r17
 4001620:	288ab03a 	or	r5,r5,r2
 4001624:	28c6b03a 	or	r3,r5,r3
 4001628:	9005883a 	mov	r2,r18
 400162c:	dfc00d17 	ldw	ra,52(sp)
 4001630:	df000c17 	ldw	fp,48(sp)
 4001634:	ddc00b17 	ldw	r23,44(sp)
 4001638:	dd800a17 	ldw	r22,40(sp)
 400163c:	dd400917 	ldw	r21,36(sp)
 4001640:	dd000817 	ldw	r20,32(sp)
 4001644:	dcc00717 	ldw	r19,28(sp)
 4001648:	dc800617 	ldw	r18,24(sp)
 400164c:	dc400517 	ldw	r17,20(sp)
 4001650:	dc000417 	ldw	r16,16(sp)
 4001654:	dec00e04 	addi	sp,sp,56
 4001658:	f800283a 	ret
 400165c:	2404b03a 	or	r2,r4,r16
 4001660:	2027883a 	mov	r19,r4
 4001664:	10003926 	beq	r2,zero,400174c <__divdf3+0x2c0>
 4001668:	80012e26 	beq	r16,zero,4001b24 <__divdf3+0x698>
 400166c:	8009883a 	mov	r4,r16
 4001670:	d9800315 	stw	r6,12(sp)
 4001674:	d9c00215 	stw	r7,8(sp)
 4001678:	400259c0 	call	400259c <__clzsi2>
 400167c:	d9800317 	ldw	r6,12(sp)
 4001680:	d9c00217 	ldw	r7,8(sp)
 4001684:	113ffd44 	addi	r4,r2,-11
 4001688:	00c00704 	movi	r3,28
 400168c:	19012116 	blt	r3,r4,4001b14 <__divdf3+0x688>
 4001690:	00c00744 	movi	r3,29
 4001694:	147ffe04 	addi	r17,r2,-8
 4001698:	1907c83a 	sub	r3,r3,r4
 400169c:	8460983a 	sll	r16,r16,r17
 40016a0:	98c6d83a 	srl	r3,r19,r3
 40016a4:	9c64983a 	sll	r18,r19,r17
 40016a8:	1c20b03a 	or	r16,r3,r16
 40016ac:	1080fcc4 	addi	r2,r2,1011
 40016b0:	00abc83a 	sub	r21,zero,r2
 40016b4:	0027883a 	mov	r19,zero
 40016b8:	0013883a 	mov	r9,zero
 40016bc:	003f9106 	br	4001504 <__alt_data_end+0xfbff9504>
 40016c0:	3446b03a 	or	r3,r6,r17
 40016c4:	18001f1e 	bne	r3,zero,4001744 <__divdf3+0x2b8>
 40016c8:	0023883a 	mov	r17,zero
 40016cc:	0011883a 	mov	r8,zero
 40016d0:	01c00084 	movi	r7,2
 40016d4:	003f9d06 	br	400154c <__alt_data_end+0xfbff954c>
 40016d8:	3446b03a 	or	r3,r6,r17
 40016dc:	18001526 	beq	r3,zero,4001734 <__divdf3+0x2a8>
 40016e0:	88011b26 	beq	r17,zero,4001b50 <__divdf3+0x6c4>
 40016e4:	8809883a 	mov	r4,r17
 40016e8:	d9800315 	stw	r6,12(sp)
 40016ec:	da400115 	stw	r9,4(sp)
 40016f0:	400259c0 	call	400259c <__clzsi2>
 40016f4:	d9800317 	ldw	r6,12(sp)
 40016f8:	da400117 	ldw	r9,4(sp)
 40016fc:	113ffd44 	addi	r4,r2,-11
 4001700:	00c00704 	movi	r3,28
 4001704:	19010e16 	blt	r3,r4,4001b40 <__divdf3+0x6b4>
 4001708:	00c00744 	movi	r3,29
 400170c:	123ffe04 	addi	r8,r2,-8
 4001710:	1907c83a 	sub	r3,r3,r4
 4001714:	8a22983a 	sll	r17,r17,r8
 4001718:	30c6d83a 	srl	r3,r6,r3
 400171c:	3210983a 	sll	r8,r6,r8
 4001720:	1c62b03a 	or	r17,r3,r17
 4001724:	1080fcc4 	addi	r2,r2,1011
 4001728:	0085c83a 	sub	r2,zero,r2
 400172c:	000f883a 	mov	r7,zero
 4001730:	003f8606 	br	400154c <__alt_data_end+0xfbff954c>
 4001734:	0023883a 	mov	r17,zero
 4001738:	0011883a 	mov	r8,zero
 400173c:	01c00044 	movi	r7,1
 4001740:	003f8206 	br	400154c <__alt_data_end+0xfbff954c>
 4001744:	01c000c4 	movi	r7,3
 4001748:	003f8006 	br	400154c <__alt_data_end+0xfbff954c>
 400174c:	04c00104 	movi	r19,4
 4001750:	0021883a 	mov	r16,zero
 4001754:	0025883a 	mov	r18,zero
 4001758:	02400044 	movi	r9,1
 400175c:	003f6906 	br	4001504 <__alt_data_end+0xfbff9504>
 4001760:	04c00304 	movi	r19,12
 4001764:	024000c4 	movi	r9,3
 4001768:	003f6606 	br	4001504 <__alt_data_end+0xfbff9504>
 400176c:	01400434 	movhi	r5,16
 4001770:	0007883a 	mov	r3,zero
 4001774:	297fffc4 	addi	r5,r5,-1
 4001778:	04bfffc4 	movi	r18,-1
 400177c:	0081ffc4 	movi	r2,2047
 4001780:	003fa106 	br	4001608 <__alt_data_end+0xfbff9608>
 4001784:	00c00044 	movi	r3,1
 4001788:	1887c83a 	sub	r3,r3,r2
 400178c:	01000e04 	movi	r4,56
 4001790:	20c1210e 	bge	r4,r3,4001c18 <__divdf3+0x78c>
 4001794:	98c0004c 	andi	r3,r19,1
 4001798:	0005883a 	mov	r2,zero
 400179c:	000b883a 	mov	r5,zero
 40017a0:	0025883a 	mov	r18,zero
 40017a4:	003f9806 	br	4001608 <__alt_data_end+0xfbff9608>
 40017a8:	8c00fd36 	bltu	r17,r16,4001ba0 <__divdf3+0x714>
 40017ac:	8440fb26 	beq	r16,r17,4001b9c <__divdf3+0x710>
 40017b0:	8007883a 	mov	r3,r16
 40017b4:	ad7fffc4 	addi	r21,r21,-1
 40017b8:	0021883a 	mov	r16,zero
 40017bc:	4004d63a 	srli	r2,r8,24
 40017c0:	8822923a 	slli	r17,r17,8
 40017c4:	1809883a 	mov	r4,r3
 40017c8:	402c923a 	slli	r22,r8,8
 40017cc:	88b8b03a 	or	fp,r17,r2
 40017d0:	e028d43a 	srli	r20,fp,16
 40017d4:	d8c00015 	stw	r3,0(sp)
 40017d8:	e5ffffcc 	andi	r23,fp,65535
 40017dc:	a00b883a 	mov	r5,r20
 40017e0:	40009800 	call	4000980 <__udivsi3>
 40017e4:	d8c00017 	ldw	r3,0(sp)
 40017e8:	a00b883a 	mov	r5,r20
 40017ec:	d8800315 	stw	r2,12(sp)
 40017f0:	1809883a 	mov	r4,r3
 40017f4:	40009e40 	call	40009e4 <__umodsi3>
 40017f8:	d9800317 	ldw	r6,12(sp)
 40017fc:	1006943a 	slli	r3,r2,16
 4001800:	9004d43a 	srli	r2,r18,16
 4001804:	b9a3383a 	mul	r17,r23,r6
 4001808:	10c4b03a 	or	r2,r2,r3
 400180c:	1440062e 	bgeu	r2,r17,4001828 <__divdf3+0x39c>
 4001810:	1705883a 	add	r2,r2,fp
 4001814:	30ffffc4 	addi	r3,r6,-1
 4001818:	1700ee36 	bltu	r2,fp,4001bd4 <__divdf3+0x748>
 400181c:	1440ed2e 	bgeu	r2,r17,4001bd4 <__divdf3+0x748>
 4001820:	31bfff84 	addi	r6,r6,-2
 4001824:	1705883a 	add	r2,r2,fp
 4001828:	1463c83a 	sub	r17,r2,r17
 400182c:	a00b883a 	mov	r5,r20
 4001830:	8809883a 	mov	r4,r17
 4001834:	d9800315 	stw	r6,12(sp)
 4001838:	40009800 	call	4000980 <__udivsi3>
 400183c:	a00b883a 	mov	r5,r20
 4001840:	8809883a 	mov	r4,r17
 4001844:	d8800215 	stw	r2,8(sp)
 4001848:	40009e40 	call	40009e4 <__umodsi3>
 400184c:	d9c00217 	ldw	r7,8(sp)
 4001850:	1004943a 	slli	r2,r2,16
 4001854:	94bfffcc 	andi	r18,r18,65535
 4001858:	b9d1383a 	mul	r8,r23,r7
 400185c:	90a4b03a 	or	r18,r18,r2
 4001860:	d9800317 	ldw	r6,12(sp)
 4001864:	9200062e 	bgeu	r18,r8,4001880 <__divdf3+0x3f4>
 4001868:	9725883a 	add	r18,r18,fp
 400186c:	38bfffc4 	addi	r2,r7,-1
 4001870:	9700d636 	bltu	r18,fp,4001bcc <__divdf3+0x740>
 4001874:	9200d52e 	bgeu	r18,r8,4001bcc <__divdf3+0x740>
 4001878:	39ffff84 	addi	r7,r7,-2
 400187c:	9725883a 	add	r18,r18,fp
 4001880:	3004943a 	slli	r2,r6,16
 4001884:	b012d43a 	srli	r9,r22,16
 4001888:	b1bfffcc 	andi	r6,r22,65535
 400188c:	11e2b03a 	or	r17,r2,r7
 4001890:	8806d43a 	srli	r3,r17,16
 4001894:	893fffcc 	andi	r4,r17,65535
 4001898:	218b383a 	mul	r5,r4,r6
 400189c:	30c5383a 	mul	r2,r6,r3
 40018a0:	2249383a 	mul	r4,r4,r9
 40018a4:	280ed43a 	srli	r7,r5,16
 40018a8:	9225c83a 	sub	r18,r18,r8
 40018ac:	2089883a 	add	r4,r4,r2
 40018b0:	3909883a 	add	r4,r7,r4
 40018b4:	1a47383a 	mul	r3,r3,r9
 40018b8:	2080022e 	bgeu	r4,r2,40018c4 <__divdf3+0x438>
 40018bc:	00800074 	movhi	r2,1
 40018c0:	1887883a 	add	r3,r3,r2
 40018c4:	2004d43a 	srli	r2,r4,16
 40018c8:	2008943a 	slli	r4,r4,16
 40018cc:	297fffcc 	andi	r5,r5,65535
 40018d0:	10c7883a 	add	r3,r2,r3
 40018d4:	2149883a 	add	r4,r4,r5
 40018d8:	90c0a536 	bltu	r18,r3,4001b70 <__divdf3+0x6e4>
 40018dc:	90c0bf26 	beq	r18,r3,4001bdc <__divdf3+0x750>
 40018e0:	90c7c83a 	sub	r3,r18,r3
 40018e4:	810fc83a 	sub	r7,r16,r4
 40018e8:	81e5803a 	cmpltu	r18,r16,r7
 40018ec:	1ca5c83a 	sub	r18,r3,r18
 40018f0:	e480c126 	beq	fp,r18,4001bf8 <__divdf3+0x76c>
 40018f4:	a00b883a 	mov	r5,r20
 40018f8:	9009883a 	mov	r4,r18
 40018fc:	d9800315 	stw	r6,12(sp)
 4001900:	d9c00215 	stw	r7,8(sp)
 4001904:	da400115 	stw	r9,4(sp)
 4001908:	40009800 	call	4000980 <__udivsi3>
 400190c:	a00b883a 	mov	r5,r20
 4001910:	9009883a 	mov	r4,r18
 4001914:	d8800015 	stw	r2,0(sp)
 4001918:	40009e40 	call	40009e4 <__umodsi3>
 400191c:	d9c00217 	ldw	r7,8(sp)
 4001920:	da000017 	ldw	r8,0(sp)
 4001924:	1006943a 	slli	r3,r2,16
 4001928:	3804d43a 	srli	r2,r7,16
 400192c:	ba21383a 	mul	r16,r23,r8
 4001930:	d9800317 	ldw	r6,12(sp)
 4001934:	10c4b03a 	or	r2,r2,r3
 4001938:	da400117 	ldw	r9,4(sp)
 400193c:	1400062e 	bgeu	r2,r16,4001958 <__divdf3+0x4cc>
 4001940:	1705883a 	add	r2,r2,fp
 4001944:	40ffffc4 	addi	r3,r8,-1
 4001948:	1700ad36 	bltu	r2,fp,4001c00 <__divdf3+0x774>
 400194c:	1400ac2e 	bgeu	r2,r16,4001c00 <__divdf3+0x774>
 4001950:	423fff84 	addi	r8,r8,-2
 4001954:	1705883a 	add	r2,r2,fp
 4001958:	1421c83a 	sub	r16,r2,r16
 400195c:	a00b883a 	mov	r5,r20
 4001960:	8009883a 	mov	r4,r16
 4001964:	d9800315 	stw	r6,12(sp)
 4001968:	d9c00215 	stw	r7,8(sp)
 400196c:	da000015 	stw	r8,0(sp)
 4001970:	da400115 	stw	r9,4(sp)
 4001974:	40009800 	call	4000980 <__udivsi3>
 4001978:	8009883a 	mov	r4,r16
 400197c:	a00b883a 	mov	r5,r20
 4001980:	1025883a 	mov	r18,r2
 4001984:	40009e40 	call	40009e4 <__umodsi3>
 4001988:	d9c00217 	ldw	r7,8(sp)
 400198c:	1004943a 	slli	r2,r2,16
 4001990:	bcaf383a 	mul	r23,r23,r18
 4001994:	393fffcc 	andi	r4,r7,65535
 4001998:	2088b03a 	or	r4,r4,r2
 400199c:	d9800317 	ldw	r6,12(sp)
 40019a0:	da000017 	ldw	r8,0(sp)
 40019a4:	da400117 	ldw	r9,4(sp)
 40019a8:	25c0062e 	bgeu	r4,r23,40019c4 <__divdf3+0x538>
 40019ac:	2709883a 	add	r4,r4,fp
 40019b0:	90bfffc4 	addi	r2,r18,-1
 40019b4:	27009436 	bltu	r4,fp,4001c08 <__divdf3+0x77c>
 40019b8:	25c0932e 	bgeu	r4,r23,4001c08 <__divdf3+0x77c>
 40019bc:	94bfff84 	addi	r18,r18,-2
 40019c0:	2709883a 	add	r4,r4,fp
 40019c4:	4004943a 	slli	r2,r8,16
 40019c8:	25efc83a 	sub	r23,r4,r23
 40019cc:	1490b03a 	or	r8,r2,r18
 40019d0:	4008d43a 	srli	r4,r8,16
 40019d4:	40ffffcc 	andi	r3,r8,65535
 40019d8:	30c5383a 	mul	r2,r6,r3
 40019dc:	1a47383a 	mul	r3,r3,r9
 40019e0:	310d383a 	mul	r6,r6,r4
 40019e4:	100ad43a 	srli	r5,r2,16
 40019e8:	4913383a 	mul	r9,r9,r4
 40019ec:	1987883a 	add	r3,r3,r6
 40019f0:	28c7883a 	add	r3,r5,r3
 40019f4:	1980022e 	bgeu	r3,r6,4001a00 <__divdf3+0x574>
 40019f8:	01000074 	movhi	r4,1
 40019fc:	4913883a 	add	r9,r9,r4
 4001a00:	1808d43a 	srli	r4,r3,16
 4001a04:	1806943a 	slli	r3,r3,16
 4001a08:	10bfffcc 	andi	r2,r2,65535
 4001a0c:	2253883a 	add	r9,r4,r9
 4001a10:	1887883a 	add	r3,r3,r2
 4001a14:	ba403836 	bltu	r23,r9,4001af8 <__divdf3+0x66c>
 4001a18:	ba403626 	beq	r23,r9,4001af4 <__divdf3+0x668>
 4001a1c:	42000054 	ori	r8,r8,1
 4001a20:	a880ffc4 	addi	r2,r21,1023
 4001a24:	00bf570e 	bge	zero,r2,4001784 <__alt_data_end+0xfbff9784>
 4001a28:	40c001cc 	andi	r3,r8,7
 4001a2c:	18000726 	beq	r3,zero,4001a4c <__divdf3+0x5c0>
 4001a30:	40c003cc 	andi	r3,r8,15
 4001a34:	01000104 	movi	r4,4
 4001a38:	19000426 	beq	r3,r4,4001a4c <__divdf3+0x5c0>
 4001a3c:	4107883a 	add	r3,r8,r4
 4001a40:	1a11803a 	cmpltu	r8,r3,r8
 4001a44:	8a23883a 	add	r17,r17,r8
 4001a48:	1811883a 	mov	r8,r3
 4001a4c:	88c0402c 	andhi	r3,r17,256
 4001a50:	18000426 	beq	r3,zero,4001a64 <__divdf3+0x5d8>
 4001a54:	00ffc034 	movhi	r3,65280
 4001a58:	18ffffc4 	addi	r3,r3,-1
 4001a5c:	a8810004 	addi	r2,r21,1024
 4001a60:	88e2703a 	and	r17,r17,r3
 4001a64:	00c1ff84 	movi	r3,2046
 4001a68:	18bee316 	blt	r3,r2,40015f8 <__alt_data_end+0xfbff95f8>
 4001a6c:	8824977a 	slli	r18,r17,29
 4001a70:	4010d0fa 	srli	r8,r8,3
 4001a74:	8822927a 	slli	r17,r17,9
 4001a78:	1081ffcc 	andi	r2,r2,2047
 4001a7c:	9224b03a 	or	r18,r18,r8
 4001a80:	880ad33a 	srli	r5,r17,12
 4001a84:	98c0004c 	andi	r3,r19,1
 4001a88:	003edf06 	br	4001608 <__alt_data_end+0xfbff9608>
 4001a8c:	8080022c 	andhi	r2,r16,8
 4001a90:	10001226 	beq	r2,zero,4001adc <__divdf3+0x650>
 4001a94:	8880022c 	andhi	r2,r17,8
 4001a98:	1000101e 	bne	r2,zero,4001adc <__divdf3+0x650>
 4001a9c:	00800434 	movhi	r2,16
 4001aa0:	89400234 	orhi	r5,r17,8
 4001aa4:	10bfffc4 	addi	r2,r2,-1
 4001aa8:	b007883a 	mov	r3,r22
 4001aac:	288a703a 	and	r5,r5,r2
 4001ab0:	4025883a 	mov	r18,r8
 4001ab4:	003f3106 	br	400177c <__alt_data_end+0xfbff977c>
 4001ab8:	008000c4 	movi	r2,3
 4001abc:	3880a626 	beq	r7,r2,4001d58 <__divdf3+0x8cc>
 4001ac0:	00800044 	movi	r2,1
 4001ac4:	3880521e 	bne	r7,r2,4001c10 <__divdf3+0x784>
 4001ac8:	b807883a 	mov	r3,r23
 4001acc:	0005883a 	mov	r2,zero
 4001ad0:	000b883a 	mov	r5,zero
 4001ad4:	0025883a 	mov	r18,zero
 4001ad8:	003ecb06 	br	4001608 <__alt_data_end+0xfbff9608>
 4001adc:	00800434 	movhi	r2,16
 4001ae0:	81400234 	orhi	r5,r16,8
 4001ae4:	10bfffc4 	addi	r2,r2,-1
 4001ae8:	a007883a 	mov	r3,r20
 4001aec:	288a703a 	and	r5,r5,r2
 4001af0:	003f2206 	br	400177c <__alt_data_end+0xfbff977c>
 4001af4:	183fca26 	beq	r3,zero,4001a20 <__alt_data_end+0xfbff9a20>
 4001af8:	e5ef883a 	add	r23,fp,r23
 4001afc:	40bfffc4 	addi	r2,r8,-1
 4001b00:	bf00392e 	bgeu	r23,fp,4001be8 <__divdf3+0x75c>
 4001b04:	1011883a 	mov	r8,r2
 4001b08:	ba7fc41e 	bne	r23,r9,4001a1c <__alt_data_end+0xfbff9a1c>
 4001b0c:	b0ffc31e 	bne	r22,r3,4001a1c <__alt_data_end+0xfbff9a1c>
 4001b10:	003fc306 	br	4001a20 <__alt_data_end+0xfbff9a20>
 4001b14:	143ff604 	addi	r16,r2,-40
 4001b18:	9c20983a 	sll	r16,r19,r16
 4001b1c:	0025883a 	mov	r18,zero
 4001b20:	003ee206 	br	40016ac <__alt_data_end+0xfbff96ac>
 4001b24:	d9800315 	stw	r6,12(sp)
 4001b28:	d9c00215 	stw	r7,8(sp)
 4001b2c:	400259c0 	call	400259c <__clzsi2>
 4001b30:	10800804 	addi	r2,r2,32
 4001b34:	d9c00217 	ldw	r7,8(sp)
 4001b38:	d9800317 	ldw	r6,12(sp)
 4001b3c:	003ed106 	br	4001684 <__alt_data_end+0xfbff9684>
 4001b40:	147ff604 	addi	r17,r2,-40
 4001b44:	3462983a 	sll	r17,r6,r17
 4001b48:	0011883a 	mov	r8,zero
 4001b4c:	003ef506 	br	4001724 <__alt_data_end+0xfbff9724>
 4001b50:	3009883a 	mov	r4,r6
 4001b54:	d9800315 	stw	r6,12(sp)
 4001b58:	da400115 	stw	r9,4(sp)
 4001b5c:	400259c0 	call	400259c <__clzsi2>
 4001b60:	10800804 	addi	r2,r2,32
 4001b64:	da400117 	ldw	r9,4(sp)
 4001b68:	d9800317 	ldw	r6,12(sp)
 4001b6c:	003ee306 	br	40016fc <__alt_data_end+0xfbff96fc>
 4001b70:	85a1883a 	add	r16,r16,r22
 4001b74:	8585803a 	cmpltu	r2,r16,r22
 4001b78:	1705883a 	add	r2,r2,fp
 4001b7c:	14a5883a 	add	r18,r2,r18
 4001b80:	88bfffc4 	addi	r2,r17,-1
 4001b84:	e4800c2e 	bgeu	fp,r18,4001bb8 <__divdf3+0x72c>
 4001b88:	90c03e36 	bltu	r18,r3,4001c84 <__divdf3+0x7f8>
 4001b8c:	1c806926 	beq	r3,r18,4001d34 <__divdf3+0x8a8>
 4001b90:	90c7c83a 	sub	r3,r18,r3
 4001b94:	1023883a 	mov	r17,r2
 4001b98:	003f5206 	br	40018e4 <__alt_data_end+0xfbff98e4>
 4001b9c:	923f0436 	bltu	r18,r8,40017b0 <__alt_data_end+0xfbff97b0>
 4001ba0:	800897fa 	slli	r4,r16,31
 4001ba4:	9004d07a 	srli	r2,r18,1
 4001ba8:	8006d07a 	srli	r3,r16,1
 4001bac:	902097fa 	slli	r16,r18,31
 4001bb0:	20a4b03a 	or	r18,r4,r2
 4001bb4:	003f0106 	br	40017bc <__alt_data_end+0xfbff97bc>
 4001bb8:	e4bff51e 	bne	fp,r18,4001b90 <__alt_data_end+0xfbff9b90>
 4001bbc:	85bff22e 	bgeu	r16,r22,4001b88 <__alt_data_end+0xfbff9b88>
 4001bc0:	e0c7c83a 	sub	r3,fp,r3
 4001bc4:	1023883a 	mov	r17,r2
 4001bc8:	003f4606 	br	40018e4 <__alt_data_end+0xfbff98e4>
 4001bcc:	100f883a 	mov	r7,r2
 4001bd0:	003f2b06 	br	4001880 <__alt_data_end+0xfbff9880>
 4001bd4:	180d883a 	mov	r6,r3
 4001bd8:	003f1306 	br	4001828 <__alt_data_end+0xfbff9828>
 4001bdc:	813fe436 	bltu	r16,r4,4001b70 <__alt_data_end+0xfbff9b70>
 4001be0:	0007883a 	mov	r3,zero
 4001be4:	003f3f06 	br	40018e4 <__alt_data_end+0xfbff98e4>
 4001be8:	ba402c36 	bltu	r23,r9,4001c9c <__divdf3+0x810>
 4001bec:	4dc05426 	beq	r9,r23,4001d40 <__divdf3+0x8b4>
 4001bf0:	1011883a 	mov	r8,r2
 4001bf4:	003f8906 	br	4001a1c <__alt_data_end+0xfbff9a1c>
 4001bf8:	023fffc4 	movi	r8,-1
 4001bfc:	003f8806 	br	4001a20 <__alt_data_end+0xfbff9a20>
 4001c00:	1811883a 	mov	r8,r3
 4001c04:	003f5406 	br	4001958 <__alt_data_end+0xfbff9958>
 4001c08:	1025883a 	mov	r18,r2
 4001c0c:	003f6d06 	br	40019c4 <__alt_data_end+0xfbff99c4>
 4001c10:	b827883a 	mov	r19,r23
 4001c14:	003f8206 	br	4001a20 <__alt_data_end+0xfbff9a20>
 4001c18:	010007c4 	movi	r4,31
 4001c1c:	20c02616 	blt	r4,r3,4001cb8 <__divdf3+0x82c>
 4001c20:	00800804 	movi	r2,32
 4001c24:	10c5c83a 	sub	r2,r2,r3
 4001c28:	888a983a 	sll	r5,r17,r2
 4001c2c:	40c8d83a 	srl	r4,r8,r3
 4001c30:	4084983a 	sll	r2,r8,r2
 4001c34:	88e2d83a 	srl	r17,r17,r3
 4001c38:	2906b03a 	or	r3,r5,r4
 4001c3c:	1004c03a 	cmpne	r2,r2,zero
 4001c40:	1886b03a 	or	r3,r3,r2
 4001c44:	188001cc 	andi	r2,r3,7
 4001c48:	10000726 	beq	r2,zero,4001c68 <__divdf3+0x7dc>
 4001c4c:	188003cc 	andi	r2,r3,15
 4001c50:	01000104 	movi	r4,4
 4001c54:	11000426 	beq	r2,r4,4001c68 <__divdf3+0x7dc>
 4001c58:	1805883a 	mov	r2,r3
 4001c5c:	10c00104 	addi	r3,r2,4
 4001c60:	1885803a 	cmpltu	r2,r3,r2
 4001c64:	88a3883a 	add	r17,r17,r2
 4001c68:	8880202c 	andhi	r2,r17,128
 4001c6c:	10002726 	beq	r2,zero,4001d0c <__divdf3+0x880>
 4001c70:	98c0004c 	andi	r3,r19,1
 4001c74:	00800044 	movi	r2,1
 4001c78:	000b883a 	mov	r5,zero
 4001c7c:	0025883a 	mov	r18,zero
 4001c80:	003e6106 	br	4001608 <__alt_data_end+0xfbff9608>
 4001c84:	85a1883a 	add	r16,r16,r22
 4001c88:	8585803a 	cmpltu	r2,r16,r22
 4001c8c:	1705883a 	add	r2,r2,fp
 4001c90:	14a5883a 	add	r18,r2,r18
 4001c94:	8c7fff84 	addi	r17,r17,-2
 4001c98:	003f1106 	br	40018e0 <__alt_data_end+0xfbff98e0>
 4001c9c:	b589883a 	add	r4,r22,r22
 4001ca0:	25ad803a 	cmpltu	r22,r4,r22
 4001ca4:	b739883a 	add	fp,r22,fp
 4001ca8:	40bfff84 	addi	r2,r8,-2
 4001cac:	bf2f883a 	add	r23,r23,fp
 4001cb0:	202d883a 	mov	r22,r4
 4001cb4:	003f9306 	br	4001b04 <__alt_data_end+0xfbff9b04>
 4001cb8:	013ff844 	movi	r4,-31
 4001cbc:	2085c83a 	sub	r2,r4,r2
 4001cc0:	8888d83a 	srl	r4,r17,r2
 4001cc4:	00800804 	movi	r2,32
 4001cc8:	18802126 	beq	r3,r2,4001d50 <__divdf3+0x8c4>
 4001ccc:	00801004 	movi	r2,64
 4001cd0:	10c5c83a 	sub	r2,r2,r3
 4001cd4:	8884983a 	sll	r2,r17,r2
 4001cd8:	1204b03a 	or	r2,r2,r8
 4001cdc:	1004c03a 	cmpne	r2,r2,zero
 4001ce0:	2084b03a 	or	r2,r4,r2
 4001ce4:	144001cc 	andi	r17,r2,7
 4001ce8:	88000d1e 	bne	r17,zero,4001d20 <__divdf3+0x894>
 4001cec:	000b883a 	mov	r5,zero
 4001cf0:	1024d0fa 	srli	r18,r2,3
 4001cf4:	98c0004c 	andi	r3,r19,1
 4001cf8:	0005883a 	mov	r2,zero
 4001cfc:	9464b03a 	or	r18,r18,r17
 4001d00:	003e4106 	br	4001608 <__alt_data_end+0xfbff9608>
 4001d04:	1007883a 	mov	r3,r2
 4001d08:	0023883a 	mov	r17,zero
 4001d0c:	880a927a 	slli	r5,r17,9
 4001d10:	1805883a 	mov	r2,r3
 4001d14:	8822977a 	slli	r17,r17,29
 4001d18:	280ad33a 	srli	r5,r5,12
 4001d1c:	003ff406 	br	4001cf0 <__alt_data_end+0xfbff9cf0>
 4001d20:	10c003cc 	andi	r3,r2,15
 4001d24:	01000104 	movi	r4,4
 4001d28:	193ff626 	beq	r3,r4,4001d04 <__alt_data_end+0xfbff9d04>
 4001d2c:	0023883a 	mov	r17,zero
 4001d30:	003fca06 	br	4001c5c <__alt_data_end+0xfbff9c5c>
 4001d34:	813fd336 	bltu	r16,r4,4001c84 <__alt_data_end+0xfbff9c84>
 4001d38:	1023883a 	mov	r17,r2
 4001d3c:	003fa806 	br	4001be0 <__alt_data_end+0xfbff9be0>
 4001d40:	b0ffd636 	bltu	r22,r3,4001c9c <__alt_data_end+0xfbff9c9c>
 4001d44:	1011883a 	mov	r8,r2
 4001d48:	b0ff341e 	bne	r22,r3,4001a1c <__alt_data_end+0xfbff9a1c>
 4001d4c:	003f3406 	br	4001a20 <__alt_data_end+0xfbff9a20>
 4001d50:	0005883a 	mov	r2,zero
 4001d54:	003fe006 	br	4001cd8 <__alt_data_end+0xfbff9cd8>
 4001d58:	00800434 	movhi	r2,16
 4001d5c:	89400234 	orhi	r5,r17,8
 4001d60:	10bfffc4 	addi	r2,r2,-1
 4001d64:	b807883a 	mov	r3,r23
 4001d68:	288a703a 	and	r5,r5,r2
 4001d6c:	4025883a 	mov	r18,r8
 4001d70:	003e8206 	br	400177c <__alt_data_end+0xfbff977c>

04001d74 <__muldf3>:
 4001d74:	defff304 	addi	sp,sp,-52
 4001d78:	2804d53a 	srli	r2,r5,20
 4001d7c:	dd800915 	stw	r22,36(sp)
 4001d80:	282cd7fa 	srli	r22,r5,31
 4001d84:	dc000315 	stw	r16,12(sp)
 4001d88:	04000434 	movhi	r16,16
 4001d8c:	dd400815 	stw	r21,32(sp)
 4001d90:	dc800515 	stw	r18,20(sp)
 4001d94:	843fffc4 	addi	r16,r16,-1
 4001d98:	dfc00c15 	stw	ra,48(sp)
 4001d9c:	df000b15 	stw	fp,44(sp)
 4001da0:	ddc00a15 	stw	r23,40(sp)
 4001da4:	dd000715 	stw	r20,28(sp)
 4001da8:	dcc00615 	stw	r19,24(sp)
 4001dac:	dc400415 	stw	r17,16(sp)
 4001db0:	1481ffcc 	andi	r18,r2,2047
 4001db4:	2c20703a 	and	r16,r5,r16
 4001db8:	b02b883a 	mov	r21,r22
 4001dbc:	b2403fcc 	andi	r9,r22,255
 4001dc0:	90006026 	beq	r18,zero,4001f44 <__muldf3+0x1d0>
 4001dc4:	0081ffc4 	movi	r2,2047
 4001dc8:	2029883a 	mov	r20,r4
 4001dcc:	90803626 	beq	r18,r2,4001ea8 <__muldf3+0x134>
 4001dd0:	80800434 	orhi	r2,r16,16
 4001dd4:	100490fa 	slli	r2,r2,3
 4001dd8:	2020d77a 	srli	r16,r4,29
 4001ddc:	202890fa 	slli	r20,r4,3
 4001de0:	94bf0044 	addi	r18,r18,-1023
 4001de4:	80a0b03a 	or	r16,r16,r2
 4001de8:	0027883a 	mov	r19,zero
 4001dec:	0039883a 	mov	fp,zero
 4001df0:	3804d53a 	srli	r2,r7,20
 4001df4:	382ed7fa 	srli	r23,r7,31
 4001df8:	04400434 	movhi	r17,16
 4001dfc:	8c7fffc4 	addi	r17,r17,-1
 4001e00:	1081ffcc 	andi	r2,r2,2047
 4001e04:	3011883a 	mov	r8,r6
 4001e08:	3c62703a 	and	r17,r7,r17
 4001e0c:	ba803fcc 	andi	r10,r23,255
 4001e10:	10006d26 	beq	r2,zero,4001fc8 <__muldf3+0x254>
 4001e14:	00c1ffc4 	movi	r3,2047
 4001e18:	10c06526 	beq	r2,r3,4001fb0 <__muldf3+0x23c>
 4001e1c:	88c00434 	orhi	r3,r17,16
 4001e20:	180690fa 	slli	r3,r3,3
 4001e24:	3022d77a 	srli	r17,r6,29
 4001e28:	301090fa 	slli	r8,r6,3
 4001e2c:	10bf0044 	addi	r2,r2,-1023
 4001e30:	88e2b03a 	or	r17,r17,r3
 4001e34:	000b883a 	mov	r5,zero
 4001e38:	9085883a 	add	r2,r18,r2
 4001e3c:	2cc8b03a 	or	r4,r5,r19
 4001e40:	00c003c4 	movi	r3,15
 4001e44:	bdacf03a 	xor	r22,r23,r22
 4001e48:	12c00044 	addi	r11,r2,1
 4001e4c:	19009936 	bltu	r3,r4,40020b4 <__muldf3+0x340>
 4001e50:	200890ba 	slli	r4,r4,2
 4001e54:	00c10034 	movhi	r3,1024
 4001e58:	18c79a04 	addi	r3,r3,7784
 4001e5c:	20c9883a 	add	r4,r4,r3
 4001e60:	20c00017 	ldw	r3,0(r4)
 4001e64:	1800683a 	jmp	r3
 4001e68:	040020b4 	movhi	r16,130
 4001e6c:	04001ec8 	cmpgei	r16,zero,123
 4001e70:	04001ec8 	cmpgei	r16,zero,123
 4001e74:	04001ec4 	movi	r16,123
 4001e78:	04002090 	cmplti	r16,zero,130
 4001e7c:	04002090 	cmplti	r16,zero,130
 4001e80:	04002078 	rdprs	r16,zero,129
 4001e84:	04001ec4 	movi	r16,123
 4001e88:	04002090 	cmplti	r16,zero,130
 4001e8c:	04002078 	rdprs	r16,zero,129
 4001e90:	04002090 	cmplti	r16,zero,130
 4001e94:	04001ec4 	movi	r16,123
 4001e98:	040020a0 	cmpeqi	r16,zero,130
 4001e9c:	040020a0 	cmpeqi	r16,zero,130
 4001ea0:	040020a0 	cmpeqi	r16,zero,130
 4001ea4:	040022bc 	xorhi	r16,zero,138
 4001ea8:	2404b03a 	or	r2,r4,r16
 4001eac:	10006f1e 	bne	r2,zero,400206c <__muldf3+0x2f8>
 4001eb0:	04c00204 	movi	r19,8
 4001eb4:	0021883a 	mov	r16,zero
 4001eb8:	0029883a 	mov	r20,zero
 4001ebc:	07000084 	movi	fp,2
 4001ec0:	003fcb06 	br	4001df0 <__alt_data_end+0xfbff9df0>
 4001ec4:	502d883a 	mov	r22,r10
 4001ec8:	00800084 	movi	r2,2
 4001ecc:	28805726 	beq	r5,r2,400202c <__muldf3+0x2b8>
 4001ed0:	008000c4 	movi	r2,3
 4001ed4:	28816626 	beq	r5,r2,4002470 <__muldf3+0x6fc>
 4001ed8:	00800044 	movi	r2,1
 4001edc:	2881411e 	bne	r5,r2,40023e4 <__muldf3+0x670>
 4001ee0:	b02b883a 	mov	r21,r22
 4001ee4:	0005883a 	mov	r2,zero
 4001ee8:	000b883a 	mov	r5,zero
 4001eec:	0029883a 	mov	r20,zero
 4001ef0:	1004953a 	slli	r2,r2,20
 4001ef4:	a8c03fcc 	andi	r3,r21,255
 4001ef8:	04400434 	movhi	r17,16
 4001efc:	8c7fffc4 	addi	r17,r17,-1
 4001f00:	180697fa 	slli	r3,r3,31
 4001f04:	2c4a703a 	and	r5,r5,r17
 4001f08:	288ab03a 	or	r5,r5,r2
 4001f0c:	28c6b03a 	or	r3,r5,r3
 4001f10:	a005883a 	mov	r2,r20
 4001f14:	dfc00c17 	ldw	ra,48(sp)
 4001f18:	df000b17 	ldw	fp,44(sp)
 4001f1c:	ddc00a17 	ldw	r23,40(sp)
 4001f20:	dd800917 	ldw	r22,36(sp)
 4001f24:	dd400817 	ldw	r21,32(sp)
 4001f28:	dd000717 	ldw	r20,28(sp)
 4001f2c:	dcc00617 	ldw	r19,24(sp)
 4001f30:	dc800517 	ldw	r18,20(sp)
 4001f34:	dc400417 	ldw	r17,16(sp)
 4001f38:	dc000317 	ldw	r16,12(sp)
 4001f3c:	dec00d04 	addi	sp,sp,52
 4001f40:	f800283a 	ret
 4001f44:	2404b03a 	or	r2,r4,r16
 4001f48:	2027883a 	mov	r19,r4
 4001f4c:	10004226 	beq	r2,zero,4002058 <__muldf3+0x2e4>
 4001f50:	8000fc26 	beq	r16,zero,4002344 <__muldf3+0x5d0>
 4001f54:	8009883a 	mov	r4,r16
 4001f58:	d9800215 	stw	r6,8(sp)
 4001f5c:	d9c00015 	stw	r7,0(sp)
 4001f60:	da400115 	stw	r9,4(sp)
 4001f64:	400259c0 	call	400259c <__clzsi2>
 4001f68:	d9800217 	ldw	r6,8(sp)
 4001f6c:	d9c00017 	ldw	r7,0(sp)
 4001f70:	da400117 	ldw	r9,4(sp)
 4001f74:	113ffd44 	addi	r4,r2,-11
 4001f78:	00c00704 	movi	r3,28
 4001f7c:	1900ed16 	blt	r3,r4,4002334 <__muldf3+0x5c0>
 4001f80:	00c00744 	movi	r3,29
 4001f84:	147ffe04 	addi	r17,r2,-8
 4001f88:	1907c83a 	sub	r3,r3,r4
 4001f8c:	8460983a 	sll	r16,r16,r17
 4001f90:	98c6d83a 	srl	r3,r19,r3
 4001f94:	9c68983a 	sll	r20,r19,r17
 4001f98:	1c20b03a 	or	r16,r3,r16
 4001f9c:	1080fcc4 	addi	r2,r2,1011
 4001fa0:	00a5c83a 	sub	r18,zero,r2
 4001fa4:	0027883a 	mov	r19,zero
 4001fa8:	0039883a 	mov	fp,zero
 4001fac:	003f9006 	br	4001df0 <__alt_data_end+0xfbff9df0>
 4001fb0:	3446b03a 	or	r3,r6,r17
 4001fb4:	1800261e 	bne	r3,zero,4002050 <__muldf3+0x2dc>
 4001fb8:	0023883a 	mov	r17,zero
 4001fbc:	0011883a 	mov	r8,zero
 4001fc0:	01400084 	movi	r5,2
 4001fc4:	003f9c06 	br	4001e38 <__alt_data_end+0xfbff9e38>
 4001fc8:	3446b03a 	or	r3,r6,r17
 4001fcc:	18001c26 	beq	r3,zero,4002040 <__muldf3+0x2cc>
 4001fd0:	8800ce26 	beq	r17,zero,400230c <__muldf3+0x598>
 4001fd4:	8809883a 	mov	r4,r17
 4001fd8:	d9800215 	stw	r6,8(sp)
 4001fdc:	da400115 	stw	r9,4(sp)
 4001fe0:	da800015 	stw	r10,0(sp)
 4001fe4:	400259c0 	call	400259c <__clzsi2>
 4001fe8:	d9800217 	ldw	r6,8(sp)
 4001fec:	da400117 	ldw	r9,4(sp)
 4001ff0:	da800017 	ldw	r10,0(sp)
 4001ff4:	113ffd44 	addi	r4,r2,-11
 4001ff8:	00c00704 	movi	r3,28
 4001ffc:	1900bf16 	blt	r3,r4,40022fc <__muldf3+0x588>
 4002000:	00c00744 	movi	r3,29
 4002004:	123ffe04 	addi	r8,r2,-8
 4002008:	1907c83a 	sub	r3,r3,r4
 400200c:	8a22983a 	sll	r17,r17,r8
 4002010:	30c6d83a 	srl	r3,r6,r3
 4002014:	3210983a 	sll	r8,r6,r8
 4002018:	1c62b03a 	or	r17,r3,r17
 400201c:	1080fcc4 	addi	r2,r2,1011
 4002020:	0085c83a 	sub	r2,zero,r2
 4002024:	000b883a 	mov	r5,zero
 4002028:	003f8306 	br	4001e38 <__alt_data_end+0xfbff9e38>
 400202c:	b02b883a 	mov	r21,r22
 4002030:	0081ffc4 	movi	r2,2047
 4002034:	000b883a 	mov	r5,zero
 4002038:	0029883a 	mov	r20,zero
 400203c:	003fac06 	br	4001ef0 <__alt_data_end+0xfbff9ef0>
 4002040:	0023883a 	mov	r17,zero
 4002044:	0011883a 	mov	r8,zero
 4002048:	01400044 	movi	r5,1
 400204c:	003f7a06 	br	4001e38 <__alt_data_end+0xfbff9e38>
 4002050:	014000c4 	movi	r5,3
 4002054:	003f7806 	br	4001e38 <__alt_data_end+0xfbff9e38>
 4002058:	04c00104 	movi	r19,4
 400205c:	0021883a 	mov	r16,zero
 4002060:	0029883a 	mov	r20,zero
 4002064:	07000044 	movi	fp,1
 4002068:	003f6106 	br	4001df0 <__alt_data_end+0xfbff9df0>
 400206c:	04c00304 	movi	r19,12
 4002070:	070000c4 	movi	fp,3
 4002074:	003f5e06 	br	4001df0 <__alt_data_end+0xfbff9df0>
 4002078:	01400434 	movhi	r5,16
 400207c:	002b883a 	mov	r21,zero
 4002080:	297fffc4 	addi	r5,r5,-1
 4002084:	053fffc4 	movi	r20,-1
 4002088:	0081ffc4 	movi	r2,2047
 400208c:	003f9806 	br	4001ef0 <__alt_data_end+0xfbff9ef0>
 4002090:	8023883a 	mov	r17,r16
 4002094:	a011883a 	mov	r8,r20
 4002098:	e00b883a 	mov	r5,fp
 400209c:	003f8a06 	br	4001ec8 <__alt_data_end+0xfbff9ec8>
 40020a0:	8023883a 	mov	r17,r16
 40020a4:	a011883a 	mov	r8,r20
 40020a8:	482d883a 	mov	r22,r9
 40020ac:	e00b883a 	mov	r5,fp
 40020b0:	003f8506 	br	4001ec8 <__alt_data_end+0xfbff9ec8>
 40020b4:	a00ad43a 	srli	r5,r20,16
 40020b8:	401ad43a 	srli	r13,r8,16
 40020bc:	a53fffcc 	andi	r20,r20,65535
 40020c0:	423fffcc 	andi	r8,r8,65535
 40020c4:	4519383a 	mul	r12,r8,r20
 40020c8:	4147383a 	mul	r3,r8,r5
 40020cc:	6d09383a 	mul	r4,r13,r20
 40020d0:	600cd43a 	srli	r6,r12,16
 40020d4:	2b5d383a 	mul	r14,r5,r13
 40020d8:	20c9883a 	add	r4,r4,r3
 40020dc:	310d883a 	add	r6,r6,r4
 40020e0:	30c0022e 	bgeu	r6,r3,40020ec <__muldf3+0x378>
 40020e4:	00c00074 	movhi	r3,1
 40020e8:	70dd883a 	add	r14,r14,r3
 40020ec:	8826d43a 	srli	r19,r17,16
 40020f0:	8bffffcc 	andi	r15,r17,65535
 40020f4:	7d23383a 	mul	r17,r15,r20
 40020f8:	7949383a 	mul	r4,r15,r5
 40020fc:	9d29383a 	mul	r20,r19,r20
 4002100:	8814d43a 	srli	r10,r17,16
 4002104:	3012943a 	slli	r9,r6,16
 4002108:	a129883a 	add	r20,r20,r4
 400210c:	633fffcc 	andi	r12,r12,65535
 4002110:	5515883a 	add	r10,r10,r20
 4002114:	3006d43a 	srli	r3,r6,16
 4002118:	4b13883a 	add	r9,r9,r12
 400211c:	2ccb383a 	mul	r5,r5,r19
 4002120:	5100022e 	bgeu	r10,r4,400212c <__muldf3+0x3b8>
 4002124:	01000074 	movhi	r4,1
 4002128:	290b883a 	add	r5,r5,r4
 400212c:	802ad43a 	srli	r21,r16,16
 4002130:	843fffcc 	andi	r16,r16,65535
 4002134:	440d383a 	mul	r6,r8,r16
 4002138:	4565383a 	mul	r18,r8,r21
 400213c:	8349383a 	mul	r4,r16,r13
 4002140:	500e943a 	slli	r7,r10,16
 4002144:	3010d43a 	srli	r8,r6,16
 4002148:	5028d43a 	srli	r20,r10,16
 400214c:	2489883a 	add	r4,r4,r18
 4002150:	8abfffcc 	andi	r10,r17,65535
 4002154:	3a95883a 	add	r10,r7,r10
 4002158:	4119883a 	add	r12,r8,r4
 400215c:	a169883a 	add	r20,r20,r5
 4002160:	1a87883a 	add	r3,r3,r10
 4002164:	6d5b383a 	mul	r13,r13,r21
 4002168:	6480022e 	bgeu	r12,r18,4002174 <__muldf3+0x400>
 400216c:	01000074 	movhi	r4,1
 4002170:	691b883a 	add	r13,r13,r4
 4002174:	7c25383a 	mul	r18,r15,r16
 4002178:	7d4b383a 	mul	r5,r15,r21
 400217c:	84cf383a 	mul	r7,r16,r19
 4002180:	901ed43a 	srli	r15,r18,16
 4002184:	6008d43a 	srli	r4,r12,16
 4002188:	6010943a 	slli	r8,r12,16
 400218c:	394f883a 	add	r7,r7,r5
 4002190:	333fffcc 	andi	r12,r6,65535
 4002194:	79df883a 	add	r15,r15,r7
 4002198:	235b883a 	add	r13,r4,r13
 400219c:	9d63383a 	mul	r17,r19,r21
 40021a0:	4309883a 	add	r4,r8,r12
 40021a4:	7940022e 	bgeu	r15,r5,40021b0 <__muldf3+0x43c>
 40021a8:	01400074 	movhi	r5,1
 40021ac:	8963883a 	add	r17,r17,r5
 40021b0:	780a943a 	slli	r5,r15,16
 40021b4:	91bfffcc 	andi	r6,r18,65535
 40021b8:	70c7883a 	add	r3,r14,r3
 40021bc:	298d883a 	add	r6,r5,r6
 40021c0:	1a8f803a 	cmpltu	r7,r3,r10
 40021c4:	350b883a 	add	r5,r6,r20
 40021c8:	20c7883a 	add	r3,r4,r3
 40021cc:	3955883a 	add	r10,r7,r5
 40021d0:	1909803a 	cmpltu	r4,r3,r4
 40021d4:	6a91883a 	add	r8,r13,r10
 40021d8:	780cd43a 	srli	r6,r15,16
 40021dc:	2219883a 	add	r12,r4,r8
 40021e0:	2d0b803a 	cmpltu	r5,r5,r20
 40021e4:	51cf803a 	cmpltu	r7,r10,r7
 40021e8:	29ceb03a 	or	r7,r5,r7
 40021ec:	4351803a 	cmpltu	r8,r8,r13
 40021f0:	610b803a 	cmpltu	r5,r12,r4
 40021f4:	4148b03a 	or	r4,r8,r5
 40021f8:	398f883a 	add	r7,r7,r6
 40021fc:	3909883a 	add	r4,r7,r4
 4002200:	1810927a 	slli	r8,r3,9
 4002204:	2449883a 	add	r4,r4,r17
 4002208:	2008927a 	slli	r4,r4,9
 400220c:	6022d5fa 	srli	r17,r12,23
 4002210:	1806d5fa 	srli	r3,r3,23
 4002214:	4252b03a 	or	r9,r8,r9
 4002218:	600a927a 	slli	r5,r12,9
 400221c:	4810c03a 	cmpne	r8,r9,zero
 4002220:	2462b03a 	or	r17,r4,r17
 4002224:	40c6b03a 	or	r3,r8,r3
 4002228:	8900402c 	andhi	r4,r17,256
 400222c:	1950b03a 	or	r8,r3,r5
 4002230:	20000726 	beq	r4,zero,4002250 <__muldf3+0x4dc>
 4002234:	4006d07a 	srli	r3,r8,1
 4002238:	880497fa 	slli	r2,r17,31
 400223c:	4200004c 	andi	r8,r8,1
 4002240:	8822d07a 	srli	r17,r17,1
 4002244:	1a10b03a 	or	r8,r3,r8
 4002248:	1210b03a 	or	r8,r2,r8
 400224c:	5805883a 	mov	r2,r11
 4002250:	1140ffc4 	addi	r5,r2,1023
 4002254:	0140440e 	bge	zero,r5,4002368 <__muldf3+0x5f4>
 4002258:	40c001cc 	andi	r3,r8,7
 400225c:	18000726 	beq	r3,zero,400227c <__muldf3+0x508>
 4002260:	40c003cc 	andi	r3,r8,15
 4002264:	01000104 	movi	r4,4
 4002268:	19000426 	beq	r3,r4,400227c <__muldf3+0x508>
 400226c:	4107883a 	add	r3,r8,r4
 4002270:	1a11803a 	cmpltu	r8,r3,r8
 4002274:	8a23883a 	add	r17,r17,r8
 4002278:	1811883a 	mov	r8,r3
 400227c:	88c0402c 	andhi	r3,r17,256
 4002280:	18000426 	beq	r3,zero,4002294 <__muldf3+0x520>
 4002284:	11410004 	addi	r5,r2,1024
 4002288:	00bfc034 	movhi	r2,65280
 400228c:	10bfffc4 	addi	r2,r2,-1
 4002290:	88a2703a 	and	r17,r17,r2
 4002294:	0081ff84 	movi	r2,2046
 4002298:	117f6416 	blt	r2,r5,400202c <__alt_data_end+0xfbffa02c>
 400229c:	8828977a 	slli	r20,r17,29
 40022a0:	4010d0fa 	srli	r8,r8,3
 40022a4:	8822927a 	slli	r17,r17,9
 40022a8:	2881ffcc 	andi	r2,r5,2047
 40022ac:	a228b03a 	or	r20,r20,r8
 40022b0:	880ad33a 	srli	r5,r17,12
 40022b4:	b02b883a 	mov	r21,r22
 40022b8:	003f0d06 	br	4001ef0 <__alt_data_end+0xfbff9ef0>
 40022bc:	8080022c 	andhi	r2,r16,8
 40022c0:	10000926 	beq	r2,zero,40022e8 <__muldf3+0x574>
 40022c4:	8880022c 	andhi	r2,r17,8
 40022c8:	1000071e 	bne	r2,zero,40022e8 <__muldf3+0x574>
 40022cc:	00800434 	movhi	r2,16
 40022d0:	89400234 	orhi	r5,r17,8
 40022d4:	10bfffc4 	addi	r2,r2,-1
 40022d8:	b82b883a 	mov	r21,r23
 40022dc:	288a703a 	and	r5,r5,r2
 40022e0:	4029883a 	mov	r20,r8
 40022e4:	003f6806 	br	4002088 <__alt_data_end+0xfbffa088>
 40022e8:	00800434 	movhi	r2,16
 40022ec:	81400234 	orhi	r5,r16,8
 40022f0:	10bfffc4 	addi	r2,r2,-1
 40022f4:	288a703a 	and	r5,r5,r2
 40022f8:	003f6306 	br	4002088 <__alt_data_end+0xfbffa088>
 40022fc:	147ff604 	addi	r17,r2,-40
 4002300:	3462983a 	sll	r17,r6,r17
 4002304:	0011883a 	mov	r8,zero
 4002308:	003f4406 	br	400201c <__alt_data_end+0xfbffa01c>
 400230c:	3009883a 	mov	r4,r6
 4002310:	d9800215 	stw	r6,8(sp)
 4002314:	da400115 	stw	r9,4(sp)
 4002318:	da800015 	stw	r10,0(sp)
 400231c:	400259c0 	call	400259c <__clzsi2>
 4002320:	10800804 	addi	r2,r2,32
 4002324:	da800017 	ldw	r10,0(sp)
 4002328:	da400117 	ldw	r9,4(sp)
 400232c:	d9800217 	ldw	r6,8(sp)
 4002330:	003f3006 	br	4001ff4 <__alt_data_end+0xfbff9ff4>
 4002334:	143ff604 	addi	r16,r2,-40
 4002338:	9c20983a 	sll	r16,r19,r16
 400233c:	0029883a 	mov	r20,zero
 4002340:	003f1606 	br	4001f9c <__alt_data_end+0xfbff9f9c>
 4002344:	d9800215 	stw	r6,8(sp)
 4002348:	d9c00015 	stw	r7,0(sp)
 400234c:	da400115 	stw	r9,4(sp)
 4002350:	400259c0 	call	400259c <__clzsi2>
 4002354:	10800804 	addi	r2,r2,32
 4002358:	da400117 	ldw	r9,4(sp)
 400235c:	d9c00017 	ldw	r7,0(sp)
 4002360:	d9800217 	ldw	r6,8(sp)
 4002364:	003f0306 	br	4001f74 <__alt_data_end+0xfbff9f74>
 4002368:	00c00044 	movi	r3,1
 400236c:	1947c83a 	sub	r3,r3,r5
 4002370:	00800e04 	movi	r2,56
 4002374:	10feda16 	blt	r2,r3,4001ee0 <__alt_data_end+0xfbff9ee0>
 4002378:	008007c4 	movi	r2,31
 400237c:	10c01b16 	blt	r2,r3,40023ec <__muldf3+0x678>
 4002380:	00800804 	movi	r2,32
 4002384:	10c5c83a 	sub	r2,r2,r3
 4002388:	888a983a 	sll	r5,r17,r2
 400238c:	40c8d83a 	srl	r4,r8,r3
 4002390:	4084983a 	sll	r2,r8,r2
 4002394:	88e2d83a 	srl	r17,r17,r3
 4002398:	2906b03a 	or	r3,r5,r4
 400239c:	1004c03a 	cmpne	r2,r2,zero
 40023a0:	1886b03a 	or	r3,r3,r2
 40023a4:	188001cc 	andi	r2,r3,7
 40023a8:	10000726 	beq	r2,zero,40023c8 <__muldf3+0x654>
 40023ac:	188003cc 	andi	r2,r3,15
 40023b0:	01000104 	movi	r4,4
 40023b4:	11000426 	beq	r2,r4,40023c8 <__muldf3+0x654>
 40023b8:	1805883a 	mov	r2,r3
 40023bc:	10c00104 	addi	r3,r2,4
 40023c0:	1885803a 	cmpltu	r2,r3,r2
 40023c4:	88a3883a 	add	r17,r17,r2
 40023c8:	8880202c 	andhi	r2,r17,128
 40023cc:	10001c26 	beq	r2,zero,4002440 <__muldf3+0x6cc>
 40023d0:	b02b883a 	mov	r21,r22
 40023d4:	00800044 	movi	r2,1
 40023d8:	000b883a 	mov	r5,zero
 40023dc:	0029883a 	mov	r20,zero
 40023e0:	003ec306 	br	4001ef0 <__alt_data_end+0xfbff9ef0>
 40023e4:	5805883a 	mov	r2,r11
 40023e8:	003f9906 	br	4002250 <__alt_data_end+0xfbffa250>
 40023ec:	00bff844 	movi	r2,-31
 40023f0:	1145c83a 	sub	r2,r2,r5
 40023f4:	8888d83a 	srl	r4,r17,r2
 40023f8:	00800804 	movi	r2,32
 40023fc:	18801a26 	beq	r3,r2,4002468 <__muldf3+0x6f4>
 4002400:	00801004 	movi	r2,64
 4002404:	10c5c83a 	sub	r2,r2,r3
 4002408:	8884983a 	sll	r2,r17,r2
 400240c:	1204b03a 	or	r2,r2,r8
 4002410:	1004c03a 	cmpne	r2,r2,zero
 4002414:	2084b03a 	or	r2,r4,r2
 4002418:	144001cc 	andi	r17,r2,7
 400241c:	88000d1e 	bne	r17,zero,4002454 <__muldf3+0x6e0>
 4002420:	000b883a 	mov	r5,zero
 4002424:	1028d0fa 	srli	r20,r2,3
 4002428:	b02b883a 	mov	r21,r22
 400242c:	0005883a 	mov	r2,zero
 4002430:	a468b03a 	or	r20,r20,r17
 4002434:	003eae06 	br	4001ef0 <__alt_data_end+0xfbff9ef0>
 4002438:	1007883a 	mov	r3,r2
 400243c:	0023883a 	mov	r17,zero
 4002440:	880a927a 	slli	r5,r17,9
 4002444:	1805883a 	mov	r2,r3
 4002448:	8822977a 	slli	r17,r17,29
 400244c:	280ad33a 	srli	r5,r5,12
 4002450:	003ff406 	br	4002424 <__alt_data_end+0xfbffa424>
 4002454:	10c003cc 	andi	r3,r2,15
 4002458:	01000104 	movi	r4,4
 400245c:	193ff626 	beq	r3,r4,4002438 <__alt_data_end+0xfbffa438>
 4002460:	0023883a 	mov	r17,zero
 4002464:	003fd506 	br	40023bc <__alt_data_end+0xfbffa3bc>
 4002468:	0005883a 	mov	r2,zero
 400246c:	003fe706 	br	400240c <__alt_data_end+0xfbffa40c>
 4002470:	00800434 	movhi	r2,16
 4002474:	89400234 	orhi	r5,r17,8
 4002478:	10bfffc4 	addi	r2,r2,-1
 400247c:	b02b883a 	mov	r21,r22
 4002480:	288a703a 	and	r5,r5,r2
 4002484:	4029883a 	mov	r20,r8
 4002488:	003eff06 	br	4002088 <__alt_data_end+0xfbffa088>

0400248c <__extendsfdf2>:
 400248c:	200ad5fa 	srli	r5,r4,23
 4002490:	defffd04 	addi	sp,sp,-12
 4002494:	dc400115 	stw	r17,4(sp)
 4002498:	29403fcc 	andi	r5,r5,255
 400249c:	29800044 	addi	r6,r5,1
 40024a0:	04402034 	movhi	r17,128
 40024a4:	dc000015 	stw	r16,0(sp)
 40024a8:	8c7fffc4 	addi	r17,r17,-1
 40024ac:	dfc00215 	stw	ra,8(sp)
 40024b0:	31803fcc 	andi	r6,r6,255
 40024b4:	00800044 	movi	r2,1
 40024b8:	8922703a 	and	r17,r17,r4
 40024bc:	2020d7fa 	srli	r16,r4,31
 40024c0:	1180110e 	bge	r2,r6,4002508 <__extendsfdf2+0x7c>
 40024c4:	880cd0fa 	srli	r6,r17,3
 40024c8:	8822977a 	slli	r17,r17,29
 40024cc:	2940e004 	addi	r5,r5,896
 40024d0:	2941ffcc 	andi	r5,r5,2047
 40024d4:	2804953a 	slli	r2,r5,20
 40024d8:	01400434 	movhi	r5,16
 40024dc:	800697fa 	slli	r3,r16,31
 40024e0:	297fffc4 	addi	r5,r5,-1
 40024e4:	314a703a 	and	r5,r6,r5
 40024e8:	288ab03a 	or	r5,r5,r2
 40024ec:	28c6b03a 	or	r3,r5,r3
 40024f0:	8805883a 	mov	r2,r17
 40024f4:	dfc00217 	ldw	ra,8(sp)
 40024f8:	dc400117 	ldw	r17,4(sp)
 40024fc:	dc000017 	ldw	r16,0(sp)
 4002500:	dec00304 	addi	sp,sp,12
 4002504:	f800283a 	ret
 4002508:	2800111e 	bne	r5,zero,4002550 <__extendsfdf2+0xc4>
 400250c:	88001c26 	beq	r17,zero,4002580 <__extendsfdf2+0xf4>
 4002510:	8809883a 	mov	r4,r17
 4002514:	400259c0 	call	400259c <__clzsi2>
 4002518:	00c00284 	movi	r3,10
 400251c:	18801b16 	blt	r3,r2,400258c <__extendsfdf2+0x100>
 4002520:	018002c4 	movi	r6,11
 4002524:	308dc83a 	sub	r6,r6,r2
 4002528:	11000544 	addi	r4,r2,21
 400252c:	8986d83a 	srl	r3,r17,r6
 4002530:	8922983a 	sll	r17,r17,r4
 4002534:	0180e244 	movi	r6,905
 4002538:	01400434 	movhi	r5,16
 400253c:	3085c83a 	sub	r2,r6,r2
 4002540:	297fffc4 	addi	r5,r5,-1
 4002544:	194c703a 	and	r6,r3,r5
 4002548:	1141ffcc 	andi	r5,r2,2047
 400254c:	003fe006 	br	40024d0 <__alt_data_end+0xfbffa4d0>
 4002550:	88000826 	beq	r17,zero,4002574 <__extendsfdf2+0xe8>
 4002554:	880cd0fa 	srli	r6,r17,3
 4002558:	00800434 	movhi	r2,16
 400255c:	10bfffc4 	addi	r2,r2,-1
 4002560:	31800234 	orhi	r6,r6,8
 4002564:	8822977a 	slli	r17,r17,29
 4002568:	308c703a 	and	r6,r6,r2
 400256c:	0141ffc4 	movi	r5,2047
 4002570:	003fd706 	br	40024d0 <__alt_data_end+0xfbffa4d0>
 4002574:	0141ffc4 	movi	r5,2047
 4002578:	000d883a 	mov	r6,zero
 400257c:	003fd406 	br	40024d0 <__alt_data_end+0xfbffa4d0>
 4002580:	000b883a 	mov	r5,zero
 4002584:	000d883a 	mov	r6,zero
 4002588:	003fd106 	br	40024d0 <__alt_data_end+0xfbffa4d0>
 400258c:	11bffd44 	addi	r6,r2,-11
 4002590:	8986983a 	sll	r3,r17,r6
 4002594:	0023883a 	mov	r17,zero
 4002598:	003fe606 	br	4002534 <__alt_data_end+0xfbffa534>

0400259c <__clzsi2>:
 400259c:	00bfffd4 	movui	r2,65535
 40025a0:	11000536 	bltu	r2,r4,40025b8 <__clzsi2+0x1c>
 40025a4:	00803fc4 	movi	r2,255
 40025a8:	11000f36 	bltu	r2,r4,40025e8 <__clzsi2+0x4c>
 40025ac:	00800804 	movi	r2,32
 40025b0:	0007883a 	mov	r3,zero
 40025b4:	00000506 	br	40025cc <__clzsi2+0x30>
 40025b8:	00804034 	movhi	r2,256
 40025bc:	10bfffc4 	addi	r2,r2,-1
 40025c0:	11000c2e 	bgeu	r2,r4,40025f4 <__clzsi2+0x58>
 40025c4:	00800204 	movi	r2,8
 40025c8:	00c00604 	movi	r3,24
 40025cc:	20c8d83a 	srl	r4,r4,r3
 40025d0:	00c20034 	movhi	r3,2048
 40025d4:	18c06a84 	addi	r3,r3,426
 40025d8:	1909883a 	add	r4,r3,r4
 40025dc:	20c00003 	ldbu	r3,0(r4)
 40025e0:	10c5c83a 	sub	r2,r2,r3
 40025e4:	f800283a 	ret
 40025e8:	00800604 	movi	r2,24
 40025ec:	00c00204 	movi	r3,8
 40025f0:	003ff606 	br	40025cc <__alt_data_end+0xfbffa5cc>
 40025f4:	00800404 	movi	r2,16
 40025f8:	1007883a 	mov	r3,r2
 40025fc:	003ff306 	br	40025cc <__alt_data_end+0xfbffa5cc>

04002600 <_printf_r>:
 4002600:	defffd04 	addi	sp,sp,-12
 4002604:	2805883a 	mov	r2,r5
 4002608:	dfc00015 	stw	ra,0(sp)
 400260c:	d9800115 	stw	r6,4(sp)
 4002610:	d9c00215 	stw	r7,8(sp)
 4002614:	21400217 	ldw	r5,8(r4)
 4002618:	d9c00104 	addi	r7,sp,4
 400261c:	100d883a 	mov	r6,r2
 4002620:	40027f80 	call	40027f8 <___vfprintf_internal_r>
 4002624:	dfc00017 	ldw	ra,0(sp)
 4002628:	dec00304 	addi	sp,sp,12
 400262c:	f800283a 	ret

04002630 <printf>:
 4002630:	defffc04 	addi	sp,sp,-16
 4002634:	dfc00015 	stw	ra,0(sp)
 4002638:	d9400115 	stw	r5,4(sp)
 400263c:	d9800215 	stw	r6,8(sp)
 4002640:	d9c00315 	stw	r7,12(sp)
 4002644:	00810074 	movhi	r2,1025
 4002648:	10881404 	addi	r2,r2,8272
 400264c:	10800017 	ldw	r2,0(r2)
 4002650:	200b883a 	mov	r5,r4
 4002654:	d9800104 	addi	r6,sp,4
 4002658:	11000217 	ldw	r4,8(r2)
 400265c:	40049f00 	call	40049f0 <__vfprintf_internal>
 4002660:	dfc00017 	ldw	ra,0(sp)
 4002664:	dec00404 	addi	sp,sp,16
 4002668:	f800283a 	ret

0400266c <_putchar_r>:
 400266c:	21800217 	ldw	r6,8(r4)
 4002670:	40094b41 	jmpi	40094b4 <_putc_r>

04002674 <putchar>:
 4002674:	00810074 	movhi	r2,1025
 4002678:	10881404 	addi	r2,r2,8272
 400267c:	200b883a 	mov	r5,r4
 4002680:	11000017 	ldw	r4,0(r2)
 4002684:	21800217 	ldw	r6,8(r4)
 4002688:	40094b41 	jmpi	40094b4 <_putc_r>

0400268c <_puts_r>:
 400268c:	defff604 	addi	sp,sp,-40
 4002690:	dc000715 	stw	r16,28(sp)
 4002694:	2021883a 	mov	r16,r4
 4002698:	2809883a 	mov	r4,r5
 400269c:	dc400815 	stw	r17,32(sp)
 40026a0:	dfc00915 	stw	ra,36(sp)
 40026a4:	2823883a 	mov	r17,r5
 40026a8:	40027600 	call	4002760 <strlen>
 40026ac:	10c00044 	addi	r3,r2,1
 40026b0:	d8800115 	stw	r2,4(sp)
 40026b4:	00820034 	movhi	r2,2048
 40026b8:	1080ab04 	addi	r2,r2,684
 40026bc:	d8800215 	stw	r2,8(sp)
 40026c0:	00800044 	movi	r2,1
 40026c4:	d8800315 	stw	r2,12(sp)
 40026c8:	00800084 	movi	r2,2
 40026cc:	dc400015 	stw	r17,0(sp)
 40026d0:	d8c00615 	stw	r3,24(sp)
 40026d4:	dec00415 	stw	sp,16(sp)
 40026d8:	d8800515 	stw	r2,20(sp)
 40026dc:	80000226 	beq	r16,zero,40026e8 <_puts_r+0x5c>
 40026e0:	80800e17 	ldw	r2,56(r16)
 40026e4:	10001426 	beq	r2,zero,4002738 <_puts_r+0xac>
 40026e8:	81400217 	ldw	r5,8(r16)
 40026ec:	2880030b 	ldhu	r2,12(r5)
 40026f0:	10c8000c 	andi	r3,r2,8192
 40026f4:	1800061e 	bne	r3,zero,4002710 <_puts_r+0x84>
 40026f8:	29001917 	ldw	r4,100(r5)
 40026fc:	00f7ffc4 	movi	r3,-8193
 4002700:	10880014 	ori	r2,r2,8192
 4002704:	20c6703a 	and	r3,r4,r3
 4002708:	2880030d 	sth	r2,12(r5)
 400270c:	28c01915 	stw	r3,100(r5)
 4002710:	d9800404 	addi	r6,sp,16
 4002714:	8009883a 	mov	r4,r16
 4002718:	4006f200 	call	4006f20 <__sfvwrite_r>
 400271c:	1000091e 	bne	r2,zero,4002744 <_puts_r+0xb8>
 4002720:	00800284 	movi	r2,10
 4002724:	dfc00917 	ldw	ra,36(sp)
 4002728:	dc400817 	ldw	r17,32(sp)
 400272c:	dc000717 	ldw	r16,28(sp)
 4002730:	dec00a04 	addi	sp,sp,40
 4002734:	f800283a 	ret
 4002738:	8009883a 	mov	r4,r16
 400273c:	4006a9c0 	call	4006a9c <__sinit>
 4002740:	003fe906 	br	40026e8 <__alt_data_end+0xfbffa6e8>
 4002744:	00bfffc4 	movi	r2,-1
 4002748:	003ff606 	br	4002724 <__alt_data_end+0xfbffa724>

0400274c <puts>:
 400274c:	00810074 	movhi	r2,1025
 4002750:	10881404 	addi	r2,r2,8272
 4002754:	200b883a 	mov	r5,r4
 4002758:	11000017 	ldw	r4,0(r2)
 400275c:	400268c1 	jmpi	400268c <_puts_r>

04002760 <strlen>:
 4002760:	208000cc 	andi	r2,r4,3
 4002764:	10002026 	beq	r2,zero,40027e8 <strlen+0x88>
 4002768:	20800007 	ldb	r2,0(r4)
 400276c:	10002026 	beq	r2,zero,40027f0 <strlen+0x90>
 4002770:	2005883a 	mov	r2,r4
 4002774:	00000206 	br	4002780 <strlen+0x20>
 4002778:	10c00007 	ldb	r3,0(r2)
 400277c:	18001826 	beq	r3,zero,40027e0 <strlen+0x80>
 4002780:	10800044 	addi	r2,r2,1
 4002784:	10c000cc 	andi	r3,r2,3
 4002788:	183ffb1e 	bne	r3,zero,4002778 <__alt_data_end+0xfbffa778>
 400278c:	10c00017 	ldw	r3,0(r2)
 4002790:	01ffbff4 	movhi	r7,65279
 4002794:	39ffbfc4 	addi	r7,r7,-257
 4002798:	00ca303a 	nor	r5,zero,r3
 400279c:	01a02074 	movhi	r6,32897
 40027a0:	19c7883a 	add	r3,r3,r7
 40027a4:	31a02004 	addi	r6,r6,-32640
 40027a8:	1946703a 	and	r3,r3,r5
 40027ac:	1986703a 	and	r3,r3,r6
 40027b0:	1800091e 	bne	r3,zero,40027d8 <strlen+0x78>
 40027b4:	10800104 	addi	r2,r2,4
 40027b8:	10c00017 	ldw	r3,0(r2)
 40027bc:	19cb883a 	add	r5,r3,r7
 40027c0:	00c6303a 	nor	r3,zero,r3
 40027c4:	28c6703a 	and	r3,r5,r3
 40027c8:	1986703a 	and	r3,r3,r6
 40027cc:	183ff926 	beq	r3,zero,40027b4 <__alt_data_end+0xfbffa7b4>
 40027d0:	00000106 	br	40027d8 <strlen+0x78>
 40027d4:	10800044 	addi	r2,r2,1
 40027d8:	10c00007 	ldb	r3,0(r2)
 40027dc:	183ffd1e 	bne	r3,zero,40027d4 <__alt_data_end+0xfbffa7d4>
 40027e0:	1105c83a 	sub	r2,r2,r4
 40027e4:	f800283a 	ret
 40027e8:	2005883a 	mov	r2,r4
 40027ec:	003fe706 	br	400278c <__alt_data_end+0xfbffa78c>
 40027f0:	0005883a 	mov	r2,zero
 40027f4:	f800283a 	ret

040027f8 <___vfprintf_internal_r>:
 40027f8:	deffb804 	addi	sp,sp,-288
 40027fc:	dfc04715 	stw	ra,284(sp)
 4002800:	ddc04515 	stw	r23,276(sp)
 4002804:	dd404315 	stw	r21,268(sp)
 4002808:	d9002c15 	stw	r4,176(sp)
 400280c:	282f883a 	mov	r23,r5
 4002810:	302b883a 	mov	r21,r6
 4002814:	d9c02d15 	stw	r7,180(sp)
 4002818:	df004615 	stw	fp,280(sp)
 400281c:	dd804415 	stw	r22,272(sp)
 4002820:	dd004215 	stw	r20,264(sp)
 4002824:	dcc04115 	stw	r19,260(sp)
 4002828:	dc804015 	stw	r18,256(sp)
 400282c:	dc403f15 	stw	r17,252(sp)
 4002830:	dc003e15 	stw	r16,248(sp)
 4002834:	40076100 	call	4007610 <_localeconv_r>
 4002838:	10800017 	ldw	r2,0(r2)
 400283c:	1009883a 	mov	r4,r2
 4002840:	d8803415 	stw	r2,208(sp)
 4002844:	40027600 	call	4002760 <strlen>
 4002848:	d8803715 	stw	r2,220(sp)
 400284c:	d8802c17 	ldw	r2,176(sp)
 4002850:	10000226 	beq	r2,zero,400285c <___vfprintf_internal_r+0x64>
 4002854:	10800e17 	ldw	r2,56(r2)
 4002858:	1000f926 	beq	r2,zero,4002c40 <___vfprintf_internal_r+0x448>
 400285c:	b880030b 	ldhu	r2,12(r23)
 4002860:	10c8000c 	andi	r3,r2,8192
 4002864:	1800061e 	bne	r3,zero,4002880 <___vfprintf_internal_r+0x88>
 4002868:	b9001917 	ldw	r4,100(r23)
 400286c:	00f7ffc4 	movi	r3,-8193
 4002870:	10880014 	ori	r2,r2,8192
 4002874:	20c6703a 	and	r3,r4,r3
 4002878:	b880030d 	sth	r2,12(r23)
 400287c:	b8c01915 	stw	r3,100(r23)
 4002880:	10c0020c 	andi	r3,r2,8
 4002884:	1800c126 	beq	r3,zero,4002b8c <___vfprintf_internal_r+0x394>
 4002888:	b8c00417 	ldw	r3,16(r23)
 400288c:	1800bf26 	beq	r3,zero,4002b8c <___vfprintf_internal_r+0x394>
 4002890:	1080068c 	andi	r2,r2,26
 4002894:	00c00284 	movi	r3,10
 4002898:	10c0c426 	beq	r2,r3,4002bac <___vfprintf_internal_r+0x3b4>
 400289c:	d8c00404 	addi	r3,sp,16
 40028a0:	05020034 	movhi	r20,2048
 40028a4:	d9001e04 	addi	r4,sp,120
 40028a8:	a500bc84 	addi	r20,r20,754
 40028ac:	d8c01e15 	stw	r3,120(sp)
 40028b0:	d8002015 	stw	zero,128(sp)
 40028b4:	d8001f15 	stw	zero,124(sp)
 40028b8:	d8003315 	stw	zero,204(sp)
 40028bc:	d8003615 	stw	zero,216(sp)
 40028c0:	d8003815 	stw	zero,224(sp)
 40028c4:	1811883a 	mov	r8,r3
 40028c8:	d8003915 	stw	zero,228(sp)
 40028cc:	d8003a15 	stw	zero,232(sp)
 40028d0:	d8002f15 	stw	zero,188(sp)
 40028d4:	d9002815 	stw	r4,160(sp)
 40028d8:	a8800007 	ldb	r2,0(r21)
 40028dc:	10027b26 	beq	r2,zero,40032cc <___vfprintf_internal_r+0xad4>
 40028e0:	00c00944 	movi	r3,37
 40028e4:	a821883a 	mov	r16,r21
 40028e8:	10c0021e 	bne	r2,r3,40028f4 <___vfprintf_internal_r+0xfc>
 40028ec:	00001406 	br	4002940 <___vfprintf_internal_r+0x148>
 40028f0:	10c00326 	beq	r2,r3,4002900 <___vfprintf_internal_r+0x108>
 40028f4:	84000044 	addi	r16,r16,1
 40028f8:	80800007 	ldb	r2,0(r16)
 40028fc:	103ffc1e 	bne	r2,zero,40028f0 <__alt_data_end+0xfbffa8f0>
 4002900:	8563c83a 	sub	r17,r16,r21
 4002904:	88000e26 	beq	r17,zero,4002940 <___vfprintf_internal_r+0x148>
 4002908:	d8c02017 	ldw	r3,128(sp)
 400290c:	d8801f17 	ldw	r2,124(sp)
 4002910:	45400015 	stw	r21,0(r8)
 4002914:	1c47883a 	add	r3,r3,r17
 4002918:	10800044 	addi	r2,r2,1
 400291c:	d8c02015 	stw	r3,128(sp)
 4002920:	44400115 	stw	r17,4(r8)
 4002924:	d8801f15 	stw	r2,124(sp)
 4002928:	00c001c4 	movi	r3,7
 400292c:	1880a716 	blt	r3,r2,4002bcc <___vfprintf_internal_r+0x3d4>
 4002930:	42000204 	addi	r8,r8,8
 4002934:	d9402f17 	ldw	r5,188(sp)
 4002938:	2c4b883a 	add	r5,r5,r17
 400293c:	d9402f15 	stw	r5,188(sp)
 4002940:	80800007 	ldb	r2,0(r16)
 4002944:	1000a826 	beq	r2,zero,4002be8 <___vfprintf_internal_r+0x3f0>
 4002948:	84400047 	ldb	r17,1(r16)
 400294c:	00bfffc4 	movi	r2,-1
 4002950:	85400044 	addi	r21,r16,1
 4002954:	d8002785 	stb	zero,158(sp)
 4002958:	0007883a 	mov	r3,zero
 400295c:	000f883a 	mov	r7,zero
 4002960:	d8802915 	stw	r2,164(sp)
 4002964:	d8003115 	stw	zero,196(sp)
 4002968:	0025883a 	mov	r18,zero
 400296c:	01401604 	movi	r5,88
 4002970:	01800244 	movi	r6,9
 4002974:	02800a84 	movi	r10,42
 4002978:	02401b04 	movi	r9,108
 400297c:	ad400044 	addi	r21,r21,1
 4002980:	88bff804 	addi	r2,r17,-32
 4002984:	28830436 	bltu	r5,r2,4003598 <___vfprintf_internal_r+0xda0>
 4002988:	100490ba 	slli	r2,r2,2
 400298c:	01010034 	movhi	r4,1024
 4002990:	210a6804 	addi	r4,r4,10656
 4002994:	1105883a 	add	r2,r2,r4
 4002998:	10800017 	ldw	r2,0(r2)
 400299c:	1000683a 	jmp	r2
 40029a0:	040034b8 	rdprs	r16,zero,210
 40029a4:	04003598 	cmpnei	r16,zero,214
 40029a8:	04003598 	cmpnei	r16,zero,214
 40029ac:	040034d8 	cmpnei	r16,zero,211
 40029b0:	04003598 	cmpnei	r16,zero,214
 40029b4:	04003598 	cmpnei	r16,zero,214
 40029b8:	04003598 	cmpnei	r16,zero,214
 40029bc:	04003598 	cmpnei	r16,zero,214
 40029c0:	04003598 	cmpnei	r16,zero,214
 40029c4:	04003598 	cmpnei	r16,zero,214
 40029c8:	04002c4c 	andi	r16,zero,177
 40029cc:	040033f4 	movhi	r16,207
 40029d0:	04003598 	cmpnei	r16,zero,214
 40029d4:	04002b14 	movui	r16,172
 40029d8:	04002c74 	movhi	r16,177
 40029dc:	04003598 	cmpnei	r16,zero,214
 40029e0:	04002cb4 	movhi	r16,178
 40029e4:	04002cc0 	call	4002cc <__alt_mem_new_sdram_controller_0-0x3bffd34>
 40029e8:	04002cc0 	call	4002cc <__alt_mem_new_sdram_controller_0-0x3bffd34>
 40029ec:	04002cc0 	call	4002cc <__alt_mem_new_sdram_controller_0-0x3bffd34>
 40029f0:	04002cc0 	call	4002cc <__alt_mem_new_sdram_controller_0-0x3bffd34>
 40029f4:	04002cc0 	call	4002cc <__alt_mem_new_sdram_controller_0-0x3bffd34>
 40029f8:	04002cc0 	call	4002cc <__alt_mem_new_sdram_controller_0-0x3bffd34>
 40029fc:	04002cc0 	call	4002cc <__alt_mem_new_sdram_controller_0-0x3bffd34>
 4002a00:	04002cc0 	call	4002cc <__alt_mem_new_sdram_controller_0-0x3bffd34>
 4002a04:	04002cc0 	call	4002cc <__alt_mem_new_sdram_controller_0-0x3bffd34>
 4002a08:	04003598 	cmpnei	r16,zero,214
 4002a0c:	04003598 	cmpnei	r16,zero,214
 4002a10:	04003598 	cmpnei	r16,zero,214
 4002a14:	04003598 	cmpnei	r16,zero,214
 4002a18:	04003598 	cmpnei	r16,zero,214
 4002a1c:	04003598 	cmpnei	r16,zero,214
 4002a20:	04003598 	cmpnei	r16,zero,214
 4002a24:	04003598 	cmpnei	r16,zero,214
 4002a28:	04003598 	cmpnei	r16,zero,214
 4002a2c:	04003598 	cmpnei	r16,zero,214
 4002a30:	04002cf4 	movhi	r16,179
 4002a34:	04002db0 	cmpltui	r16,zero,182
 4002a38:	04003598 	cmpnei	r16,zero,214
 4002a3c:	04002db0 	cmpltui	r16,zero,182
 4002a40:	04003598 	cmpnei	r16,zero,214
 4002a44:	04003598 	cmpnei	r16,zero,214
 4002a48:	04003598 	cmpnei	r16,zero,214
 4002a4c:	04003598 	cmpnei	r16,zero,214
 4002a50:	04002e50 	cmplti	r16,zero,185
 4002a54:	04003598 	cmpnei	r16,zero,214
 4002a58:	04003598 	cmpnei	r16,zero,214
 4002a5c:	04002e5c 	xori	r16,zero,185
 4002a60:	04003598 	cmpnei	r16,zero,214
 4002a64:	04003598 	cmpnei	r16,zero,214
 4002a68:	04003598 	cmpnei	r16,zero,214
 4002a6c:	04003598 	cmpnei	r16,zero,214
 4002a70:	04003598 	cmpnei	r16,zero,214
 4002a74:	040032d4 	movui	r16,203
 4002a78:	04003598 	cmpnei	r16,zero,214
 4002a7c:	04003598 	cmpnei	r16,zero,214
 4002a80:	04003334 	movhi	r16,204
 4002a84:	04003598 	cmpnei	r16,zero,214
 4002a88:	04003598 	cmpnei	r16,zero,214
 4002a8c:	04003598 	cmpnei	r16,zero,214
 4002a90:	04003598 	cmpnei	r16,zero,214
 4002a94:	04003598 	cmpnei	r16,zero,214
 4002a98:	04003598 	cmpnei	r16,zero,214
 4002a9c:	04003598 	cmpnei	r16,zero,214
 4002aa0:	04003598 	cmpnei	r16,zero,214
 4002aa4:	04003598 	cmpnei	r16,zero,214
 4002aa8:	04003598 	cmpnei	r16,zero,214
 4002aac:	04003544 	movi	r16,213
 4002ab0:	040034e4 	muli	r16,zero,211
 4002ab4:	04002db0 	cmpltui	r16,zero,182
 4002ab8:	04002db0 	cmpltui	r16,zero,182
 4002abc:	04002db0 	cmpltui	r16,zero,182
 4002ac0:	040034f4 	movhi	r16,211
 4002ac4:	040034e4 	muli	r16,zero,211
 4002ac8:	04003598 	cmpnei	r16,zero,214
 4002acc:	04003598 	cmpnei	r16,zero,214
 4002ad0:	04003500 	call	400350 <__alt_mem_new_sdram_controller_0-0x3bffcb0>
 4002ad4:	04003598 	cmpnei	r16,zero,214
 4002ad8:	04003510 	cmplti	r16,zero,212
 4002adc:	040033e4 	muli	r16,zero,207
 4002ae0:	04002b20 	cmpeqi	r16,zero,172
 4002ae4:	04003404 	movi	r16,208
 4002ae8:	04003598 	cmpnei	r16,zero,214
 4002aec:	04003410 	cmplti	r16,zero,208
 4002af0:	04003598 	cmpnei	r16,zero,214
 4002af4:	0400346c 	andhi	r16,zero,209
 4002af8:	04003598 	cmpnei	r16,zero,214
 4002afc:	04003598 	cmpnei	r16,zero,214
 4002b00:	0400347c 	xorhi	r16,zero,209
 4002b04:	d9003117 	ldw	r4,196(sp)
 4002b08:	d8802d15 	stw	r2,180(sp)
 4002b0c:	0109c83a 	sub	r4,zero,r4
 4002b10:	d9003115 	stw	r4,196(sp)
 4002b14:	94800114 	ori	r18,r18,4
 4002b18:	ac400007 	ldb	r17,0(r21)
 4002b1c:	003f9706 	br	400297c <__alt_data_end+0xfbffa97c>
 4002b20:	00800c04 	movi	r2,48
 4002b24:	d9002d17 	ldw	r4,180(sp)
 4002b28:	d9402917 	ldw	r5,164(sp)
 4002b2c:	d8802705 	stb	r2,156(sp)
 4002b30:	00801e04 	movi	r2,120
 4002b34:	d8802745 	stb	r2,157(sp)
 4002b38:	d8002785 	stb	zero,158(sp)
 4002b3c:	20c00104 	addi	r3,r4,4
 4002b40:	24c00017 	ldw	r19,0(r4)
 4002b44:	002d883a 	mov	r22,zero
 4002b48:	90800094 	ori	r2,r18,2
 4002b4c:	28029a16 	blt	r5,zero,40035b8 <___vfprintf_internal_r+0xdc0>
 4002b50:	00bfdfc4 	movi	r2,-129
 4002b54:	90a4703a 	and	r18,r18,r2
 4002b58:	d8c02d15 	stw	r3,180(sp)
 4002b5c:	94800094 	ori	r18,r18,2
 4002b60:	9802871e 	bne	r19,zero,4003580 <___vfprintf_internal_r+0xd88>
 4002b64:	00820034 	movhi	r2,2048
 4002b68:	1080b504 	addi	r2,r2,724
 4002b6c:	d8803915 	stw	r2,228(sp)
 4002b70:	04401e04 	movi	r17,120
 4002b74:	d8802917 	ldw	r2,164(sp)
 4002b78:	0039883a 	mov	fp,zero
 4002b7c:	1001e926 	beq	r2,zero,4003324 <___vfprintf_internal_r+0xb2c>
 4002b80:	0027883a 	mov	r19,zero
 4002b84:	002d883a 	mov	r22,zero
 4002b88:	00020506 	br	40033a0 <___vfprintf_internal_r+0xba8>
 4002b8c:	d9002c17 	ldw	r4,176(sp)
 4002b90:	b80b883a 	mov	r5,r23
 4002b94:	4004ac80 	call	4004ac8 <__swsetup_r>
 4002b98:	1005ac1e 	bne	r2,zero,400424c <___vfprintf_internal_r+0x1a54>
 4002b9c:	b880030b 	ldhu	r2,12(r23)
 4002ba0:	00c00284 	movi	r3,10
 4002ba4:	1080068c 	andi	r2,r2,26
 4002ba8:	10ff3c1e 	bne	r2,r3,400289c <__alt_data_end+0xfbffa89c>
 4002bac:	b880038f 	ldh	r2,14(r23)
 4002bb0:	103f3a16 	blt	r2,zero,400289c <__alt_data_end+0xfbffa89c>
 4002bb4:	d9c02d17 	ldw	r7,180(sp)
 4002bb8:	d9002c17 	ldw	r4,176(sp)
 4002bbc:	a80d883a 	mov	r6,r21
 4002bc0:	b80b883a 	mov	r5,r23
 4002bc4:	4004a0c0 	call	4004a0c <__sbprintf>
 4002bc8:	00001106 	br	4002c10 <___vfprintf_internal_r+0x418>
 4002bcc:	d9002c17 	ldw	r4,176(sp)
 4002bd0:	d9801e04 	addi	r6,sp,120
 4002bd4:	b80b883a 	mov	r5,r23
 4002bd8:	4009f5c0 	call	4009f5c <__sprint_r>
 4002bdc:	1000081e 	bne	r2,zero,4002c00 <___vfprintf_internal_r+0x408>
 4002be0:	da000404 	addi	r8,sp,16
 4002be4:	003f5306 	br	4002934 <__alt_data_end+0xfbffa934>
 4002be8:	d8802017 	ldw	r2,128(sp)
 4002bec:	10000426 	beq	r2,zero,4002c00 <___vfprintf_internal_r+0x408>
 4002bf0:	d9002c17 	ldw	r4,176(sp)
 4002bf4:	d9801e04 	addi	r6,sp,120
 4002bf8:	b80b883a 	mov	r5,r23
 4002bfc:	4009f5c0 	call	4009f5c <__sprint_r>
 4002c00:	b880030b 	ldhu	r2,12(r23)
 4002c04:	1080100c 	andi	r2,r2,64
 4002c08:	1005901e 	bne	r2,zero,400424c <___vfprintf_internal_r+0x1a54>
 4002c0c:	d8802f17 	ldw	r2,188(sp)
 4002c10:	dfc04717 	ldw	ra,284(sp)
 4002c14:	df004617 	ldw	fp,280(sp)
 4002c18:	ddc04517 	ldw	r23,276(sp)
 4002c1c:	dd804417 	ldw	r22,272(sp)
 4002c20:	dd404317 	ldw	r21,268(sp)
 4002c24:	dd004217 	ldw	r20,264(sp)
 4002c28:	dcc04117 	ldw	r19,260(sp)
 4002c2c:	dc804017 	ldw	r18,256(sp)
 4002c30:	dc403f17 	ldw	r17,252(sp)
 4002c34:	dc003e17 	ldw	r16,248(sp)
 4002c38:	dec04804 	addi	sp,sp,288
 4002c3c:	f800283a 	ret
 4002c40:	d9002c17 	ldw	r4,176(sp)
 4002c44:	4006a9c0 	call	4006a9c <__sinit>
 4002c48:	003f0406 	br	400285c <__alt_data_end+0xfbffa85c>
 4002c4c:	d8802d17 	ldw	r2,180(sp)
 4002c50:	d9002d17 	ldw	r4,180(sp)
 4002c54:	10800017 	ldw	r2,0(r2)
 4002c58:	d8803115 	stw	r2,196(sp)
 4002c5c:	20800104 	addi	r2,r4,4
 4002c60:	d9003117 	ldw	r4,196(sp)
 4002c64:	203fa716 	blt	r4,zero,4002b04 <__alt_data_end+0xfbffab04>
 4002c68:	d8802d15 	stw	r2,180(sp)
 4002c6c:	ac400007 	ldb	r17,0(r21)
 4002c70:	003f4206 	br	400297c <__alt_data_end+0xfbffa97c>
 4002c74:	ac400007 	ldb	r17,0(r21)
 4002c78:	aac00044 	addi	r11,r21,1
 4002c7c:	8a872826 	beq	r17,r10,4004920 <___vfprintf_internal_r+0x2128>
 4002c80:	88bff404 	addi	r2,r17,-48
 4002c84:	0009883a 	mov	r4,zero
 4002c88:	30867d36 	bltu	r6,r2,4004680 <___vfprintf_internal_r+0x1e88>
 4002c8c:	5c400007 	ldb	r17,0(r11)
 4002c90:	210002a4 	muli	r4,r4,10
 4002c94:	5d400044 	addi	r21,r11,1
 4002c98:	a817883a 	mov	r11,r21
 4002c9c:	2089883a 	add	r4,r4,r2
 4002ca0:	88bff404 	addi	r2,r17,-48
 4002ca4:	30bff92e 	bgeu	r6,r2,4002c8c <__alt_data_end+0xfbffac8c>
 4002ca8:	2005c916 	blt	r4,zero,40043d0 <___vfprintf_internal_r+0x1bd8>
 4002cac:	d9002915 	stw	r4,164(sp)
 4002cb0:	003f3306 	br	4002980 <__alt_data_end+0xfbffa980>
 4002cb4:	94802014 	ori	r18,r18,128
 4002cb8:	ac400007 	ldb	r17,0(r21)
 4002cbc:	003f2f06 	br	400297c <__alt_data_end+0xfbffa97c>
 4002cc0:	a809883a 	mov	r4,r21
 4002cc4:	d8003115 	stw	zero,196(sp)
 4002cc8:	88bff404 	addi	r2,r17,-48
 4002ccc:	0017883a 	mov	r11,zero
 4002cd0:	24400007 	ldb	r17,0(r4)
 4002cd4:	5ac002a4 	muli	r11,r11,10
 4002cd8:	ad400044 	addi	r21,r21,1
 4002cdc:	a809883a 	mov	r4,r21
 4002ce0:	12d7883a 	add	r11,r2,r11
 4002ce4:	88bff404 	addi	r2,r17,-48
 4002ce8:	30bff92e 	bgeu	r6,r2,4002cd0 <__alt_data_end+0xfbffacd0>
 4002cec:	dac03115 	stw	r11,196(sp)
 4002cf0:	003f2306 	br	4002980 <__alt_data_end+0xfbffa980>
 4002cf4:	18c03fcc 	andi	r3,r3,255
 4002cf8:	18072b1e 	bne	r3,zero,40049a8 <___vfprintf_internal_r+0x21b0>
 4002cfc:	94800414 	ori	r18,r18,16
 4002d00:	9080080c 	andi	r2,r18,32
 4002d04:	10037b26 	beq	r2,zero,4003af4 <___vfprintf_internal_r+0x12fc>
 4002d08:	d9402d17 	ldw	r5,180(sp)
 4002d0c:	28800117 	ldw	r2,4(r5)
 4002d10:	2cc00017 	ldw	r19,0(r5)
 4002d14:	29400204 	addi	r5,r5,8
 4002d18:	d9402d15 	stw	r5,180(sp)
 4002d1c:	102d883a 	mov	r22,r2
 4002d20:	10044b16 	blt	r2,zero,4003e50 <___vfprintf_internal_r+0x1658>
 4002d24:	d9402917 	ldw	r5,164(sp)
 4002d28:	df002783 	ldbu	fp,158(sp)
 4002d2c:	2803bc16 	blt	r5,zero,4003c20 <___vfprintf_internal_r+0x1428>
 4002d30:	00ffdfc4 	movi	r3,-129
 4002d34:	9d84b03a 	or	r2,r19,r22
 4002d38:	90e4703a 	and	r18,r18,r3
 4002d3c:	10017726 	beq	r2,zero,400331c <___vfprintf_internal_r+0xb24>
 4002d40:	b0038326 	beq	r22,zero,4003b50 <___vfprintf_internal_r+0x1358>
 4002d44:	dc402a15 	stw	r17,168(sp)
 4002d48:	dc001e04 	addi	r16,sp,120
 4002d4c:	b023883a 	mov	r17,r22
 4002d50:	402d883a 	mov	r22,r8
 4002d54:	9809883a 	mov	r4,r19
 4002d58:	880b883a 	mov	r5,r17
 4002d5c:	01800284 	movi	r6,10
 4002d60:	000f883a 	mov	r7,zero
 4002d64:	400c3540 	call	400c354 <__umoddi3>
 4002d68:	10800c04 	addi	r2,r2,48
 4002d6c:	843fffc4 	addi	r16,r16,-1
 4002d70:	9809883a 	mov	r4,r19
 4002d74:	880b883a 	mov	r5,r17
 4002d78:	80800005 	stb	r2,0(r16)
 4002d7c:	01800284 	movi	r6,10
 4002d80:	000f883a 	mov	r7,zero
 4002d84:	400bddc0 	call	400bddc <__udivdi3>
 4002d88:	1027883a 	mov	r19,r2
 4002d8c:	10c4b03a 	or	r2,r2,r3
 4002d90:	1823883a 	mov	r17,r3
 4002d94:	103fef1e 	bne	r2,zero,4002d54 <__alt_data_end+0xfbffad54>
 4002d98:	d8c02817 	ldw	r3,160(sp)
 4002d9c:	dc402a17 	ldw	r17,168(sp)
 4002da0:	b011883a 	mov	r8,r22
 4002da4:	1c07c83a 	sub	r3,r3,r16
 4002da8:	d8c02e15 	stw	r3,184(sp)
 4002dac:	00005906 	br	4002f14 <___vfprintf_internal_r+0x71c>
 4002db0:	18c03fcc 	andi	r3,r3,255
 4002db4:	1806fa1e 	bne	r3,zero,40049a0 <___vfprintf_internal_r+0x21a8>
 4002db8:	9080020c 	andi	r2,r18,8
 4002dbc:	10048a26 	beq	r2,zero,4003fe8 <___vfprintf_internal_r+0x17f0>
 4002dc0:	d8c02d17 	ldw	r3,180(sp)
 4002dc4:	d9002d17 	ldw	r4,180(sp)
 4002dc8:	d9402d17 	ldw	r5,180(sp)
 4002dcc:	18c00017 	ldw	r3,0(r3)
 4002dd0:	21000117 	ldw	r4,4(r4)
 4002dd4:	29400204 	addi	r5,r5,8
 4002dd8:	d8c03615 	stw	r3,216(sp)
 4002ddc:	d9003815 	stw	r4,224(sp)
 4002de0:	d9402d15 	stw	r5,180(sp)
 4002de4:	d9003617 	ldw	r4,216(sp)
 4002de8:	d9403817 	ldw	r5,224(sp)
 4002dec:	da003d15 	stw	r8,244(sp)
 4002df0:	04000044 	movi	r16,1
 4002df4:	4009b800 	call	4009b80 <__fpclassifyd>
 4002df8:	da003d17 	ldw	r8,244(sp)
 4002dfc:	14041f1e 	bne	r2,r16,4003e7c <___vfprintf_internal_r+0x1684>
 4002e00:	d9003617 	ldw	r4,216(sp)
 4002e04:	d9403817 	ldw	r5,224(sp)
 4002e08:	000d883a 	mov	r6,zero
 4002e0c:	000f883a 	mov	r7,zero
 4002e10:	400d29c0 	call	400d29c <__ledf2>
 4002e14:	da003d17 	ldw	r8,244(sp)
 4002e18:	1005be16 	blt	r2,zero,4004514 <___vfprintf_internal_r+0x1d1c>
 4002e1c:	df002783 	ldbu	fp,158(sp)
 4002e20:	008011c4 	movi	r2,71
 4002e24:	1445330e 	bge	r2,r17,40042f4 <___vfprintf_internal_r+0x1afc>
 4002e28:	04020034 	movhi	r16,2048
 4002e2c:	8400ad04 	addi	r16,r16,692
 4002e30:	00c000c4 	movi	r3,3
 4002e34:	00bfdfc4 	movi	r2,-129
 4002e38:	d8c02a15 	stw	r3,168(sp)
 4002e3c:	90a4703a 	and	r18,r18,r2
 4002e40:	d8c02e15 	stw	r3,184(sp)
 4002e44:	d8002915 	stw	zero,164(sp)
 4002e48:	d8003215 	stw	zero,200(sp)
 4002e4c:	00003706 	br	4002f2c <___vfprintf_internal_r+0x734>
 4002e50:	94800214 	ori	r18,r18,8
 4002e54:	ac400007 	ldb	r17,0(r21)
 4002e58:	003ec806 	br	400297c <__alt_data_end+0xfbffa97c>
 4002e5c:	18c03fcc 	andi	r3,r3,255
 4002e60:	1806db1e 	bne	r3,zero,40049d0 <___vfprintf_internal_r+0x21d8>
 4002e64:	94800414 	ori	r18,r18,16
 4002e68:	9080080c 	andi	r2,r18,32
 4002e6c:	1002d826 	beq	r2,zero,40039d0 <___vfprintf_internal_r+0x11d8>
 4002e70:	d9402d17 	ldw	r5,180(sp)
 4002e74:	d8c02917 	ldw	r3,164(sp)
 4002e78:	d8002785 	stb	zero,158(sp)
 4002e7c:	28800204 	addi	r2,r5,8
 4002e80:	2cc00017 	ldw	r19,0(r5)
 4002e84:	2d800117 	ldw	r22,4(r5)
 4002e88:	18048f16 	blt	r3,zero,40040c8 <___vfprintf_internal_r+0x18d0>
 4002e8c:	013fdfc4 	movi	r4,-129
 4002e90:	9d86b03a 	or	r3,r19,r22
 4002e94:	d8802d15 	stw	r2,180(sp)
 4002e98:	9124703a 	and	r18,r18,r4
 4002e9c:	1802d91e 	bne	r3,zero,4003a04 <___vfprintf_internal_r+0x120c>
 4002ea0:	d8c02917 	ldw	r3,164(sp)
 4002ea4:	0039883a 	mov	fp,zero
 4002ea8:	1805c326 	beq	r3,zero,40045b8 <___vfprintf_internal_r+0x1dc0>
 4002eac:	0027883a 	mov	r19,zero
 4002eb0:	002d883a 	mov	r22,zero
 4002eb4:	dc001e04 	addi	r16,sp,120
 4002eb8:	9806d0fa 	srli	r3,r19,3
 4002ebc:	b008977a 	slli	r4,r22,29
 4002ec0:	b02cd0fa 	srli	r22,r22,3
 4002ec4:	9cc001cc 	andi	r19,r19,7
 4002ec8:	98800c04 	addi	r2,r19,48
 4002ecc:	843fffc4 	addi	r16,r16,-1
 4002ed0:	20e6b03a 	or	r19,r4,r3
 4002ed4:	80800005 	stb	r2,0(r16)
 4002ed8:	9d86b03a 	or	r3,r19,r22
 4002edc:	183ff61e 	bne	r3,zero,4002eb8 <__alt_data_end+0xfbffaeb8>
 4002ee0:	90c0004c 	andi	r3,r18,1
 4002ee4:	18013b26 	beq	r3,zero,40033d4 <___vfprintf_internal_r+0xbdc>
 4002ee8:	10803fcc 	andi	r2,r2,255
 4002eec:	1080201c 	xori	r2,r2,128
 4002ef0:	10bfe004 	addi	r2,r2,-128
 4002ef4:	00c00c04 	movi	r3,48
 4002ef8:	10c13626 	beq	r2,r3,40033d4 <___vfprintf_internal_r+0xbdc>
 4002efc:	80ffffc5 	stb	r3,-1(r16)
 4002f00:	d8c02817 	ldw	r3,160(sp)
 4002f04:	80bfffc4 	addi	r2,r16,-1
 4002f08:	1021883a 	mov	r16,r2
 4002f0c:	1887c83a 	sub	r3,r3,r2
 4002f10:	d8c02e15 	stw	r3,184(sp)
 4002f14:	d8802e17 	ldw	r2,184(sp)
 4002f18:	d9002917 	ldw	r4,164(sp)
 4002f1c:	1100010e 	bge	r2,r4,4002f24 <___vfprintf_internal_r+0x72c>
 4002f20:	2005883a 	mov	r2,r4
 4002f24:	d8802a15 	stw	r2,168(sp)
 4002f28:	d8003215 	stw	zero,200(sp)
 4002f2c:	e7003fcc 	andi	fp,fp,255
 4002f30:	e700201c 	xori	fp,fp,128
 4002f34:	e73fe004 	addi	fp,fp,-128
 4002f38:	e0000326 	beq	fp,zero,4002f48 <___vfprintf_internal_r+0x750>
 4002f3c:	d8c02a17 	ldw	r3,168(sp)
 4002f40:	18c00044 	addi	r3,r3,1
 4002f44:	d8c02a15 	stw	r3,168(sp)
 4002f48:	90c0008c 	andi	r3,r18,2
 4002f4c:	d8c02b15 	stw	r3,172(sp)
 4002f50:	18000326 	beq	r3,zero,4002f60 <___vfprintf_internal_r+0x768>
 4002f54:	d8c02a17 	ldw	r3,168(sp)
 4002f58:	18c00084 	addi	r3,r3,2
 4002f5c:	d8c02a15 	stw	r3,168(sp)
 4002f60:	90c0210c 	andi	r3,r18,132
 4002f64:	d8c03015 	stw	r3,192(sp)
 4002f68:	1801a31e 	bne	r3,zero,40035f8 <___vfprintf_internal_r+0xe00>
 4002f6c:	d9003117 	ldw	r4,196(sp)
 4002f70:	d8c02a17 	ldw	r3,168(sp)
 4002f74:	20e7c83a 	sub	r19,r4,r3
 4002f78:	04c19f0e 	bge	zero,r19,40035f8 <___vfprintf_internal_r+0xe00>
 4002f7c:	02400404 	movi	r9,16
 4002f80:	d8c02017 	ldw	r3,128(sp)
 4002f84:	d8801f17 	ldw	r2,124(sp)
 4002f88:	4cc50d0e 	bge	r9,r19,40043c0 <___vfprintf_internal_r+0x1bc8>
 4002f8c:	01420034 	movhi	r5,2048
 4002f90:	2940c084 	addi	r5,r5,770
 4002f94:	dc403b15 	stw	r17,236(sp)
 4002f98:	d9403515 	stw	r5,212(sp)
 4002f9c:	9823883a 	mov	r17,r19
 4002fa0:	482d883a 	mov	r22,r9
 4002fa4:	9027883a 	mov	r19,r18
 4002fa8:	070001c4 	movi	fp,7
 4002fac:	8025883a 	mov	r18,r16
 4002fb0:	dc002c17 	ldw	r16,176(sp)
 4002fb4:	00000306 	br	4002fc4 <___vfprintf_internal_r+0x7cc>
 4002fb8:	8c7ffc04 	addi	r17,r17,-16
 4002fbc:	42000204 	addi	r8,r8,8
 4002fc0:	b440130e 	bge	r22,r17,4003010 <___vfprintf_internal_r+0x818>
 4002fc4:	01020034 	movhi	r4,2048
 4002fc8:	18c00404 	addi	r3,r3,16
 4002fcc:	10800044 	addi	r2,r2,1
 4002fd0:	2100c084 	addi	r4,r4,770
 4002fd4:	41000015 	stw	r4,0(r8)
 4002fd8:	45800115 	stw	r22,4(r8)
 4002fdc:	d8c02015 	stw	r3,128(sp)
 4002fe0:	d8801f15 	stw	r2,124(sp)
 4002fe4:	e0bff40e 	bge	fp,r2,4002fb8 <__alt_data_end+0xfbffafb8>
 4002fe8:	d9801e04 	addi	r6,sp,120
 4002fec:	b80b883a 	mov	r5,r23
 4002ff0:	8009883a 	mov	r4,r16
 4002ff4:	4009f5c0 	call	4009f5c <__sprint_r>
 4002ff8:	103f011e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 4002ffc:	8c7ffc04 	addi	r17,r17,-16
 4003000:	d8c02017 	ldw	r3,128(sp)
 4003004:	d8801f17 	ldw	r2,124(sp)
 4003008:	da000404 	addi	r8,sp,16
 400300c:	b47fed16 	blt	r22,r17,4002fc4 <__alt_data_end+0xfbffafc4>
 4003010:	9021883a 	mov	r16,r18
 4003014:	9825883a 	mov	r18,r19
 4003018:	8827883a 	mov	r19,r17
 400301c:	dc403b17 	ldw	r17,236(sp)
 4003020:	d9403517 	ldw	r5,212(sp)
 4003024:	98c7883a 	add	r3,r19,r3
 4003028:	10800044 	addi	r2,r2,1
 400302c:	41400015 	stw	r5,0(r8)
 4003030:	44c00115 	stw	r19,4(r8)
 4003034:	d8c02015 	stw	r3,128(sp)
 4003038:	d8801f15 	stw	r2,124(sp)
 400303c:	010001c4 	movi	r4,7
 4003040:	2082a316 	blt	r4,r2,4003ad0 <___vfprintf_internal_r+0x12d8>
 4003044:	df002787 	ldb	fp,158(sp)
 4003048:	42000204 	addi	r8,r8,8
 400304c:	e0000c26 	beq	fp,zero,4003080 <___vfprintf_internal_r+0x888>
 4003050:	d8801f17 	ldw	r2,124(sp)
 4003054:	d9002784 	addi	r4,sp,158
 4003058:	18c00044 	addi	r3,r3,1
 400305c:	10800044 	addi	r2,r2,1
 4003060:	41000015 	stw	r4,0(r8)
 4003064:	01000044 	movi	r4,1
 4003068:	41000115 	stw	r4,4(r8)
 400306c:	d8c02015 	stw	r3,128(sp)
 4003070:	d8801f15 	stw	r2,124(sp)
 4003074:	010001c4 	movi	r4,7
 4003078:	20823c16 	blt	r4,r2,400396c <___vfprintf_internal_r+0x1174>
 400307c:	42000204 	addi	r8,r8,8
 4003080:	d8802b17 	ldw	r2,172(sp)
 4003084:	10000c26 	beq	r2,zero,40030b8 <___vfprintf_internal_r+0x8c0>
 4003088:	d8801f17 	ldw	r2,124(sp)
 400308c:	d9002704 	addi	r4,sp,156
 4003090:	18c00084 	addi	r3,r3,2
 4003094:	10800044 	addi	r2,r2,1
 4003098:	41000015 	stw	r4,0(r8)
 400309c:	01000084 	movi	r4,2
 40030a0:	41000115 	stw	r4,4(r8)
 40030a4:	d8c02015 	stw	r3,128(sp)
 40030a8:	d8801f15 	stw	r2,124(sp)
 40030ac:	010001c4 	movi	r4,7
 40030b0:	20823616 	blt	r4,r2,400398c <___vfprintf_internal_r+0x1194>
 40030b4:	42000204 	addi	r8,r8,8
 40030b8:	d9003017 	ldw	r4,192(sp)
 40030bc:	00802004 	movi	r2,128
 40030c0:	20819926 	beq	r4,r2,4003728 <___vfprintf_internal_r+0xf30>
 40030c4:	d9402917 	ldw	r5,164(sp)
 40030c8:	d8802e17 	ldw	r2,184(sp)
 40030cc:	28adc83a 	sub	r22,r5,r2
 40030d0:	0580310e 	bge	zero,r22,4003198 <___vfprintf_internal_r+0x9a0>
 40030d4:	07000404 	movi	fp,16
 40030d8:	d8801f17 	ldw	r2,124(sp)
 40030dc:	e584140e 	bge	fp,r22,4004130 <___vfprintf_internal_r+0x1938>
 40030e0:	01420034 	movhi	r5,2048
 40030e4:	2940bc84 	addi	r5,r5,754
 40030e8:	dc402915 	stw	r17,164(sp)
 40030ec:	d9402b15 	stw	r5,172(sp)
 40030f0:	b023883a 	mov	r17,r22
 40030f4:	04c001c4 	movi	r19,7
 40030f8:	a82d883a 	mov	r22,r21
 40030fc:	902b883a 	mov	r21,r18
 4003100:	8025883a 	mov	r18,r16
 4003104:	dc002c17 	ldw	r16,176(sp)
 4003108:	00000306 	br	4003118 <___vfprintf_internal_r+0x920>
 400310c:	8c7ffc04 	addi	r17,r17,-16
 4003110:	42000204 	addi	r8,r8,8
 4003114:	e440110e 	bge	fp,r17,400315c <___vfprintf_internal_r+0x964>
 4003118:	18c00404 	addi	r3,r3,16
 400311c:	10800044 	addi	r2,r2,1
 4003120:	45000015 	stw	r20,0(r8)
 4003124:	47000115 	stw	fp,4(r8)
 4003128:	d8c02015 	stw	r3,128(sp)
 400312c:	d8801f15 	stw	r2,124(sp)
 4003130:	98bff60e 	bge	r19,r2,400310c <__alt_data_end+0xfbffb10c>
 4003134:	d9801e04 	addi	r6,sp,120
 4003138:	b80b883a 	mov	r5,r23
 400313c:	8009883a 	mov	r4,r16
 4003140:	4009f5c0 	call	4009f5c <__sprint_r>
 4003144:	103eae1e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 4003148:	8c7ffc04 	addi	r17,r17,-16
 400314c:	d8c02017 	ldw	r3,128(sp)
 4003150:	d8801f17 	ldw	r2,124(sp)
 4003154:	da000404 	addi	r8,sp,16
 4003158:	e47fef16 	blt	fp,r17,4003118 <__alt_data_end+0xfbffb118>
 400315c:	9021883a 	mov	r16,r18
 4003160:	a825883a 	mov	r18,r21
 4003164:	b02b883a 	mov	r21,r22
 4003168:	882d883a 	mov	r22,r17
 400316c:	dc402917 	ldw	r17,164(sp)
 4003170:	d9002b17 	ldw	r4,172(sp)
 4003174:	1d87883a 	add	r3,r3,r22
 4003178:	10800044 	addi	r2,r2,1
 400317c:	41000015 	stw	r4,0(r8)
 4003180:	45800115 	stw	r22,4(r8)
 4003184:	d8c02015 	stw	r3,128(sp)
 4003188:	d8801f15 	stw	r2,124(sp)
 400318c:	010001c4 	movi	r4,7
 4003190:	2081ee16 	blt	r4,r2,400394c <___vfprintf_internal_r+0x1154>
 4003194:	42000204 	addi	r8,r8,8
 4003198:	9080400c 	andi	r2,r18,256
 400319c:	1001181e 	bne	r2,zero,4003600 <___vfprintf_internal_r+0xe08>
 40031a0:	d9402e17 	ldw	r5,184(sp)
 40031a4:	d8801f17 	ldw	r2,124(sp)
 40031a8:	44000015 	stw	r16,0(r8)
 40031ac:	1947883a 	add	r3,r3,r5
 40031b0:	10800044 	addi	r2,r2,1
 40031b4:	41400115 	stw	r5,4(r8)
 40031b8:	d8c02015 	stw	r3,128(sp)
 40031bc:	d8801f15 	stw	r2,124(sp)
 40031c0:	010001c4 	movi	r4,7
 40031c4:	2081d316 	blt	r4,r2,4003914 <___vfprintf_internal_r+0x111c>
 40031c8:	42000204 	addi	r8,r8,8
 40031cc:	9480010c 	andi	r18,r18,4
 40031d0:	90003226 	beq	r18,zero,400329c <___vfprintf_internal_r+0xaa4>
 40031d4:	d9403117 	ldw	r5,196(sp)
 40031d8:	d8802a17 	ldw	r2,168(sp)
 40031dc:	28a1c83a 	sub	r16,r5,r2
 40031e0:	04002e0e 	bge	zero,r16,400329c <___vfprintf_internal_r+0xaa4>
 40031e4:	04400404 	movi	r17,16
 40031e8:	d8801f17 	ldw	r2,124(sp)
 40031ec:	8c04a20e 	bge	r17,r16,4004478 <___vfprintf_internal_r+0x1c80>
 40031f0:	01420034 	movhi	r5,2048
 40031f4:	2940c084 	addi	r5,r5,770
 40031f8:	d9403515 	stw	r5,212(sp)
 40031fc:	048001c4 	movi	r18,7
 4003200:	dcc02c17 	ldw	r19,176(sp)
 4003204:	00000306 	br	4003214 <___vfprintf_internal_r+0xa1c>
 4003208:	843ffc04 	addi	r16,r16,-16
 400320c:	42000204 	addi	r8,r8,8
 4003210:	8c00130e 	bge	r17,r16,4003260 <___vfprintf_internal_r+0xa68>
 4003214:	01020034 	movhi	r4,2048
 4003218:	18c00404 	addi	r3,r3,16
 400321c:	10800044 	addi	r2,r2,1
 4003220:	2100c084 	addi	r4,r4,770
 4003224:	41000015 	stw	r4,0(r8)
 4003228:	44400115 	stw	r17,4(r8)
 400322c:	d8c02015 	stw	r3,128(sp)
 4003230:	d8801f15 	stw	r2,124(sp)
 4003234:	90bff40e 	bge	r18,r2,4003208 <__alt_data_end+0xfbffb208>
 4003238:	d9801e04 	addi	r6,sp,120
 400323c:	b80b883a 	mov	r5,r23
 4003240:	9809883a 	mov	r4,r19
 4003244:	4009f5c0 	call	4009f5c <__sprint_r>
 4003248:	103e6d1e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 400324c:	843ffc04 	addi	r16,r16,-16
 4003250:	d8c02017 	ldw	r3,128(sp)
 4003254:	d8801f17 	ldw	r2,124(sp)
 4003258:	da000404 	addi	r8,sp,16
 400325c:	8c3fed16 	blt	r17,r16,4003214 <__alt_data_end+0xfbffb214>
 4003260:	d9403517 	ldw	r5,212(sp)
 4003264:	1c07883a 	add	r3,r3,r16
 4003268:	10800044 	addi	r2,r2,1
 400326c:	41400015 	stw	r5,0(r8)
 4003270:	44000115 	stw	r16,4(r8)
 4003274:	d8c02015 	stw	r3,128(sp)
 4003278:	d8801f15 	stw	r2,124(sp)
 400327c:	010001c4 	movi	r4,7
 4003280:	2080060e 	bge	r4,r2,400329c <___vfprintf_internal_r+0xaa4>
 4003284:	d9002c17 	ldw	r4,176(sp)
 4003288:	d9801e04 	addi	r6,sp,120
 400328c:	b80b883a 	mov	r5,r23
 4003290:	4009f5c0 	call	4009f5c <__sprint_r>
 4003294:	103e5a1e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 4003298:	d8c02017 	ldw	r3,128(sp)
 400329c:	d8803117 	ldw	r2,196(sp)
 40032a0:	d9002a17 	ldw	r4,168(sp)
 40032a4:	1100010e 	bge	r2,r4,40032ac <___vfprintf_internal_r+0xab4>
 40032a8:	2005883a 	mov	r2,r4
 40032ac:	d9402f17 	ldw	r5,188(sp)
 40032b0:	288b883a 	add	r5,r5,r2
 40032b4:	d9402f15 	stw	r5,188(sp)
 40032b8:	18019e1e 	bne	r3,zero,4003934 <___vfprintf_internal_r+0x113c>
 40032bc:	a8800007 	ldb	r2,0(r21)
 40032c0:	d8001f15 	stw	zero,124(sp)
 40032c4:	da000404 	addi	r8,sp,16
 40032c8:	103d851e 	bne	r2,zero,40028e0 <__alt_data_end+0xfbffa8e0>
 40032cc:	a821883a 	mov	r16,r21
 40032d0:	003d9b06 	br	4002940 <__alt_data_end+0xfbffa940>
 40032d4:	18c03fcc 	andi	r3,r3,255
 40032d8:	1805c11e 	bne	r3,zero,40049e0 <___vfprintf_internal_r+0x21e8>
 40032dc:	94800414 	ori	r18,r18,16
 40032e0:	9080080c 	andi	r2,r18,32
 40032e4:	10020c26 	beq	r2,zero,4003b18 <___vfprintf_internal_r+0x1320>
 40032e8:	d8802d17 	ldw	r2,180(sp)
 40032ec:	d9002917 	ldw	r4,164(sp)
 40032f0:	d8002785 	stb	zero,158(sp)
 40032f4:	10c00204 	addi	r3,r2,8
 40032f8:	14c00017 	ldw	r19,0(r2)
 40032fc:	15800117 	ldw	r22,4(r2)
 4003300:	20040f16 	blt	r4,zero,4004340 <___vfprintf_internal_r+0x1b48>
 4003304:	013fdfc4 	movi	r4,-129
 4003308:	9d84b03a 	or	r2,r19,r22
 400330c:	d8c02d15 	stw	r3,180(sp)
 4003310:	9124703a 	and	r18,r18,r4
 4003314:	0039883a 	mov	fp,zero
 4003318:	103e891e 	bne	r2,zero,4002d40 <__alt_data_end+0xfbffad40>
 400331c:	d9002917 	ldw	r4,164(sp)
 4003320:	2002c11e 	bne	r4,zero,4003e28 <___vfprintf_internal_r+0x1630>
 4003324:	d8002915 	stw	zero,164(sp)
 4003328:	d8002e15 	stw	zero,184(sp)
 400332c:	dc001e04 	addi	r16,sp,120
 4003330:	003ef806 	br	4002f14 <__alt_data_end+0xfbffaf14>
 4003334:	18c03fcc 	andi	r3,r3,255
 4003338:	18059d1e 	bne	r3,zero,40049b0 <___vfprintf_internal_r+0x21b8>
 400333c:	01420034 	movhi	r5,2048
 4003340:	2940b004 	addi	r5,r5,704
 4003344:	d9403915 	stw	r5,228(sp)
 4003348:	9080080c 	andi	r2,r18,32
 400334c:	10005226 	beq	r2,zero,4003498 <___vfprintf_internal_r+0xca0>
 4003350:	d8802d17 	ldw	r2,180(sp)
 4003354:	14c00017 	ldw	r19,0(r2)
 4003358:	15800117 	ldw	r22,4(r2)
 400335c:	10800204 	addi	r2,r2,8
 4003360:	d8802d15 	stw	r2,180(sp)
 4003364:	9080004c 	andi	r2,r18,1
 4003368:	10019026 	beq	r2,zero,40039ac <___vfprintf_internal_r+0x11b4>
 400336c:	9d84b03a 	or	r2,r19,r22
 4003370:	10036926 	beq	r2,zero,4004118 <___vfprintf_internal_r+0x1920>
 4003374:	d8c02917 	ldw	r3,164(sp)
 4003378:	00800c04 	movi	r2,48
 400337c:	d8802705 	stb	r2,156(sp)
 4003380:	dc402745 	stb	r17,157(sp)
 4003384:	d8002785 	stb	zero,158(sp)
 4003388:	90800094 	ori	r2,r18,2
 400338c:	18045d16 	blt	r3,zero,4004504 <___vfprintf_internal_r+0x1d0c>
 4003390:	00bfdfc4 	movi	r2,-129
 4003394:	90a4703a 	and	r18,r18,r2
 4003398:	94800094 	ori	r18,r18,2
 400339c:	0039883a 	mov	fp,zero
 40033a0:	d9003917 	ldw	r4,228(sp)
 40033a4:	dc001e04 	addi	r16,sp,120
 40033a8:	988003cc 	andi	r2,r19,15
 40033ac:	b006973a 	slli	r3,r22,28
 40033b0:	2085883a 	add	r2,r4,r2
 40033b4:	9826d13a 	srli	r19,r19,4
 40033b8:	10800003 	ldbu	r2,0(r2)
 40033bc:	b02cd13a 	srli	r22,r22,4
 40033c0:	843fffc4 	addi	r16,r16,-1
 40033c4:	1ce6b03a 	or	r19,r3,r19
 40033c8:	80800005 	stb	r2,0(r16)
 40033cc:	9d84b03a 	or	r2,r19,r22
 40033d0:	103ff51e 	bne	r2,zero,40033a8 <__alt_data_end+0xfbffb3a8>
 40033d4:	d8c02817 	ldw	r3,160(sp)
 40033d8:	1c07c83a 	sub	r3,r3,r16
 40033dc:	d8c02e15 	stw	r3,184(sp)
 40033e0:	003ecc06 	br	4002f14 <__alt_data_end+0xfbffaf14>
 40033e4:	18c03fcc 	andi	r3,r3,255
 40033e8:	183e9f26 	beq	r3,zero,4002e68 <__alt_data_end+0xfbffae68>
 40033ec:	d9c02785 	stb	r7,158(sp)
 40033f0:	003e9d06 	br	4002e68 <__alt_data_end+0xfbffae68>
 40033f4:	00c00044 	movi	r3,1
 40033f8:	01c00ac4 	movi	r7,43
 40033fc:	ac400007 	ldb	r17,0(r21)
 4003400:	003d5e06 	br	400297c <__alt_data_end+0xfbffa97c>
 4003404:	94800814 	ori	r18,r18,32
 4003408:	ac400007 	ldb	r17,0(r21)
 400340c:	003d5b06 	br	400297c <__alt_data_end+0xfbffa97c>
 4003410:	d8c02d17 	ldw	r3,180(sp)
 4003414:	d8002785 	stb	zero,158(sp)
 4003418:	1c000017 	ldw	r16,0(r3)
 400341c:	1cc00104 	addi	r19,r3,4
 4003420:	80041926 	beq	r16,zero,4004488 <___vfprintf_internal_r+0x1c90>
 4003424:	d9002917 	ldw	r4,164(sp)
 4003428:	2003d016 	blt	r4,zero,400436c <___vfprintf_internal_r+0x1b74>
 400342c:	200d883a 	mov	r6,r4
 4003430:	000b883a 	mov	r5,zero
 4003434:	8009883a 	mov	r4,r16
 4003438:	da003d15 	stw	r8,244(sp)
 400343c:	40080080 	call	4008008 <memchr>
 4003440:	da003d17 	ldw	r8,244(sp)
 4003444:	10045426 	beq	r2,zero,4004598 <___vfprintf_internal_r+0x1da0>
 4003448:	1405c83a 	sub	r2,r2,r16
 400344c:	d8802e15 	stw	r2,184(sp)
 4003450:	1003cc16 	blt	r2,zero,4004384 <___vfprintf_internal_r+0x1b8c>
 4003454:	df002783 	ldbu	fp,158(sp)
 4003458:	d8802a15 	stw	r2,168(sp)
 400345c:	dcc02d15 	stw	r19,180(sp)
 4003460:	d8002915 	stw	zero,164(sp)
 4003464:	d8003215 	stw	zero,200(sp)
 4003468:	003eb006 	br	4002f2c <__alt_data_end+0xfbffaf2c>
 400346c:	18c03fcc 	andi	r3,r3,255
 4003470:	183f9b26 	beq	r3,zero,40032e0 <__alt_data_end+0xfbffb2e0>
 4003474:	d9c02785 	stb	r7,158(sp)
 4003478:	003f9906 	br	40032e0 <__alt_data_end+0xfbffb2e0>
 400347c:	18c03fcc 	andi	r3,r3,255
 4003480:	1805551e 	bne	r3,zero,40049d8 <___vfprintf_internal_r+0x21e0>
 4003484:	01420034 	movhi	r5,2048
 4003488:	2940b504 	addi	r5,r5,724
 400348c:	d9403915 	stw	r5,228(sp)
 4003490:	9080080c 	andi	r2,r18,32
 4003494:	103fae1e 	bne	r2,zero,4003350 <__alt_data_end+0xfbffb350>
 4003498:	9080040c 	andi	r2,r18,16
 400349c:	1002de26 	beq	r2,zero,4004018 <___vfprintf_internal_r+0x1820>
 40034a0:	d8c02d17 	ldw	r3,180(sp)
 40034a4:	002d883a 	mov	r22,zero
 40034a8:	1cc00017 	ldw	r19,0(r3)
 40034ac:	18c00104 	addi	r3,r3,4
 40034b0:	d8c02d15 	stw	r3,180(sp)
 40034b4:	003fab06 	br	4003364 <__alt_data_end+0xfbffb364>
 40034b8:	38803fcc 	andi	r2,r7,255
 40034bc:	1080201c 	xori	r2,r2,128
 40034c0:	10bfe004 	addi	r2,r2,-128
 40034c4:	1002d21e 	bne	r2,zero,4004010 <___vfprintf_internal_r+0x1818>
 40034c8:	00c00044 	movi	r3,1
 40034cc:	01c00804 	movi	r7,32
 40034d0:	ac400007 	ldb	r17,0(r21)
 40034d4:	003d2906 	br	400297c <__alt_data_end+0xfbffa97c>
 40034d8:	94800054 	ori	r18,r18,1
 40034dc:	ac400007 	ldb	r17,0(r21)
 40034e0:	003d2606 	br	400297c <__alt_data_end+0xfbffa97c>
 40034e4:	18c03fcc 	andi	r3,r3,255
 40034e8:	183e0526 	beq	r3,zero,4002d00 <__alt_data_end+0xfbffad00>
 40034ec:	d9c02785 	stb	r7,158(sp)
 40034f0:	003e0306 	br	4002d00 <__alt_data_end+0xfbffad00>
 40034f4:	94801014 	ori	r18,r18,64
 40034f8:	ac400007 	ldb	r17,0(r21)
 40034fc:	003d1f06 	br	400297c <__alt_data_end+0xfbffa97c>
 4003500:	ac400007 	ldb	r17,0(r21)
 4003504:	8a438726 	beq	r17,r9,4004324 <___vfprintf_internal_r+0x1b2c>
 4003508:	94800414 	ori	r18,r18,16
 400350c:	003d1b06 	br	400297c <__alt_data_end+0xfbffa97c>
 4003510:	18c03fcc 	andi	r3,r3,255
 4003514:	1805341e 	bne	r3,zero,40049e8 <___vfprintf_internal_r+0x21f0>
 4003518:	9080080c 	andi	r2,r18,32
 400351c:	1002cd26 	beq	r2,zero,4004054 <___vfprintf_internal_r+0x185c>
 4003520:	d9402d17 	ldw	r5,180(sp)
 4003524:	d9002f17 	ldw	r4,188(sp)
 4003528:	28800017 	ldw	r2,0(r5)
 400352c:	2007d7fa 	srai	r3,r4,31
 4003530:	29400104 	addi	r5,r5,4
 4003534:	d9402d15 	stw	r5,180(sp)
 4003538:	11000015 	stw	r4,0(r2)
 400353c:	10c00115 	stw	r3,4(r2)
 4003540:	003ce506 	br	40028d8 <__alt_data_end+0xfbffa8d8>
 4003544:	d8c02d17 	ldw	r3,180(sp)
 4003548:	d9002d17 	ldw	r4,180(sp)
 400354c:	d8002785 	stb	zero,158(sp)
 4003550:	18800017 	ldw	r2,0(r3)
 4003554:	21000104 	addi	r4,r4,4
 4003558:	00c00044 	movi	r3,1
 400355c:	d8c02a15 	stw	r3,168(sp)
 4003560:	d8801405 	stb	r2,80(sp)
 4003564:	d9002d15 	stw	r4,180(sp)
 4003568:	d8c02e15 	stw	r3,184(sp)
 400356c:	d8002915 	stw	zero,164(sp)
 4003570:	d8003215 	stw	zero,200(sp)
 4003574:	dc001404 	addi	r16,sp,80
 4003578:	0039883a 	mov	fp,zero
 400357c:	003e7206 	br	4002f48 <__alt_data_end+0xfbffaf48>
 4003580:	01020034 	movhi	r4,2048
 4003584:	2100b504 	addi	r4,r4,724
 4003588:	0039883a 	mov	fp,zero
 400358c:	d9003915 	stw	r4,228(sp)
 4003590:	04401e04 	movi	r17,120
 4003594:	003f8206 	br	40033a0 <__alt_data_end+0xfbffb3a0>
 4003598:	18c03fcc 	andi	r3,r3,255
 400359c:	1805061e 	bne	r3,zero,40049b8 <___vfprintf_internal_r+0x21c0>
 40035a0:	883d9126 	beq	r17,zero,4002be8 <__alt_data_end+0xfbffabe8>
 40035a4:	00c00044 	movi	r3,1
 40035a8:	d8c02a15 	stw	r3,168(sp)
 40035ac:	dc401405 	stb	r17,80(sp)
 40035b0:	d8002785 	stb	zero,158(sp)
 40035b4:	003fec06 	br	4003568 <__alt_data_end+0xfbffb568>
 40035b8:	01420034 	movhi	r5,2048
 40035bc:	2940b504 	addi	r5,r5,724
 40035c0:	d9403915 	stw	r5,228(sp)
 40035c4:	d8c02d15 	stw	r3,180(sp)
 40035c8:	1025883a 	mov	r18,r2
 40035cc:	04401e04 	movi	r17,120
 40035d0:	9d84b03a 	or	r2,r19,r22
 40035d4:	1000fc1e 	bne	r2,zero,40039c8 <___vfprintf_internal_r+0x11d0>
 40035d8:	0039883a 	mov	fp,zero
 40035dc:	00800084 	movi	r2,2
 40035e0:	10803fcc 	andi	r2,r2,255
 40035e4:	00c00044 	movi	r3,1
 40035e8:	10c20f26 	beq	r2,r3,4003e28 <___vfprintf_internal_r+0x1630>
 40035ec:	00c00084 	movi	r3,2
 40035f0:	10fd6326 	beq	r2,r3,4002b80 <__alt_data_end+0xfbffab80>
 40035f4:	003e2d06 	br	4002eac <__alt_data_end+0xfbffaeac>
 40035f8:	d8c02017 	ldw	r3,128(sp)
 40035fc:	003e9306 	br	400304c <__alt_data_end+0xfbffb04c>
 4003600:	00801944 	movi	r2,101
 4003604:	14407e0e 	bge	r2,r17,4003800 <___vfprintf_internal_r+0x1008>
 4003608:	d9003617 	ldw	r4,216(sp)
 400360c:	d9403817 	ldw	r5,224(sp)
 4003610:	000d883a 	mov	r6,zero
 4003614:	000f883a 	mov	r7,zero
 4003618:	d8c03c15 	stw	r3,240(sp)
 400361c:	da003d15 	stw	r8,244(sp)
 4003620:	400d1380 	call	400d138 <__eqdf2>
 4003624:	d8c03c17 	ldw	r3,240(sp)
 4003628:	da003d17 	ldw	r8,244(sp)
 400362c:	1000f71e 	bne	r2,zero,4003a0c <___vfprintf_internal_r+0x1214>
 4003630:	d8801f17 	ldw	r2,124(sp)
 4003634:	01020034 	movhi	r4,2048
 4003638:	2100bc04 	addi	r4,r4,752
 400363c:	18c00044 	addi	r3,r3,1
 4003640:	10800044 	addi	r2,r2,1
 4003644:	41000015 	stw	r4,0(r8)
 4003648:	01000044 	movi	r4,1
 400364c:	41000115 	stw	r4,4(r8)
 4003650:	d8c02015 	stw	r3,128(sp)
 4003654:	d8801f15 	stw	r2,124(sp)
 4003658:	010001c4 	movi	r4,7
 400365c:	2082b816 	blt	r4,r2,4004140 <___vfprintf_internal_r+0x1948>
 4003660:	42000204 	addi	r8,r8,8
 4003664:	d8802617 	ldw	r2,152(sp)
 4003668:	d9403317 	ldw	r5,204(sp)
 400366c:	11400216 	blt	r2,r5,4003678 <___vfprintf_internal_r+0xe80>
 4003670:	9080004c 	andi	r2,r18,1
 4003674:	103ed526 	beq	r2,zero,40031cc <__alt_data_end+0xfbffb1cc>
 4003678:	d8803717 	ldw	r2,220(sp)
 400367c:	d9003417 	ldw	r4,208(sp)
 4003680:	d9403717 	ldw	r5,220(sp)
 4003684:	1887883a 	add	r3,r3,r2
 4003688:	d8801f17 	ldw	r2,124(sp)
 400368c:	41000015 	stw	r4,0(r8)
 4003690:	41400115 	stw	r5,4(r8)
 4003694:	10800044 	addi	r2,r2,1
 4003698:	d8c02015 	stw	r3,128(sp)
 400369c:	d8801f15 	stw	r2,124(sp)
 40036a0:	010001c4 	movi	r4,7
 40036a4:	20832916 	blt	r4,r2,400434c <___vfprintf_internal_r+0x1b54>
 40036a8:	42000204 	addi	r8,r8,8
 40036ac:	d8803317 	ldw	r2,204(sp)
 40036b0:	143fffc4 	addi	r16,r2,-1
 40036b4:	043ec50e 	bge	zero,r16,40031cc <__alt_data_end+0xfbffb1cc>
 40036b8:	04400404 	movi	r17,16
 40036bc:	d8801f17 	ldw	r2,124(sp)
 40036c0:	8c00880e 	bge	r17,r16,40038e4 <___vfprintf_internal_r+0x10ec>
 40036c4:	01420034 	movhi	r5,2048
 40036c8:	2940bc84 	addi	r5,r5,754
 40036cc:	d9402b15 	stw	r5,172(sp)
 40036d0:	058001c4 	movi	r22,7
 40036d4:	dcc02c17 	ldw	r19,176(sp)
 40036d8:	00000306 	br	40036e8 <___vfprintf_internal_r+0xef0>
 40036dc:	42000204 	addi	r8,r8,8
 40036e0:	843ffc04 	addi	r16,r16,-16
 40036e4:	8c00820e 	bge	r17,r16,40038f0 <___vfprintf_internal_r+0x10f8>
 40036e8:	18c00404 	addi	r3,r3,16
 40036ec:	10800044 	addi	r2,r2,1
 40036f0:	45000015 	stw	r20,0(r8)
 40036f4:	44400115 	stw	r17,4(r8)
 40036f8:	d8c02015 	stw	r3,128(sp)
 40036fc:	d8801f15 	stw	r2,124(sp)
 4003700:	b0bff60e 	bge	r22,r2,40036dc <__alt_data_end+0xfbffb6dc>
 4003704:	d9801e04 	addi	r6,sp,120
 4003708:	b80b883a 	mov	r5,r23
 400370c:	9809883a 	mov	r4,r19
 4003710:	4009f5c0 	call	4009f5c <__sprint_r>
 4003714:	103d3a1e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 4003718:	d8c02017 	ldw	r3,128(sp)
 400371c:	d8801f17 	ldw	r2,124(sp)
 4003720:	da000404 	addi	r8,sp,16
 4003724:	003fee06 	br	40036e0 <__alt_data_end+0xfbffb6e0>
 4003728:	d9403117 	ldw	r5,196(sp)
 400372c:	d8802a17 	ldw	r2,168(sp)
 4003730:	28adc83a 	sub	r22,r5,r2
 4003734:	05be630e 	bge	zero,r22,40030c4 <__alt_data_end+0xfbffb0c4>
 4003738:	07000404 	movi	fp,16
 400373c:	d8801f17 	ldw	r2,124(sp)
 4003740:	e5838f0e 	bge	fp,r22,4004580 <___vfprintf_internal_r+0x1d88>
 4003744:	01420034 	movhi	r5,2048
 4003748:	2940bc84 	addi	r5,r5,754
 400374c:	dc403015 	stw	r17,192(sp)
 4003750:	d9402b15 	stw	r5,172(sp)
 4003754:	b023883a 	mov	r17,r22
 4003758:	04c001c4 	movi	r19,7
 400375c:	a82d883a 	mov	r22,r21
 4003760:	902b883a 	mov	r21,r18
 4003764:	8025883a 	mov	r18,r16
 4003768:	dc002c17 	ldw	r16,176(sp)
 400376c:	00000306 	br	400377c <___vfprintf_internal_r+0xf84>
 4003770:	8c7ffc04 	addi	r17,r17,-16
 4003774:	42000204 	addi	r8,r8,8
 4003778:	e440110e 	bge	fp,r17,40037c0 <___vfprintf_internal_r+0xfc8>
 400377c:	18c00404 	addi	r3,r3,16
 4003780:	10800044 	addi	r2,r2,1
 4003784:	45000015 	stw	r20,0(r8)
 4003788:	47000115 	stw	fp,4(r8)
 400378c:	d8c02015 	stw	r3,128(sp)
 4003790:	d8801f15 	stw	r2,124(sp)
 4003794:	98bff60e 	bge	r19,r2,4003770 <__alt_data_end+0xfbffb770>
 4003798:	d9801e04 	addi	r6,sp,120
 400379c:	b80b883a 	mov	r5,r23
 40037a0:	8009883a 	mov	r4,r16
 40037a4:	4009f5c0 	call	4009f5c <__sprint_r>
 40037a8:	103d151e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 40037ac:	8c7ffc04 	addi	r17,r17,-16
 40037b0:	d8c02017 	ldw	r3,128(sp)
 40037b4:	d8801f17 	ldw	r2,124(sp)
 40037b8:	da000404 	addi	r8,sp,16
 40037bc:	e47fef16 	blt	fp,r17,400377c <__alt_data_end+0xfbffb77c>
 40037c0:	9021883a 	mov	r16,r18
 40037c4:	a825883a 	mov	r18,r21
 40037c8:	b02b883a 	mov	r21,r22
 40037cc:	882d883a 	mov	r22,r17
 40037d0:	dc403017 	ldw	r17,192(sp)
 40037d4:	d9002b17 	ldw	r4,172(sp)
 40037d8:	1d87883a 	add	r3,r3,r22
 40037dc:	10800044 	addi	r2,r2,1
 40037e0:	41000015 	stw	r4,0(r8)
 40037e4:	45800115 	stw	r22,4(r8)
 40037e8:	d8c02015 	stw	r3,128(sp)
 40037ec:	d8801f15 	stw	r2,124(sp)
 40037f0:	010001c4 	movi	r4,7
 40037f4:	20818e16 	blt	r4,r2,4003e30 <___vfprintf_internal_r+0x1638>
 40037f8:	42000204 	addi	r8,r8,8
 40037fc:	003e3106 	br	40030c4 <__alt_data_end+0xfbffb0c4>
 4003800:	d9403317 	ldw	r5,204(sp)
 4003804:	00800044 	movi	r2,1
 4003808:	18c00044 	addi	r3,r3,1
 400380c:	1141530e 	bge	r2,r5,4003d5c <___vfprintf_internal_r+0x1564>
 4003810:	dc401f17 	ldw	r17,124(sp)
 4003814:	00800044 	movi	r2,1
 4003818:	40800115 	stw	r2,4(r8)
 400381c:	8c400044 	addi	r17,r17,1
 4003820:	44000015 	stw	r16,0(r8)
 4003824:	d8c02015 	stw	r3,128(sp)
 4003828:	dc401f15 	stw	r17,124(sp)
 400382c:	008001c4 	movi	r2,7
 4003830:	14416b16 	blt	r2,r17,4003de0 <___vfprintf_internal_r+0x15e8>
 4003834:	42000204 	addi	r8,r8,8
 4003838:	d8803717 	ldw	r2,220(sp)
 400383c:	d9003417 	ldw	r4,208(sp)
 4003840:	8c400044 	addi	r17,r17,1
 4003844:	10c7883a 	add	r3,r2,r3
 4003848:	40800115 	stw	r2,4(r8)
 400384c:	41000015 	stw	r4,0(r8)
 4003850:	d8c02015 	stw	r3,128(sp)
 4003854:	dc401f15 	stw	r17,124(sp)
 4003858:	008001c4 	movi	r2,7
 400385c:	14416916 	blt	r2,r17,4003e04 <___vfprintf_internal_r+0x160c>
 4003860:	45800204 	addi	r22,r8,8
 4003864:	d9003617 	ldw	r4,216(sp)
 4003868:	d9403817 	ldw	r5,224(sp)
 400386c:	000d883a 	mov	r6,zero
 4003870:	000f883a 	mov	r7,zero
 4003874:	d8c03c15 	stw	r3,240(sp)
 4003878:	400d1380 	call	400d138 <__eqdf2>
 400387c:	d8c03c17 	ldw	r3,240(sp)
 4003880:	1000bc26 	beq	r2,zero,4003b74 <___vfprintf_internal_r+0x137c>
 4003884:	d9403317 	ldw	r5,204(sp)
 4003888:	84000044 	addi	r16,r16,1
 400388c:	8c400044 	addi	r17,r17,1
 4003890:	28bfffc4 	addi	r2,r5,-1
 4003894:	1887883a 	add	r3,r3,r2
 4003898:	b0800115 	stw	r2,4(r22)
 400389c:	b4000015 	stw	r16,0(r22)
 40038a0:	d8c02015 	stw	r3,128(sp)
 40038a4:	dc401f15 	stw	r17,124(sp)
 40038a8:	008001c4 	movi	r2,7
 40038ac:	14414316 	blt	r2,r17,4003dbc <___vfprintf_internal_r+0x15c4>
 40038b0:	b5800204 	addi	r22,r22,8
 40038b4:	d9003a17 	ldw	r4,232(sp)
 40038b8:	df0022c4 	addi	fp,sp,139
 40038bc:	8c400044 	addi	r17,r17,1
 40038c0:	20c7883a 	add	r3,r4,r3
 40038c4:	b7000015 	stw	fp,0(r22)
 40038c8:	b1000115 	stw	r4,4(r22)
 40038cc:	d8c02015 	stw	r3,128(sp)
 40038d0:	dc401f15 	stw	r17,124(sp)
 40038d4:	008001c4 	movi	r2,7
 40038d8:	14400e16 	blt	r2,r17,4003914 <___vfprintf_internal_r+0x111c>
 40038dc:	b2000204 	addi	r8,r22,8
 40038e0:	003e3a06 	br	40031cc <__alt_data_end+0xfbffb1cc>
 40038e4:	01020034 	movhi	r4,2048
 40038e8:	2100bc84 	addi	r4,r4,754
 40038ec:	d9002b15 	stw	r4,172(sp)
 40038f0:	d9002b17 	ldw	r4,172(sp)
 40038f4:	1c07883a 	add	r3,r3,r16
 40038f8:	44000115 	stw	r16,4(r8)
 40038fc:	41000015 	stw	r4,0(r8)
 4003900:	10800044 	addi	r2,r2,1
 4003904:	d8c02015 	stw	r3,128(sp)
 4003908:	d8801f15 	stw	r2,124(sp)
 400390c:	010001c4 	movi	r4,7
 4003910:	20be2d0e 	bge	r4,r2,40031c8 <__alt_data_end+0xfbffb1c8>
 4003914:	d9002c17 	ldw	r4,176(sp)
 4003918:	d9801e04 	addi	r6,sp,120
 400391c:	b80b883a 	mov	r5,r23
 4003920:	4009f5c0 	call	4009f5c <__sprint_r>
 4003924:	103cb61e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 4003928:	d8c02017 	ldw	r3,128(sp)
 400392c:	da000404 	addi	r8,sp,16
 4003930:	003e2606 	br	40031cc <__alt_data_end+0xfbffb1cc>
 4003934:	d9002c17 	ldw	r4,176(sp)
 4003938:	d9801e04 	addi	r6,sp,120
 400393c:	b80b883a 	mov	r5,r23
 4003940:	4009f5c0 	call	4009f5c <__sprint_r>
 4003944:	103e5d26 	beq	r2,zero,40032bc <__alt_data_end+0xfbffb2bc>
 4003948:	003cad06 	br	4002c00 <__alt_data_end+0xfbffac00>
 400394c:	d9002c17 	ldw	r4,176(sp)
 4003950:	d9801e04 	addi	r6,sp,120
 4003954:	b80b883a 	mov	r5,r23
 4003958:	4009f5c0 	call	4009f5c <__sprint_r>
 400395c:	103ca81e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 4003960:	d8c02017 	ldw	r3,128(sp)
 4003964:	da000404 	addi	r8,sp,16
 4003968:	003e0b06 	br	4003198 <__alt_data_end+0xfbffb198>
 400396c:	d9002c17 	ldw	r4,176(sp)
 4003970:	d9801e04 	addi	r6,sp,120
 4003974:	b80b883a 	mov	r5,r23
 4003978:	4009f5c0 	call	4009f5c <__sprint_r>
 400397c:	103ca01e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 4003980:	d8c02017 	ldw	r3,128(sp)
 4003984:	da000404 	addi	r8,sp,16
 4003988:	003dbd06 	br	4003080 <__alt_data_end+0xfbffb080>
 400398c:	d9002c17 	ldw	r4,176(sp)
 4003990:	d9801e04 	addi	r6,sp,120
 4003994:	b80b883a 	mov	r5,r23
 4003998:	4009f5c0 	call	4009f5c <__sprint_r>
 400399c:	103c981e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 40039a0:	d8c02017 	ldw	r3,128(sp)
 40039a4:	da000404 	addi	r8,sp,16
 40039a8:	003dc306 	br	40030b8 <__alt_data_end+0xfbffb0b8>
 40039ac:	d8802917 	ldw	r2,164(sp)
 40039b0:	d8002785 	stb	zero,158(sp)
 40039b4:	103f0616 	blt	r2,zero,40035d0 <__alt_data_end+0xfbffb5d0>
 40039b8:	00ffdfc4 	movi	r3,-129
 40039bc:	9d84b03a 	or	r2,r19,r22
 40039c0:	90e4703a 	and	r18,r18,r3
 40039c4:	103c6b26 	beq	r2,zero,4002b74 <__alt_data_end+0xfbffab74>
 40039c8:	0039883a 	mov	fp,zero
 40039cc:	003e7406 	br	40033a0 <__alt_data_end+0xfbffb3a0>
 40039d0:	9080040c 	andi	r2,r18,16
 40039d4:	1001b326 	beq	r2,zero,40040a4 <___vfprintf_internal_r+0x18ac>
 40039d8:	d9002d17 	ldw	r4,180(sp)
 40039dc:	d9402917 	ldw	r5,164(sp)
 40039e0:	d8002785 	stb	zero,158(sp)
 40039e4:	20800104 	addi	r2,r4,4
 40039e8:	24c00017 	ldw	r19,0(r4)
 40039ec:	002d883a 	mov	r22,zero
 40039f0:	2801b516 	blt	r5,zero,40040c8 <___vfprintf_internal_r+0x18d0>
 40039f4:	00ffdfc4 	movi	r3,-129
 40039f8:	d8802d15 	stw	r2,180(sp)
 40039fc:	90e4703a 	and	r18,r18,r3
 4003a00:	983d2726 	beq	r19,zero,4002ea0 <__alt_data_end+0xfbffaea0>
 4003a04:	0039883a 	mov	fp,zero
 4003a08:	003d2a06 	br	4002eb4 <__alt_data_end+0xfbffaeb4>
 4003a0c:	dc402617 	ldw	r17,152(sp)
 4003a10:	0441d30e 	bge	zero,r17,4004160 <___vfprintf_internal_r+0x1968>
 4003a14:	dc403217 	ldw	r17,200(sp)
 4003a18:	d8803317 	ldw	r2,204(sp)
 4003a1c:	1440010e 	bge	r2,r17,4003a24 <___vfprintf_internal_r+0x122c>
 4003a20:	1023883a 	mov	r17,r2
 4003a24:	04400a0e 	bge	zero,r17,4003a50 <___vfprintf_internal_r+0x1258>
 4003a28:	d8801f17 	ldw	r2,124(sp)
 4003a2c:	1c47883a 	add	r3,r3,r17
 4003a30:	44000015 	stw	r16,0(r8)
 4003a34:	10800044 	addi	r2,r2,1
 4003a38:	44400115 	stw	r17,4(r8)
 4003a3c:	d8c02015 	stw	r3,128(sp)
 4003a40:	d8801f15 	stw	r2,124(sp)
 4003a44:	010001c4 	movi	r4,7
 4003a48:	20826516 	blt	r4,r2,40043e0 <___vfprintf_internal_r+0x1be8>
 4003a4c:	42000204 	addi	r8,r8,8
 4003a50:	88026116 	blt	r17,zero,40043d8 <___vfprintf_internal_r+0x1be0>
 4003a54:	d9003217 	ldw	r4,200(sp)
 4003a58:	2463c83a 	sub	r17,r4,r17
 4003a5c:	04407b0e 	bge	zero,r17,4003c4c <___vfprintf_internal_r+0x1454>
 4003a60:	05800404 	movi	r22,16
 4003a64:	d8801f17 	ldw	r2,124(sp)
 4003a68:	b4419d0e 	bge	r22,r17,40040e0 <___vfprintf_internal_r+0x18e8>
 4003a6c:	01020034 	movhi	r4,2048
 4003a70:	2100bc84 	addi	r4,r4,754
 4003a74:	d9002b15 	stw	r4,172(sp)
 4003a78:	070001c4 	movi	fp,7
 4003a7c:	dcc02c17 	ldw	r19,176(sp)
 4003a80:	00000306 	br	4003a90 <___vfprintf_internal_r+0x1298>
 4003a84:	42000204 	addi	r8,r8,8
 4003a88:	8c7ffc04 	addi	r17,r17,-16
 4003a8c:	b441970e 	bge	r22,r17,40040ec <___vfprintf_internal_r+0x18f4>
 4003a90:	18c00404 	addi	r3,r3,16
 4003a94:	10800044 	addi	r2,r2,1
 4003a98:	45000015 	stw	r20,0(r8)
 4003a9c:	45800115 	stw	r22,4(r8)
 4003aa0:	d8c02015 	stw	r3,128(sp)
 4003aa4:	d8801f15 	stw	r2,124(sp)
 4003aa8:	e0bff60e 	bge	fp,r2,4003a84 <__alt_data_end+0xfbffba84>
 4003aac:	d9801e04 	addi	r6,sp,120
 4003ab0:	b80b883a 	mov	r5,r23
 4003ab4:	9809883a 	mov	r4,r19
 4003ab8:	4009f5c0 	call	4009f5c <__sprint_r>
 4003abc:	103c501e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 4003ac0:	d8c02017 	ldw	r3,128(sp)
 4003ac4:	d8801f17 	ldw	r2,124(sp)
 4003ac8:	da000404 	addi	r8,sp,16
 4003acc:	003fee06 	br	4003a88 <__alt_data_end+0xfbffba88>
 4003ad0:	d9002c17 	ldw	r4,176(sp)
 4003ad4:	d9801e04 	addi	r6,sp,120
 4003ad8:	b80b883a 	mov	r5,r23
 4003adc:	4009f5c0 	call	4009f5c <__sprint_r>
 4003ae0:	103c471e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 4003ae4:	d8c02017 	ldw	r3,128(sp)
 4003ae8:	df002787 	ldb	fp,158(sp)
 4003aec:	da000404 	addi	r8,sp,16
 4003af0:	003d5606 	br	400304c <__alt_data_end+0xfbffb04c>
 4003af4:	9080040c 	andi	r2,r18,16
 4003af8:	10016126 	beq	r2,zero,4004080 <___vfprintf_internal_r+0x1888>
 4003afc:	d8802d17 	ldw	r2,180(sp)
 4003b00:	14c00017 	ldw	r19,0(r2)
 4003b04:	10800104 	addi	r2,r2,4
 4003b08:	d8802d15 	stw	r2,180(sp)
 4003b0c:	982dd7fa 	srai	r22,r19,31
 4003b10:	b005883a 	mov	r2,r22
 4003b14:	003c8206 	br	4002d20 <__alt_data_end+0xfbffad20>
 4003b18:	9080040c 	andi	r2,r18,16
 4003b1c:	10003526 	beq	r2,zero,4003bf4 <___vfprintf_internal_r+0x13fc>
 4003b20:	d9402d17 	ldw	r5,180(sp)
 4003b24:	d8c02917 	ldw	r3,164(sp)
 4003b28:	d8002785 	stb	zero,158(sp)
 4003b2c:	28800104 	addi	r2,r5,4
 4003b30:	2cc00017 	ldw	r19,0(r5)
 4003b34:	002d883a 	mov	r22,zero
 4003b38:	18003716 	blt	r3,zero,4003c18 <___vfprintf_internal_r+0x1420>
 4003b3c:	00ffdfc4 	movi	r3,-129
 4003b40:	d8802d15 	stw	r2,180(sp)
 4003b44:	90e4703a 	and	r18,r18,r3
 4003b48:	0039883a 	mov	fp,zero
 4003b4c:	983df326 	beq	r19,zero,400331c <__alt_data_end+0xfbffb31c>
 4003b50:	00800244 	movi	r2,9
 4003b54:	14fc7b36 	bltu	r2,r19,4002d44 <__alt_data_end+0xfbffad44>
 4003b58:	d8c02817 	ldw	r3,160(sp)
 4003b5c:	dc001dc4 	addi	r16,sp,119
 4003b60:	9cc00c04 	addi	r19,r19,48
 4003b64:	1c07c83a 	sub	r3,r3,r16
 4003b68:	dcc01dc5 	stb	r19,119(sp)
 4003b6c:	d8c02e15 	stw	r3,184(sp)
 4003b70:	003ce806 	br	4002f14 <__alt_data_end+0xfbffaf14>
 4003b74:	d8803317 	ldw	r2,204(sp)
 4003b78:	143fffc4 	addi	r16,r2,-1
 4003b7c:	043f4d0e 	bge	zero,r16,40038b4 <__alt_data_end+0xfbffb8b4>
 4003b80:	07000404 	movi	fp,16
 4003b84:	e400810e 	bge	fp,r16,4003d8c <___vfprintf_internal_r+0x1594>
 4003b88:	01420034 	movhi	r5,2048
 4003b8c:	2940bc84 	addi	r5,r5,754
 4003b90:	d9402b15 	stw	r5,172(sp)
 4003b94:	01c001c4 	movi	r7,7
 4003b98:	dcc02c17 	ldw	r19,176(sp)
 4003b9c:	00000306 	br	4003bac <___vfprintf_internal_r+0x13b4>
 4003ba0:	b5800204 	addi	r22,r22,8
 4003ba4:	843ffc04 	addi	r16,r16,-16
 4003ba8:	e4007b0e 	bge	fp,r16,4003d98 <___vfprintf_internal_r+0x15a0>
 4003bac:	18c00404 	addi	r3,r3,16
 4003bb0:	8c400044 	addi	r17,r17,1
 4003bb4:	b5000015 	stw	r20,0(r22)
 4003bb8:	b7000115 	stw	fp,4(r22)
 4003bbc:	d8c02015 	stw	r3,128(sp)
 4003bc0:	dc401f15 	stw	r17,124(sp)
 4003bc4:	3c7ff60e 	bge	r7,r17,4003ba0 <__alt_data_end+0xfbffbba0>
 4003bc8:	d9801e04 	addi	r6,sp,120
 4003bcc:	b80b883a 	mov	r5,r23
 4003bd0:	9809883a 	mov	r4,r19
 4003bd4:	d9c03c15 	stw	r7,240(sp)
 4003bd8:	4009f5c0 	call	4009f5c <__sprint_r>
 4003bdc:	d9c03c17 	ldw	r7,240(sp)
 4003be0:	103c071e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 4003be4:	d8c02017 	ldw	r3,128(sp)
 4003be8:	dc401f17 	ldw	r17,124(sp)
 4003bec:	dd800404 	addi	r22,sp,16
 4003bf0:	003fec06 	br	4003ba4 <__alt_data_end+0xfbffbba4>
 4003bf4:	9080100c 	andi	r2,r18,64
 4003bf8:	d8002785 	stb	zero,158(sp)
 4003bfc:	10010e26 	beq	r2,zero,4004038 <___vfprintf_internal_r+0x1840>
 4003c00:	d9002d17 	ldw	r4,180(sp)
 4003c04:	d9402917 	ldw	r5,164(sp)
 4003c08:	002d883a 	mov	r22,zero
 4003c0c:	20800104 	addi	r2,r4,4
 4003c10:	24c0000b 	ldhu	r19,0(r4)
 4003c14:	283fc90e 	bge	r5,zero,4003b3c <__alt_data_end+0xfbffbb3c>
 4003c18:	d8802d15 	stw	r2,180(sp)
 4003c1c:	0039883a 	mov	fp,zero
 4003c20:	9d84b03a 	or	r2,r19,r22
 4003c24:	103c461e 	bne	r2,zero,4002d40 <__alt_data_end+0xfbffad40>
 4003c28:	00800044 	movi	r2,1
 4003c2c:	003e6c06 	br	40035e0 <__alt_data_end+0xfbffb5e0>
 4003c30:	d9002c17 	ldw	r4,176(sp)
 4003c34:	d9801e04 	addi	r6,sp,120
 4003c38:	b80b883a 	mov	r5,r23
 4003c3c:	4009f5c0 	call	4009f5c <__sprint_r>
 4003c40:	103bef1e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 4003c44:	d8c02017 	ldw	r3,128(sp)
 4003c48:	da000404 	addi	r8,sp,16
 4003c4c:	d9003217 	ldw	r4,200(sp)
 4003c50:	d8802617 	ldw	r2,152(sp)
 4003c54:	d9403317 	ldw	r5,204(sp)
 4003c58:	8123883a 	add	r17,r16,r4
 4003c5c:	11400216 	blt	r2,r5,4003c68 <___vfprintf_internal_r+0x1470>
 4003c60:	9100004c 	andi	r4,r18,1
 4003c64:	20000d26 	beq	r4,zero,4003c9c <___vfprintf_internal_r+0x14a4>
 4003c68:	d9003717 	ldw	r4,220(sp)
 4003c6c:	d9403417 	ldw	r5,208(sp)
 4003c70:	1907883a 	add	r3,r3,r4
 4003c74:	d9001f17 	ldw	r4,124(sp)
 4003c78:	41400015 	stw	r5,0(r8)
 4003c7c:	d9403717 	ldw	r5,220(sp)
 4003c80:	21000044 	addi	r4,r4,1
 4003c84:	d8c02015 	stw	r3,128(sp)
 4003c88:	41400115 	stw	r5,4(r8)
 4003c8c:	d9001f15 	stw	r4,124(sp)
 4003c90:	014001c4 	movi	r5,7
 4003c94:	2901e816 	blt	r5,r4,4004438 <___vfprintf_internal_r+0x1c40>
 4003c98:	42000204 	addi	r8,r8,8
 4003c9c:	d9003317 	ldw	r4,204(sp)
 4003ca0:	8121883a 	add	r16,r16,r4
 4003ca4:	2085c83a 	sub	r2,r4,r2
 4003ca8:	8461c83a 	sub	r16,r16,r17
 4003cac:	1400010e 	bge	r2,r16,4003cb4 <___vfprintf_internal_r+0x14bc>
 4003cb0:	1021883a 	mov	r16,r2
 4003cb4:	04000a0e 	bge	zero,r16,4003ce0 <___vfprintf_internal_r+0x14e8>
 4003cb8:	d9001f17 	ldw	r4,124(sp)
 4003cbc:	1c07883a 	add	r3,r3,r16
 4003cc0:	44400015 	stw	r17,0(r8)
 4003cc4:	21000044 	addi	r4,r4,1
 4003cc8:	44000115 	stw	r16,4(r8)
 4003ccc:	d8c02015 	stw	r3,128(sp)
 4003cd0:	d9001f15 	stw	r4,124(sp)
 4003cd4:	014001c4 	movi	r5,7
 4003cd8:	2901fb16 	blt	r5,r4,40044c8 <___vfprintf_internal_r+0x1cd0>
 4003cdc:	42000204 	addi	r8,r8,8
 4003ce0:	8001f716 	blt	r16,zero,40044c0 <___vfprintf_internal_r+0x1cc8>
 4003ce4:	1421c83a 	sub	r16,r2,r16
 4003ce8:	043d380e 	bge	zero,r16,40031cc <__alt_data_end+0xfbffb1cc>
 4003cec:	04400404 	movi	r17,16
 4003cf0:	d8801f17 	ldw	r2,124(sp)
 4003cf4:	8c3efb0e 	bge	r17,r16,40038e4 <__alt_data_end+0xfbffb8e4>
 4003cf8:	01420034 	movhi	r5,2048
 4003cfc:	2940bc84 	addi	r5,r5,754
 4003d00:	d9402b15 	stw	r5,172(sp)
 4003d04:	058001c4 	movi	r22,7
 4003d08:	dcc02c17 	ldw	r19,176(sp)
 4003d0c:	00000306 	br	4003d1c <___vfprintf_internal_r+0x1524>
 4003d10:	42000204 	addi	r8,r8,8
 4003d14:	843ffc04 	addi	r16,r16,-16
 4003d18:	8c3ef50e 	bge	r17,r16,40038f0 <__alt_data_end+0xfbffb8f0>
 4003d1c:	18c00404 	addi	r3,r3,16
 4003d20:	10800044 	addi	r2,r2,1
 4003d24:	45000015 	stw	r20,0(r8)
 4003d28:	44400115 	stw	r17,4(r8)
 4003d2c:	d8c02015 	stw	r3,128(sp)
 4003d30:	d8801f15 	stw	r2,124(sp)
 4003d34:	b0bff60e 	bge	r22,r2,4003d10 <__alt_data_end+0xfbffbd10>
 4003d38:	d9801e04 	addi	r6,sp,120
 4003d3c:	b80b883a 	mov	r5,r23
 4003d40:	9809883a 	mov	r4,r19
 4003d44:	4009f5c0 	call	4009f5c <__sprint_r>
 4003d48:	103bad1e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 4003d4c:	d8c02017 	ldw	r3,128(sp)
 4003d50:	d8801f17 	ldw	r2,124(sp)
 4003d54:	da000404 	addi	r8,sp,16
 4003d58:	003fee06 	br	4003d14 <__alt_data_end+0xfbffbd14>
 4003d5c:	9088703a 	and	r4,r18,r2
 4003d60:	203eab1e 	bne	r4,zero,4003810 <__alt_data_end+0xfbffb810>
 4003d64:	dc401f17 	ldw	r17,124(sp)
 4003d68:	40800115 	stw	r2,4(r8)
 4003d6c:	44000015 	stw	r16,0(r8)
 4003d70:	8c400044 	addi	r17,r17,1
 4003d74:	d8c02015 	stw	r3,128(sp)
 4003d78:	dc401f15 	stw	r17,124(sp)
 4003d7c:	008001c4 	movi	r2,7
 4003d80:	14400e16 	blt	r2,r17,4003dbc <___vfprintf_internal_r+0x15c4>
 4003d84:	45800204 	addi	r22,r8,8
 4003d88:	003eca06 	br	40038b4 <__alt_data_end+0xfbffb8b4>
 4003d8c:	01020034 	movhi	r4,2048
 4003d90:	2100bc84 	addi	r4,r4,754
 4003d94:	d9002b15 	stw	r4,172(sp)
 4003d98:	d8802b17 	ldw	r2,172(sp)
 4003d9c:	1c07883a 	add	r3,r3,r16
 4003da0:	8c400044 	addi	r17,r17,1
 4003da4:	b0800015 	stw	r2,0(r22)
 4003da8:	b4000115 	stw	r16,4(r22)
 4003dac:	d8c02015 	stw	r3,128(sp)
 4003db0:	dc401f15 	stw	r17,124(sp)
 4003db4:	008001c4 	movi	r2,7
 4003db8:	147ebd0e 	bge	r2,r17,40038b0 <__alt_data_end+0xfbffb8b0>
 4003dbc:	d9002c17 	ldw	r4,176(sp)
 4003dc0:	d9801e04 	addi	r6,sp,120
 4003dc4:	b80b883a 	mov	r5,r23
 4003dc8:	4009f5c0 	call	4009f5c <__sprint_r>
 4003dcc:	103b8c1e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 4003dd0:	d8c02017 	ldw	r3,128(sp)
 4003dd4:	dc401f17 	ldw	r17,124(sp)
 4003dd8:	dd800404 	addi	r22,sp,16
 4003ddc:	003eb506 	br	40038b4 <__alt_data_end+0xfbffb8b4>
 4003de0:	d9002c17 	ldw	r4,176(sp)
 4003de4:	d9801e04 	addi	r6,sp,120
 4003de8:	b80b883a 	mov	r5,r23
 4003dec:	4009f5c0 	call	4009f5c <__sprint_r>
 4003df0:	103b831e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 4003df4:	d8c02017 	ldw	r3,128(sp)
 4003df8:	dc401f17 	ldw	r17,124(sp)
 4003dfc:	da000404 	addi	r8,sp,16
 4003e00:	003e8d06 	br	4003838 <__alt_data_end+0xfbffb838>
 4003e04:	d9002c17 	ldw	r4,176(sp)
 4003e08:	d9801e04 	addi	r6,sp,120
 4003e0c:	b80b883a 	mov	r5,r23
 4003e10:	4009f5c0 	call	4009f5c <__sprint_r>
 4003e14:	103b7a1e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 4003e18:	d8c02017 	ldw	r3,128(sp)
 4003e1c:	dc401f17 	ldw	r17,124(sp)
 4003e20:	dd800404 	addi	r22,sp,16
 4003e24:	003e8f06 	br	4003864 <__alt_data_end+0xfbffb864>
 4003e28:	0027883a 	mov	r19,zero
 4003e2c:	003f4a06 	br	4003b58 <__alt_data_end+0xfbffbb58>
 4003e30:	d9002c17 	ldw	r4,176(sp)
 4003e34:	d9801e04 	addi	r6,sp,120
 4003e38:	b80b883a 	mov	r5,r23
 4003e3c:	4009f5c0 	call	4009f5c <__sprint_r>
 4003e40:	103b6f1e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 4003e44:	d8c02017 	ldw	r3,128(sp)
 4003e48:	da000404 	addi	r8,sp,16
 4003e4c:	003c9d06 	br	40030c4 <__alt_data_end+0xfbffb0c4>
 4003e50:	04e7c83a 	sub	r19,zero,r19
 4003e54:	9804c03a 	cmpne	r2,r19,zero
 4003e58:	05adc83a 	sub	r22,zero,r22
 4003e5c:	b0adc83a 	sub	r22,r22,r2
 4003e60:	d8802917 	ldw	r2,164(sp)
 4003e64:	07000b44 	movi	fp,45
 4003e68:	df002785 	stb	fp,158(sp)
 4003e6c:	10017b16 	blt	r2,zero,400445c <___vfprintf_internal_r+0x1c64>
 4003e70:	00bfdfc4 	movi	r2,-129
 4003e74:	90a4703a 	and	r18,r18,r2
 4003e78:	003bb106 	br	4002d40 <__alt_data_end+0xfbffad40>
 4003e7c:	d9003617 	ldw	r4,216(sp)
 4003e80:	d9403817 	ldw	r5,224(sp)
 4003e84:	da003d15 	stw	r8,244(sp)
 4003e88:	4009b800 	call	4009b80 <__fpclassifyd>
 4003e8c:	da003d17 	ldw	r8,244(sp)
 4003e90:	1000f026 	beq	r2,zero,4004254 <___vfprintf_internal_r+0x1a5c>
 4003e94:	d9002917 	ldw	r4,164(sp)
 4003e98:	05bff7c4 	movi	r22,-33
 4003e9c:	00bfffc4 	movi	r2,-1
 4003ea0:	8dac703a 	and	r22,r17,r22
 4003ea4:	20820026 	beq	r4,r2,40046a8 <___vfprintf_internal_r+0x1eb0>
 4003ea8:	008011c4 	movi	r2,71
 4003eac:	b081f726 	beq	r22,r2,400468c <___vfprintf_internal_r+0x1e94>
 4003eb0:	d9003817 	ldw	r4,224(sp)
 4003eb4:	90c04014 	ori	r3,r18,256
 4003eb8:	d8c02b15 	stw	r3,172(sp)
 4003ebc:	20021516 	blt	r4,zero,4004714 <___vfprintf_internal_r+0x1f1c>
 4003ec0:	dcc03817 	ldw	r19,224(sp)
 4003ec4:	d8002a05 	stb	zero,168(sp)
 4003ec8:	00801984 	movi	r2,102
 4003ecc:	8881f926 	beq	r17,r2,40046b4 <___vfprintf_internal_r+0x1ebc>
 4003ed0:	00801184 	movi	r2,70
 4003ed4:	88821c26 	beq	r17,r2,4004748 <___vfprintf_internal_r+0x1f50>
 4003ed8:	00801144 	movi	r2,69
 4003edc:	b081ef26 	beq	r22,r2,400469c <___vfprintf_internal_r+0x1ea4>
 4003ee0:	d8c02917 	ldw	r3,164(sp)
 4003ee4:	d8802104 	addi	r2,sp,132
 4003ee8:	d8800315 	stw	r2,12(sp)
 4003eec:	d9403617 	ldw	r5,216(sp)
 4003ef0:	d8802504 	addi	r2,sp,148
 4003ef4:	d9002c17 	ldw	r4,176(sp)
 4003ef8:	d8800215 	stw	r2,8(sp)
 4003efc:	d8802604 	addi	r2,sp,152
 4003f00:	d8c00015 	stw	r3,0(sp)
 4003f04:	d8800115 	stw	r2,4(sp)
 4003f08:	01c00084 	movi	r7,2
 4003f0c:	980d883a 	mov	r6,r19
 4003f10:	d8c03c15 	stw	r3,240(sp)
 4003f14:	da003d15 	stw	r8,244(sp)
 4003f18:	4004e1c0 	call	4004e1c <_dtoa_r>
 4003f1c:	1021883a 	mov	r16,r2
 4003f20:	008019c4 	movi	r2,103
 4003f24:	d8c03c17 	ldw	r3,240(sp)
 4003f28:	da003d17 	ldw	r8,244(sp)
 4003f2c:	88817126 	beq	r17,r2,40044f4 <___vfprintf_internal_r+0x1cfc>
 4003f30:	008011c4 	movi	r2,71
 4003f34:	88829226 	beq	r17,r2,4004980 <___vfprintf_internal_r+0x2188>
 4003f38:	80f9883a 	add	fp,r16,r3
 4003f3c:	d9003617 	ldw	r4,216(sp)
 4003f40:	000d883a 	mov	r6,zero
 4003f44:	000f883a 	mov	r7,zero
 4003f48:	980b883a 	mov	r5,r19
 4003f4c:	da003d15 	stw	r8,244(sp)
 4003f50:	400d1380 	call	400d138 <__eqdf2>
 4003f54:	da003d17 	ldw	r8,244(sp)
 4003f58:	10018d26 	beq	r2,zero,4004590 <___vfprintf_internal_r+0x1d98>
 4003f5c:	d8802117 	ldw	r2,132(sp)
 4003f60:	1700062e 	bgeu	r2,fp,4003f7c <___vfprintf_internal_r+0x1784>
 4003f64:	01000c04 	movi	r4,48
 4003f68:	10c00044 	addi	r3,r2,1
 4003f6c:	d8c02115 	stw	r3,132(sp)
 4003f70:	11000005 	stb	r4,0(r2)
 4003f74:	d8802117 	ldw	r2,132(sp)
 4003f78:	173ffb36 	bltu	r2,fp,4003f68 <__alt_data_end+0xfbffbf68>
 4003f7c:	1405c83a 	sub	r2,r2,r16
 4003f80:	d8803315 	stw	r2,204(sp)
 4003f84:	008011c4 	movi	r2,71
 4003f88:	b0817626 	beq	r22,r2,4004564 <___vfprintf_internal_r+0x1d6c>
 4003f8c:	00801944 	movi	r2,101
 4003f90:	1442810e 	bge	r2,r17,4004998 <___vfprintf_internal_r+0x21a0>
 4003f94:	d8c02617 	ldw	r3,152(sp)
 4003f98:	00801984 	movi	r2,102
 4003f9c:	d8c03215 	stw	r3,200(sp)
 4003fa0:	8881fe26 	beq	r17,r2,400479c <___vfprintf_internal_r+0x1fa4>
 4003fa4:	d8c03217 	ldw	r3,200(sp)
 4003fa8:	d9003317 	ldw	r4,204(sp)
 4003fac:	1901dd16 	blt	r3,r4,4004724 <___vfprintf_internal_r+0x1f2c>
 4003fb0:	9480004c 	andi	r18,r18,1
 4003fb4:	90022b1e 	bne	r18,zero,4004864 <___vfprintf_internal_r+0x206c>
 4003fb8:	1805883a 	mov	r2,r3
 4003fbc:	18028016 	blt	r3,zero,40049c0 <___vfprintf_internal_r+0x21c8>
 4003fc0:	d8c03217 	ldw	r3,200(sp)
 4003fc4:	044019c4 	movi	r17,103
 4003fc8:	d8c02e15 	stw	r3,184(sp)
 4003fcc:	df002a07 	ldb	fp,168(sp)
 4003fd0:	e001531e 	bne	fp,zero,4004520 <___vfprintf_internal_r+0x1d28>
 4003fd4:	df002783 	ldbu	fp,158(sp)
 4003fd8:	d8802a15 	stw	r2,168(sp)
 4003fdc:	dc802b17 	ldw	r18,172(sp)
 4003fe0:	d8002915 	stw	zero,164(sp)
 4003fe4:	003bd106 	br	4002f2c <__alt_data_end+0xfbffaf2c>
 4003fe8:	d8802d17 	ldw	r2,180(sp)
 4003fec:	d8c02d17 	ldw	r3,180(sp)
 4003ff0:	d9002d17 	ldw	r4,180(sp)
 4003ff4:	10800017 	ldw	r2,0(r2)
 4003ff8:	18c00117 	ldw	r3,4(r3)
 4003ffc:	21000204 	addi	r4,r4,8
 4004000:	d8803615 	stw	r2,216(sp)
 4004004:	d8c03815 	stw	r3,224(sp)
 4004008:	d9002d15 	stw	r4,180(sp)
 400400c:	003b7506 	br	4002de4 <__alt_data_end+0xfbffade4>
 4004010:	ac400007 	ldb	r17,0(r21)
 4004014:	003a5906 	br	400297c <__alt_data_end+0xfbffa97c>
 4004018:	9080100c 	andi	r2,r18,64
 400401c:	1000a826 	beq	r2,zero,40042c0 <___vfprintf_internal_r+0x1ac8>
 4004020:	d9002d17 	ldw	r4,180(sp)
 4004024:	002d883a 	mov	r22,zero
 4004028:	24c0000b 	ldhu	r19,0(r4)
 400402c:	21000104 	addi	r4,r4,4
 4004030:	d9002d15 	stw	r4,180(sp)
 4004034:	003ccb06 	br	4003364 <__alt_data_end+0xfbffb364>
 4004038:	d8c02d17 	ldw	r3,180(sp)
 400403c:	d9002917 	ldw	r4,164(sp)
 4004040:	002d883a 	mov	r22,zero
 4004044:	18800104 	addi	r2,r3,4
 4004048:	1cc00017 	ldw	r19,0(r3)
 400404c:	203ebb0e 	bge	r4,zero,4003b3c <__alt_data_end+0xfbffbb3c>
 4004050:	003ef106 	br	4003c18 <__alt_data_end+0xfbffbc18>
 4004054:	9080040c 	andi	r2,r18,16
 4004058:	1000921e 	bne	r2,zero,40042a4 <___vfprintf_internal_r+0x1aac>
 400405c:	9480100c 	andi	r18,r18,64
 4004060:	90013926 	beq	r18,zero,4004548 <___vfprintf_internal_r+0x1d50>
 4004064:	d9002d17 	ldw	r4,180(sp)
 4004068:	d9402f17 	ldw	r5,188(sp)
 400406c:	20800017 	ldw	r2,0(r4)
 4004070:	21000104 	addi	r4,r4,4
 4004074:	d9002d15 	stw	r4,180(sp)
 4004078:	1140000d 	sth	r5,0(r2)
 400407c:	003a1606 	br	40028d8 <__alt_data_end+0xfbffa8d8>
 4004080:	9080100c 	andi	r2,r18,64
 4004084:	10008026 	beq	r2,zero,4004288 <___vfprintf_internal_r+0x1a90>
 4004088:	d8c02d17 	ldw	r3,180(sp)
 400408c:	1cc0000f 	ldh	r19,0(r3)
 4004090:	18c00104 	addi	r3,r3,4
 4004094:	d8c02d15 	stw	r3,180(sp)
 4004098:	982dd7fa 	srai	r22,r19,31
 400409c:	b005883a 	mov	r2,r22
 40040a0:	003b1f06 	br	4002d20 <__alt_data_end+0xfbffad20>
 40040a4:	9080100c 	andi	r2,r18,64
 40040a8:	d8002785 	stb	zero,158(sp)
 40040ac:	10008a1e 	bne	r2,zero,40042d8 <___vfprintf_internal_r+0x1ae0>
 40040b0:	d9402d17 	ldw	r5,180(sp)
 40040b4:	d8c02917 	ldw	r3,164(sp)
 40040b8:	002d883a 	mov	r22,zero
 40040bc:	28800104 	addi	r2,r5,4
 40040c0:	2cc00017 	ldw	r19,0(r5)
 40040c4:	183e4b0e 	bge	r3,zero,40039f4 <__alt_data_end+0xfbffb9f4>
 40040c8:	9d86b03a 	or	r3,r19,r22
 40040cc:	d8802d15 	stw	r2,180(sp)
 40040d0:	183e4c1e 	bne	r3,zero,4003a04 <__alt_data_end+0xfbffba04>
 40040d4:	0039883a 	mov	fp,zero
 40040d8:	0005883a 	mov	r2,zero
 40040dc:	003d4006 	br	40035e0 <__alt_data_end+0xfbffb5e0>
 40040e0:	01420034 	movhi	r5,2048
 40040e4:	2940bc84 	addi	r5,r5,754
 40040e8:	d9402b15 	stw	r5,172(sp)
 40040ec:	d9402b17 	ldw	r5,172(sp)
 40040f0:	1c47883a 	add	r3,r3,r17
 40040f4:	10800044 	addi	r2,r2,1
 40040f8:	41400015 	stw	r5,0(r8)
 40040fc:	44400115 	stw	r17,4(r8)
 4004100:	d8c02015 	stw	r3,128(sp)
 4004104:	d8801f15 	stw	r2,124(sp)
 4004108:	010001c4 	movi	r4,7
 400410c:	20bec816 	blt	r4,r2,4003c30 <__alt_data_end+0xfbffbc30>
 4004110:	42000204 	addi	r8,r8,8
 4004114:	003ecd06 	br	4003c4c <__alt_data_end+0xfbffbc4c>
 4004118:	d9002917 	ldw	r4,164(sp)
 400411c:	d8002785 	stb	zero,158(sp)
 4004120:	203d2d16 	blt	r4,zero,40035d8 <__alt_data_end+0xfbffb5d8>
 4004124:	00bfdfc4 	movi	r2,-129
 4004128:	90a4703a 	and	r18,r18,r2
 400412c:	003a9106 	br	4002b74 <__alt_data_end+0xfbffab74>
 4004130:	01020034 	movhi	r4,2048
 4004134:	2100bc84 	addi	r4,r4,754
 4004138:	d9002b15 	stw	r4,172(sp)
 400413c:	003c0c06 	br	4003170 <__alt_data_end+0xfbffb170>
 4004140:	d9002c17 	ldw	r4,176(sp)
 4004144:	d9801e04 	addi	r6,sp,120
 4004148:	b80b883a 	mov	r5,r23
 400414c:	4009f5c0 	call	4009f5c <__sprint_r>
 4004150:	103aab1e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 4004154:	d8c02017 	ldw	r3,128(sp)
 4004158:	da000404 	addi	r8,sp,16
 400415c:	003d4106 	br	4003664 <__alt_data_end+0xfbffb664>
 4004160:	d8801f17 	ldw	r2,124(sp)
 4004164:	01420034 	movhi	r5,2048
 4004168:	01000044 	movi	r4,1
 400416c:	18c00044 	addi	r3,r3,1
 4004170:	10800044 	addi	r2,r2,1
 4004174:	2940bc04 	addi	r5,r5,752
 4004178:	41000115 	stw	r4,4(r8)
 400417c:	41400015 	stw	r5,0(r8)
 4004180:	d8c02015 	stw	r3,128(sp)
 4004184:	d8801f15 	stw	r2,124(sp)
 4004188:	010001c4 	movi	r4,7
 400418c:	20805c16 	blt	r4,r2,4004300 <___vfprintf_internal_r+0x1b08>
 4004190:	42000204 	addi	r8,r8,8
 4004194:	8800041e 	bne	r17,zero,40041a8 <___vfprintf_internal_r+0x19b0>
 4004198:	d8803317 	ldw	r2,204(sp)
 400419c:	1000021e 	bne	r2,zero,40041a8 <___vfprintf_internal_r+0x19b0>
 40041a0:	9080004c 	andi	r2,r18,1
 40041a4:	103c0926 	beq	r2,zero,40031cc <__alt_data_end+0xfbffb1cc>
 40041a8:	d9003717 	ldw	r4,220(sp)
 40041ac:	d8801f17 	ldw	r2,124(sp)
 40041b0:	d9403417 	ldw	r5,208(sp)
 40041b4:	20c7883a 	add	r3,r4,r3
 40041b8:	10800044 	addi	r2,r2,1
 40041bc:	41000115 	stw	r4,4(r8)
 40041c0:	41400015 	stw	r5,0(r8)
 40041c4:	d8c02015 	stw	r3,128(sp)
 40041c8:	d8801f15 	stw	r2,124(sp)
 40041cc:	010001c4 	movi	r4,7
 40041d0:	20812116 	blt	r4,r2,4004658 <___vfprintf_internal_r+0x1e60>
 40041d4:	42000204 	addi	r8,r8,8
 40041d8:	0463c83a 	sub	r17,zero,r17
 40041dc:	0440730e 	bge	zero,r17,40043ac <___vfprintf_internal_r+0x1bb4>
 40041e0:	05800404 	movi	r22,16
 40041e4:	b440860e 	bge	r22,r17,4004400 <___vfprintf_internal_r+0x1c08>
 40041e8:	01420034 	movhi	r5,2048
 40041ec:	2940bc84 	addi	r5,r5,754
 40041f0:	d9402b15 	stw	r5,172(sp)
 40041f4:	070001c4 	movi	fp,7
 40041f8:	dcc02c17 	ldw	r19,176(sp)
 40041fc:	00000306 	br	400420c <___vfprintf_internal_r+0x1a14>
 4004200:	42000204 	addi	r8,r8,8
 4004204:	8c7ffc04 	addi	r17,r17,-16
 4004208:	b440800e 	bge	r22,r17,400440c <___vfprintf_internal_r+0x1c14>
 400420c:	18c00404 	addi	r3,r3,16
 4004210:	10800044 	addi	r2,r2,1
 4004214:	45000015 	stw	r20,0(r8)
 4004218:	45800115 	stw	r22,4(r8)
 400421c:	d8c02015 	stw	r3,128(sp)
 4004220:	d8801f15 	stw	r2,124(sp)
 4004224:	e0bff60e 	bge	fp,r2,4004200 <__alt_data_end+0xfbffc200>
 4004228:	d9801e04 	addi	r6,sp,120
 400422c:	b80b883a 	mov	r5,r23
 4004230:	9809883a 	mov	r4,r19
 4004234:	4009f5c0 	call	4009f5c <__sprint_r>
 4004238:	103a711e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 400423c:	d8c02017 	ldw	r3,128(sp)
 4004240:	d8801f17 	ldw	r2,124(sp)
 4004244:	da000404 	addi	r8,sp,16
 4004248:	003fee06 	br	4004204 <__alt_data_end+0xfbffc204>
 400424c:	00bfffc4 	movi	r2,-1
 4004250:	003a6f06 	br	4002c10 <__alt_data_end+0xfbffac10>
 4004254:	008011c4 	movi	r2,71
 4004258:	1440b816 	blt	r2,r17,400453c <___vfprintf_internal_r+0x1d44>
 400425c:	04020034 	movhi	r16,2048
 4004260:	8400ae04 	addi	r16,r16,696
 4004264:	00c000c4 	movi	r3,3
 4004268:	00bfdfc4 	movi	r2,-129
 400426c:	d8c02a15 	stw	r3,168(sp)
 4004270:	90a4703a 	and	r18,r18,r2
 4004274:	df002783 	ldbu	fp,158(sp)
 4004278:	d8c02e15 	stw	r3,184(sp)
 400427c:	d8002915 	stw	zero,164(sp)
 4004280:	d8003215 	stw	zero,200(sp)
 4004284:	003b2906 	br	4002f2c <__alt_data_end+0xfbffaf2c>
 4004288:	d9002d17 	ldw	r4,180(sp)
 400428c:	24c00017 	ldw	r19,0(r4)
 4004290:	21000104 	addi	r4,r4,4
 4004294:	d9002d15 	stw	r4,180(sp)
 4004298:	982dd7fa 	srai	r22,r19,31
 400429c:	b005883a 	mov	r2,r22
 40042a0:	003a9f06 	br	4002d20 <__alt_data_end+0xfbffad20>
 40042a4:	d9402d17 	ldw	r5,180(sp)
 40042a8:	d8c02f17 	ldw	r3,188(sp)
 40042ac:	28800017 	ldw	r2,0(r5)
 40042b0:	29400104 	addi	r5,r5,4
 40042b4:	d9402d15 	stw	r5,180(sp)
 40042b8:	10c00015 	stw	r3,0(r2)
 40042bc:	00398606 	br	40028d8 <__alt_data_end+0xfbffa8d8>
 40042c0:	d9402d17 	ldw	r5,180(sp)
 40042c4:	002d883a 	mov	r22,zero
 40042c8:	2cc00017 	ldw	r19,0(r5)
 40042cc:	29400104 	addi	r5,r5,4
 40042d0:	d9402d15 	stw	r5,180(sp)
 40042d4:	003c2306 	br	4003364 <__alt_data_end+0xfbffb364>
 40042d8:	d8c02d17 	ldw	r3,180(sp)
 40042dc:	d9002917 	ldw	r4,164(sp)
 40042e0:	002d883a 	mov	r22,zero
 40042e4:	18800104 	addi	r2,r3,4
 40042e8:	1cc0000b 	ldhu	r19,0(r3)
 40042ec:	203dc10e 	bge	r4,zero,40039f4 <__alt_data_end+0xfbffb9f4>
 40042f0:	003f7506 	br	40040c8 <__alt_data_end+0xfbffc0c8>
 40042f4:	04020034 	movhi	r16,2048
 40042f8:	8400ac04 	addi	r16,r16,688
 40042fc:	003acc06 	br	4002e30 <__alt_data_end+0xfbffae30>
 4004300:	d9002c17 	ldw	r4,176(sp)
 4004304:	d9801e04 	addi	r6,sp,120
 4004308:	b80b883a 	mov	r5,r23
 400430c:	4009f5c0 	call	4009f5c <__sprint_r>
 4004310:	103a3b1e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 4004314:	dc402617 	ldw	r17,152(sp)
 4004318:	d8c02017 	ldw	r3,128(sp)
 400431c:	da000404 	addi	r8,sp,16
 4004320:	003f9c06 	br	4004194 <__alt_data_end+0xfbffc194>
 4004324:	ac400043 	ldbu	r17,1(r21)
 4004328:	94800814 	ori	r18,r18,32
 400432c:	ad400044 	addi	r21,r21,1
 4004330:	8c403fcc 	andi	r17,r17,255
 4004334:	8c40201c 	xori	r17,r17,128
 4004338:	8c7fe004 	addi	r17,r17,-128
 400433c:	00398f06 	br	400297c <__alt_data_end+0xfbffa97c>
 4004340:	d8c02d15 	stw	r3,180(sp)
 4004344:	0039883a 	mov	fp,zero
 4004348:	003e3506 	br	4003c20 <__alt_data_end+0xfbffbc20>
 400434c:	d9002c17 	ldw	r4,176(sp)
 4004350:	d9801e04 	addi	r6,sp,120
 4004354:	b80b883a 	mov	r5,r23
 4004358:	4009f5c0 	call	4009f5c <__sprint_r>
 400435c:	103a281e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 4004360:	d8c02017 	ldw	r3,128(sp)
 4004364:	da000404 	addi	r8,sp,16
 4004368:	003cd006 	br	40036ac <__alt_data_end+0xfbffb6ac>
 400436c:	8009883a 	mov	r4,r16
 4004370:	da003d15 	stw	r8,244(sp)
 4004374:	40027600 	call	4002760 <strlen>
 4004378:	d8802e15 	stw	r2,184(sp)
 400437c:	da003d17 	ldw	r8,244(sp)
 4004380:	103c340e 	bge	r2,zero,4003454 <__alt_data_end+0xfbffb454>
 4004384:	0005883a 	mov	r2,zero
 4004388:	003c3206 	br	4003454 <__alt_data_end+0xfbffb454>
 400438c:	d9002c17 	ldw	r4,176(sp)
 4004390:	d9801e04 	addi	r6,sp,120
 4004394:	b80b883a 	mov	r5,r23
 4004398:	4009f5c0 	call	4009f5c <__sprint_r>
 400439c:	103a181e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 40043a0:	d8c02017 	ldw	r3,128(sp)
 40043a4:	d8801f17 	ldw	r2,124(sp)
 40043a8:	da000404 	addi	r8,sp,16
 40043ac:	d9403317 	ldw	r5,204(sp)
 40043b0:	10800044 	addi	r2,r2,1
 40043b4:	44000015 	stw	r16,0(r8)
 40043b8:	28c7883a 	add	r3,r5,r3
 40043bc:	003b7d06 	br	40031b4 <__alt_data_end+0xfbffb1b4>
 40043c0:	01020034 	movhi	r4,2048
 40043c4:	2100c084 	addi	r4,r4,770
 40043c8:	d9003515 	stw	r4,212(sp)
 40043cc:	003b1406 	br	4003020 <__alt_data_end+0xfbffb020>
 40043d0:	013fffc4 	movi	r4,-1
 40043d4:	003a3506 	br	4002cac <__alt_data_end+0xfbffacac>
 40043d8:	0023883a 	mov	r17,zero
 40043dc:	003d9d06 	br	4003a54 <__alt_data_end+0xfbffba54>
 40043e0:	d9002c17 	ldw	r4,176(sp)
 40043e4:	d9801e04 	addi	r6,sp,120
 40043e8:	b80b883a 	mov	r5,r23
 40043ec:	4009f5c0 	call	4009f5c <__sprint_r>
 40043f0:	103a031e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 40043f4:	d8c02017 	ldw	r3,128(sp)
 40043f8:	da000404 	addi	r8,sp,16
 40043fc:	003d9406 	br	4003a50 <__alt_data_end+0xfbffba50>
 4004400:	01020034 	movhi	r4,2048
 4004404:	2100bc84 	addi	r4,r4,754
 4004408:	d9002b15 	stw	r4,172(sp)
 400440c:	d9002b17 	ldw	r4,172(sp)
 4004410:	1c47883a 	add	r3,r3,r17
 4004414:	10800044 	addi	r2,r2,1
 4004418:	41000015 	stw	r4,0(r8)
 400441c:	44400115 	stw	r17,4(r8)
 4004420:	d8c02015 	stw	r3,128(sp)
 4004424:	d8801f15 	stw	r2,124(sp)
 4004428:	010001c4 	movi	r4,7
 400442c:	20bfd716 	blt	r4,r2,400438c <__alt_data_end+0xfbffc38c>
 4004430:	42000204 	addi	r8,r8,8
 4004434:	003fdd06 	br	40043ac <__alt_data_end+0xfbffc3ac>
 4004438:	d9002c17 	ldw	r4,176(sp)
 400443c:	d9801e04 	addi	r6,sp,120
 4004440:	b80b883a 	mov	r5,r23
 4004444:	4009f5c0 	call	4009f5c <__sprint_r>
 4004448:	1039ed1e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 400444c:	d8802617 	ldw	r2,152(sp)
 4004450:	d8c02017 	ldw	r3,128(sp)
 4004454:	da000404 	addi	r8,sp,16
 4004458:	003e1006 	br	4003c9c <__alt_data_end+0xfbffbc9c>
 400445c:	00800044 	movi	r2,1
 4004460:	10803fcc 	andi	r2,r2,255
 4004464:	00c00044 	movi	r3,1
 4004468:	10fa3526 	beq	r2,r3,4002d40 <__alt_data_end+0xfbffad40>
 400446c:	00c00084 	movi	r3,2
 4004470:	10fbcb26 	beq	r2,r3,40033a0 <__alt_data_end+0xfbffb3a0>
 4004474:	003a8f06 	br	4002eb4 <__alt_data_end+0xfbffaeb4>
 4004478:	01020034 	movhi	r4,2048
 400447c:	2100c084 	addi	r4,r4,770
 4004480:	d9003515 	stw	r4,212(sp)
 4004484:	003b7606 	br	4003260 <__alt_data_end+0xfbffb260>
 4004488:	d8802917 	ldw	r2,164(sp)
 400448c:	00c00184 	movi	r3,6
 4004490:	1880012e 	bgeu	r3,r2,4004498 <___vfprintf_internal_r+0x1ca0>
 4004494:	1805883a 	mov	r2,r3
 4004498:	d8802e15 	stw	r2,184(sp)
 400449c:	1000ef16 	blt	r2,zero,400485c <___vfprintf_internal_r+0x2064>
 40044a0:	04020034 	movhi	r16,2048
 40044a4:	d8802a15 	stw	r2,168(sp)
 40044a8:	dcc02d15 	stw	r19,180(sp)
 40044ac:	d8002915 	stw	zero,164(sp)
 40044b0:	d8003215 	stw	zero,200(sp)
 40044b4:	8400ba04 	addi	r16,r16,744
 40044b8:	0039883a 	mov	fp,zero
 40044bc:	003aa206 	br	4002f48 <__alt_data_end+0xfbffaf48>
 40044c0:	0021883a 	mov	r16,zero
 40044c4:	003e0706 	br	4003ce4 <__alt_data_end+0xfbffbce4>
 40044c8:	d9002c17 	ldw	r4,176(sp)
 40044cc:	d9801e04 	addi	r6,sp,120
 40044d0:	b80b883a 	mov	r5,r23
 40044d4:	4009f5c0 	call	4009f5c <__sprint_r>
 40044d8:	1039c91e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 40044dc:	d8802617 	ldw	r2,152(sp)
 40044e0:	d9403317 	ldw	r5,204(sp)
 40044e4:	d8c02017 	ldw	r3,128(sp)
 40044e8:	da000404 	addi	r8,sp,16
 40044ec:	2885c83a 	sub	r2,r5,r2
 40044f0:	003dfb06 	br	4003ce0 <__alt_data_end+0xfbffbce0>
 40044f4:	9080004c 	andi	r2,r18,1
 40044f8:	103e8f1e 	bne	r2,zero,4003f38 <__alt_data_end+0xfbffbf38>
 40044fc:	d8802117 	ldw	r2,132(sp)
 4004500:	003e9e06 	br	4003f7c <__alt_data_end+0xfbffbf7c>
 4004504:	1025883a 	mov	r18,r2
 4004508:	0039883a 	mov	fp,zero
 400450c:	00800084 	movi	r2,2
 4004510:	003fd306 	br	4004460 <__alt_data_end+0xfbffc460>
 4004514:	07000b44 	movi	fp,45
 4004518:	df002785 	stb	fp,158(sp)
 400451c:	003a4006 	br	4002e20 <__alt_data_end+0xfbffae20>
 4004520:	00c00b44 	movi	r3,45
 4004524:	d8c02785 	stb	r3,158(sp)
 4004528:	d8802a15 	stw	r2,168(sp)
 400452c:	dc802b17 	ldw	r18,172(sp)
 4004530:	d8002915 	stw	zero,164(sp)
 4004534:	07000b44 	movi	fp,45
 4004538:	003a8006 	br	4002f3c <__alt_data_end+0xfbffaf3c>
 400453c:	04020034 	movhi	r16,2048
 4004540:	8400af04 	addi	r16,r16,700
 4004544:	003f4706 	br	4004264 <__alt_data_end+0xfbffc264>
 4004548:	d8c02d17 	ldw	r3,180(sp)
 400454c:	d9002f17 	ldw	r4,188(sp)
 4004550:	18800017 	ldw	r2,0(r3)
 4004554:	18c00104 	addi	r3,r3,4
 4004558:	d8c02d15 	stw	r3,180(sp)
 400455c:	11000015 	stw	r4,0(r2)
 4004560:	0038dd06 	br	40028d8 <__alt_data_end+0xfbffa8d8>
 4004564:	dd802617 	ldw	r22,152(sp)
 4004568:	00bfff44 	movi	r2,-3
 400456c:	b0801c16 	blt	r22,r2,40045e0 <___vfprintf_internal_r+0x1de8>
 4004570:	d9402917 	ldw	r5,164(sp)
 4004574:	2d801a16 	blt	r5,r22,40045e0 <___vfprintf_internal_r+0x1de8>
 4004578:	dd803215 	stw	r22,200(sp)
 400457c:	003e8906 	br	4003fa4 <__alt_data_end+0xfbffbfa4>
 4004580:	01020034 	movhi	r4,2048
 4004584:	2100bc84 	addi	r4,r4,754
 4004588:	d9002b15 	stw	r4,172(sp)
 400458c:	003c9106 	br	40037d4 <__alt_data_end+0xfbffb7d4>
 4004590:	e005883a 	mov	r2,fp
 4004594:	003e7906 	br	4003f7c <__alt_data_end+0xfbffbf7c>
 4004598:	d9402917 	ldw	r5,164(sp)
 400459c:	df002783 	ldbu	fp,158(sp)
 40045a0:	dcc02d15 	stw	r19,180(sp)
 40045a4:	d9402a15 	stw	r5,168(sp)
 40045a8:	d9402e15 	stw	r5,184(sp)
 40045ac:	d8002915 	stw	zero,164(sp)
 40045b0:	d8003215 	stw	zero,200(sp)
 40045b4:	003a5d06 	br	4002f2c <__alt_data_end+0xfbffaf2c>
 40045b8:	9080004c 	andi	r2,r18,1
 40045bc:	0039883a 	mov	fp,zero
 40045c0:	10000426 	beq	r2,zero,40045d4 <___vfprintf_internal_r+0x1ddc>
 40045c4:	00800c04 	movi	r2,48
 40045c8:	dc001dc4 	addi	r16,sp,119
 40045cc:	d8801dc5 	stb	r2,119(sp)
 40045d0:	003b8006 	br	40033d4 <__alt_data_end+0xfbffb3d4>
 40045d4:	d8002e15 	stw	zero,184(sp)
 40045d8:	dc001e04 	addi	r16,sp,120
 40045dc:	003a4d06 	br	4002f14 <__alt_data_end+0xfbffaf14>
 40045e0:	8c7fff84 	addi	r17,r17,-2
 40045e4:	b5bfffc4 	addi	r22,r22,-1
 40045e8:	dd802615 	stw	r22,152(sp)
 40045ec:	dc4022c5 	stb	r17,139(sp)
 40045f0:	b000bf16 	blt	r22,zero,40048f0 <___vfprintf_internal_r+0x20f8>
 40045f4:	00800ac4 	movi	r2,43
 40045f8:	d8802305 	stb	r2,140(sp)
 40045fc:	00800244 	movi	r2,9
 4004600:	15807016 	blt	r2,r22,40047c4 <___vfprintf_internal_r+0x1fcc>
 4004604:	00800c04 	movi	r2,48
 4004608:	b5800c04 	addi	r22,r22,48
 400460c:	d8802345 	stb	r2,141(sp)
 4004610:	dd802385 	stb	r22,142(sp)
 4004614:	d88023c4 	addi	r2,sp,143
 4004618:	df0022c4 	addi	fp,sp,139
 400461c:	d8c03317 	ldw	r3,204(sp)
 4004620:	1739c83a 	sub	fp,r2,fp
 4004624:	d9003317 	ldw	r4,204(sp)
 4004628:	e0c7883a 	add	r3,fp,r3
 400462c:	df003a15 	stw	fp,232(sp)
 4004630:	d8c02e15 	stw	r3,184(sp)
 4004634:	00800044 	movi	r2,1
 4004638:	1100b30e 	bge	r2,r4,4004908 <___vfprintf_internal_r+0x2110>
 400463c:	d8c02e17 	ldw	r3,184(sp)
 4004640:	18c00044 	addi	r3,r3,1
 4004644:	d8c02e15 	stw	r3,184(sp)
 4004648:	1805883a 	mov	r2,r3
 400464c:	1800ac16 	blt	r3,zero,4004900 <___vfprintf_internal_r+0x2108>
 4004650:	d8003215 	stw	zero,200(sp)
 4004654:	003e5d06 	br	4003fcc <__alt_data_end+0xfbffbfcc>
 4004658:	d9002c17 	ldw	r4,176(sp)
 400465c:	d9801e04 	addi	r6,sp,120
 4004660:	b80b883a 	mov	r5,r23
 4004664:	4009f5c0 	call	4009f5c <__sprint_r>
 4004668:	1039651e 	bne	r2,zero,4002c00 <__alt_data_end+0xfbffac00>
 400466c:	dc402617 	ldw	r17,152(sp)
 4004670:	d8c02017 	ldw	r3,128(sp)
 4004674:	d8801f17 	ldw	r2,124(sp)
 4004678:	da000404 	addi	r8,sp,16
 400467c:	003ed606 	br	40041d8 <__alt_data_end+0xfbffc1d8>
 4004680:	582b883a 	mov	r21,r11
 4004684:	d8002915 	stw	zero,164(sp)
 4004688:	0038bd06 	br	4002980 <__alt_data_end+0xfbffa980>
 400468c:	d8802917 	ldw	r2,164(sp)
 4004690:	103e071e 	bne	r2,zero,4003eb0 <__alt_data_end+0xfbffbeb0>
 4004694:	dc002915 	stw	r16,164(sp)
 4004698:	003e0506 	br	4003eb0 <__alt_data_end+0xfbffbeb0>
 400469c:	d9002917 	ldw	r4,164(sp)
 40046a0:	20c00044 	addi	r3,r4,1
 40046a4:	003e0f06 	br	4003ee4 <__alt_data_end+0xfbffbee4>
 40046a8:	01400184 	movi	r5,6
 40046ac:	d9402915 	stw	r5,164(sp)
 40046b0:	003dff06 	br	4003eb0 <__alt_data_end+0xfbffbeb0>
 40046b4:	d8802104 	addi	r2,sp,132
 40046b8:	d8800315 	stw	r2,12(sp)
 40046bc:	d8802504 	addi	r2,sp,148
 40046c0:	d8800215 	stw	r2,8(sp)
 40046c4:	d8802604 	addi	r2,sp,152
 40046c8:	d8800115 	stw	r2,4(sp)
 40046cc:	d8802917 	ldw	r2,164(sp)
 40046d0:	d9403617 	ldw	r5,216(sp)
 40046d4:	d9002c17 	ldw	r4,176(sp)
 40046d8:	d8800015 	stw	r2,0(sp)
 40046dc:	01c000c4 	movi	r7,3
 40046e0:	980d883a 	mov	r6,r19
 40046e4:	da003d15 	stw	r8,244(sp)
 40046e8:	4004e1c0 	call	4004e1c <_dtoa_r>
 40046ec:	d8c02917 	ldw	r3,164(sp)
 40046f0:	da003d17 	ldw	r8,244(sp)
 40046f4:	1021883a 	mov	r16,r2
 40046f8:	10f9883a 	add	fp,r2,r3
 40046fc:	81000007 	ldb	r4,0(r16)
 4004700:	00800c04 	movi	r2,48
 4004704:	20805e26 	beq	r4,r2,4004880 <___vfprintf_internal_r+0x2088>
 4004708:	d8c02617 	ldw	r3,152(sp)
 400470c:	e0f9883a 	add	fp,fp,r3
 4004710:	003e0a06 	br	4003f3c <__alt_data_end+0xfbffbf3c>
 4004714:	00c00b44 	movi	r3,45
 4004718:	24e0003c 	xorhi	r19,r4,32768
 400471c:	d8c02a05 	stb	r3,168(sp)
 4004720:	003de906 	br	4003ec8 <__alt_data_end+0xfbffbec8>
 4004724:	d8c03217 	ldw	r3,200(sp)
 4004728:	00c07a0e 	bge	zero,r3,4004914 <___vfprintf_internal_r+0x211c>
 400472c:	00800044 	movi	r2,1
 4004730:	d9003317 	ldw	r4,204(sp)
 4004734:	1105883a 	add	r2,r2,r4
 4004738:	d8802e15 	stw	r2,184(sp)
 400473c:	10004e16 	blt	r2,zero,4004878 <___vfprintf_internal_r+0x2080>
 4004740:	044019c4 	movi	r17,103
 4004744:	003e2106 	br	4003fcc <__alt_data_end+0xfbffbfcc>
 4004748:	d9002917 	ldw	r4,164(sp)
 400474c:	d8802104 	addi	r2,sp,132
 4004750:	d8800315 	stw	r2,12(sp)
 4004754:	d9000015 	stw	r4,0(sp)
 4004758:	d8802504 	addi	r2,sp,148
 400475c:	d9403617 	ldw	r5,216(sp)
 4004760:	d9002c17 	ldw	r4,176(sp)
 4004764:	d8800215 	stw	r2,8(sp)
 4004768:	d8802604 	addi	r2,sp,152
 400476c:	d8800115 	stw	r2,4(sp)
 4004770:	01c000c4 	movi	r7,3
 4004774:	980d883a 	mov	r6,r19
 4004778:	da003d15 	stw	r8,244(sp)
 400477c:	4004e1c0 	call	4004e1c <_dtoa_r>
 4004780:	d8c02917 	ldw	r3,164(sp)
 4004784:	da003d17 	ldw	r8,244(sp)
 4004788:	1021883a 	mov	r16,r2
 400478c:	00801184 	movi	r2,70
 4004790:	80f9883a 	add	fp,r16,r3
 4004794:	88bfd926 	beq	r17,r2,40046fc <__alt_data_end+0xfbffc6fc>
 4004798:	003de806 	br	4003f3c <__alt_data_end+0xfbffbf3c>
 400479c:	d9002917 	ldw	r4,164(sp)
 40047a0:	00c04d0e 	bge	zero,r3,40048d8 <___vfprintf_internal_r+0x20e0>
 40047a4:	2000441e 	bne	r4,zero,40048b8 <___vfprintf_internal_r+0x20c0>
 40047a8:	9480004c 	andi	r18,r18,1
 40047ac:	9000421e 	bne	r18,zero,40048b8 <___vfprintf_internal_r+0x20c0>
 40047b0:	1805883a 	mov	r2,r3
 40047b4:	18007016 	blt	r3,zero,4004978 <___vfprintf_internal_r+0x2180>
 40047b8:	d8c03217 	ldw	r3,200(sp)
 40047bc:	d8c02e15 	stw	r3,184(sp)
 40047c0:	003e0206 	br	4003fcc <__alt_data_end+0xfbffbfcc>
 40047c4:	df0022c4 	addi	fp,sp,139
 40047c8:	dc002915 	stw	r16,164(sp)
 40047cc:	4027883a 	mov	r19,r8
 40047d0:	e021883a 	mov	r16,fp
 40047d4:	b009883a 	mov	r4,r22
 40047d8:	01400284 	movi	r5,10
 40047dc:	400090c0 	call	400090c <__modsi3>
 40047e0:	10800c04 	addi	r2,r2,48
 40047e4:	843fffc4 	addi	r16,r16,-1
 40047e8:	b009883a 	mov	r4,r22
 40047ec:	01400284 	movi	r5,10
 40047f0:	80800005 	stb	r2,0(r16)
 40047f4:	40008880 	call	4000888 <__divsi3>
 40047f8:	102d883a 	mov	r22,r2
 40047fc:	00800244 	movi	r2,9
 4004800:	15bff416 	blt	r2,r22,40047d4 <__alt_data_end+0xfbffc7d4>
 4004804:	9811883a 	mov	r8,r19
 4004808:	b0800c04 	addi	r2,r22,48
 400480c:	8027883a 	mov	r19,r16
 4004810:	997fffc4 	addi	r5,r19,-1
 4004814:	98bfffc5 	stb	r2,-1(r19)
 4004818:	dc002917 	ldw	r16,164(sp)
 400481c:	2f006a2e 	bgeu	r5,fp,40049c8 <___vfprintf_internal_r+0x21d0>
 4004820:	d9c02384 	addi	r7,sp,142
 4004824:	3ccfc83a 	sub	r7,r7,r19
 4004828:	d9002344 	addi	r4,sp,141
 400482c:	e1cf883a 	add	r7,fp,r7
 4004830:	00000106 	br	4004838 <___vfprintf_internal_r+0x2040>
 4004834:	28800003 	ldbu	r2,0(r5)
 4004838:	20800005 	stb	r2,0(r4)
 400483c:	21000044 	addi	r4,r4,1
 4004840:	29400044 	addi	r5,r5,1
 4004844:	393ffb1e 	bne	r7,r4,4004834 <__alt_data_end+0xfbffc834>
 4004848:	d8802304 	addi	r2,sp,140
 400484c:	14c5c83a 	sub	r2,r2,r19
 4004850:	d8c02344 	addi	r3,sp,141
 4004854:	1885883a 	add	r2,r3,r2
 4004858:	003f7006 	br	400461c <__alt_data_end+0xfbffc61c>
 400485c:	0005883a 	mov	r2,zero
 4004860:	003f0f06 	br	40044a0 <__alt_data_end+0xfbffc4a0>
 4004864:	d8c03217 	ldw	r3,200(sp)
 4004868:	18c00044 	addi	r3,r3,1
 400486c:	d8c02e15 	stw	r3,184(sp)
 4004870:	1805883a 	mov	r2,r3
 4004874:	183fb20e 	bge	r3,zero,4004740 <__alt_data_end+0xfbffc740>
 4004878:	0005883a 	mov	r2,zero
 400487c:	003fb006 	br	4004740 <__alt_data_end+0xfbffc740>
 4004880:	d9003617 	ldw	r4,216(sp)
 4004884:	000d883a 	mov	r6,zero
 4004888:	000f883a 	mov	r7,zero
 400488c:	980b883a 	mov	r5,r19
 4004890:	d8c03c15 	stw	r3,240(sp)
 4004894:	da003d15 	stw	r8,244(sp)
 4004898:	400d1380 	call	400d138 <__eqdf2>
 400489c:	d8c03c17 	ldw	r3,240(sp)
 40048a0:	da003d17 	ldw	r8,244(sp)
 40048a4:	103f9826 	beq	r2,zero,4004708 <__alt_data_end+0xfbffc708>
 40048a8:	00800044 	movi	r2,1
 40048ac:	10c7c83a 	sub	r3,r2,r3
 40048b0:	d8c02615 	stw	r3,152(sp)
 40048b4:	003f9506 	br	400470c <__alt_data_end+0xfbffc70c>
 40048b8:	d9002917 	ldw	r4,164(sp)
 40048bc:	d8c03217 	ldw	r3,200(sp)
 40048c0:	20800044 	addi	r2,r4,1
 40048c4:	1885883a 	add	r2,r3,r2
 40048c8:	d8802e15 	stw	r2,184(sp)
 40048cc:	103dbf0e 	bge	r2,zero,4003fcc <__alt_data_end+0xfbffbfcc>
 40048d0:	0005883a 	mov	r2,zero
 40048d4:	003dbd06 	br	4003fcc <__alt_data_end+0xfbffbfcc>
 40048d8:	2000211e 	bne	r4,zero,4004960 <___vfprintf_internal_r+0x2168>
 40048dc:	9480004c 	andi	r18,r18,1
 40048e0:	90001f1e 	bne	r18,zero,4004960 <___vfprintf_internal_r+0x2168>
 40048e4:	00800044 	movi	r2,1
 40048e8:	d8802e15 	stw	r2,184(sp)
 40048ec:	003db706 	br	4003fcc <__alt_data_end+0xfbffbfcc>
 40048f0:	00800b44 	movi	r2,45
 40048f4:	05adc83a 	sub	r22,zero,r22
 40048f8:	d8802305 	stb	r2,140(sp)
 40048fc:	003f3f06 	br	40045fc <__alt_data_end+0xfbffc5fc>
 4004900:	0005883a 	mov	r2,zero
 4004904:	003f5206 	br	4004650 <__alt_data_end+0xfbffc650>
 4004908:	90a4703a 	and	r18,r18,r2
 400490c:	903f4e26 	beq	r18,zero,4004648 <__alt_data_end+0xfbffc648>
 4004910:	003f4a06 	br	400463c <__alt_data_end+0xfbffc63c>
 4004914:	00800084 	movi	r2,2
 4004918:	10c5c83a 	sub	r2,r2,r3
 400491c:	003f8406 	br	4004730 <__alt_data_end+0xfbffc730>
 4004920:	d8802d17 	ldw	r2,180(sp)
 4004924:	d9002d17 	ldw	r4,180(sp)
 4004928:	ac400043 	ldbu	r17,1(r21)
 400492c:	10800017 	ldw	r2,0(r2)
 4004930:	582b883a 	mov	r21,r11
 4004934:	d8802915 	stw	r2,164(sp)
 4004938:	20800104 	addi	r2,r4,4
 400493c:	d9002917 	ldw	r4,164(sp)
 4004940:	d8802d15 	stw	r2,180(sp)
 4004944:	203e7a0e 	bge	r4,zero,4004330 <__alt_data_end+0xfbffc330>
 4004948:	8c403fcc 	andi	r17,r17,255
 400494c:	00bfffc4 	movi	r2,-1
 4004950:	8c40201c 	xori	r17,r17,128
 4004954:	d8802915 	stw	r2,164(sp)
 4004958:	8c7fe004 	addi	r17,r17,-128
 400495c:	00380706 	br	400297c <__alt_data_end+0xfbffa97c>
 4004960:	d8c02917 	ldw	r3,164(sp)
 4004964:	18c00084 	addi	r3,r3,2
 4004968:	d8c02e15 	stw	r3,184(sp)
 400496c:	1805883a 	mov	r2,r3
 4004970:	183d960e 	bge	r3,zero,4003fcc <__alt_data_end+0xfbffbfcc>
 4004974:	003fd606 	br	40048d0 <__alt_data_end+0xfbffc8d0>
 4004978:	0005883a 	mov	r2,zero
 400497c:	003f8e06 	br	40047b8 <__alt_data_end+0xfbffc7b8>
 4004980:	9080004c 	andi	r2,r18,1
 4004984:	103f811e 	bne	r2,zero,400478c <__alt_data_end+0xfbffc78c>
 4004988:	d8802117 	ldw	r2,132(sp)
 400498c:	1405c83a 	sub	r2,r2,r16
 4004990:	d8803315 	stw	r2,204(sp)
 4004994:	b47ef326 	beq	r22,r17,4004564 <__alt_data_end+0xfbffc564>
 4004998:	dd802617 	ldw	r22,152(sp)
 400499c:	003f1106 	br	40045e4 <__alt_data_end+0xfbffc5e4>
 40049a0:	d9c02785 	stb	r7,158(sp)
 40049a4:	00390406 	br	4002db8 <__alt_data_end+0xfbffadb8>
 40049a8:	d9c02785 	stb	r7,158(sp)
 40049ac:	0038d306 	br	4002cfc <__alt_data_end+0xfbffacfc>
 40049b0:	d9c02785 	stb	r7,158(sp)
 40049b4:	003a6106 	br	400333c <__alt_data_end+0xfbffb33c>
 40049b8:	d9c02785 	stb	r7,158(sp)
 40049bc:	003af806 	br	40035a0 <__alt_data_end+0xfbffb5a0>
 40049c0:	0005883a 	mov	r2,zero
 40049c4:	003d7e06 	br	4003fc0 <__alt_data_end+0xfbffbfc0>
 40049c8:	d8802344 	addi	r2,sp,141
 40049cc:	003f1306 	br	400461c <__alt_data_end+0xfbffc61c>
 40049d0:	d9c02785 	stb	r7,158(sp)
 40049d4:	00392306 	br	4002e64 <__alt_data_end+0xfbffae64>
 40049d8:	d9c02785 	stb	r7,158(sp)
 40049dc:	003aa906 	br	4003484 <__alt_data_end+0xfbffb484>
 40049e0:	d9c02785 	stb	r7,158(sp)
 40049e4:	003a3d06 	br	40032dc <__alt_data_end+0xfbffb2dc>
 40049e8:	d9c02785 	stb	r7,158(sp)
 40049ec:	003aca06 	br	4003518 <__alt_data_end+0xfbffb518>

040049f0 <__vfprintf_internal>:
 40049f0:	00810074 	movhi	r2,1025
 40049f4:	10881404 	addi	r2,r2,8272
 40049f8:	300f883a 	mov	r7,r6
 40049fc:	280d883a 	mov	r6,r5
 4004a00:	200b883a 	mov	r5,r4
 4004a04:	11000017 	ldw	r4,0(r2)
 4004a08:	40027f81 	jmpi	40027f8 <___vfprintf_internal_r>

04004a0c <__sbprintf>:
 4004a0c:	2880030b 	ldhu	r2,12(r5)
 4004a10:	2ac01917 	ldw	r11,100(r5)
 4004a14:	2a80038b 	ldhu	r10,14(r5)
 4004a18:	2a400717 	ldw	r9,28(r5)
 4004a1c:	2a000917 	ldw	r8,36(r5)
 4004a20:	defee204 	addi	sp,sp,-1144
 4004a24:	00c10004 	movi	r3,1024
 4004a28:	dc011a15 	stw	r16,1128(sp)
 4004a2c:	10bfff4c 	andi	r2,r2,65533
 4004a30:	2821883a 	mov	r16,r5
 4004a34:	d8cb883a 	add	r5,sp,r3
 4004a38:	dc811c15 	stw	r18,1136(sp)
 4004a3c:	dc411b15 	stw	r17,1132(sp)
 4004a40:	dfc11d15 	stw	ra,1140(sp)
 4004a44:	2025883a 	mov	r18,r4
 4004a48:	d881030d 	sth	r2,1036(sp)
 4004a4c:	dac11915 	stw	r11,1124(sp)
 4004a50:	da81038d 	sth	r10,1038(sp)
 4004a54:	da410715 	stw	r9,1052(sp)
 4004a58:	da010915 	stw	r8,1060(sp)
 4004a5c:	dec10015 	stw	sp,1024(sp)
 4004a60:	dec10415 	stw	sp,1040(sp)
 4004a64:	d8c10215 	stw	r3,1032(sp)
 4004a68:	d8c10515 	stw	r3,1044(sp)
 4004a6c:	d8010615 	stw	zero,1048(sp)
 4004a70:	40027f80 	call	40027f8 <___vfprintf_internal_r>
 4004a74:	1023883a 	mov	r17,r2
 4004a78:	10000416 	blt	r2,zero,4004a8c <__sbprintf+0x80>
 4004a7c:	d9410004 	addi	r5,sp,1024
 4004a80:	9009883a 	mov	r4,r18
 4004a84:	40066c00 	call	40066c0 <_fflush_r>
 4004a88:	10000d1e 	bne	r2,zero,4004ac0 <__sbprintf+0xb4>
 4004a8c:	d881030b 	ldhu	r2,1036(sp)
 4004a90:	1080100c 	andi	r2,r2,64
 4004a94:	10000326 	beq	r2,zero,4004aa4 <__sbprintf+0x98>
 4004a98:	8080030b 	ldhu	r2,12(r16)
 4004a9c:	10801014 	ori	r2,r2,64
 4004aa0:	8080030d 	sth	r2,12(r16)
 4004aa4:	8805883a 	mov	r2,r17
 4004aa8:	dfc11d17 	ldw	ra,1140(sp)
 4004aac:	dc811c17 	ldw	r18,1136(sp)
 4004ab0:	dc411b17 	ldw	r17,1132(sp)
 4004ab4:	dc011a17 	ldw	r16,1128(sp)
 4004ab8:	dec11e04 	addi	sp,sp,1144
 4004abc:	f800283a 	ret
 4004ac0:	047fffc4 	movi	r17,-1
 4004ac4:	003ff106 	br	4004a8c <__alt_data_end+0xfbffca8c>

04004ac8 <__swsetup_r>:
 4004ac8:	00810074 	movhi	r2,1025
 4004acc:	defffd04 	addi	sp,sp,-12
 4004ad0:	10881404 	addi	r2,r2,8272
 4004ad4:	dc400115 	stw	r17,4(sp)
 4004ad8:	2023883a 	mov	r17,r4
 4004adc:	11000017 	ldw	r4,0(r2)
 4004ae0:	dc000015 	stw	r16,0(sp)
 4004ae4:	dfc00215 	stw	ra,8(sp)
 4004ae8:	2821883a 	mov	r16,r5
 4004aec:	20000226 	beq	r4,zero,4004af8 <__swsetup_r+0x30>
 4004af0:	20800e17 	ldw	r2,56(r4)
 4004af4:	10003126 	beq	r2,zero,4004bbc <__swsetup_r+0xf4>
 4004af8:	8080030b 	ldhu	r2,12(r16)
 4004afc:	10c0020c 	andi	r3,r2,8
 4004b00:	1009883a 	mov	r4,r2
 4004b04:	18000f26 	beq	r3,zero,4004b44 <__swsetup_r+0x7c>
 4004b08:	80c00417 	ldw	r3,16(r16)
 4004b0c:	18001526 	beq	r3,zero,4004b64 <__swsetup_r+0x9c>
 4004b10:	1100004c 	andi	r4,r2,1
 4004b14:	20001c1e 	bne	r4,zero,4004b88 <__swsetup_r+0xc0>
 4004b18:	1080008c 	andi	r2,r2,2
 4004b1c:	1000291e 	bne	r2,zero,4004bc4 <__swsetup_r+0xfc>
 4004b20:	80800517 	ldw	r2,20(r16)
 4004b24:	80800215 	stw	r2,8(r16)
 4004b28:	18001c26 	beq	r3,zero,4004b9c <__swsetup_r+0xd4>
 4004b2c:	0005883a 	mov	r2,zero
 4004b30:	dfc00217 	ldw	ra,8(sp)
 4004b34:	dc400117 	ldw	r17,4(sp)
 4004b38:	dc000017 	ldw	r16,0(sp)
 4004b3c:	dec00304 	addi	sp,sp,12
 4004b40:	f800283a 	ret
 4004b44:	2080040c 	andi	r2,r4,16
 4004b48:	10002e26 	beq	r2,zero,4004c04 <__swsetup_r+0x13c>
 4004b4c:	2080010c 	andi	r2,r4,4
 4004b50:	10001e1e 	bne	r2,zero,4004bcc <__swsetup_r+0x104>
 4004b54:	80c00417 	ldw	r3,16(r16)
 4004b58:	20800214 	ori	r2,r4,8
 4004b5c:	8080030d 	sth	r2,12(r16)
 4004b60:	183feb1e 	bne	r3,zero,4004b10 <__alt_data_end+0xfbffcb10>
 4004b64:	1100a00c 	andi	r4,r2,640
 4004b68:	01408004 	movi	r5,512
 4004b6c:	217fe826 	beq	r4,r5,4004b10 <__alt_data_end+0xfbffcb10>
 4004b70:	800b883a 	mov	r5,r16
 4004b74:	8809883a 	mov	r4,r17
 4004b78:	40076400 	call	4007640 <__smakebuf_r>
 4004b7c:	8080030b 	ldhu	r2,12(r16)
 4004b80:	80c00417 	ldw	r3,16(r16)
 4004b84:	003fe206 	br	4004b10 <__alt_data_end+0xfbffcb10>
 4004b88:	80800517 	ldw	r2,20(r16)
 4004b8c:	80000215 	stw	zero,8(r16)
 4004b90:	0085c83a 	sub	r2,zero,r2
 4004b94:	80800615 	stw	r2,24(r16)
 4004b98:	183fe41e 	bne	r3,zero,4004b2c <__alt_data_end+0xfbffcb2c>
 4004b9c:	80c0030b 	ldhu	r3,12(r16)
 4004ba0:	0005883a 	mov	r2,zero
 4004ba4:	1900200c 	andi	r4,r3,128
 4004ba8:	203fe126 	beq	r4,zero,4004b30 <__alt_data_end+0xfbffcb30>
 4004bac:	18c01014 	ori	r3,r3,64
 4004bb0:	80c0030d 	sth	r3,12(r16)
 4004bb4:	00bfffc4 	movi	r2,-1
 4004bb8:	003fdd06 	br	4004b30 <__alt_data_end+0xfbffcb30>
 4004bbc:	4006a9c0 	call	4006a9c <__sinit>
 4004bc0:	003fcd06 	br	4004af8 <__alt_data_end+0xfbffcaf8>
 4004bc4:	0005883a 	mov	r2,zero
 4004bc8:	003fd606 	br	4004b24 <__alt_data_end+0xfbffcb24>
 4004bcc:	81400c17 	ldw	r5,48(r16)
 4004bd0:	28000626 	beq	r5,zero,4004bec <__swsetup_r+0x124>
 4004bd4:	80801004 	addi	r2,r16,64
 4004bd8:	28800326 	beq	r5,r2,4004be8 <__swsetup_r+0x120>
 4004bdc:	8809883a 	mov	r4,r17
 4004be0:	4006c100 	call	4006c10 <_free_r>
 4004be4:	8100030b 	ldhu	r4,12(r16)
 4004be8:	80000c15 	stw	zero,48(r16)
 4004bec:	80c00417 	ldw	r3,16(r16)
 4004bf0:	00bff6c4 	movi	r2,-37
 4004bf4:	1108703a 	and	r4,r2,r4
 4004bf8:	80000115 	stw	zero,4(r16)
 4004bfc:	80c00015 	stw	r3,0(r16)
 4004c00:	003fd506 	br	4004b58 <__alt_data_end+0xfbffcb58>
 4004c04:	00800244 	movi	r2,9
 4004c08:	88800015 	stw	r2,0(r17)
 4004c0c:	20801014 	ori	r2,r4,64
 4004c10:	8080030d 	sth	r2,12(r16)
 4004c14:	00bfffc4 	movi	r2,-1
 4004c18:	003fc506 	br	4004b30 <__alt_data_end+0xfbffcb30>

04004c1c <quorem>:
 4004c1c:	defff704 	addi	sp,sp,-36
 4004c20:	dc800215 	stw	r18,8(sp)
 4004c24:	20800417 	ldw	r2,16(r4)
 4004c28:	2c800417 	ldw	r18,16(r5)
 4004c2c:	dfc00815 	stw	ra,32(sp)
 4004c30:	ddc00715 	stw	r23,28(sp)
 4004c34:	dd800615 	stw	r22,24(sp)
 4004c38:	dd400515 	stw	r21,20(sp)
 4004c3c:	dd000415 	stw	r20,16(sp)
 4004c40:	dcc00315 	stw	r19,12(sp)
 4004c44:	dc400115 	stw	r17,4(sp)
 4004c48:	dc000015 	stw	r16,0(sp)
 4004c4c:	14807116 	blt	r2,r18,4004e14 <quorem+0x1f8>
 4004c50:	94bfffc4 	addi	r18,r18,-1
 4004c54:	94ad883a 	add	r22,r18,r18
 4004c58:	b5ad883a 	add	r22,r22,r22
 4004c5c:	2c400504 	addi	r17,r5,20
 4004c60:	8da9883a 	add	r20,r17,r22
 4004c64:	25400504 	addi	r21,r4,20
 4004c68:	282f883a 	mov	r23,r5
 4004c6c:	adad883a 	add	r22,r21,r22
 4004c70:	a1400017 	ldw	r5,0(r20)
 4004c74:	2021883a 	mov	r16,r4
 4004c78:	b1000017 	ldw	r4,0(r22)
 4004c7c:	29400044 	addi	r5,r5,1
 4004c80:	40009800 	call	4000980 <__udivsi3>
 4004c84:	1027883a 	mov	r19,r2
 4004c88:	10002c26 	beq	r2,zero,4004d3c <quorem+0x120>
 4004c8c:	a813883a 	mov	r9,r21
 4004c90:	880b883a 	mov	r5,r17
 4004c94:	0009883a 	mov	r4,zero
 4004c98:	000d883a 	mov	r6,zero
 4004c9c:	2a000017 	ldw	r8,0(r5)
 4004ca0:	49c00017 	ldw	r7,0(r9)
 4004ca4:	29400104 	addi	r5,r5,4
 4004ca8:	40bfffcc 	andi	r2,r8,65535
 4004cac:	14c5383a 	mul	r2,r2,r19
 4004cb0:	4010d43a 	srli	r8,r8,16
 4004cb4:	38ffffcc 	andi	r3,r7,65535
 4004cb8:	1105883a 	add	r2,r2,r4
 4004cbc:	1008d43a 	srli	r4,r2,16
 4004cc0:	44d1383a 	mul	r8,r8,r19
 4004cc4:	198d883a 	add	r6,r3,r6
 4004cc8:	10ffffcc 	andi	r3,r2,65535
 4004ccc:	30c7c83a 	sub	r3,r6,r3
 4004cd0:	380ed43a 	srli	r7,r7,16
 4004cd4:	4105883a 	add	r2,r8,r4
 4004cd8:	180dd43a 	srai	r6,r3,16
 4004cdc:	113fffcc 	andi	r4,r2,65535
 4004ce0:	390fc83a 	sub	r7,r7,r4
 4004ce4:	398d883a 	add	r6,r7,r6
 4004ce8:	300e943a 	slli	r7,r6,16
 4004cec:	18ffffcc 	andi	r3,r3,65535
 4004cf0:	1008d43a 	srli	r4,r2,16
 4004cf4:	38ceb03a 	or	r7,r7,r3
 4004cf8:	49c00015 	stw	r7,0(r9)
 4004cfc:	300dd43a 	srai	r6,r6,16
 4004d00:	4a400104 	addi	r9,r9,4
 4004d04:	a17fe52e 	bgeu	r20,r5,4004c9c <__alt_data_end+0xfbffcc9c>
 4004d08:	b0800017 	ldw	r2,0(r22)
 4004d0c:	10000b1e 	bne	r2,zero,4004d3c <quorem+0x120>
 4004d10:	b0bfff04 	addi	r2,r22,-4
 4004d14:	a880082e 	bgeu	r21,r2,4004d38 <quorem+0x11c>
 4004d18:	b0ffff17 	ldw	r3,-4(r22)
 4004d1c:	18000326 	beq	r3,zero,4004d2c <quorem+0x110>
 4004d20:	00000506 	br	4004d38 <quorem+0x11c>
 4004d24:	10c00017 	ldw	r3,0(r2)
 4004d28:	1800031e 	bne	r3,zero,4004d38 <quorem+0x11c>
 4004d2c:	10bfff04 	addi	r2,r2,-4
 4004d30:	94bfffc4 	addi	r18,r18,-1
 4004d34:	a8bffb36 	bltu	r21,r2,4004d24 <__alt_data_end+0xfbffcd24>
 4004d38:	84800415 	stw	r18,16(r16)
 4004d3c:	b80b883a 	mov	r5,r23
 4004d40:	8009883a 	mov	r4,r16
 4004d44:	4008d800 	call	4008d80 <__mcmp>
 4004d48:	10002616 	blt	r2,zero,4004de4 <quorem+0x1c8>
 4004d4c:	9cc00044 	addi	r19,r19,1
 4004d50:	a805883a 	mov	r2,r21
 4004d54:	000b883a 	mov	r5,zero
 4004d58:	11000017 	ldw	r4,0(r2)
 4004d5c:	89800017 	ldw	r6,0(r17)
 4004d60:	10800104 	addi	r2,r2,4
 4004d64:	20ffffcc 	andi	r3,r4,65535
 4004d68:	194b883a 	add	r5,r3,r5
 4004d6c:	30ffffcc 	andi	r3,r6,65535
 4004d70:	28c7c83a 	sub	r3,r5,r3
 4004d74:	300cd43a 	srli	r6,r6,16
 4004d78:	2008d43a 	srli	r4,r4,16
 4004d7c:	180bd43a 	srai	r5,r3,16
 4004d80:	18ffffcc 	andi	r3,r3,65535
 4004d84:	2189c83a 	sub	r4,r4,r6
 4004d88:	2149883a 	add	r4,r4,r5
 4004d8c:	200c943a 	slli	r6,r4,16
 4004d90:	8c400104 	addi	r17,r17,4
 4004d94:	200bd43a 	srai	r5,r4,16
 4004d98:	30c6b03a 	or	r3,r6,r3
 4004d9c:	10ffff15 	stw	r3,-4(r2)
 4004da0:	a47fed2e 	bgeu	r20,r17,4004d58 <__alt_data_end+0xfbffcd58>
 4004da4:	9485883a 	add	r2,r18,r18
 4004da8:	1085883a 	add	r2,r2,r2
 4004dac:	a887883a 	add	r3,r21,r2
 4004db0:	18800017 	ldw	r2,0(r3)
 4004db4:	10000b1e 	bne	r2,zero,4004de4 <quorem+0x1c8>
 4004db8:	18bfff04 	addi	r2,r3,-4
 4004dbc:	a880082e 	bgeu	r21,r2,4004de0 <quorem+0x1c4>
 4004dc0:	18ffff17 	ldw	r3,-4(r3)
 4004dc4:	18000326 	beq	r3,zero,4004dd4 <quorem+0x1b8>
 4004dc8:	00000506 	br	4004de0 <quorem+0x1c4>
 4004dcc:	10c00017 	ldw	r3,0(r2)
 4004dd0:	1800031e 	bne	r3,zero,4004de0 <quorem+0x1c4>
 4004dd4:	10bfff04 	addi	r2,r2,-4
 4004dd8:	94bfffc4 	addi	r18,r18,-1
 4004ddc:	a8bffb36 	bltu	r21,r2,4004dcc <__alt_data_end+0xfbffcdcc>
 4004de0:	84800415 	stw	r18,16(r16)
 4004de4:	9805883a 	mov	r2,r19
 4004de8:	dfc00817 	ldw	ra,32(sp)
 4004dec:	ddc00717 	ldw	r23,28(sp)
 4004df0:	dd800617 	ldw	r22,24(sp)
 4004df4:	dd400517 	ldw	r21,20(sp)
 4004df8:	dd000417 	ldw	r20,16(sp)
 4004dfc:	dcc00317 	ldw	r19,12(sp)
 4004e00:	dc800217 	ldw	r18,8(sp)
 4004e04:	dc400117 	ldw	r17,4(sp)
 4004e08:	dc000017 	ldw	r16,0(sp)
 4004e0c:	dec00904 	addi	sp,sp,36
 4004e10:	f800283a 	ret
 4004e14:	0005883a 	mov	r2,zero
 4004e18:	003ff306 	br	4004de8 <__alt_data_end+0xfbffcde8>

04004e1c <_dtoa_r>:
 4004e1c:	20801017 	ldw	r2,64(r4)
 4004e20:	deffde04 	addi	sp,sp,-136
 4004e24:	df002015 	stw	fp,128(sp)
 4004e28:	dcc01b15 	stw	r19,108(sp)
 4004e2c:	dc801a15 	stw	r18,104(sp)
 4004e30:	dc401915 	stw	r17,100(sp)
 4004e34:	dc001815 	stw	r16,96(sp)
 4004e38:	dfc02115 	stw	ra,132(sp)
 4004e3c:	ddc01f15 	stw	r23,124(sp)
 4004e40:	dd801e15 	stw	r22,120(sp)
 4004e44:	dd401d15 	stw	r21,116(sp)
 4004e48:	dd001c15 	stw	r20,112(sp)
 4004e4c:	d9c00315 	stw	r7,12(sp)
 4004e50:	2039883a 	mov	fp,r4
 4004e54:	3023883a 	mov	r17,r6
 4004e58:	2825883a 	mov	r18,r5
 4004e5c:	dc002417 	ldw	r16,144(sp)
 4004e60:	3027883a 	mov	r19,r6
 4004e64:	10000826 	beq	r2,zero,4004e88 <_dtoa_r+0x6c>
 4004e68:	21801117 	ldw	r6,68(r4)
 4004e6c:	00c00044 	movi	r3,1
 4004e70:	100b883a 	mov	r5,r2
 4004e74:	1986983a 	sll	r3,r3,r6
 4004e78:	11800115 	stw	r6,4(r2)
 4004e7c:	10c00215 	stw	r3,8(r2)
 4004e80:	40085600 	call	4008560 <_Bfree>
 4004e84:	e0001015 	stw	zero,64(fp)
 4004e88:	88002e16 	blt	r17,zero,4004f44 <_dtoa_r+0x128>
 4004e8c:	80000015 	stw	zero,0(r16)
 4004e90:	889ffc2c 	andhi	r2,r17,32752
 4004e94:	00dffc34 	movhi	r3,32752
 4004e98:	10c01c26 	beq	r2,r3,4004f0c <_dtoa_r+0xf0>
 4004e9c:	000d883a 	mov	r6,zero
 4004ea0:	000f883a 	mov	r7,zero
 4004ea4:	9009883a 	mov	r4,r18
 4004ea8:	980b883a 	mov	r5,r19
 4004eac:	400d1380 	call	400d138 <__eqdf2>
 4004eb0:	10002b1e 	bne	r2,zero,4004f60 <_dtoa_r+0x144>
 4004eb4:	d9c02317 	ldw	r7,140(sp)
 4004eb8:	00800044 	movi	r2,1
 4004ebc:	38800015 	stw	r2,0(r7)
 4004ec0:	d8802517 	ldw	r2,148(sp)
 4004ec4:	10019e26 	beq	r2,zero,4005540 <_dtoa_r+0x724>
 4004ec8:	d8c02517 	ldw	r3,148(sp)
 4004ecc:	00820034 	movhi	r2,2048
 4004ed0:	1080bc44 	addi	r2,r2,753
 4004ed4:	18800015 	stw	r2,0(r3)
 4004ed8:	10bfffc4 	addi	r2,r2,-1
 4004edc:	dfc02117 	ldw	ra,132(sp)
 4004ee0:	df002017 	ldw	fp,128(sp)
 4004ee4:	ddc01f17 	ldw	r23,124(sp)
 4004ee8:	dd801e17 	ldw	r22,120(sp)
 4004eec:	dd401d17 	ldw	r21,116(sp)
 4004ef0:	dd001c17 	ldw	r20,112(sp)
 4004ef4:	dcc01b17 	ldw	r19,108(sp)
 4004ef8:	dc801a17 	ldw	r18,104(sp)
 4004efc:	dc401917 	ldw	r17,100(sp)
 4004f00:	dc001817 	ldw	r16,96(sp)
 4004f04:	dec02204 	addi	sp,sp,136
 4004f08:	f800283a 	ret
 4004f0c:	d8c02317 	ldw	r3,140(sp)
 4004f10:	0089c3c4 	movi	r2,9999
 4004f14:	18800015 	stw	r2,0(r3)
 4004f18:	90017726 	beq	r18,zero,40054f8 <_dtoa_r+0x6dc>
 4004f1c:	00820034 	movhi	r2,2048
 4004f20:	1080c804 	addi	r2,r2,800
 4004f24:	d9002517 	ldw	r4,148(sp)
 4004f28:	203fec26 	beq	r4,zero,4004edc <__alt_data_end+0xfbffcedc>
 4004f2c:	10c000c7 	ldb	r3,3(r2)
 4004f30:	1801781e 	bne	r3,zero,4005514 <_dtoa_r+0x6f8>
 4004f34:	10c000c4 	addi	r3,r2,3
 4004f38:	d9802517 	ldw	r6,148(sp)
 4004f3c:	30c00015 	stw	r3,0(r6)
 4004f40:	003fe606 	br	4004edc <__alt_data_end+0xfbffcedc>
 4004f44:	04e00034 	movhi	r19,32768
 4004f48:	9cffffc4 	addi	r19,r19,-1
 4004f4c:	00800044 	movi	r2,1
 4004f50:	8ce6703a 	and	r19,r17,r19
 4004f54:	80800015 	stw	r2,0(r16)
 4004f58:	9823883a 	mov	r17,r19
 4004f5c:	003fcc06 	br	4004e90 <__alt_data_end+0xfbffce90>
 4004f60:	d8800204 	addi	r2,sp,8
 4004f64:	d8800015 	stw	r2,0(sp)
 4004f68:	d9c00104 	addi	r7,sp,4
 4004f6c:	900b883a 	mov	r5,r18
 4004f70:	980d883a 	mov	r6,r19
 4004f74:	e009883a 	mov	r4,fp
 4004f78:	8820d53a 	srli	r16,r17,20
 4004f7c:	400914c0 	call	400914c <__d2b>
 4004f80:	d8800915 	stw	r2,36(sp)
 4004f84:	8001651e 	bne	r16,zero,400551c <_dtoa_r+0x700>
 4004f88:	dd800217 	ldw	r22,8(sp)
 4004f8c:	dc000117 	ldw	r16,4(sp)
 4004f90:	00800804 	movi	r2,32
 4004f94:	b421883a 	add	r16,r22,r16
 4004f98:	80c10c84 	addi	r3,r16,1074
 4004f9c:	10c2d10e 	bge	r2,r3,4005ae4 <_dtoa_r+0xcc8>
 4004fa0:	00801004 	movi	r2,64
 4004fa4:	81010484 	addi	r4,r16,1042
 4004fa8:	10c7c83a 	sub	r3,r2,r3
 4004fac:	9108d83a 	srl	r4,r18,r4
 4004fb0:	88e2983a 	sll	r17,r17,r3
 4004fb4:	2448b03a 	or	r4,r4,r17
 4004fb8:	400dde80 	call	400dde8 <__floatunsidf>
 4004fbc:	017f8434 	movhi	r5,65040
 4004fc0:	01800044 	movi	r6,1
 4004fc4:	1009883a 	mov	r4,r2
 4004fc8:	194b883a 	add	r5,r3,r5
 4004fcc:	843fffc4 	addi	r16,r16,-1
 4004fd0:	d9801115 	stw	r6,68(sp)
 4004fd4:	000d883a 	mov	r6,zero
 4004fd8:	01cffe34 	movhi	r7,16376
 4004fdc:	400d3900 	call	400d390 <__subdf3>
 4004fe0:	0198dbf4 	movhi	r6,25455
 4004fe4:	01cff4f4 	movhi	r7,16339
 4004fe8:	3190d844 	addi	r6,r6,17249
 4004fec:	39e1e9c4 	addi	r7,r7,-30809
 4004ff0:	1009883a 	mov	r4,r2
 4004ff4:	180b883a 	mov	r5,r3
 4004ff8:	4001d740 	call	4001d74 <__muldf3>
 4004ffc:	01a2d874 	movhi	r6,35681
 4005000:	01cff1f4 	movhi	r7,16327
 4005004:	31b22cc4 	addi	r6,r6,-14157
 4005008:	39e28a04 	addi	r7,r7,-30168
 400500c:	180b883a 	mov	r5,r3
 4005010:	1009883a 	mov	r4,r2
 4005014:	400c88c0 	call	400c88c <__adddf3>
 4005018:	8009883a 	mov	r4,r16
 400501c:	1029883a 	mov	r20,r2
 4005020:	1823883a 	mov	r17,r3
 4005024:	400dd0c0 	call	400dd0c <__floatsidf>
 4005028:	019427f4 	movhi	r6,20639
 400502c:	01cff4f4 	movhi	r7,16339
 4005030:	319e7ec4 	addi	r6,r6,31227
 4005034:	39d104c4 	addi	r7,r7,17427
 4005038:	1009883a 	mov	r4,r2
 400503c:	180b883a 	mov	r5,r3
 4005040:	4001d740 	call	4001d74 <__muldf3>
 4005044:	100d883a 	mov	r6,r2
 4005048:	180f883a 	mov	r7,r3
 400504c:	a009883a 	mov	r4,r20
 4005050:	880b883a 	mov	r5,r17
 4005054:	400c88c0 	call	400c88c <__adddf3>
 4005058:	1009883a 	mov	r4,r2
 400505c:	180b883a 	mov	r5,r3
 4005060:	1029883a 	mov	r20,r2
 4005064:	1823883a 	mov	r17,r3
 4005068:	400dc8c0 	call	400dc8c <__fixdfsi>
 400506c:	000d883a 	mov	r6,zero
 4005070:	000f883a 	mov	r7,zero
 4005074:	a009883a 	mov	r4,r20
 4005078:	880b883a 	mov	r5,r17
 400507c:	d8800515 	stw	r2,20(sp)
 4005080:	400d29c0 	call	400d29c <__ledf2>
 4005084:	10028716 	blt	r2,zero,4005aa4 <_dtoa_r+0xc88>
 4005088:	d8c00517 	ldw	r3,20(sp)
 400508c:	00800584 	movi	r2,22
 4005090:	10c27536 	bltu	r2,r3,4005a68 <_dtoa_r+0xc4c>
 4005094:	180490fa 	slli	r2,r3,3
 4005098:	00c20034 	movhi	r3,2048
 400509c:	18c0e404 	addi	r3,r3,912
 40050a0:	1885883a 	add	r2,r3,r2
 40050a4:	11000017 	ldw	r4,0(r2)
 40050a8:	11400117 	ldw	r5,4(r2)
 40050ac:	900d883a 	mov	r6,r18
 40050b0:	980f883a 	mov	r7,r19
 40050b4:	400d1c00 	call	400d1c0 <__gedf2>
 40050b8:	00828d0e 	bge	zero,r2,4005af0 <_dtoa_r+0xcd4>
 40050bc:	d9000517 	ldw	r4,20(sp)
 40050c0:	d8000e15 	stw	zero,56(sp)
 40050c4:	213fffc4 	addi	r4,r4,-1
 40050c8:	d9000515 	stw	r4,20(sp)
 40050cc:	b42dc83a 	sub	r22,r22,r16
 40050d0:	b5bfffc4 	addi	r22,r22,-1
 40050d4:	b0026f16 	blt	r22,zero,4005a94 <_dtoa_r+0xc78>
 40050d8:	d8000815 	stw	zero,32(sp)
 40050dc:	d9c00517 	ldw	r7,20(sp)
 40050e0:	38026416 	blt	r7,zero,4005a74 <_dtoa_r+0xc58>
 40050e4:	b1ed883a 	add	r22,r22,r7
 40050e8:	d9c00d15 	stw	r7,52(sp)
 40050ec:	d8000a15 	stw	zero,40(sp)
 40050f0:	d9800317 	ldw	r6,12(sp)
 40050f4:	00800244 	movi	r2,9
 40050f8:	11811436 	bltu	r2,r6,400554c <_dtoa_r+0x730>
 40050fc:	00800144 	movi	r2,5
 4005100:	1184e10e 	bge	r2,r6,4006488 <_dtoa_r+0x166c>
 4005104:	31bfff04 	addi	r6,r6,-4
 4005108:	d9800315 	stw	r6,12(sp)
 400510c:	0023883a 	mov	r17,zero
 4005110:	d9800317 	ldw	r6,12(sp)
 4005114:	008000c4 	movi	r2,3
 4005118:	30836726 	beq	r6,r2,4005eb8 <_dtoa_r+0x109c>
 400511c:	1183410e 	bge	r2,r6,4005e24 <_dtoa_r+0x1008>
 4005120:	d9c00317 	ldw	r7,12(sp)
 4005124:	00800104 	movi	r2,4
 4005128:	38827c26 	beq	r7,r2,4005b1c <_dtoa_r+0xd00>
 400512c:	00800144 	movi	r2,5
 4005130:	3884c41e 	bne	r7,r2,4006444 <_dtoa_r+0x1628>
 4005134:	00800044 	movi	r2,1
 4005138:	d8800b15 	stw	r2,44(sp)
 400513c:	d8c00517 	ldw	r3,20(sp)
 4005140:	d9002217 	ldw	r4,136(sp)
 4005144:	1907883a 	add	r3,r3,r4
 4005148:	19800044 	addi	r6,r3,1
 400514c:	d8c00c15 	stw	r3,48(sp)
 4005150:	d9800615 	stw	r6,24(sp)
 4005154:	0183a40e 	bge	zero,r6,4005fe8 <_dtoa_r+0x11cc>
 4005158:	d9800617 	ldw	r6,24(sp)
 400515c:	3021883a 	mov	r16,r6
 4005160:	e0001115 	stw	zero,68(fp)
 4005164:	008005c4 	movi	r2,23
 4005168:	1184c92e 	bgeu	r2,r6,4006490 <_dtoa_r+0x1674>
 400516c:	00c00044 	movi	r3,1
 4005170:	00800104 	movi	r2,4
 4005174:	1085883a 	add	r2,r2,r2
 4005178:	11000504 	addi	r4,r2,20
 400517c:	180b883a 	mov	r5,r3
 4005180:	18c00044 	addi	r3,r3,1
 4005184:	313ffb2e 	bgeu	r6,r4,4005174 <__alt_data_end+0xfbffd174>
 4005188:	e1401115 	stw	r5,68(fp)
 400518c:	e009883a 	mov	r4,fp
 4005190:	40084b80 	call	40084b8 <_Balloc>
 4005194:	d8800715 	stw	r2,28(sp)
 4005198:	e0801015 	stw	r2,64(fp)
 400519c:	00800384 	movi	r2,14
 40051a0:	1400f736 	bltu	r2,r16,4005580 <_dtoa_r+0x764>
 40051a4:	8800f626 	beq	r17,zero,4005580 <_dtoa_r+0x764>
 40051a8:	d9c00517 	ldw	r7,20(sp)
 40051ac:	01c39a0e 	bge	zero,r7,4006018 <_dtoa_r+0x11fc>
 40051b0:	388003cc 	andi	r2,r7,15
 40051b4:	100490fa 	slli	r2,r2,3
 40051b8:	382bd13a 	srai	r21,r7,4
 40051bc:	00c20034 	movhi	r3,2048
 40051c0:	18c0e404 	addi	r3,r3,912
 40051c4:	1885883a 	add	r2,r3,r2
 40051c8:	a8c0040c 	andi	r3,r21,16
 40051cc:	12400017 	ldw	r9,0(r2)
 40051d0:	12000117 	ldw	r8,4(r2)
 40051d4:	18037926 	beq	r3,zero,4005fbc <_dtoa_r+0x11a0>
 40051d8:	00820034 	movhi	r2,2048
 40051dc:	1080da04 	addi	r2,r2,872
 40051e0:	11800817 	ldw	r6,32(r2)
 40051e4:	11c00917 	ldw	r7,36(r2)
 40051e8:	9009883a 	mov	r4,r18
 40051ec:	980b883a 	mov	r5,r19
 40051f0:	da001715 	stw	r8,92(sp)
 40051f4:	da401615 	stw	r9,88(sp)
 40051f8:	400148c0 	call	400148c <__divdf3>
 40051fc:	da001717 	ldw	r8,92(sp)
 4005200:	da401617 	ldw	r9,88(sp)
 4005204:	ad4003cc 	andi	r21,r21,15
 4005208:	040000c4 	movi	r16,3
 400520c:	1023883a 	mov	r17,r2
 4005210:	1829883a 	mov	r20,r3
 4005214:	a8001126 	beq	r21,zero,400525c <_dtoa_r+0x440>
 4005218:	05c20034 	movhi	r23,2048
 400521c:	bdc0da04 	addi	r23,r23,872
 4005220:	4805883a 	mov	r2,r9
 4005224:	4007883a 	mov	r3,r8
 4005228:	a980004c 	andi	r6,r21,1
 400522c:	1009883a 	mov	r4,r2
 4005230:	a82bd07a 	srai	r21,r21,1
 4005234:	180b883a 	mov	r5,r3
 4005238:	30000426 	beq	r6,zero,400524c <_dtoa_r+0x430>
 400523c:	b9800017 	ldw	r6,0(r23)
 4005240:	b9c00117 	ldw	r7,4(r23)
 4005244:	84000044 	addi	r16,r16,1
 4005248:	4001d740 	call	4001d74 <__muldf3>
 400524c:	bdc00204 	addi	r23,r23,8
 4005250:	a83ff51e 	bne	r21,zero,4005228 <__alt_data_end+0xfbffd228>
 4005254:	1013883a 	mov	r9,r2
 4005258:	1811883a 	mov	r8,r3
 400525c:	480d883a 	mov	r6,r9
 4005260:	400f883a 	mov	r7,r8
 4005264:	8809883a 	mov	r4,r17
 4005268:	a00b883a 	mov	r5,r20
 400526c:	400148c0 	call	400148c <__divdf3>
 4005270:	d8800f15 	stw	r2,60(sp)
 4005274:	d8c01015 	stw	r3,64(sp)
 4005278:	d8c00e17 	ldw	r3,56(sp)
 400527c:	18000626 	beq	r3,zero,4005298 <_dtoa_r+0x47c>
 4005280:	d9000f17 	ldw	r4,60(sp)
 4005284:	d9401017 	ldw	r5,64(sp)
 4005288:	000d883a 	mov	r6,zero
 400528c:	01cffc34 	movhi	r7,16368
 4005290:	400d29c0 	call	400d29c <__ledf2>
 4005294:	10040b16 	blt	r2,zero,40062c4 <_dtoa_r+0x14a8>
 4005298:	8009883a 	mov	r4,r16
 400529c:	400dd0c0 	call	400dd0c <__floatsidf>
 40052a0:	d9800f17 	ldw	r6,60(sp)
 40052a4:	d9c01017 	ldw	r7,64(sp)
 40052a8:	1009883a 	mov	r4,r2
 40052ac:	180b883a 	mov	r5,r3
 40052b0:	4001d740 	call	4001d74 <__muldf3>
 40052b4:	000d883a 	mov	r6,zero
 40052b8:	01d00734 	movhi	r7,16412
 40052bc:	1009883a 	mov	r4,r2
 40052c0:	180b883a 	mov	r5,r3
 40052c4:	400c88c0 	call	400c88c <__adddf3>
 40052c8:	1021883a 	mov	r16,r2
 40052cc:	d8800617 	ldw	r2,24(sp)
 40052d0:	047f3034 	movhi	r17,64704
 40052d4:	1c63883a 	add	r17,r3,r17
 40052d8:	10031826 	beq	r2,zero,4005f3c <_dtoa_r+0x1120>
 40052dc:	d8c00517 	ldw	r3,20(sp)
 40052e0:	db000617 	ldw	r12,24(sp)
 40052e4:	d8c01315 	stw	r3,76(sp)
 40052e8:	d9000b17 	ldw	r4,44(sp)
 40052ec:	20038f26 	beq	r4,zero,400612c <_dtoa_r+0x1310>
 40052f0:	60bfffc4 	addi	r2,r12,-1
 40052f4:	100490fa 	slli	r2,r2,3
 40052f8:	00c20034 	movhi	r3,2048
 40052fc:	18c0e404 	addi	r3,r3,912
 4005300:	1885883a 	add	r2,r3,r2
 4005304:	11800017 	ldw	r6,0(r2)
 4005308:	11c00117 	ldw	r7,4(r2)
 400530c:	d8800717 	ldw	r2,28(sp)
 4005310:	0009883a 	mov	r4,zero
 4005314:	014ff834 	movhi	r5,16352
 4005318:	db001615 	stw	r12,88(sp)
 400531c:	15c00044 	addi	r23,r2,1
 4005320:	400148c0 	call	400148c <__divdf3>
 4005324:	800d883a 	mov	r6,r16
 4005328:	880f883a 	mov	r7,r17
 400532c:	1009883a 	mov	r4,r2
 4005330:	180b883a 	mov	r5,r3
 4005334:	400d3900 	call	400d390 <__subdf3>
 4005338:	d9401017 	ldw	r5,64(sp)
 400533c:	d9000f17 	ldw	r4,60(sp)
 4005340:	102b883a 	mov	r21,r2
 4005344:	d8c01215 	stw	r3,72(sp)
 4005348:	400dc8c0 	call	400dc8c <__fixdfsi>
 400534c:	1009883a 	mov	r4,r2
 4005350:	1029883a 	mov	r20,r2
 4005354:	400dd0c0 	call	400dd0c <__floatsidf>
 4005358:	d9000f17 	ldw	r4,60(sp)
 400535c:	d9401017 	ldw	r5,64(sp)
 4005360:	100d883a 	mov	r6,r2
 4005364:	180f883a 	mov	r7,r3
 4005368:	400d3900 	call	400d390 <__subdf3>
 400536c:	1823883a 	mov	r17,r3
 4005370:	d8c00717 	ldw	r3,28(sp)
 4005374:	d9401217 	ldw	r5,72(sp)
 4005378:	a2000c04 	addi	r8,r20,48
 400537c:	1021883a 	mov	r16,r2
 4005380:	1a000005 	stb	r8,0(r3)
 4005384:	800d883a 	mov	r6,r16
 4005388:	880f883a 	mov	r7,r17
 400538c:	a809883a 	mov	r4,r21
 4005390:	4029883a 	mov	r20,r8
 4005394:	400d1c00 	call	400d1c0 <__gedf2>
 4005398:	00841d16 	blt	zero,r2,4006410 <_dtoa_r+0x15f4>
 400539c:	800d883a 	mov	r6,r16
 40053a0:	880f883a 	mov	r7,r17
 40053a4:	0009883a 	mov	r4,zero
 40053a8:	014ffc34 	movhi	r5,16368
 40053ac:	400d3900 	call	400d390 <__subdf3>
 40053b0:	d9401217 	ldw	r5,72(sp)
 40053b4:	100d883a 	mov	r6,r2
 40053b8:	180f883a 	mov	r7,r3
 40053bc:	a809883a 	mov	r4,r21
 40053c0:	400d1c00 	call	400d1c0 <__gedf2>
 40053c4:	db001617 	ldw	r12,88(sp)
 40053c8:	00840e16 	blt	zero,r2,4006404 <_dtoa_r+0x15e8>
 40053cc:	00800044 	movi	r2,1
 40053d0:	13006b0e 	bge	r2,r12,4005580 <_dtoa_r+0x764>
 40053d4:	d9000717 	ldw	r4,28(sp)
 40053d8:	dd800f15 	stw	r22,60(sp)
 40053dc:	dcc01015 	stw	r19,64(sp)
 40053e0:	2319883a 	add	r12,r4,r12
 40053e4:	dcc01217 	ldw	r19,72(sp)
 40053e8:	602d883a 	mov	r22,r12
 40053ec:	dc801215 	stw	r18,72(sp)
 40053f0:	b825883a 	mov	r18,r23
 40053f4:	00000906 	br	400541c <_dtoa_r+0x600>
 40053f8:	400d3900 	call	400d390 <__subdf3>
 40053fc:	a80d883a 	mov	r6,r21
 4005400:	980f883a 	mov	r7,r19
 4005404:	1009883a 	mov	r4,r2
 4005408:	180b883a 	mov	r5,r3
 400540c:	400d29c0 	call	400d29c <__ledf2>
 4005410:	1003e816 	blt	r2,zero,40063b4 <_dtoa_r+0x1598>
 4005414:	b825883a 	mov	r18,r23
 4005418:	bd83e926 	beq	r23,r22,40063c0 <_dtoa_r+0x15a4>
 400541c:	a809883a 	mov	r4,r21
 4005420:	980b883a 	mov	r5,r19
 4005424:	000d883a 	mov	r6,zero
 4005428:	01d00934 	movhi	r7,16420
 400542c:	4001d740 	call	4001d74 <__muldf3>
 4005430:	000d883a 	mov	r6,zero
 4005434:	01d00934 	movhi	r7,16420
 4005438:	8009883a 	mov	r4,r16
 400543c:	880b883a 	mov	r5,r17
 4005440:	102b883a 	mov	r21,r2
 4005444:	1827883a 	mov	r19,r3
 4005448:	4001d740 	call	4001d74 <__muldf3>
 400544c:	180b883a 	mov	r5,r3
 4005450:	1009883a 	mov	r4,r2
 4005454:	1821883a 	mov	r16,r3
 4005458:	1023883a 	mov	r17,r2
 400545c:	400dc8c0 	call	400dc8c <__fixdfsi>
 4005460:	1009883a 	mov	r4,r2
 4005464:	1029883a 	mov	r20,r2
 4005468:	400dd0c0 	call	400dd0c <__floatsidf>
 400546c:	8809883a 	mov	r4,r17
 4005470:	800b883a 	mov	r5,r16
 4005474:	100d883a 	mov	r6,r2
 4005478:	180f883a 	mov	r7,r3
 400547c:	400d3900 	call	400d390 <__subdf3>
 4005480:	a5000c04 	addi	r20,r20,48
 4005484:	a80d883a 	mov	r6,r21
 4005488:	980f883a 	mov	r7,r19
 400548c:	1009883a 	mov	r4,r2
 4005490:	180b883a 	mov	r5,r3
 4005494:	95000005 	stb	r20,0(r18)
 4005498:	1021883a 	mov	r16,r2
 400549c:	1823883a 	mov	r17,r3
 40054a0:	400d29c0 	call	400d29c <__ledf2>
 40054a4:	bdc00044 	addi	r23,r23,1
 40054a8:	800d883a 	mov	r6,r16
 40054ac:	880f883a 	mov	r7,r17
 40054b0:	0009883a 	mov	r4,zero
 40054b4:	014ffc34 	movhi	r5,16368
 40054b8:	103fcf0e 	bge	r2,zero,40053f8 <__alt_data_end+0xfbffd3f8>
 40054bc:	d8c01317 	ldw	r3,76(sp)
 40054c0:	d8c00515 	stw	r3,20(sp)
 40054c4:	d9400917 	ldw	r5,36(sp)
 40054c8:	e009883a 	mov	r4,fp
 40054cc:	40085600 	call	4008560 <_Bfree>
 40054d0:	d9000517 	ldw	r4,20(sp)
 40054d4:	d9802317 	ldw	r6,140(sp)
 40054d8:	d9c02517 	ldw	r7,148(sp)
 40054dc:	b8000005 	stb	zero,0(r23)
 40054e0:	20800044 	addi	r2,r4,1
 40054e4:	30800015 	stw	r2,0(r6)
 40054e8:	3802aa26 	beq	r7,zero,4005f94 <_dtoa_r+0x1178>
 40054ec:	3dc00015 	stw	r23,0(r7)
 40054f0:	d8800717 	ldw	r2,28(sp)
 40054f4:	003e7906 	br	4004edc <__alt_data_end+0xfbffcedc>
 40054f8:	00800434 	movhi	r2,16
 40054fc:	10bfffc4 	addi	r2,r2,-1
 4005500:	88a2703a 	and	r17,r17,r2
 4005504:	883e851e 	bne	r17,zero,4004f1c <__alt_data_end+0xfbffcf1c>
 4005508:	00820034 	movhi	r2,2048
 400550c:	1080c504 	addi	r2,r2,788
 4005510:	003e8406 	br	4004f24 <__alt_data_end+0xfbffcf24>
 4005514:	10c00204 	addi	r3,r2,8
 4005518:	003e8706 	br	4004f38 <__alt_data_end+0xfbffcf38>
 400551c:	01400434 	movhi	r5,16
 4005520:	297fffc4 	addi	r5,r5,-1
 4005524:	994a703a 	and	r5,r19,r5
 4005528:	9009883a 	mov	r4,r18
 400552c:	843f0044 	addi	r16,r16,-1023
 4005530:	294ffc34 	orhi	r5,r5,16368
 4005534:	dd800217 	ldw	r22,8(sp)
 4005538:	d8001115 	stw	zero,68(sp)
 400553c:	003ea506 	br	4004fd4 <__alt_data_end+0xfbffcfd4>
 4005540:	00820034 	movhi	r2,2048
 4005544:	1080bc04 	addi	r2,r2,752
 4005548:	003e6406 	br	4004edc <__alt_data_end+0xfbffcedc>
 400554c:	e0001115 	stw	zero,68(fp)
 4005550:	000b883a 	mov	r5,zero
 4005554:	e009883a 	mov	r4,fp
 4005558:	40084b80 	call	40084b8 <_Balloc>
 400555c:	01bfffc4 	movi	r6,-1
 4005560:	01c00044 	movi	r7,1
 4005564:	d8800715 	stw	r2,28(sp)
 4005568:	d9800c15 	stw	r6,48(sp)
 400556c:	e0801015 	stw	r2,64(fp)
 4005570:	d8000315 	stw	zero,12(sp)
 4005574:	d9c00b15 	stw	r7,44(sp)
 4005578:	d9800615 	stw	r6,24(sp)
 400557c:	d8002215 	stw	zero,136(sp)
 4005580:	d8800117 	ldw	r2,4(sp)
 4005584:	10008916 	blt	r2,zero,40057ac <_dtoa_r+0x990>
 4005588:	d9000517 	ldw	r4,20(sp)
 400558c:	00c00384 	movi	r3,14
 4005590:	19008616 	blt	r3,r4,40057ac <_dtoa_r+0x990>
 4005594:	200490fa 	slli	r2,r4,3
 4005598:	00c20034 	movhi	r3,2048
 400559c:	d9802217 	ldw	r6,136(sp)
 40055a0:	18c0e404 	addi	r3,r3,912
 40055a4:	1885883a 	add	r2,r3,r2
 40055a8:	14000017 	ldw	r16,0(r2)
 40055ac:	14400117 	ldw	r17,4(r2)
 40055b0:	30016316 	blt	r6,zero,4005b40 <_dtoa_r+0xd24>
 40055b4:	800d883a 	mov	r6,r16
 40055b8:	880f883a 	mov	r7,r17
 40055bc:	9009883a 	mov	r4,r18
 40055c0:	980b883a 	mov	r5,r19
 40055c4:	400148c0 	call	400148c <__divdf3>
 40055c8:	180b883a 	mov	r5,r3
 40055cc:	1009883a 	mov	r4,r2
 40055d0:	400dc8c0 	call	400dc8c <__fixdfsi>
 40055d4:	1009883a 	mov	r4,r2
 40055d8:	102b883a 	mov	r21,r2
 40055dc:	400dd0c0 	call	400dd0c <__floatsidf>
 40055e0:	800d883a 	mov	r6,r16
 40055e4:	880f883a 	mov	r7,r17
 40055e8:	1009883a 	mov	r4,r2
 40055ec:	180b883a 	mov	r5,r3
 40055f0:	4001d740 	call	4001d74 <__muldf3>
 40055f4:	100d883a 	mov	r6,r2
 40055f8:	180f883a 	mov	r7,r3
 40055fc:	9009883a 	mov	r4,r18
 4005600:	980b883a 	mov	r5,r19
 4005604:	400d3900 	call	400d390 <__subdf3>
 4005608:	d9c00717 	ldw	r7,28(sp)
 400560c:	1009883a 	mov	r4,r2
 4005610:	a8800c04 	addi	r2,r21,48
 4005614:	38800005 	stb	r2,0(r7)
 4005618:	3dc00044 	addi	r23,r7,1
 400561c:	d9c00617 	ldw	r7,24(sp)
 4005620:	01800044 	movi	r6,1
 4005624:	180b883a 	mov	r5,r3
 4005628:	2005883a 	mov	r2,r4
 400562c:	39803826 	beq	r7,r6,4005710 <_dtoa_r+0x8f4>
 4005630:	000d883a 	mov	r6,zero
 4005634:	01d00934 	movhi	r7,16420
 4005638:	4001d740 	call	4001d74 <__muldf3>
 400563c:	000d883a 	mov	r6,zero
 4005640:	000f883a 	mov	r7,zero
 4005644:	1009883a 	mov	r4,r2
 4005648:	180b883a 	mov	r5,r3
 400564c:	1025883a 	mov	r18,r2
 4005650:	1827883a 	mov	r19,r3
 4005654:	400d1380 	call	400d138 <__eqdf2>
 4005658:	103f9a26 	beq	r2,zero,40054c4 <__alt_data_end+0xfbffd4c4>
 400565c:	d9c00617 	ldw	r7,24(sp)
 4005660:	d8c00717 	ldw	r3,28(sp)
 4005664:	b829883a 	mov	r20,r23
 4005668:	38bfffc4 	addi	r2,r7,-1
 400566c:	18ad883a 	add	r22,r3,r2
 4005670:	00000a06 	br	400569c <_dtoa_r+0x880>
 4005674:	4001d740 	call	4001d74 <__muldf3>
 4005678:	000d883a 	mov	r6,zero
 400567c:	000f883a 	mov	r7,zero
 4005680:	1009883a 	mov	r4,r2
 4005684:	180b883a 	mov	r5,r3
 4005688:	1025883a 	mov	r18,r2
 400568c:	1827883a 	mov	r19,r3
 4005690:	b829883a 	mov	r20,r23
 4005694:	400d1380 	call	400d138 <__eqdf2>
 4005698:	103f8a26 	beq	r2,zero,40054c4 <__alt_data_end+0xfbffd4c4>
 400569c:	800d883a 	mov	r6,r16
 40056a0:	880f883a 	mov	r7,r17
 40056a4:	9009883a 	mov	r4,r18
 40056a8:	980b883a 	mov	r5,r19
 40056ac:	400148c0 	call	400148c <__divdf3>
 40056b0:	180b883a 	mov	r5,r3
 40056b4:	1009883a 	mov	r4,r2
 40056b8:	400dc8c0 	call	400dc8c <__fixdfsi>
 40056bc:	1009883a 	mov	r4,r2
 40056c0:	102b883a 	mov	r21,r2
 40056c4:	400dd0c0 	call	400dd0c <__floatsidf>
 40056c8:	800d883a 	mov	r6,r16
 40056cc:	880f883a 	mov	r7,r17
 40056d0:	1009883a 	mov	r4,r2
 40056d4:	180b883a 	mov	r5,r3
 40056d8:	4001d740 	call	4001d74 <__muldf3>
 40056dc:	100d883a 	mov	r6,r2
 40056e0:	180f883a 	mov	r7,r3
 40056e4:	9009883a 	mov	r4,r18
 40056e8:	980b883a 	mov	r5,r19
 40056ec:	400d3900 	call	400d390 <__subdf3>
 40056f0:	aa000c04 	addi	r8,r21,48
 40056f4:	a2000005 	stb	r8,0(r20)
 40056f8:	000d883a 	mov	r6,zero
 40056fc:	01d00934 	movhi	r7,16420
 4005700:	1009883a 	mov	r4,r2
 4005704:	180b883a 	mov	r5,r3
 4005708:	a5c00044 	addi	r23,r20,1
 400570c:	b53fd91e 	bne	r22,r20,4005674 <__alt_data_end+0xfbffd674>
 4005710:	100d883a 	mov	r6,r2
 4005714:	180f883a 	mov	r7,r3
 4005718:	1009883a 	mov	r4,r2
 400571c:	180b883a 	mov	r5,r3
 4005720:	400c88c0 	call	400c88c <__adddf3>
 4005724:	100d883a 	mov	r6,r2
 4005728:	180f883a 	mov	r7,r3
 400572c:	8009883a 	mov	r4,r16
 4005730:	880b883a 	mov	r5,r17
 4005734:	1027883a 	mov	r19,r2
 4005738:	1825883a 	mov	r18,r3
 400573c:	400d29c0 	call	400d29c <__ledf2>
 4005740:	10000816 	blt	r2,zero,4005764 <_dtoa_r+0x948>
 4005744:	980d883a 	mov	r6,r19
 4005748:	900f883a 	mov	r7,r18
 400574c:	8009883a 	mov	r4,r16
 4005750:	880b883a 	mov	r5,r17
 4005754:	400d1380 	call	400d138 <__eqdf2>
 4005758:	103f5a1e 	bne	r2,zero,40054c4 <__alt_data_end+0xfbffd4c4>
 400575c:	ad40004c 	andi	r21,r21,1
 4005760:	a83f5826 	beq	r21,zero,40054c4 <__alt_data_end+0xfbffd4c4>
 4005764:	bd3fffc3 	ldbu	r20,-1(r23)
 4005768:	b8bfffc4 	addi	r2,r23,-1
 400576c:	1007883a 	mov	r3,r2
 4005770:	01400e44 	movi	r5,57
 4005774:	d9800717 	ldw	r6,28(sp)
 4005778:	00000506 	br	4005790 <_dtoa_r+0x974>
 400577c:	18ffffc4 	addi	r3,r3,-1
 4005780:	11824726 	beq	r2,r6,40060a0 <_dtoa_r+0x1284>
 4005784:	1d000003 	ldbu	r20,0(r3)
 4005788:	102f883a 	mov	r23,r2
 400578c:	10bfffc4 	addi	r2,r2,-1
 4005790:	a1003fcc 	andi	r4,r20,255
 4005794:	2100201c 	xori	r4,r4,128
 4005798:	213fe004 	addi	r4,r4,-128
 400579c:	217ff726 	beq	r4,r5,400577c <__alt_data_end+0xfbffd77c>
 40057a0:	a2000044 	addi	r8,r20,1
 40057a4:	12000005 	stb	r8,0(r2)
 40057a8:	003f4606 	br	40054c4 <__alt_data_end+0xfbffd4c4>
 40057ac:	d9000b17 	ldw	r4,44(sp)
 40057b0:	2000c826 	beq	r4,zero,4005ad4 <_dtoa_r+0xcb8>
 40057b4:	d9800317 	ldw	r6,12(sp)
 40057b8:	00c00044 	movi	r3,1
 40057bc:	1980f90e 	bge	r3,r6,4005ba4 <_dtoa_r+0xd88>
 40057c0:	d8800617 	ldw	r2,24(sp)
 40057c4:	d8c00a17 	ldw	r3,40(sp)
 40057c8:	157fffc4 	addi	r21,r2,-1
 40057cc:	1d41f316 	blt	r3,r21,4005f9c <_dtoa_r+0x1180>
 40057d0:	1d6bc83a 	sub	r21,r3,r21
 40057d4:	d9c00617 	ldw	r7,24(sp)
 40057d8:	3802aa16 	blt	r7,zero,4006284 <_dtoa_r+0x1468>
 40057dc:	dd000817 	ldw	r20,32(sp)
 40057e0:	d8800617 	ldw	r2,24(sp)
 40057e4:	d8c00817 	ldw	r3,32(sp)
 40057e8:	01400044 	movi	r5,1
 40057ec:	e009883a 	mov	r4,fp
 40057f0:	1887883a 	add	r3,r3,r2
 40057f4:	d8c00815 	stw	r3,32(sp)
 40057f8:	b0ad883a 	add	r22,r22,r2
 40057fc:	40088c40 	call	40088c4 <__i2b>
 4005800:	1023883a 	mov	r17,r2
 4005804:	a0000826 	beq	r20,zero,4005828 <_dtoa_r+0xa0c>
 4005808:	0580070e 	bge	zero,r22,4005828 <_dtoa_r+0xa0c>
 400580c:	a005883a 	mov	r2,r20
 4005810:	b500b916 	blt	r22,r20,4005af8 <_dtoa_r+0xcdc>
 4005814:	d9000817 	ldw	r4,32(sp)
 4005818:	a0a9c83a 	sub	r20,r20,r2
 400581c:	b0adc83a 	sub	r22,r22,r2
 4005820:	2089c83a 	sub	r4,r4,r2
 4005824:	d9000815 	stw	r4,32(sp)
 4005828:	d9800a17 	ldw	r6,40(sp)
 400582c:	0181810e 	bge	zero,r6,4005e34 <_dtoa_r+0x1018>
 4005830:	d9c00b17 	ldw	r7,44(sp)
 4005834:	3800b326 	beq	r7,zero,4005b04 <_dtoa_r+0xce8>
 4005838:	a800b226 	beq	r21,zero,4005b04 <_dtoa_r+0xce8>
 400583c:	880b883a 	mov	r5,r17
 4005840:	a80d883a 	mov	r6,r21
 4005844:	e009883a 	mov	r4,fp
 4005848:	4008af80 	call	4008af8 <__pow5mult>
 400584c:	d9800917 	ldw	r6,36(sp)
 4005850:	100b883a 	mov	r5,r2
 4005854:	e009883a 	mov	r4,fp
 4005858:	1023883a 	mov	r17,r2
 400585c:	40089000 	call	4008900 <__multiply>
 4005860:	1021883a 	mov	r16,r2
 4005864:	d8800a17 	ldw	r2,40(sp)
 4005868:	d9400917 	ldw	r5,36(sp)
 400586c:	e009883a 	mov	r4,fp
 4005870:	1545c83a 	sub	r2,r2,r21
 4005874:	d8800a15 	stw	r2,40(sp)
 4005878:	40085600 	call	4008560 <_Bfree>
 400587c:	d8c00a17 	ldw	r3,40(sp)
 4005880:	18009f1e 	bne	r3,zero,4005b00 <_dtoa_r+0xce4>
 4005884:	05c00044 	movi	r23,1
 4005888:	e009883a 	mov	r4,fp
 400588c:	b80b883a 	mov	r5,r23
 4005890:	40088c40 	call	40088c4 <__i2b>
 4005894:	d9000d17 	ldw	r4,52(sp)
 4005898:	102b883a 	mov	r21,r2
 400589c:	2000ce26 	beq	r4,zero,4005bd8 <_dtoa_r+0xdbc>
 40058a0:	200d883a 	mov	r6,r4
 40058a4:	100b883a 	mov	r5,r2
 40058a8:	e009883a 	mov	r4,fp
 40058ac:	4008af80 	call	4008af8 <__pow5mult>
 40058b0:	d9800317 	ldw	r6,12(sp)
 40058b4:	102b883a 	mov	r21,r2
 40058b8:	b981810e 	bge	r23,r6,4005ec0 <_dtoa_r+0x10a4>
 40058bc:	0027883a 	mov	r19,zero
 40058c0:	a8800417 	ldw	r2,16(r21)
 40058c4:	05c00804 	movi	r23,32
 40058c8:	10800104 	addi	r2,r2,4
 40058cc:	1085883a 	add	r2,r2,r2
 40058d0:	1085883a 	add	r2,r2,r2
 40058d4:	a885883a 	add	r2,r21,r2
 40058d8:	11000017 	ldw	r4,0(r2)
 40058dc:	40087ac0 	call	40087ac <__hi0bits>
 40058e0:	b885c83a 	sub	r2,r23,r2
 40058e4:	1585883a 	add	r2,r2,r22
 40058e8:	108007cc 	andi	r2,r2,31
 40058ec:	1000b326 	beq	r2,zero,4005bbc <_dtoa_r+0xda0>
 40058f0:	00c00804 	movi	r3,32
 40058f4:	1887c83a 	sub	r3,r3,r2
 40058f8:	01000104 	movi	r4,4
 40058fc:	20c2cd0e 	bge	r4,r3,4006434 <_dtoa_r+0x1618>
 4005900:	00c00704 	movi	r3,28
 4005904:	1885c83a 	sub	r2,r3,r2
 4005908:	d8c00817 	ldw	r3,32(sp)
 400590c:	a0a9883a 	add	r20,r20,r2
 4005910:	b0ad883a 	add	r22,r22,r2
 4005914:	1887883a 	add	r3,r3,r2
 4005918:	d8c00815 	stw	r3,32(sp)
 400591c:	d9800817 	ldw	r6,32(sp)
 4005920:	0180040e 	bge	zero,r6,4005934 <_dtoa_r+0xb18>
 4005924:	800b883a 	mov	r5,r16
 4005928:	e009883a 	mov	r4,fp
 400592c:	4008c380 	call	4008c38 <__lshift>
 4005930:	1021883a 	mov	r16,r2
 4005934:	0580050e 	bge	zero,r22,400594c <_dtoa_r+0xb30>
 4005938:	a80b883a 	mov	r5,r21
 400593c:	b00d883a 	mov	r6,r22
 4005940:	e009883a 	mov	r4,fp
 4005944:	4008c380 	call	4008c38 <__lshift>
 4005948:	102b883a 	mov	r21,r2
 400594c:	d9c00e17 	ldw	r7,56(sp)
 4005950:	3801211e 	bne	r7,zero,4005dd8 <_dtoa_r+0xfbc>
 4005954:	d9800617 	ldw	r6,24(sp)
 4005958:	0181380e 	bge	zero,r6,4005e3c <_dtoa_r+0x1020>
 400595c:	d8c00b17 	ldw	r3,44(sp)
 4005960:	1800ab1e 	bne	r3,zero,4005c10 <_dtoa_r+0xdf4>
 4005964:	dc800717 	ldw	r18,28(sp)
 4005968:	dcc00617 	ldw	r19,24(sp)
 400596c:	9029883a 	mov	r20,r18
 4005970:	00000206 	br	400597c <_dtoa_r+0xb60>
 4005974:	40085880 	call	4008588 <__multadd>
 4005978:	1021883a 	mov	r16,r2
 400597c:	a80b883a 	mov	r5,r21
 4005980:	8009883a 	mov	r4,r16
 4005984:	4004c1c0 	call	4004c1c <quorem>
 4005988:	10800c04 	addi	r2,r2,48
 400598c:	90800005 	stb	r2,0(r18)
 4005990:	94800044 	addi	r18,r18,1
 4005994:	9507c83a 	sub	r3,r18,r20
 4005998:	000f883a 	mov	r7,zero
 400599c:	01800284 	movi	r6,10
 40059a0:	800b883a 	mov	r5,r16
 40059a4:	e009883a 	mov	r4,fp
 40059a8:	1cfff216 	blt	r3,r19,4005974 <__alt_data_end+0xfbffd974>
 40059ac:	1011883a 	mov	r8,r2
 40059b0:	d8800617 	ldw	r2,24(sp)
 40059b4:	0082370e 	bge	zero,r2,4006294 <_dtoa_r+0x1478>
 40059b8:	d9000717 	ldw	r4,28(sp)
 40059bc:	0025883a 	mov	r18,zero
 40059c0:	20af883a 	add	r23,r4,r2
 40059c4:	01800044 	movi	r6,1
 40059c8:	800b883a 	mov	r5,r16
 40059cc:	e009883a 	mov	r4,fp
 40059d0:	da001715 	stw	r8,92(sp)
 40059d4:	4008c380 	call	4008c38 <__lshift>
 40059d8:	a80b883a 	mov	r5,r21
 40059dc:	1009883a 	mov	r4,r2
 40059e0:	d8800915 	stw	r2,36(sp)
 40059e4:	4008d800 	call	4008d80 <__mcmp>
 40059e8:	da001717 	ldw	r8,92(sp)
 40059ec:	0081800e 	bge	zero,r2,4005ff0 <_dtoa_r+0x11d4>
 40059f0:	b93fffc3 	ldbu	r4,-1(r23)
 40059f4:	b8bfffc4 	addi	r2,r23,-1
 40059f8:	1007883a 	mov	r3,r2
 40059fc:	01800e44 	movi	r6,57
 4005a00:	d9c00717 	ldw	r7,28(sp)
 4005a04:	00000506 	br	4005a1c <_dtoa_r+0xc00>
 4005a08:	18ffffc4 	addi	r3,r3,-1
 4005a0c:	11c12326 	beq	r2,r7,4005e9c <_dtoa_r+0x1080>
 4005a10:	19000003 	ldbu	r4,0(r3)
 4005a14:	102f883a 	mov	r23,r2
 4005a18:	10bfffc4 	addi	r2,r2,-1
 4005a1c:	21403fcc 	andi	r5,r4,255
 4005a20:	2940201c 	xori	r5,r5,128
 4005a24:	297fe004 	addi	r5,r5,-128
 4005a28:	29bff726 	beq	r5,r6,4005a08 <__alt_data_end+0xfbffda08>
 4005a2c:	21000044 	addi	r4,r4,1
 4005a30:	11000005 	stb	r4,0(r2)
 4005a34:	a80b883a 	mov	r5,r21
 4005a38:	e009883a 	mov	r4,fp
 4005a3c:	40085600 	call	4008560 <_Bfree>
 4005a40:	883ea026 	beq	r17,zero,40054c4 <__alt_data_end+0xfbffd4c4>
 4005a44:	90000426 	beq	r18,zero,4005a58 <_dtoa_r+0xc3c>
 4005a48:	94400326 	beq	r18,r17,4005a58 <_dtoa_r+0xc3c>
 4005a4c:	900b883a 	mov	r5,r18
 4005a50:	e009883a 	mov	r4,fp
 4005a54:	40085600 	call	4008560 <_Bfree>
 4005a58:	880b883a 	mov	r5,r17
 4005a5c:	e009883a 	mov	r4,fp
 4005a60:	40085600 	call	4008560 <_Bfree>
 4005a64:	003e9706 	br	40054c4 <__alt_data_end+0xfbffd4c4>
 4005a68:	01800044 	movi	r6,1
 4005a6c:	d9800e15 	stw	r6,56(sp)
 4005a70:	003d9606 	br	40050cc <__alt_data_end+0xfbffd0cc>
 4005a74:	d8800817 	ldw	r2,32(sp)
 4005a78:	d8c00517 	ldw	r3,20(sp)
 4005a7c:	d8000d15 	stw	zero,52(sp)
 4005a80:	10c5c83a 	sub	r2,r2,r3
 4005a84:	00c9c83a 	sub	r4,zero,r3
 4005a88:	d8800815 	stw	r2,32(sp)
 4005a8c:	d9000a15 	stw	r4,40(sp)
 4005a90:	003d9706 	br	40050f0 <__alt_data_end+0xfbffd0f0>
 4005a94:	05adc83a 	sub	r22,zero,r22
 4005a98:	dd800815 	stw	r22,32(sp)
 4005a9c:	002d883a 	mov	r22,zero
 4005aa0:	003d8e06 	br	40050dc <__alt_data_end+0xfbffd0dc>
 4005aa4:	d9000517 	ldw	r4,20(sp)
 4005aa8:	400dd0c0 	call	400dd0c <__floatsidf>
 4005aac:	100d883a 	mov	r6,r2
 4005ab0:	180f883a 	mov	r7,r3
 4005ab4:	a009883a 	mov	r4,r20
 4005ab8:	880b883a 	mov	r5,r17
 4005abc:	400d1380 	call	400d138 <__eqdf2>
 4005ac0:	103d7126 	beq	r2,zero,4005088 <__alt_data_end+0xfbffd088>
 4005ac4:	d9c00517 	ldw	r7,20(sp)
 4005ac8:	39ffffc4 	addi	r7,r7,-1
 4005acc:	d9c00515 	stw	r7,20(sp)
 4005ad0:	003d6d06 	br	4005088 <__alt_data_end+0xfbffd088>
 4005ad4:	dd400a17 	ldw	r21,40(sp)
 4005ad8:	dd000817 	ldw	r20,32(sp)
 4005adc:	0023883a 	mov	r17,zero
 4005ae0:	003f4806 	br	4005804 <__alt_data_end+0xfbffd804>
 4005ae4:	10e3c83a 	sub	r17,r2,r3
 4005ae8:	9448983a 	sll	r4,r18,r17
 4005aec:	003d3206 	br	4004fb8 <__alt_data_end+0xfbffcfb8>
 4005af0:	d8000e15 	stw	zero,56(sp)
 4005af4:	003d7506 	br	40050cc <__alt_data_end+0xfbffd0cc>
 4005af8:	b005883a 	mov	r2,r22
 4005afc:	003f4506 	br	4005814 <__alt_data_end+0xfbffd814>
 4005b00:	dc000915 	stw	r16,36(sp)
 4005b04:	d9800a17 	ldw	r6,40(sp)
 4005b08:	d9400917 	ldw	r5,36(sp)
 4005b0c:	e009883a 	mov	r4,fp
 4005b10:	4008af80 	call	4008af8 <__pow5mult>
 4005b14:	1021883a 	mov	r16,r2
 4005b18:	003f5a06 	br	4005884 <__alt_data_end+0xfbffd884>
 4005b1c:	01c00044 	movi	r7,1
 4005b20:	d9c00b15 	stw	r7,44(sp)
 4005b24:	d8802217 	ldw	r2,136(sp)
 4005b28:	0081280e 	bge	zero,r2,4005fcc <_dtoa_r+0x11b0>
 4005b2c:	100d883a 	mov	r6,r2
 4005b30:	1021883a 	mov	r16,r2
 4005b34:	d8800c15 	stw	r2,48(sp)
 4005b38:	d8800615 	stw	r2,24(sp)
 4005b3c:	003d8806 	br	4005160 <__alt_data_end+0xfbffd160>
 4005b40:	d8800617 	ldw	r2,24(sp)
 4005b44:	00be9b16 	blt	zero,r2,40055b4 <__alt_data_end+0xfbffd5b4>
 4005b48:	10010f1e 	bne	r2,zero,4005f88 <_dtoa_r+0x116c>
 4005b4c:	880b883a 	mov	r5,r17
 4005b50:	000d883a 	mov	r6,zero
 4005b54:	01d00534 	movhi	r7,16404
 4005b58:	8009883a 	mov	r4,r16
 4005b5c:	4001d740 	call	4001d74 <__muldf3>
 4005b60:	900d883a 	mov	r6,r18
 4005b64:	980f883a 	mov	r7,r19
 4005b68:	1009883a 	mov	r4,r2
 4005b6c:	180b883a 	mov	r5,r3
 4005b70:	400d1c00 	call	400d1c0 <__gedf2>
 4005b74:	002b883a 	mov	r21,zero
 4005b78:	0023883a 	mov	r17,zero
 4005b7c:	1000bf16 	blt	r2,zero,4005e7c <_dtoa_r+0x1060>
 4005b80:	d9802217 	ldw	r6,136(sp)
 4005b84:	ddc00717 	ldw	r23,28(sp)
 4005b88:	018c303a 	nor	r6,zero,r6
 4005b8c:	d9800515 	stw	r6,20(sp)
 4005b90:	a80b883a 	mov	r5,r21
 4005b94:	e009883a 	mov	r4,fp
 4005b98:	40085600 	call	4008560 <_Bfree>
 4005b9c:	883e4926 	beq	r17,zero,40054c4 <__alt_data_end+0xfbffd4c4>
 4005ba0:	003fad06 	br	4005a58 <__alt_data_end+0xfbffda58>
 4005ba4:	d9c01117 	ldw	r7,68(sp)
 4005ba8:	3801bc26 	beq	r7,zero,400629c <_dtoa_r+0x1480>
 4005bac:	10810cc4 	addi	r2,r2,1075
 4005bb0:	dd400a17 	ldw	r21,40(sp)
 4005bb4:	dd000817 	ldw	r20,32(sp)
 4005bb8:	003f0a06 	br	40057e4 <__alt_data_end+0xfbffd7e4>
 4005bbc:	00800704 	movi	r2,28
 4005bc0:	d9000817 	ldw	r4,32(sp)
 4005bc4:	a0a9883a 	add	r20,r20,r2
 4005bc8:	b0ad883a 	add	r22,r22,r2
 4005bcc:	2089883a 	add	r4,r4,r2
 4005bd0:	d9000815 	stw	r4,32(sp)
 4005bd4:	003f5106 	br	400591c <__alt_data_end+0xfbffd91c>
 4005bd8:	d8c00317 	ldw	r3,12(sp)
 4005bdc:	b8c1fc0e 	bge	r23,r3,40063d0 <_dtoa_r+0x15b4>
 4005be0:	0027883a 	mov	r19,zero
 4005be4:	b805883a 	mov	r2,r23
 4005be8:	003f3e06 	br	40058e4 <__alt_data_end+0xfbffd8e4>
 4005bec:	880b883a 	mov	r5,r17
 4005bf0:	e009883a 	mov	r4,fp
 4005bf4:	000f883a 	mov	r7,zero
 4005bf8:	01800284 	movi	r6,10
 4005bfc:	40085880 	call	4008588 <__multadd>
 4005c00:	d9000c17 	ldw	r4,48(sp)
 4005c04:	1023883a 	mov	r17,r2
 4005c08:	0102040e 	bge	zero,r4,400641c <_dtoa_r+0x1600>
 4005c0c:	d9000615 	stw	r4,24(sp)
 4005c10:	0500050e 	bge	zero,r20,4005c28 <_dtoa_r+0xe0c>
 4005c14:	880b883a 	mov	r5,r17
 4005c18:	a00d883a 	mov	r6,r20
 4005c1c:	e009883a 	mov	r4,fp
 4005c20:	4008c380 	call	4008c38 <__lshift>
 4005c24:	1023883a 	mov	r17,r2
 4005c28:	9801241e 	bne	r19,zero,40060bc <_dtoa_r+0x12a0>
 4005c2c:	8829883a 	mov	r20,r17
 4005c30:	d9000617 	ldw	r4,24(sp)
 4005c34:	dcc00717 	ldw	r19,28(sp)
 4005c38:	9480004c 	andi	r18,r18,1
 4005c3c:	20bfffc4 	addi	r2,r4,-1
 4005c40:	9885883a 	add	r2,r19,r2
 4005c44:	d8800415 	stw	r2,16(sp)
 4005c48:	dc800615 	stw	r18,24(sp)
 4005c4c:	a80b883a 	mov	r5,r21
 4005c50:	8009883a 	mov	r4,r16
 4005c54:	4004c1c0 	call	4004c1c <quorem>
 4005c58:	880b883a 	mov	r5,r17
 4005c5c:	8009883a 	mov	r4,r16
 4005c60:	102f883a 	mov	r23,r2
 4005c64:	4008d800 	call	4008d80 <__mcmp>
 4005c68:	a80b883a 	mov	r5,r21
 4005c6c:	a00d883a 	mov	r6,r20
 4005c70:	e009883a 	mov	r4,fp
 4005c74:	102d883a 	mov	r22,r2
 4005c78:	4008de00 	call	4008de0 <__mdiff>
 4005c7c:	1007883a 	mov	r3,r2
 4005c80:	10800317 	ldw	r2,12(r2)
 4005c84:	bc800c04 	addi	r18,r23,48
 4005c88:	180b883a 	mov	r5,r3
 4005c8c:	10004e1e 	bne	r2,zero,4005dc8 <_dtoa_r+0xfac>
 4005c90:	8009883a 	mov	r4,r16
 4005c94:	d8c01615 	stw	r3,88(sp)
 4005c98:	4008d800 	call	4008d80 <__mcmp>
 4005c9c:	d8c01617 	ldw	r3,88(sp)
 4005ca0:	e009883a 	mov	r4,fp
 4005ca4:	d8801615 	stw	r2,88(sp)
 4005ca8:	180b883a 	mov	r5,r3
 4005cac:	40085600 	call	4008560 <_Bfree>
 4005cb0:	d8801617 	ldw	r2,88(sp)
 4005cb4:	1000041e 	bne	r2,zero,4005cc8 <_dtoa_r+0xeac>
 4005cb8:	d9800317 	ldw	r6,12(sp)
 4005cbc:	3000021e 	bne	r6,zero,4005cc8 <_dtoa_r+0xeac>
 4005cc0:	d8c00617 	ldw	r3,24(sp)
 4005cc4:	18003726 	beq	r3,zero,4005da4 <_dtoa_r+0xf88>
 4005cc8:	b0002016 	blt	r22,zero,4005d4c <_dtoa_r+0xf30>
 4005ccc:	b000041e 	bne	r22,zero,4005ce0 <_dtoa_r+0xec4>
 4005cd0:	d9000317 	ldw	r4,12(sp)
 4005cd4:	2000021e 	bne	r4,zero,4005ce0 <_dtoa_r+0xec4>
 4005cd8:	d8c00617 	ldw	r3,24(sp)
 4005cdc:	18001b26 	beq	r3,zero,4005d4c <_dtoa_r+0xf30>
 4005ce0:	00810716 	blt	zero,r2,4006100 <_dtoa_r+0x12e4>
 4005ce4:	d8c00417 	ldw	r3,16(sp)
 4005ce8:	9d800044 	addi	r22,r19,1
 4005cec:	9c800005 	stb	r18,0(r19)
 4005cf0:	b02f883a 	mov	r23,r22
 4005cf4:	98c10626 	beq	r19,r3,4006110 <_dtoa_r+0x12f4>
 4005cf8:	800b883a 	mov	r5,r16
 4005cfc:	000f883a 	mov	r7,zero
 4005d00:	01800284 	movi	r6,10
 4005d04:	e009883a 	mov	r4,fp
 4005d08:	40085880 	call	4008588 <__multadd>
 4005d0c:	1021883a 	mov	r16,r2
 4005d10:	000f883a 	mov	r7,zero
 4005d14:	01800284 	movi	r6,10
 4005d18:	880b883a 	mov	r5,r17
 4005d1c:	e009883a 	mov	r4,fp
 4005d20:	8d002526 	beq	r17,r20,4005db8 <_dtoa_r+0xf9c>
 4005d24:	40085880 	call	4008588 <__multadd>
 4005d28:	a00b883a 	mov	r5,r20
 4005d2c:	000f883a 	mov	r7,zero
 4005d30:	01800284 	movi	r6,10
 4005d34:	e009883a 	mov	r4,fp
 4005d38:	1023883a 	mov	r17,r2
 4005d3c:	40085880 	call	4008588 <__multadd>
 4005d40:	1029883a 	mov	r20,r2
 4005d44:	b027883a 	mov	r19,r22
 4005d48:	003fc006 	br	4005c4c <__alt_data_end+0xfbffdc4c>
 4005d4c:	9011883a 	mov	r8,r18
 4005d50:	00800e0e 	bge	zero,r2,4005d8c <_dtoa_r+0xf70>
 4005d54:	800b883a 	mov	r5,r16
 4005d58:	01800044 	movi	r6,1
 4005d5c:	e009883a 	mov	r4,fp
 4005d60:	da001715 	stw	r8,92(sp)
 4005d64:	4008c380 	call	4008c38 <__lshift>
 4005d68:	a80b883a 	mov	r5,r21
 4005d6c:	1009883a 	mov	r4,r2
 4005d70:	1021883a 	mov	r16,r2
 4005d74:	4008d800 	call	4008d80 <__mcmp>
 4005d78:	da001717 	ldw	r8,92(sp)
 4005d7c:	0081960e 	bge	zero,r2,40063d8 <_dtoa_r+0x15bc>
 4005d80:	00800e44 	movi	r2,57
 4005d84:	40817026 	beq	r8,r2,4006348 <_dtoa_r+0x152c>
 4005d88:	ba000c44 	addi	r8,r23,49
 4005d8c:	8825883a 	mov	r18,r17
 4005d90:	9dc00044 	addi	r23,r19,1
 4005d94:	9a000005 	stb	r8,0(r19)
 4005d98:	a023883a 	mov	r17,r20
 4005d9c:	dc000915 	stw	r16,36(sp)
 4005da0:	003f2406 	br	4005a34 <__alt_data_end+0xfbffda34>
 4005da4:	00800e44 	movi	r2,57
 4005da8:	9011883a 	mov	r8,r18
 4005dac:	90816626 	beq	r18,r2,4006348 <_dtoa_r+0x152c>
 4005db0:	05bff516 	blt	zero,r22,4005d88 <__alt_data_end+0xfbffdd88>
 4005db4:	003ff506 	br	4005d8c <__alt_data_end+0xfbffdd8c>
 4005db8:	40085880 	call	4008588 <__multadd>
 4005dbc:	1023883a 	mov	r17,r2
 4005dc0:	1029883a 	mov	r20,r2
 4005dc4:	003fdf06 	br	4005d44 <__alt_data_end+0xfbffdd44>
 4005dc8:	e009883a 	mov	r4,fp
 4005dcc:	40085600 	call	4008560 <_Bfree>
 4005dd0:	00800044 	movi	r2,1
 4005dd4:	003fbc06 	br	4005cc8 <__alt_data_end+0xfbffdcc8>
 4005dd8:	a80b883a 	mov	r5,r21
 4005ddc:	8009883a 	mov	r4,r16
 4005de0:	4008d800 	call	4008d80 <__mcmp>
 4005de4:	103edb0e 	bge	r2,zero,4005954 <__alt_data_end+0xfbffd954>
 4005de8:	800b883a 	mov	r5,r16
 4005dec:	000f883a 	mov	r7,zero
 4005df0:	01800284 	movi	r6,10
 4005df4:	e009883a 	mov	r4,fp
 4005df8:	40085880 	call	4008588 <__multadd>
 4005dfc:	1021883a 	mov	r16,r2
 4005e00:	d8800517 	ldw	r2,20(sp)
 4005e04:	d8c00b17 	ldw	r3,44(sp)
 4005e08:	10bfffc4 	addi	r2,r2,-1
 4005e0c:	d8800515 	stw	r2,20(sp)
 4005e10:	183f761e 	bne	r3,zero,4005bec <__alt_data_end+0xfbffdbec>
 4005e14:	d9000c17 	ldw	r4,48(sp)
 4005e18:	0101730e 	bge	zero,r4,40063e8 <_dtoa_r+0x15cc>
 4005e1c:	d9000615 	stw	r4,24(sp)
 4005e20:	003ed006 	br	4005964 <__alt_data_end+0xfbffd964>
 4005e24:	00800084 	movi	r2,2
 4005e28:	3081861e 	bne	r6,r2,4006444 <_dtoa_r+0x1628>
 4005e2c:	d8000b15 	stw	zero,44(sp)
 4005e30:	003f3c06 	br	4005b24 <__alt_data_end+0xfbffdb24>
 4005e34:	dc000917 	ldw	r16,36(sp)
 4005e38:	003e9206 	br	4005884 <__alt_data_end+0xfbffd884>
 4005e3c:	d9c00317 	ldw	r7,12(sp)
 4005e40:	00800084 	movi	r2,2
 4005e44:	11fec50e 	bge	r2,r7,400595c <__alt_data_end+0xfbffd95c>
 4005e48:	d9000617 	ldw	r4,24(sp)
 4005e4c:	20013c1e 	bne	r4,zero,4006340 <_dtoa_r+0x1524>
 4005e50:	a80b883a 	mov	r5,r21
 4005e54:	000f883a 	mov	r7,zero
 4005e58:	01800144 	movi	r6,5
 4005e5c:	e009883a 	mov	r4,fp
 4005e60:	40085880 	call	4008588 <__multadd>
 4005e64:	100b883a 	mov	r5,r2
 4005e68:	8009883a 	mov	r4,r16
 4005e6c:	102b883a 	mov	r21,r2
 4005e70:	4008d800 	call	4008d80 <__mcmp>
 4005e74:	dc000915 	stw	r16,36(sp)
 4005e78:	00bf410e 	bge	zero,r2,4005b80 <__alt_data_end+0xfbffdb80>
 4005e7c:	d9c00717 	ldw	r7,28(sp)
 4005e80:	00800c44 	movi	r2,49
 4005e84:	38800005 	stb	r2,0(r7)
 4005e88:	d8800517 	ldw	r2,20(sp)
 4005e8c:	3dc00044 	addi	r23,r7,1
 4005e90:	10800044 	addi	r2,r2,1
 4005e94:	d8800515 	stw	r2,20(sp)
 4005e98:	003f3d06 	br	4005b90 <__alt_data_end+0xfbffdb90>
 4005e9c:	d9800517 	ldw	r6,20(sp)
 4005ea0:	d9c00717 	ldw	r7,28(sp)
 4005ea4:	00800c44 	movi	r2,49
 4005ea8:	31800044 	addi	r6,r6,1
 4005eac:	d9800515 	stw	r6,20(sp)
 4005eb0:	38800005 	stb	r2,0(r7)
 4005eb4:	003edf06 	br	4005a34 <__alt_data_end+0xfbffda34>
 4005eb8:	d8000b15 	stw	zero,44(sp)
 4005ebc:	003c9f06 	br	400513c <__alt_data_end+0xfbffd13c>
 4005ec0:	903e7e1e 	bne	r18,zero,40058bc <__alt_data_end+0xfbffd8bc>
 4005ec4:	00800434 	movhi	r2,16
 4005ec8:	10bfffc4 	addi	r2,r2,-1
 4005ecc:	9884703a 	and	r2,r19,r2
 4005ed0:	1000ea1e 	bne	r2,zero,400627c <_dtoa_r+0x1460>
 4005ed4:	9cdffc2c 	andhi	r19,r19,32752
 4005ed8:	9800e826 	beq	r19,zero,400627c <_dtoa_r+0x1460>
 4005edc:	d9c00817 	ldw	r7,32(sp)
 4005ee0:	b5800044 	addi	r22,r22,1
 4005ee4:	04c00044 	movi	r19,1
 4005ee8:	39c00044 	addi	r7,r7,1
 4005eec:	d9c00815 	stw	r7,32(sp)
 4005ef0:	d8800d17 	ldw	r2,52(sp)
 4005ef4:	103e721e 	bne	r2,zero,40058c0 <__alt_data_end+0xfbffd8c0>
 4005ef8:	00800044 	movi	r2,1
 4005efc:	003e7906 	br	40058e4 <__alt_data_end+0xfbffd8e4>
 4005f00:	8009883a 	mov	r4,r16
 4005f04:	400dd0c0 	call	400dd0c <__floatsidf>
 4005f08:	d9800f17 	ldw	r6,60(sp)
 4005f0c:	d9c01017 	ldw	r7,64(sp)
 4005f10:	1009883a 	mov	r4,r2
 4005f14:	180b883a 	mov	r5,r3
 4005f18:	4001d740 	call	4001d74 <__muldf3>
 4005f1c:	000d883a 	mov	r6,zero
 4005f20:	01d00734 	movhi	r7,16412
 4005f24:	1009883a 	mov	r4,r2
 4005f28:	180b883a 	mov	r5,r3
 4005f2c:	400c88c0 	call	400c88c <__adddf3>
 4005f30:	047f3034 	movhi	r17,64704
 4005f34:	1021883a 	mov	r16,r2
 4005f38:	1c63883a 	add	r17,r3,r17
 4005f3c:	d9000f17 	ldw	r4,60(sp)
 4005f40:	d9401017 	ldw	r5,64(sp)
 4005f44:	000d883a 	mov	r6,zero
 4005f48:	01d00534 	movhi	r7,16404
 4005f4c:	400d3900 	call	400d390 <__subdf3>
 4005f50:	800d883a 	mov	r6,r16
 4005f54:	880f883a 	mov	r7,r17
 4005f58:	1009883a 	mov	r4,r2
 4005f5c:	180b883a 	mov	r5,r3
 4005f60:	102b883a 	mov	r21,r2
 4005f64:	1829883a 	mov	r20,r3
 4005f68:	400d1c00 	call	400d1c0 <__gedf2>
 4005f6c:	00806c16 	blt	zero,r2,4006120 <_dtoa_r+0x1304>
 4005f70:	89e0003c 	xorhi	r7,r17,32768
 4005f74:	800d883a 	mov	r6,r16
 4005f78:	a809883a 	mov	r4,r21
 4005f7c:	a00b883a 	mov	r5,r20
 4005f80:	400d29c0 	call	400d29c <__ledf2>
 4005f84:	103d7e0e 	bge	r2,zero,4005580 <__alt_data_end+0xfbffd580>
 4005f88:	002b883a 	mov	r21,zero
 4005f8c:	0023883a 	mov	r17,zero
 4005f90:	003efb06 	br	4005b80 <__alt_data_end+0xfbffdb80>
 4005f94:	d8800717 	ldw	r2,28(sp)
 4005f98:	003bd006 	br	4004edc <__alt_data_end+0xfbffcedc>
 4005f9c:	d9000a17 	ldw	r4,40(sp)
 4005fa0:	d9800d17 	ldw	r6,52(sp)
 4005fa4:	dd400a15 	stw	r21,40(sp)
 4005fa8:	a905c83a 	sub	r2,r21,r4
 4005fac:	308d883a 	add	r6,r6,r2
 4005fb0:	d9800d15 	stw	r6,52(sp)
 4005fb4:	002b883a 	mov	r21,zero
 4005fb8:	003e0606 	br	40057d4 <__alt_data_end+0xfbffd7d4>
 4005fbc:	9023883a 	mov	r17,r18
 4005fc0:	9829883a 	mov	r20,r19
 4005fc4:	04000084 	movi	r16,2
 4005fc8:	003c9206 	br	4005214 <__alt_data_end+0xfbffd214>
 4005fcc:	04000044 	movi	r16,1
 4005fd0:	dc000c15 	stw	r16,48(sp)
 4005fd4:	dc000615 	stw	r16,24(sp)
 4005fd8:	dc002215 	stw	r16,136(sp)
 4005fdc:	e0001115 	stw	zero,68(fp)
 4005fe0:	000b883a 	mov	r5,zero
 4005fe4:	003c6906 	br	400518c <__alt_data_end+0xfbffd18c>
 4005fe8:	3021883a 	mov	r16,r6
 4005fec:	003ffb06 	br	4005fdc <__alt_data_end+0xfbffdfdc>
 4005ff0:	1000021e 	bne	r2,zero,4005ffc <_dtoa_r+0x11e0>
 4005ff4:	4200004c 	andi	r8,r8,1
 4005ff8:	403e7d1e 	bne	r8,zero,40059f0 <__alt_data_end+0xfbffd9f0>
 4005ffc:	01000c04 	movi	r4,48
 4006000:	00000106 	br	4006008 <_dtoa_r+0x11ec>
 4006004:	102f883a 	mov	r23,r2
 4006008:	b8bfffc4 	addi	r2,r23,-1
 400600c:	10c00007 	ldb	r3,0(r2)
 4006010:	193ffc26 	beq	r3,r4,4006004 <__alt_data_end+0xfbffe004>
 4006014:	003e8706 	br	4005a34 <__alt_data_end+0xfbffda34>
 4006018:	d8800517 	ldw	r2,20(sp)
 400601c:	00a3c83a 	sub	r17,zero,r2
 4006020:	8800a426 	beq	r17,zero,40062b4 <_dtoa_r+0x1498>
 4006024:	888003cc 	andi	r2,r17,15
 4006028:	100490fa 	slli	r2,r2,3
 400602c:	00c20034 	movhi	r3,2048
 4006030:	18c0e404 	addi	r3,r3,912
 4006034:	1885883a 	add	r2,r3,r2
 4006038:	11800017 	ldw	r6,0(r2)
 400603c:	11c00117 	ldw	r7,4(r2)
 4006040:	9009883a 	mov	r4,r18
 4006044:	980b883a 	mov	r5,r19
 4006048:	8823d13a 	srai	r17,r17,4
 400604c:	4001d740 	call	4001d74 <__muldf3>
 4006050:	d8800f15 	stw	r2,60(sp)
 4006054:	d8c01015 	stw	r3,64(sp)
 4006058:	8800e826 	beq	r17,zero,40063fc <_dtoa_r+0x15e0>
 400605c:	05020034 	movhi	r20,2048
 4006060:	a500da04 	addi	r20,r20,872
 4006064:	04000084 	movi	r16,2
 4006068:	8980004c 	andi	r6,r17,1
 400606c:	1009883a 	mov	r4,r2
 4006070:	8823d07a 	srai	r17,r17,1
 4006074:	180b883a 	mov	r5,r3
 4006078:	30000426 	beq	r6,zero,400608c <_dtoa_r+0x1270>
 400607c:	a1800017 	ldw	r6,0(r20)
 4006080:	a1c00117 	ldw	r7,4(r20)
 4006084:	84000044 	addi	r16,r16,1
 4006088:	4001d740 	call	4001d74 <__muldf3>
 400608c:	a5000204 	addi	r20,r20,8
 4006090:	883ff51e 	bne	r17,zero,4006068 <__alt_data_end+0xfbffe068>
 4006094:	d8800f15 	stw	r2,60(sp)
 4006098:	d8c01015 	stw	r3,64(sp)
 400609c:	003c7606 	br	4005278 <__alt_data_end+0xfbffd278>
 40060a0:	00c00c04 	movi	r3,48
 40060a4:	10c00005 	stb	r3,0(r2)
 40060a8:	d8c00517 	ldw	r3,20(sp)
 40060ac:	bd3fffc3 	ldbu	r20,-1(r23)
 40060b0:	18c00044 	addi	r3,r3,1
 40060b4:	d8c00515 	stw	r3,20(sp)
 40060b8:	003db906 	br	40057a0 <__alt_data_end+0xfbffd7a0>
 40060bc:	89400117 	ldw	r5,4(r17)
 40060c0:	e009883a 	mov	r4,fp
 40060c4:	40084b80 	call	40084b8 <_Balloc>
 40060c8:	89800417 	ldw	r6,16(r17)
 40060cc:	89400304 	addi	r5,r17,12
 40060d0:	11000304 	addi	r4,r2,12
 40060d4:	31800084 	addi	r6,r6,2
 40060d8:	318d883a 	add	r6,r6,r6
 40060dc:	318d883a 	add	r6,r6,r6
 40060e0:	1027883a 	mov	r19,r2
 40060e4:	40080ec0 	call	40080ec <memcpy>
 40060e8:	01800044 	movi	r6,1
 40060ec:	980b883a 	mov	r5,r19
 40060f0:	e009883a 	mov	r4,fp
 40060f4:	4008c380 	call	4008c38 <__lshift>
 40060f8:	1029883a 	mov	r20,r2
 40060fc:	003ecc06 	br	4005c30 <__alt_data_end+0xfbffdc30>
 4006100:	00800e44 	movi	r2,57
 4006104:	90809026 	beq	r18,r2,4006348 <_dtoa_r+0x152c>
 4006108:	92000044 	addi	r8,r18,1
 400610c:	003f1f06 	br	4005d8c <__alt_data_end+0xfbffdd8c>
 4006110:	9011883a 	mov	r8,r18
 4006114:	8825883a 	mov	r18,r17
 4006118:	a023883a 	mov	r17,r20
 400611c:	003e2906 	br	40059c4 <__alt_data_end+0xfbffd9c4>
 4006120:	002b883a 	mov	r21,zero
 4006124:	0023883a 	mov	r17,zero
 4006128:	003f5406 	br	4005e7c <__alt_data_end+0xfbffde7c>
 400612c:	61bfffc4 	addi	r6,r12,-1
 4006130:	300490fa 	slli	r2,r6,3
 4006134:	00c20034 	movhi	r3,2048
 4006138:	18c0e404 	addi	r3,r3,912
 400613c:	1885883a 	add	r2,r3,r2
 4006140:	11000017 	ldw	r4,0(r2)
 4006144:	11400117 	ldw	r5,4(r2)
 4006148:	d8800717 	ldw	r2,28(sp)
 400614c:	880f883a 	mov	r7,r17
 4006150:	d9801215 	stw	r6,72(sp)
 4006154:	800d883a 	mov	r6,r16
 4006158:	db001615 	stw	r12,88(sp)
 400615c:	15c00044 	addi	r23,r2,1
 4006160:	4001d740 	call	4001d74 <__muldf3>
 4006164:	d9401017 	ldw	r5,64(sp)
 4006168:	d9000f17 	ldw	r4,60(sp)
 400616c:	d8c01515 	stw	r3,84(sp)
 4006170:	d8801415 	stw	r2,80(sp)
 4006174:	400dc8c0 	call	400dc8c <__fixdfsi>
 4006178:	1009883a 	mov	r4,r2
 400617c:	1021883a 	mov	r16,r2
 4006180:	400dd0c0 	call	400dd0c <__floatsidf>
 4006184:	d9000f17 	ldw	r4,60(sp)
 4006188:	d9401017 	ldw	r5,64(sp)
 400618c:	100d883a 	mov	r6,r2
 4006190:	180f883a 	mov	r7,r3
 4006194:	400d3900 	call	400d390 <__subdf3>
 4006198:	1829883a 	mov	r20,r3
 400619c:	d8c00717 	ldw	r3,28(sp)
 40061a0:	84000c04 	addi	r16,r16,48
 40061a4:	1023883a 	mov	r17,r2
 40061a8:	1c000005 	stb	r16,0(r3)
 40061ac:	db001617 	ldw	r12,88(sp)
 40061b0:	00800044 	movi	r2,1
 40061b4:	60802226 	beq	r12,r2,4006240 <_dtoa_r+0x1424>
 40061b8:	d9c00717 	ldw	r7,28(sp)
 40061bc:	8805883a 	mov	r2,r17
 40061c0:	b82b883a 	mov	r21,r23
 40061c4:	3b19883a 	add	r12,r7,r12
 40061c8:	6023883a 	mov	r17,r12
 40061cc:	a007883a 	mov	r3,r20
 40061d0:	dc800f15 	stw	r18,60(sp)
 40061d4:	000d883a 	mov	r6,zero
 40061d8:	01d00934 	movhi	r7,16420
 40061dc:	1009883a 	mov	r4,r2
 40061e0:	180b883a 	mov	r5,r3
 40061e4:	4001d740 	call	4001d74 <__muldf3>
 40061e8:	180b883a 	mov	r5,r3
 40061ec:	1009883a 	mov	r4,r2
 40061f0:	1829883a 	mov	r20,r3
 40061f4:	1025883a 	mov	r18,r2
 40061f8:	400dc8c0 	call	400dc8c <__fixdfsi>
 40061fc:	1009883a 	mov	r4,r2
 4006200:	1021883a 	mov	r16,r2
 4006204:	400dd0c0 	call	400dd0c <__floatsidf>
 4006208:	100d883a 	mov	r6,r2
 400620c:	180f883a 	mov	r7,r3
 4006210:	9009883a 	mov	r4,r18
 4006214:	a00b883a 	mov	r5,r20
 4006218:	84000c04 	addi	r16,r16,48
 400621c:	400d3900 	call	400d390 <__subdf3>
 4006220:	ad400044 	addi	r21,r21,1
 4006224:	ac3fffc5 	stb	r16,-1(r21)
 4006228:	ac7fea1e 	bne	r21,r17,40061d4 <__alt_data_end+0xfbffe1d4>
 400622c:	1023883a 	mov	r17,r2
 4006230:	d8801217 	ldw	r2,72(sp)
 4006234:	dc800f17 	ldw	r18,60(sp)
 4006238:	1829883a 	mov	r20,r3
 400623c:	b8af883a 	add	r23,r23,r2
 4006240:	d9001417 	ldw	r4,80(sp)
 4006244:	d9401517 	ldw	r5,84(sp)
 4006248:	000d883a 	mov	r6,zero
 400624c:	01cff834 	movhi	r7,16352
 4006250:	400c88c0 	call	400c88c <__adddf3>
 4006254:	880d883a 	mov	r6,r17
 4006258:	a00f883a 	mov	r7,r20
 400625c:	1009883a 	mov	r4,r2
 4006260:	180b883a 	mov	r5,r3
 4006264:	400d29c0 	call	400d29c <__ledf2>
 4006268:	10003e0e 	bge	r2,zero,4006364 <_dtoa_r+0x1548>
 400626c:	d9001317 	ldw	r4,76(sp)
 4006270:	bd3fffc3 	ldbu	r20,-1(r23)
 4006274:	d9000515 	stw	r4,20(sp)
 4006278:	003d3b06 	br	4005768 <__alt_data_end+0xfbffd768>
 400627c:	0027883a 	mov	r19,zero
 4006280:	003f1b06 	br	4005ef0 <__alt_data_end+0xfbffdef0>
 4006284:	d8800817 	ldw	r2,32(sp)
 4006288:	11e9c83a 	sub	r20,r2,r7
 400628c:	0005883a 	mov	r2,zero
 4006290:	003d5406 	br	40057e4 <__alt_data_end+0xfbffd7e4>
 4006294:	00800044 	movi	r2,1
 4006298:	003dc706 	br	40059b8 <__alt_data_end+0xfbffd9b8>
 400629c:	d8c00217 	ldw	r3,8(sp)
 40062a0:	00800d84 	movi	r2,54
 40062a4:	dd400a17 	ldw	r21,40(sp)
 40062a8:	10c5c83a 	sub	r2,r2,r3
 40062ac:	dd000817 	ldw	r20,32(sp)
 40062b0:	003d4c06 	br	40057e4 <__alt_data_end+0xfbffd7e4>
 40062b4:	dc800f15 	stw	r18,60(sp)
 40062b8:	dcc01015 	stw	r19,64(sp)
 40062bc:	04000084 	movi	r16,2
 40062c0:	003bed06 	br	4005278 <__alt_data_end+0xfbffd278>
 40062c4:	d9000617 	ldw	r4,24(sp)
 40062c8:	203f0d26 	beq	r4,zero,4005f00 <__alt_data_end+0xfbffdf00>
 40062cc:	d9800c17 	ldw	r6,48(sp)
 40062d0:	01bcab0e 	bge	zero,r6,4005580 <__alt_data_end+0xfbffd580>
 40062d4:	d9401017 	ldw	r5,64(sp)
 40062d8:	d9000f17 	ldw	r4,60(sp)
 40062dc:	000d883a 	mov	r6,zero
 40062e0:	01d00934 	movhi	r7,16420
 40062e4:	4001d740 	call	4001d74 <__muldf3>
 40062e8:	81000044 	addi	r4,r16,1
 40062ec:	d8800f15 	stw	r2,60(sp)
 40062f0:	d8c01015 	stw	r3,64(sp)
 40062f4:	400dd0c0 	call	400dd0c <__floatsidf>
 40062f8:	d9800f17 	ldw	r6,60(sp)
 40062fc:	d9c01017 	ldw	r7,64(sp)
 4006300:	1009883a 	mov	r4,r2
 4006304:	180b883a 	mov	r5,r3
 4006308:	4001d740 	call	4001d74 <__muldf3>
 400630c:	01d00734 	movhi	r7,16412
 4006310:	000d883a 	mov	r6,zero
 4006314:	1009883a 	mov	r4,r2
 4006318:	180b883a 	mov	r5,r3
 400631c:	400c88c0 	call	400c88c <__adddf3>
 4006320:	d9c00517 	ldw	r7,20(sp)
 4006324:	047f3034 	movhi	r17,64704
 4006328:	1021883a 	mov	r16,r2
 400632c:	39ffffc4 	addi	r7,r7,-1
 4006330:	d9c01315 	stw	r7,76(sp)
 4006334:	1c63883a 	add	r17,r3,r17
 4006338:	db000c17 	ldw	r12,48(sp)
 400633c:	003bea06 	br	40052e8 <__alt_data_end+0xfbffd2e8>
 4006340:	dc000915 	stw	r16,36(sp)
 4006344:	003e0e06 	br	4005b80 <__alt_data_end+0xfbffdb80>
 4006348:	01000e44 	movi	r4,57
 400634c:	8825883a 	mov	r18,r17
 4006350:	9dc00044 	addi	r23,r19,1
 4006354:	99000005 	stb	r4,0(r19)
 4006358:	a023883a 	mov	r17,r20
 400635c:	dc000915 	stw	r16,36(sp)
 4006360:	003da406 	br	40059f4 <__alt_data_end+0xfbffd9f4>
 4006364:	d9801417 	ldw	r6,80(sp)
 4006368:	d9c01517 	ldw	r7,84(sp)
 400636c:	0009883a 	mov	r4,zero
 4006370:	014ff834 	movhi	r5,16352
 4006374:	400d3900 	call	400d390 <__subdf3>
 4006378:	880d883a 	mov	r6,r17
 400637c:	a00f883a 	mov	r7,r20
 4006380:	1009883a 	mov	r4,r2
 4006384:	180b883a 	mov	r5,r3
 4006388:	400d1c00 	call	400d1c0 <__gedf2>
 400638c:	00bc7c0e 	bge	zero,r2,4005580 <__alt_data_end+0xfbffd580>
 4006390:	01000c04 	movi	r4,48
 4006394:	00000106 	br	400639c <_dtoa_r+0x1580>
 4006398:	102f883a 	mov	r23,r2
 400639c:	b8bfffc4 	addi	r2,r23,-1
 40063a0:	10c00007 	ldb	r3,0(r2)
 40063a4:	193ffc26 	beq	r3,r4,4006398 <__alt_data_end+0xfbffe398>
 40063a8:	d9801317 	ldw	r6,76(sp)
 40063ac:	d9800515 	stw	r6,20(sp)
 40063b0:	003c4406 	br	40054c4 <__alt_data_end+0xfbffd4c4>
 40063b4:	d9801317 	ldw	r6,76(sp)
 40063b8:	d9800515 	stw	r6,20(sp)
 40063bc:	003cea06 	br	4005768 <__alt_data_end+0xfbffd768>
 40063c0:	dd800f17 	ldw	r22,60(sp)
 40063c4:	dcc01017 	ldw	r19,64(sp)
 40063c8:	dc801217 	ldw	r18,72(sp)
 40063cc:	003c6c06 	br	4005580 <__alt_data_end+0xfbffd580>
 40063d0:	903e031e 	bne	r18,zero,4005be0 <__alt_data_end+0xfbffdbe0>
 40063d4:	003ebb06 	br	4005ec4 <__alt_data_end+0xfbffdec4>
 40063d8:	103e6c1e 	bne	r2,zero,4005d8c <__alt_data_end+0xfbffdd8c>
 40063dc:	4080004c 	andi	r2,r8,1
 40063e0:	103e6a26 	beq	r2,zero,4005d8c <__alt_data_end+0xfbffdd8c>
 40063e4:	003e6606 	br	4005d80 <__alt_data_end+0xfbffdd80>
 40063e8:	d8c00317 	ldw	r3,12(sp)
 40063ec:	00800084 	movi	r2,2
 40063f0:	10c02916 	blt	r2,r3,4006498 <_dtoa_r+0x167c>
 40063f4:	d9000c17 	ldw	r4,48(sp)
 40063f8:	003e8806 	br	4005e1c <__alt_data_end+0xfbffde1c>
 40063fc:	04000084 	movi	r16,2
 4006400:	003b9d06 	br	4005278 <__alt_data_end+0xfbffd278>
 4006404:	d9001317 	ldw	r4,76(sp)
 4006408:	d9000515 	stw	r4,20(sp)
 400640c:	003cd606 	br	4005768 <__alt_data_end+0xfbffd768>
 4006410:	d8801317 	ldw	r2,76(sp)
 4006414:	d8800515 	stw	r2,20(sp)
 4006418:	003c2a06 	br	40054c4 <__alt_data_end+0xfbffd4c4>
 400641c:	d9800317 	ldw	r6,12(sp)
 4006420:	00800084 	movi	r2,2
 4006424:	11801516 	blt	r2,r6,400647c <_dtoa_r+0x1660>
 4006428:	d9c00c17 	ldw	r7,48(sp)
 400642c:	d9c00615 	stw	r7,24(sp)
 4006430:	003df706 	br	4005c10 <__alt_data_end+0xfbffdc10>
 4006434:	193d3926 	beq	r3,r4,400591c <__alt_data_end+0xfbffd91c>
 4006438:	00c00f04 	movi	r3,60
 400643c:	1885c83a 	sub	r2,r3,r2
 4006440:	003ddf06 	br	4005bc0 <__alt_data_end+0xfbffdbc0>
 4006444:	e009883a 	mov	r4,fp
 4006448:	e0001115 	stw	zero,68(fp)
 400644c:	000b883a 	mov	r5,zero
 4006450:	40084b80 	call	40084b8 <_Balloc>
 4006454:	d8800715 	stw	r2,28(sp)
 4006458:	d8c00717 	ldw	r3,28(sp)
 400645c:	00bfffc4 	movi	r2,-1
 4006460:	01000044 	movi	r4,1
 4006464:	d8800c15 	stw	r2,48(sp)
 4006468:	e0c01015 	stw	r3,64(fp)
 400646c:	d9000b15 	stw	r4,44(sp)
 4006470:	d8800615 	stw	r2,24(sp)
 4006474:	d8002215 	stw	zero,136(sp)
 4006478:	003c4106 	br	4005580 <__alt_data_end+0xfbffd580>
 400647c:	d8c00c17 	ldw	r3,48(sp)
 4006480:	d8c00615 	stw	r3,24(sp)
 4006484:	003e7006 	br	4005e48 <__alt_data_end+0xfbffde48>
 4006488:	04400044 	movi	r17,1
 400648c:	003b2006 	br	4005110 <__alt_data_end+0xfbffd110>
 4006490:	000b883a 	mov	r5,zero
 4006494:	003b3d06 	br	400518c <__alt_data_end+0xfbffd18c>
 4006498:	d8800c17 	ldw	r2,48(sp)
 400649c:	d8800615 	stw	r2,24(sp)
 40064a0:	003e6906 	br	4005e48 <__alt_data_end+0xfbffde48>

040064a4 <__sflush_r>:
 40064a4:	2880030b 	ldhu	r2,12(r5)
 40064a8:	defffb04 	addi	sp,sp,-20
 40064ac:	dcc00315 	stw	r19,12(sp)
 40064b0:	dc400115 	stw	r17,4(sp)
 40064b4:	dfc00415 	stw	ra,16(sp)
 40064b8:	dc800215 	stw	r18,8(sp)
 40064bc:	dc000015 	stw	r16,0(sp)
 40064c0:	10c0020c 	andi	r3,r2,8
 40064c4:	2823883a 	mov	r17,r5
 40064c8:	2027883a 	mov	r19,r4
 40064cc:	1800311e 	bne	r3,zero,4006594 <__sflush_r+0xf0>
 40064d0:	28c00117 	ldw	r3,4(r5)
 40064d4:	10820014 	ori	r2,r2,2048
 40064d8:	2880030d 	sth	r2,12(r5)
 40064dc:	00c04b0e 	bge	zero,r3,400660c <__sflush_r+0x168>
 40064e0:	8a000a17 	ldw	r8,40(r17)
 40064e4:	40002326 	beq	r8,zero,4006574 <__sflush_r+0xd0>
 40064e8:	9c000017 	ldw	r16,0(r19)
 40064ec:	10c4000c 	andi	r3,r2,4096
 40064f0:	98000015 	stw	zero,0(r19)
 40064f4:	18004826 	beq	r3,zero,4006618 <__sflush_r+0x174>
 40064f8:	89801417 	ldw	r6,80(r17)
 40064fc:	10c0010c 	andi	r3,r2,4
 4006500:	18000626 	beq	r3,zero,400651c <__sflush_r+0x78>
 4006504:	88c00117 	ldw	r3,4(r17)
 4006508:	88800c17 	ldw	r2,48(r17)
 400650c:	30cdc83a 	sub	r6,r6,r3
 4006510:	10000226 	beq	r2,zero,400651c <__sflush_r+0x78>
 4006514:	88800f17 	ldw	r2,60(r17)
 4006518:	308dc83a 	sub	r6,r6,r2
 400651c:	89400717 	ldw	r5,28(r17)
 4006520:	000f883a 	mov	r7,zero
 4006524:	9809883a 	mov	r4,r19
 4006528:	403ee83a 	callr	r8
 400652c:	00ffffc4 	movi	r3,-1
 4006530:	10c04426 	beq	r2,r3,4006644 <__sflush_r+0x1a0>
 4006534:	88c0030b 	ldhu	r3,12(r17)
 4006538:	89000417 	ldw	r4,16(r17)
 400653c:	88000115 	stw	zero,4(r17)
 4006540:	197dffcc 	andi	r5,r3,63487
 4006544:	8940030d 	sth	r5,12(r17)
 4006548:	89000015 	stw	r4,0(r17)
 400654c:	18c4000c 	andi	r3,r3,4096
 4006550:	18002c1e 	bne	r3,zero,4006604 <__sflush_r+0x160>
 4006554:	89400c17 	ldw	r5,48(r17)
 4006558:	9c000015 	stw	r16,0(r19)
 400655c:	28000526 	beq	r5,zero,4006574 <__sflush_r+0xd0>
 4006560:	88801004 	addi	r2,r17,64
 4006564:	28800226 	beq	r5,r2,4006570 <__sflush_r+0xcc>
 4006568:	9809883a 	mov	r4,r19
 400656c:	4006c100 	call	4006c10 <_free_r>
 4006570:	88000c15 	stw	zero,48(r17)
 4006574:	0005883a 	mov	r2,zero
 4006578:	dfc00417 	ldw	ra,16(sp)
 400657c:	dcc00317 	ldw	r19,12(sp)
 4006580:	dc800217 	ldw	r18,8(sp)
 4006584:	dc400117 	ldw	r17,4(sp)
 4006588:	dc000017 	ldw	r16,0(sp)
 400658c:	dec00504 	addi	sp,sp,20
 4006590:	f800283a 	ret
 4006594:	2c800417 	ldw	r18,16(r5)
 4006598:	903ff626 	beq	r18,zero,4006574 <__alt_data_end+0xfbffe574>
 400659c:	2c000017 	ldw	r16,0(r5)
 40065a0:	108000cc 	andi	r2,r2,3
 40065a4:	2c800015 	stw	r18,0(r5)
 40065a8:	84a1c83a 	sub	r16,r16,r18
 40065ac:	1000131e 	bne	r2,zero,40065fc <__sflush_r+0x158>
 40065b0:	28800517 	ldw	r2,20(r5)
 40065b4:	88800215 	stw	r2,8(r17)
 40065b8:	04000316 	blt	zero,r16,40065c8 <__sflush_r+0x124>
 40065bc:	003fed06 	br	4006574 <__alt_data_end+0xfbffe574>
 40065c0:	90a5883a 	add	r18,r18,r2
 40065c4:	043feb0e 	bge	zero,r16,4006574 <__alt_data_end+0xfbffe574>
 40065c8:	88800917 	ldw	r2,36(r17)
 40065cc:	89400717 	ldw	r5,28(r17)
 40065d0:	800f883a 	mov	r7,r16
 40065d4:	900d883a 	mov	r6,r18
 40065d8:	9809883a 	mov	r4,r19
 40065dc:	103ee83a 	callr	r2
 40065e0:	80a1c83a 	sub	r16,r16,r2
 40065e4:	00bff616 	blt	zero,r2,40065c0 <__alt_data_end+0xfbffe5c0>
 40065e8:	88c0030b 	ldhu	r3,12(r17)
 40065ec:	00bfffc4 	movi	r2,-1
 40065f0:	18c01014 	ori	r3,r3,64
 40065f4:	88c0030d 	sth	r3,12(r17)
 40065f8:	003fdf06 	br	4006578 <__alt_data_end+0xfbffe578>
 40065fc:	0005883a 	mov	r2,zero
 4006600:	003fec06 	br	40065b4 <__alt_data_end+0xfbffe5b4>
 4006604:	88801415 	stw	r2,80(r17)
 4006608:	003fd206 	br	4006554 <__alt_data_end+0xfbffe554>
 400660c:	28c00f17 	ldw	r3,60(r5)
 4006610:	00ffb316 	blt	zero,r3,40064e0 <__alt_data_end+0xfbffe4e0>
 4006614:	003fd706 	br	4006574 <__alt_data_end+0xfbffe574>
 4006618:	89400717 	ldw	r5,28(r17)
 400661c:	000d883a 	mov	r6,zero
 4006620:	01c00044 	movi	r7,1
 4006624:	9809883a 	mov	r4,r19
 4006628:	403ee83a 	callr	r8
 400662c:	100d883a 	mov	r6,r2
 4006630:	00bfffc4 	movi	r2,-1
 4006634:	30801426 	beq	r6,r2,4006688 <__sflush_r+0x1e4>
 4006638:	8880030b 	ldhu	r2,12(r17)
 400663c:	8a000a17 	ldw	r8,40(r17)
 4006640:	003fae06 	br	40064fc <__alt_data_end+0xfbffe4fc>
 4006644:	98c00017 	ldw	r3,0(r19)
 4006648:	183fba26 	beq	r3,zero,4006534 <__alt_data_end+0xfbffe534>
 400664c:	01000744 	movi	r4,29
 4006650:	19000626 	beq	r3,r4,400666c <__sflush_r+0x1c8>
 4006654:	01000584 	movi	r4,22
 4006658:	19000426 	beq	r3,r4,400666c <__sflush_r+0x1c8>
 400665c:	88c0030b 	ldhu	r3,12(r17)
 4006660:	18c01014 	ori	r3,r3,64
 4006664:	88c0030d 	sth	r3,12(r17)
 4006668:	003fc306 	br	4006578 <__alt_data_end+0xfbffe578>
 400666c:	8880030b 	ldhu	r2,12(r17)
 4006670:	88c00417 	ldw	r3,16(r17)
 4006674:	88000115 	stw	zero,4(r17)
 4006678:	10bdffcc 	andi	r2,r2,63487
 400667c:	8880030d 	sth	r2,12(r17)
 4006680:	88c00015 	stw	r3,0(r17)
 4006684:	003fb306 	br	4006554 <__alt_data_end+0xfbffe554>
 4006688:	98800017 	ldw	r2,0(r19)
 400668c:	103fea26 	beq	r2,zero,4006638 <__alt_data_end+0xfbffe638>
 4006690:	00c00744 	movi	r3,29
 4006694:	10c00226 	beq	r2,r3,40066a0 <__sflush_r+0x1fc>
 4006698:	00c00584 	movi	r3,22
 400669c:	10c0031e 	bne	r2,r3,40066ac <__sflush_r+0x208>
 40066a0:	9c000015 	stw	r16,0(r19)
 40066a4:	0005883a 	mov	r2,zero
 40066a8:	003fb306 	br	4006578 <__alt_data_end+0xfbffe578>
 40066ac:	88c0030b 	ldhu	r3,12(r17)
 40066b0:	3005883a 	mov	r2,r6
 40066b4:	18c01014 	ori	r3,r3,64
 40066b8:	88c0030d 	sth	r3,12(r17)
 40066bc:	003fae06 	br	4006578 <__alt_data_end+0xfbffe578>

040066c0 <_fflush_r>:
 40066c0:	defffd04 	addi	sp,sp,-12
 40066c4:	dc000115 	stw	r16,4(sp)
 40066c8:	dfc00215 	stw	ra,8(sp)
 40066cc:	2021883a 	mov	r16,r4
 40066d0:	20000226 	beq	r4,zero,40066dc <_fflush_r+0x1c>
 40066d4:	20800e17 	ldw	r2,56(r4)
 40066d8:	10000c26 	beq	r2,zero,400670c <_fflush_r+0x4c>
 40066dc:	2880030f 	ldh	r2,12(r5)
 40066e0:	1000051e 	bne	r2,zero,40066f8 <_fflush_r+0x38>
 40066e4:	0005883a 	mov	r2,zero
 40066e8:	dfc00217 	ldw	ra,8(sp)
 40066ec:	dc000117 	ldw	r16,4(sp)
 40066f0:	dec00304 	addi	sp,sp,12
 40066f4:	f800283a 	ret
 40066f8:	8009883a 	mov	r4,r16
 40066fc:	dfc00217 	ldw	ra,8(sp)
 4006700:	dc000117 	ldw	r16,4(sp)
 4006704:	dec00304 	addi	sp,sp,12
 4006708:	40064a41 	jmpi	40064a4 <__sflush_r>
 400670c:	d9400015 	stw	r5,0(sp)
 4006710:	4006a9c0 	call	4006a9c <__sinit>
 4006714:	d9400017 	ldw	r5,0(sp)
 4006718:	003ff006 	br	40066dc <__alt_data_end+0xfbffe6dc>

0400671c <fflush>:
 400671c:	20000526 	beq	r4,zero,4006734 <fflush+0x18>
 4006720:	00810074 	movhi	r2,1025
 4006724:	10881404 	addi	r2,r2,8272
 4006728:	200b883a 	mov	r5,r4
 400672c:	11000017 	ldw	r4,0(r2)
 4006730:	40066c01 	jmpi	40066c0 <_fflush_r>
 4006734:	00810074 	movhi	r2,1025
 4006738:	10881304 	addi	r2,r2,8268
 400673c:	11000017 	ldw	r4,0(r2)
 4006740:	01410034 	movhi	r5,1024
 4006744:	2959b004 	addi	r5,r5,26304
 4006748:	40074a01 	jmpi	40074a0 <_fwalk_reent>

0400674c <__fp_unlock>:
 400674c:	0005883a 	mov	r2,zero
 4006750:	f800283a 	ret

04006754 <_cleanup_r>:
 4006754:	01410074 	movhi	r5,1025
 4006758:	296dde04 	addi	r5,r5,-18568
 400675c:	40074a01 	jmpi	40074a0 <_fwalk_reent>

04006760 <__sinit.part.1>:
 4006760:	defff704 	addi	sp,sp,-36
 4006764:	00c10034 	movhi	r3,1024
 4006768:	dfc00815 	stw	ra,32(sp)
 400676c:	ddc00715 	stw	r23,28(sp)
 4006770:	dd800615 	stw	r22,24(sp)
 4006774:	dd400515 	stw	r21,20(sp)
 4006778:	dd000415 	stw	r20,16(sp)
 400677c:	dcc00315 	stw	r19,12(sp)
 4006780:	dc800215 	stw	r18,8(sp)
 4006784:	dc400115 	stw	r17,4(sp)
 4006788:	dc000015 	stw	r16,0(sp)
 400678c:	18d9d504 	addi	r3,r3,26452
 4006790:	24000117 	ldw	r16,4(r4)
 4006794:	20c00f15 	stw	r3,60(r4)
 4006798:	2080bb04 	addi	r2,r4,748
 400679c:	00c000c4 	movi	r3,3
 40067a0:	20c0b915 	stw	r3,740(r4)
 40067a4:	2080ba15 	stw	r2,744(r4)
 40067a8:	2000b815 	stw	zero,736(r4)
 40067ac:	05c00204 	movi	r23,8
 40067b0:	00800104 	movi	r2,4
 40067b4:	2025883a 	mov	r18,r4
 40067b8:	b80d883a 	mov	r6,r23
 40067bc:	81001704 	addi	r4,r16,92
 40067c0:	000b883a 	mov	r5,zero
 40067c4:	80000015 	stw	zero,0(r16)
 40067c8:	80000115 	stw	zero,4(r16)
 40067cc:	80000215 	stw	zero,8(r16)
 40067d0:	8080030d 	sth	r2,12(r16)
 40067d4:	80001915 	stw	zero,100(r16)
 40067d8:	8000038d 	sth	zero,14(r16)
 40067dc:	80000415 	stw	zero,16(r16)
 40067e0:	80000515 	stw	zero,20(r16)
 40067e4:	80000615 	stw	zero,24(r16)
 40067e8:	40083900 	call	4008390 <memset>
 40067ec:	05810074 	movhi	r22,1025
 40067f0:	94400217 	ldw	r17,8(r18)
 40067f4:	05410074 	movhi	r21,1025
 40067f8:	05010074 	movhi	r20,1025
 40067fc:	04c10074 	movhi	r19,1025
 4006800:	b5a71204 	addi	r22,r22,-25528
 4006804:	ad672904 	addi	r21,r21,-25436
 4006808:	a5274804 	addi	r20,r20,-25312
 400680c:	9ce75f04 	addi	r19,r19,-25220
 4006810:	85800815 	stw	r22,32(r16)
 4006814:	85400915 	stw	r21,36(r16)
 4006818:	85000a15 	stw	r20,40(r16)
 400681c:	84c00b15 	stw	r19,44(r16)
 4006820:	84000715 	stw	r16,28(r16)
 4006824:	00800284 	movi	r2,10
 4006828:	8880030d 	sth	r2,12(r17)
 400682c:	00800044 	movi	r2,1
 4006830:	b80d883a 	mov	r6,r23
 4006834:	89001704 	addi	r4,r17,92
 4006838:	000b883a 	mov	r5,zero
 400683c:	88000015 	stw	zero,0(r17)
 4006840:	88000115 	stw	zero,4(r17)
 4006844:	88000215 	stw	zero,8(r17)
 4006848:	88001915 	stw	zero,100(r17)
 400684c:	8880038d 	sth	r2,14(r17)
 4006850:	88000415 	stw	zero,16(r17)
 4006854:	88000515 	stw	zero,20(r17)
 4006858:	88000615 	stw	zero,24(r17)
 400685c:	40083900 	call	4008390 <memset>
 4006860:	94000317 	ldw	r16,12(r18)
 4006864:	00800484 	movi	r2,18
 4006868:	8c400715 	stw	r17,28(r17)
 400686c:	8d800815 	stw	r22,32(r17)
 4006870:	8d400915 	stw	r21,36(r17)
 4006874:	8d000a15 	stw	r20,40(r17)
 4006878:	8cc00b15 	stw	r19,44(r17)
 400687c:	8080030d 	sth	r2,12(r16)
 4006880:	00800084 	movi	r2,2
 4006884:	80000015 	stw	zero,0(r16)
 4006888:	80000115 	stw	zero,4(r16)
 400688c:	80000215 	stw	zero,8(r16)
 4006890:	80001915 	stw	zero,100(r16)
 4006894:	8080038d 	sth	r2,14(r16)
 4006898:	80000415 	stw	zero,16(r16)
 400689c:	80000515 	stw	zero,20(r16)
 40068a0:	80000615 	stw	zero,24(r16)
 40068a4:	b80d883a 	mov	r6,r23
 40068a8:	000b883a 	mov	r5,zero
 40068ac:	81001704 	addi	r4,r16,92
 40068b0:	40083900 	call	4008390 <memset>
 40068b4:	00800044 	movi	r2,1
 40068b8:	84000715 	stw	r16,28(r16)
 40068bc:	85800815 	stw	r22,32(r16)
 40068c0:	85400915 	stw	r21,36(r16)
 40068c4:	85000a15 	stw	r20,40(r16)
 40068c8:	84c00b15 	stw	r19,44(r16)
 40068cc:	90800e15 	stw	r2,56(r18)
 40068d0:	dfc00817 	ldw	ra,32(sp)
 40068d4:	ddc00717 	ldw	r23,28(sp)
 40068d8:	dd800617 	ldw	r22,24(sp)
 40068dc:	dd400517 	ldw	r21,20(sp)
 40068e0:	dd000417 	ldw	r20,16(sp)
 40068e4:	dcc00317 	ldw	r19,12(sp)
 40068e8:	dc800217 	ldw	r18,8(sp)
 40068ec:	dc400117 	ldw	r17,4(sp)
 40068f0:	dc000017 	ldw	r16,0(sp)
 40068f4:	dec00904 	addi	sp,sp,36
 40068f8:	f800283a 	ret

040068fc <__fp_lock>:
 40068fc:	0005883a 	mov	r2,zero
 4006900:	f800283a 	ret

04006904 <__sfmoreglue>:
 4006904:	defffc04 	addi	sp,sp,-16
 4006908:	dc400115 	stw	r17,4(sp)
 400690c:	2c7fffc4 	addi	r17,r5,-1
 4006910:	8c401a24 	muli	r17,r17,104
 4006914:	dc800215 	stw	r18,8(sp)
 4006918:	2825883a 	mov	r18,r5
 400691c:	89401d04 	addi	r5,r17,116
 4006920:	dc000015 	stw	r16,0(sp)
 4006924:	dfc00315 	stw	ra,12(sp)
 4006928:	40077fc0 	call	40077fc <_malloc_r>
 400692c:	1021883a 	mov	r16,r2
 4006930:	10000726 	beq	r2,zero,4006950 <__sfmoreglue+0x4c>
 4006934:	11000304 	addi	r4,r2,12
 4006938:	10000015 	stw	zero,0(r2)
 400693c:	14800115 	stw	r18,4(r2)
 4006940:	11000215 	stw	r4,8(r2)
 4006944:	89801a04 	addi	r6,r17,104
 4006948:	000b883a 	mov	r5,zero
 400694c:	40083900 	call	4008390 <memset>
 4006950:	8005883a 	mov	r2,r16
 4006954:	dfc00317 	ldw	ra,12(sp)
 4006958:	dc800217 	ldw	r18,8(sp)
 400695c:	dc400117 	ldw	r17,4(sp)
 4006960:	dc000017 	ldw	r16,0(sp)
 4006964:	dec00404 	addi	sp,sp,16
 4006968:	f800283a 	ret

0400696c <__sfp>:
 400696c:	defffb04 	addi	sp,sp,-20
 4006970:	dc000015 	stw	r16,0(sp)
 4006974:	04010074 	movhi	r16,1025
 4006978:	84081304 	addi	r16,r16,8268
 400697c:	dcc00315 	stw	r19,12(sp)
 4006980:	2027883a 	mov	r19,r4
 4006984:	81000017 	ldw	r4,0(r16)
 4006988:	dfc00415 	stw	ra,16(sp)
 400698c:	dc800215 	stw	r18,8(sp)
 4006990:	20800e17 	ldw	r2,56(r4)
 4006994:	dc400115 	stw	r17,4(sp)
 4006998:	1000021e 	bne	r2,zero,40069a4 <__sfp+0x38>
 400699c:	40067600 	call	4006760 <__sinit.part.1>
 40069a0:	81000017 	ldw	r4,0(r16)
 40069a4:	2480b804 	addi	r18,r4,736
 40069a8:	047fffc4 	movi	r17,-1
 40069ac:	91000117 	ldw	r4,4(r18)
 40069b0:	94000217 	ldw	r16,8(r18)
 40069b4:	213fffc4 	addi	r4,r4,-1
 40069b8:	20000a16 	blt	r4,zero,40069e4 <__sfp+0x78>
 40069bc:	8080030f 	ldh	r2,12(r16)
 40069c0:	10000c26 	beq	r2,zero,40069f4 <__sfp+0x88>
 40069c4:	80c01d04 	addi	r3,r16,116
 40069c8:	00000206 	br	40069d4 <__sfp+0x68>
 40069cc:	18bfe60f 	ldh	r2,-104(r3)
 40069d0:	10000826 	beq	r2,zero,40069f4 <__sfp+0x88>
 40069d4:	213fffc4 	addi	r4,r4,-1
 40069d8:	1c3ffd04 	addi	r16,r3,-12
 40069dc:	18c01a04 	addi	r3,r3,104
 40069e0:	247ffa1e 	bne	r4,r17,40069cc <__alt_data_end+0xfbffe9cc>
 40069e4:	90800017 	ldw	r2,0(r18)
 40069e8:	10001d26 	beq	r2,zero,4006a60 <__sfp+0xf4>
 40069ec:	1025883a 	mov	r18,r2
 40069f0:	003fee06 	br	40069ac <__alt_data_end+0xfbffe9ac>
 40069f4:	00bfffc4 	movi	r2,-1
 40069f8:	8080038d 	sth	r2,14(r16)
 40069fc:	00800044 	movi	r2,1
 4006a00:	8080030d 	sth	r2,12(r16)
 4006a04:	80001915 	stw	zero,100(r16)
 4006a08:	80000015 	stw	zero,0(r16)
 4006a0c:	80000215 	stw	zero,8(r16)
 4006a10:	80000115 	stw	zero,4(r16)
 4006a14:	80000415 	stw	zero,16(r16)
 4006a18:	80000515 	stw	zero,20(r16)
 4006a1c:	80000615 	stw	zero,24(r16)
 4006a20:	01800204 	movi	r6,8
 4006a24:	000b883a 	mov	r5,zero
 4006a28:	81001704 	addi	r4,r16,92
 4006a2c:	40083900 	call	4008390 <memset>
 4006a30:	8005883a 	mov	r2,r16
 4006a34:	80000c15 	stw	zero,48(r16)
 4006a38:	80000d15 	stw	zero,52(r16)
 4006a3c:	80001115 	stw	zero,68(r16)
 4006a40:	80001215 	stw	zero,72(r16)
 4006a44:	dfc00417 	ldw	ra,16(sp)
 4006a48:	dcc00317 	ldw	r19,12(sp)
 4006a4c:	dc800217 	ldw	r18,8(sp)
 4006a50:	dc400117 	ldw	r17,4(sp)
 4006a54:	dc000017 	ldw	r16,0(sp)
 4006a58:	dec00504 	addi	sp,sp,20
 4006a5c:	f800283a 	ret
 4006a60:	01400104 	movi	r5,4
 4006a64:	9809883a 	mov	r4,r19
 4006a68:	40069040 	call	4006904 <__sfmoreglue>
 4006a6c:	90800015 	stw	r2,0(r18)
 4006a70:	103fde1e 	bne	r2,zero,40069ec <__alt_data_end+0xfbffe9ec>
 4006a74:	00800304 	movi	r2,12
 4006a78:	98800015 	stw	r2,0(r19)
 4006a7c:	0005883a 	mov	r2,zero
 4006a80:	003ff006 	br	4006a44 <__alt_data_end+0xfbffea44>

04006a84 <_cleanup>:
 4006a84:	00810074 	movhi	r2,1025
 4006a88:	10881304 	addi	r2,r2,8268
 4006a8c:	11000017 	ldw	r4,0(r2)
 4006a90:	01410074 	movhi	r5,1025
 4006a94:	296dde04 	addi	r5,r5,-18568
 4006a98:	40074a01 	jmpi	40074a0 <_fwalk_reent>

04006a9c <__sinit>:
 4006a9c:	20800e17 	ldw	r2,56(r4)
 4006aa0:	10000126 	beq	r2,zero,4006aa8 <__sinit+0xc>
 4006aa4:	f800283a 	ret
 4006aa8:	40067601 	jmpi	4006760 <__sinit.part.1>

04006aac <__sfp_lock_acquire>:
 4006aac:	f800283a 	ret

04006ab0 <__sfp_lock_release>:
 4006ab0:	f800283a 	ret

04006ab4 <__sinit_lock_acquire>:
 4006ab4:	f800283a 	ret

04006ab8 <__sinit_lock_release>:
 4006ab8:	f800283a 	ret

04006abc <__fp_lock_all>:
 4006abc:	00810074 	movhi	r2,1025
 4006ac0:	10881404 	addi	r2,r2,8272
 4006ac4:	11000017 	ldw	r4,0(r2)
 4006ac8:	01410034 	movhi	r5,1024
 4006acc:	295a3f04 	addi	r5,r5,26876
 4006ad0:	40073dc1 	jmpi	40073dc <_fwalk>

04006ad4 <__fp_unlock_all>:
 4006ad4:	00810074 	movhi	r2,1025
 4006ad8:	10881404 	addi	r2,r2,8272
 4006adc:	11000017 	ldw	r4,0(r2)
 4006ae0:	01410034 	movhi	r5,1024
 4006ae4:	2959d304 	addi	r5,r5,26444
 4006ae8:	40073dc1 	jmpi	40073dc <_fwalk>

04006aec <_malloc_trim_r>:
 4006aec:	defffb04 	addi	sp,sp,-20
 4006af0:	dcc00315 	stw	r19,12(sp)
 4006af4:	04c10074 	movhi	r19,1025
 4006af8:	dc800215 	stw	r18,8(sp)
 4006afc:	dc400115 	stw	r17,4(sp)
 4006b00:	dc000015 	stw	r16,0(sp)
 4006b04:	dfc00415 	stw	ra,16(sp)
 4006b08:	2821883a 	mov	r16,r5
 4006b0c:	9cc28f04 	addi	r19,r19,2620
 4006b10:	2025883a 	mov	r18,r4
 4006b14:	400e4600 	call	400e460 <__malloc_lock>
 4006b18:	98800217 	ldw	r2,8(r19)
 4006b1c:	14400117 	ldw	r17,4(r2)
 4006b20:	00bfff04 	movi	r2,-4
 4006b24:	88a2703a 	and	r17,r17,r2
 4006b28:	8c21c83a 	sub	r16,r17,r16
 4006b2c:	8403fbc4 	addi	r16,r16,4079
 4006b30:	8020d33a 	srli	r16,r16,12
 4006b34:	0083ffc4 	movi	r2,4095
 4006b38:	843fffc4 	addi	r16,r16,-1
 4006b3c:	8020933a 	slli	r16,r16,12
 4006b40:	1400060e 	bge	r2,r16,4006b5c <_malloc_trim_r+0x70>
 4006b44:	000b883a 	mov	r5,zero
 4006b48:	9009883a 	mov	r4,r18
 4006b4c:	4009bf40 	call	4009bf4 <_sbrk_r>
 4006b50:	98c00217 	ldw	r3,8(r19)
 4006b54:	1c47883a 	add	r3,r3,r17
 4006b58:	10c00a26 	beq	r2,r3,4006b84 <_malloc_trim_r+0x98>
 4006b5c:	9009883a 	mov	r4,r18
 4006b60:	400e4840 	call	400e484 <__malloc_unlock>
 4006b64:	0005883a 	mov	r2,zero
 4006b68:	dfc00417 	ldw	ra,16(sp)
 4006b6c:	dcc00317 	ldw	r19,12(sp)
 4006b70:	dc800217 	ldw	r18,8(sp)
 4006b74:	dc400117 	ldw	r17,4(sp)
 4006b78:	dc000017 	ldw	r16,0(sp)
 4006b7c:	dec00504 	addi	sp,sp,20
 4006b80:	f800283a 	ret
 4006b84:	040bc83a 	sub	r5,zero,r16
 4006b88:	9009883a 	mov	r4,r18
 4006b8c:	4009bf40 	call	4009bf4 <_sbrk_r>
 4006b90:	00ffffc4 	movi	r3,-1
 4006b94:	10c00d26 	beq	r2,r3,4006bcc <_malloc_trim_r+0xe0>
 4006b98:	00c10074 	movhi	r3,1025
 4006b9c:	18cef104 	addi	r3,r3,15300
 4006ba0:	18800017 	ldw	r2,0(r3)
 4006ba4:	99000217 	ldw	r4,8(r19)
 4006ba8:	8c23c83a 	sub	r17,r17,r16
 4006bac:	8c400054 	ori	r17,r17,1
 4006bb0:	1421c83a 	sub	r16,r2,r16
 4006bb4:	24400115 	stw	r17,4(r4)
 4006bb8:	9009883a 	mov	r4,r18
 4006bbc:	1c000015 	stw	r16,0(r3)
 4006bc0:	400e4840 	call	400e484 <__malloc_unlock>
 4006bc4:	00800044 	movi	r2,1
 4006bc8:	003fe706 	br	4006b68 <__alt_data_end+0xfbffeb68>
 4006bcc:	000b883a 	mov	r5,zero
 4006bd0:	9009883a 	mov	r4,r18
 4006bd4:	4009bf40 	call	4009bf4 <_sbrk_r>
 4006bd8:	99000217 	ldw	r4,8(r19)
 4006bdc:	014003c4 	movi	r5,15
 4006be0:	1107c83a 	sub	r3,r2,r4
 4006be4:	28ffdd0e 	bge	r5,r3,4006b5c <__alt_data_end+0xfbffeb5c>
 4006be8:	01410074 	movhi	r5,1025
 4006bec:	29481604 	addi	r5,r5,8280
 4006bf0:	29400017 	ldw	r5,0(r5)
 4006bf4:	18c00054 	ori	r3,r3,1
 4006bf8:	20c00115 	stw	r3,4(r4)
 4006bfc:	00c10074 	movhi	r3,1025
 4006c00:	1145c83a 	sub	r2,r2,r5
 4006c04:	18cef104 	addi	r3,r3,15300
 4006c08:	18800015 	stw	r2,0(r3)
 4006c0c:	003fd306 	br	4006b5c <__alt_data_end+0xfbffeb5c>

04006c10 <_free_r>:
 4006c10:	28004126 	beq	r5,zero,4006d18 <_free_r+0x108>
 4006c14:	defffd04 	addi	sp,sp,-12
 4006c18:	dc400115 	stw	r17,4(sp)
 4006c1c:	dc000015 	stw	r16,0(sp)
 4006c20:	2023883a 	mov	r17,r4
 4006c24:	2821883a 	mov	r16,r5
 4006c28:	dfc00215 	stw	ra,8(sp)
 4006c2c:	400e4600 	call	400e460 <__malloc_lock>
 4006c30:	81ffff17 	ldw	r7,-4(r16)
 4006c34:	00bfff84 	movi	r2,-2
 4006c38:	01010074 	movhi	r4,1025
 4006c3c:	81bffe04 	addi	r6,r16,-8
 4006c40:	3884703a 	and	r2,r7,r2
 4006c44:	21028f04 	addi	r4,r4,2620
 4006c48:	308b883a 	add	r5,r6,r2
 4006c4c:	2a400117 	ldw	r9,4(r5)
 4006c50:	22000217 	ldw	r8,8(r4)
 4006c54:	00ffff04 	movi	r3,-4
 4006c58:	48c6703a 	and	r3,r9,r3
 4006c5c:	2a005726 	beq	r5,r8,4006dbc <_free_r+0x1ac>
 4006c60:	28c00115 	stw	r3,4(r5)
 4006c64:	39c0004c 	andi	r7,r7,1
 4006c68:	3800091e 	bne	r7,zero,4006c90 <_free_r+0x80>
 4006c6c:	823ffe17 	ldw	r8,-8(r16)
 4006c70:	22400204 	addi	r9,r4,8
 4006c74:	320dc83a 	sub	r6,r6,r8
 4006c78:	31c00217 	ldw	r7,8(r6)
 4006c7c:	1205883a 	add	r2,r2,r8
 4006c80:	3a406526 	beq	r7,r9,4006e18 <_free_r+0x208>
 4006c84:	32000317 	ldw	r8,12(r6)
 4006c88:	3a000315 	stw	r8,12(r7)
 4006c8c:	41c00215 	stw	r7,8(r8)
 4006c90:	28cf883a 	add	r7,r5,r3
 4006c94:	39c00117 	ldw	r7,4(r7)
 4006c98:	39c0004c 	andi	r7,r7,1
 4006c9c:	38003a26 	beq	r7,zero,4006d88 <_free_r+0x178>
 4006ca0:	10c00054 	ori	r3,r2,1
 4006ca4:	30c00115 	stw	r3,4(r6)
 4006ca8:	3087883a 	add	r3,r6,r2
 4006cac:	18800015 	stw	r2,0(r3)
 4006cb0:	00c07fc4 	movi	r3,511
 4006cb4:	18801936 	bltu	r3,r2,4006d1c <_free_r+0x10c>
 4006cb8:	1004d0fa 	srli	r2,r2,3
 4006cbc:	01c00044 	movi	r7,1
 4006cc0:	21400117 	ldw	r5,4(r4)
 4006cc4:	10c00044 	addi	r3,r2,1
 4006cc8:	18c7883a 	add	r3,r3,r3
 4006ccc:	1005d0ba 	srai	r2,r2,2
 4006cd0:	18c7883a 	add	r3,r3,r3
 4006cd4:	18c7883a 	add	r3,r3,r3
 4006cd8:	1907883a 	add	r3,r3,r4
 4006cdc:	3884983a 	sll	r2,r7,r2
 4006ce0:	19c00017 	ldw	r7,0(r3)
 4006ce4:	1a3ffe04 	addi	r8,r3,-8
 4006ce8:	1144b03a 	or	r2,r2,r5
 4006cec:	32000315 	stw	r8,12(r6)
 4006cf0:	31c00215 	stw	r7,8(r6)
 4006cf4:	20800115 	stw	r2,4(r4)
 4006cf8:	19800015 	stw	r6,0(r3)
 4006cfc:	39800315 	stw	r6,12(r7)
 4006d00:	8809883a 	mov	r4,r17
 4006d04:	dfc00217 	ldw	ra,8(sp)
 4006d08:	dc400117 	ldw	r17,4(sp)
 4006d0c:	dc000017 	ldw	r16,0(sp)
 4006d10:	dec00304 	addi	sp,sp,12
 4006d14:	400e4841 	jmpi	400e484 <__malloc_unlock>
 4006d18:	f800283a 	ret
 4006d1c:	100ad27a 	srli	r5,r2,9
 4006d20:	00c00104 	movi	r3,4
 4006d24:	19404a36 	bltu	r3,r5,4006e50 <_free_r+0x240>
 4006d28:	100ad1ba 	srli	r5,r2,6
 4006d2c:	28c00e44 	addi	r3,r5,57
 4006d30:	18c7883a 	add	r3,r3,r3
 4006d34:	29400e04 	addi	r5,r5,56
 4006d38:	18c7883a 	add	r3,r3,r3
 4006d3c:	18c7883a 	add	r3,r3,r3
 4006d40:	1909883a 	add	r4,r3,r4
 4006d44:	20c00017 	ldw	r3,0(r4)
 4006d48:	01c10074 	movhi	r7,1025
 4006d4c:	213ffe04 	addi	r4,r4,-8
 4006d50:	39c28f04 	addi	r7,r7,2620
 4006d54:	20c04426 	beq	r4,r3,4006e68 <_free_r+0x258>
 4006d58:	01ffff04 	movi	r7,-4
 4006d5c:	19400117 	ldw	r5,4(r3)
 4006d60:	29ca703a 	and	r5,r5,r7
 4006d64:	1140022e 	bgeu	r2,r5,4006d70 <_free_r+0x160>
 4006d68:	18c00217 	ldw	r3,8(r3)
 4006d6c:	20fffb1e 	bne	r4,r3,4006d5c <__alt_data_end+0xfbffed5c>
 4006d70:	19000317 	ldw	r4,12(r3)
 4006d74:	31000315 	stw	r4,12(r6)
 4006d78:	30c00215 	stw	r3,8(r6)
 4006d7c:	21800215 	stw	r6,8(r4)
 4006d80:	19800315 	stw	r6,12(r3)
 4006d84:	003fde06 	br	4006d00 <__alt_data_end+0xfbffed00>
 4006d88:	29c00217 	ldw	r7,8(r5)
 4006d8c:	10c5883a 	add	r2,r2,r3
 4006d90:	00c10074 	movhi	r3,1025
 4006d94:	18c29104 	addi	r3,r3,2628
 4006d98:	38c03b26 	beq	r7,r3,4006e88 <_free_r+0x278>
 4006d9c:	2a000317 	ldw	r8,12(r5)
 4006da0:	11400054 	ori	r5,r2,1
 4006da4:	3087883a 	add	r3,r6,r2
 4006da8:	3a000315 	stw	r8,12(r7)
 4006dac:	41c00215 	stw	r7,8(r8)
 4006db0:	31400115 	stw	r5,4(r6)
 4006db4:	18800015 	stw	r2,0(r3)
 4006db8:	003fbd06 	br	4006cb0 <__alt_data_end+0xfbffecb0>
 4006dbc:	39c0004c 	andi	r7,r7,1
 4006dc0:	10c5883a 	add	r2,r2,r3
 4006dc4:	3800071e 	bne	r7,zero,4006de4 <_free_r+0x1d4>
 4006dc8:	81fffe17 	ldw	r7,-8(r16)
 4006dcc:	31cdc83a 	sub	r6,r6,r7
 4006dd0:	30c00317 	ldw	r3,12(r6)
 4006dd4:	31400217 	ldw	r5,8(r6)
 4006dd8:	11c5883a 	add	r2,r2,r7
 4006ddc:	28c00315 	stw	r3,12(r5)
 4006de0:	19400215 	stw	r5,8(r3)
 4006de4:	10c00054 	ori	r3,r2,1
 4006de8:	30c00115 	stw	r3,4(r6)
 4006dec:	00c10074 	movhi	r3,1025
 4006df0:	18c81704 	addi	r3,r3,8284
 4006df4:	18c00017 	ldw	r3,0(r3)
 4006df8:	21800215 	stw	r6,8(r4)
 4006dfc:	10ffc036 	bltu	r2,r3,4006d00 <__alt_data_end+0xfbffed00>
 4006e00:	00810074 	movhi	r2,1025
 4006e04:	108ee704 	addi	r2,r2,15260
 4006e08:	11400017 	ldw	r5,0(r2)
 4006e0c:	8809883a 	mov	r4,r17
 4006e10:	4006aec0 	call	4006aec <_malloc_trim_r>
 4006e14:	003fba06 	br	4006d00 <__alt_data_end+0xfbffed00>
 4006e18:	28c9883a 	add	r4,r5,r3
 4006e1c:	21000117 	ldw	r4,4(r4)
 4006e20:	2100004c 	andi	r4,r4,1
 4006e24:	2000391e 	bne	r4,zero,4006f0c <_free_r+0x2fc>
 4006e28:	29c00217 	ldw	r7,8(r5)
 4006e2c:	29000317 	ldw	r4,12(r5)
 4006e30:	1885883a 	add	r2,r3,r2
 4006e34:	10c00054 	ori	r3,r2,1
 4006e38:	39000315 	stw	r4,12(r7)
 4006e3c:	21c00215 	stw	r7,8(r4)
 4006e40:	30c00115 	stw	r3,4(r6)
 4006e44:	308d883a 	add	r6,r6,r2
 4006e48:	30800015 	stw	r2,0(r6)
 4006e4c:	003fac06 	br	4006d00 <__alt_data_end+0xfbffed00>
 4006e50:	00c00504 	movi	r3,20
 4006e54:	19401536 	bltu	r3,r5,4006eac <_free_r+0x29c>
 4006e58:	28c01704 	addi	r3,r5,92
 4006e5c:	18c7883a 	add	r3,r3,r3
 4006e60:	294016c4 	addi	r5,r5,91
 4006e64:	003fb406 	br	4006d38 <__alt_data_end+0xfbffed38>
 4006e68:	280bd0ba 	srai	r5,r5,2
 4006e6c:	00c00044 	movi	r3,1
 4006e70:	38800117 	ldw	r2,4(r7)
 4006e74:	194a983a 	sll	r5,r3,r5
 4006e78:	2007883a 	mov	r3,r4
 4006e7c:	2884b03a 	or	r2,r5,r2
 4006e80:	38800115 	stw	r2,4(r7)
 4006e84:	003fbb06 	br	4006d74 <__alt_data_end+0xfbffed74>
 4006e88:	21800515 	stw	r6,20(r4)
 4006e8c:	21800415 	stw	r6,16(r4)
 4006e90:	10c00054 	ori	r3,r2,1
 4006e94:	31c00315 	stw	r7,12(r6)
 4006e98:	31c00215 	stw	r7,8(r6)
 4006e9c:	30c00115 	stw	r3,4(r6)
 4006ea0:	308d883a 	add	r6,r6,r2
 4006ea4:	30800015 	stw	r2,0(r6)
 4006ea8:	003f9506 	br	4006d00 <__alt_data_end+0xfbffed00>
 4006eac:	00c01504 	movi	r3,84
 4006eb0:	19400536 	bltu	r3,r5,4006ec8 <_free_r+0x2b8>
 4006eb4:	100ad33a 	srli	r5,r2,12
 4006eb8:	28c01bc4 	addi	r3,r5,111
 4006ebc:	18c7883a 	add	r3,r3,r3
 4006ec0:	29401b84 	addi	r5,r5,110
 4006ec4:	003f9c06 	br	4006d38 <__alt_data_end+0xfbffed38>
 4006ec8:	00c05504 	movi	r3,340
 4006ecc:	19400536 	bltu	r3,r5,4006ee4 <_free_r+0x2d4>
 4006ed0:	100ad3fa 	srli	r5,r2,15
 4006ed4:	28c01e04 	addi	r3,r5,120
 4006ed8:	18c7883a 	add	r3,r3,r3
 4006edc:	29401dc4 	addi	r5,r5,119
 4006ee0:	003f9506 	br	4006d38 <__alt_data_end+0xfbffed38>
 4006ee4:	00c15504 	movi	r3,1364
 4006ee8:	19400536 	bltu	r3,r5,4006f00 <_free_r+0x2f0>
 4006eec:	100ad4ba 	srli	r5,r2,18
 4006ef0:	28c01f44 	addi	r3,r5,125
 4006ef4:	18c7883a 	add	r3,r3,r3
 4006ef8:	29401f04 	addi	r5,r5,124
 4006efc:	003f8e06 	br	4006d38 <__alt_data_end+0xfbffed38>
 4006f00:	00c03f84 	movi	r3,254
 4006f04:	01401f84 	movi	r5,126
 4006f08:	003f8b06 	br	4006d38 <__alt_data_end+0xfbffed38>
 4006f0c:	10c00054 	ori	r3,r2,1
 4006f10:	30c00115 	stw	r3,4(r6)
 4006f14:	308d883a 	add	r6,r6,r2
 4006f18:	30800015 	stw	r2,0(r6)
 4006f1c:	003f7806 	br	4006d00 <__alt_data_end+0xfbffed00>

04006f20 <__sfvwrite_r>:
 4006f20:	30800217 	ldw	r2,8(r6)
 4006f24:	10006726 	beq	r2,zero,40070c4 <__sfvwrite_r+0x1a4>
 4006f28:	28c0030b 	ldhu	r3,12(r5)
 4006f2c:	defff404 	addi	sp,sp,-48
 4006f30:	dd400715 	stw	r21,28(sp)
 4006f34:	dd000615 	stw	r20,24(sp)
 4006f38:	dc000215 	stw	r16,8(sp)
 4006f3c:	dfc00b15 	stw	ra,44(sp)
 4006f40:	df000a15 	stw	fp,40(sp)
 4006f44:	ddc00915 	stw	r23,36(sp)
 4006f48:	dd800815 	stw	r22,32(sp)
 4006f4c:	dcc00515 	stw	r19,20(sp)
 4006f50:	dc800415 	stw	r18,16(sp)
 4006f54:	dc400315 	stw	r17,12(sp)
 4006f58:	1880020c 	andi	r2,r3,8
 4006f5c:	2821883a 	mov	r16,r5
 4006f60:	202b883a 	mov	r21,r4
 4006f64:	3029883a 	mov	r20,r6
 4006f68:	10002726 	beq	r2,zero,4007008 <__sfvwrite_r+0xe8>
 4006f6c:	28800417 	ldw	r2,16(r5)
 4006f70:	10002526 	beq	r2,zero,4007008 <__sfvwrite_r+0xe8>
 4006f74:	1880008c 	andi	r2,r3,2
 4006f78:	a4400017 	ldw	r17,0(r20)
 4006f7c:	10002a26 	beq	r2,zero,4007028 <__sfvwrite_r+0x108>
 4006f80:	05a00034 	movhi	r22,32768
 4006f84:	0027883a 	mov	r19,zero
 4006f88:	0025883a 	mov	r18,zero
 4006f8c:	b5bf0004 	addi	r22,r22,-1024
 4006f90:	980d883a 	mov	r6,r19
 4006f94:	a809883a 	mov	r4,r21
 4006f98:	90004626 	beq	r18,zero,40070b4 <__sfvwrite_r+0x194>
 4006f9c:	900f883a 	mov	r7,r18
 4006fa0:	b480022e 	bgeu	r22,r18,4006fac <__sfvwrite_r+0x8c>
 4006fa4:	01e00034 	movhi	r7,32768
 4006fa8:	39ff0004 	addi	r7,r7,-1024
 4006fac:	80800917 	ldw	r2,36(r16)
 4006fb0:	81400717 	ldw	r5,28(r16)
 4006fb4:	103ee83a 	callr	r2
 4006fb8:	0080570e 	bge	zero,r2,4007118 <__sfvwrite_r+0x1f8>
 4006fbc:	a0c00217 	ldw	r3,8(r20)
 4006fc0:	98a7883a 	add	r19,r19,r2
 4006fc4:	90a5c83a 	sub	r18,r18,r2
 4006fc8:	1885c83a 	sub	r2,r3,r2
 4006fcc:	a0800215 	stw	r2,8(r20)
 4006fd0:	103fef1e 	bne	r2,zero,4006f90 <__alt_data_end+0xfbffef90>
 4006fd4:	0005883a 	mov	r2,zero
 4006fd8:	dfc00b17 	ldw	ra,44(sp)
 4006fdc:	df000a17 	ldw	fp,40(sp)
 4006fe0:	ddc00917 	ldw	r23,36(sp)
 4006fe4:	dd800817 	ldw	r22,32(sp)
 4006fe8:	dd400717 	ldw	r21,28(sp)
 4006fec:	dd000617 	ldw	r20,24(sp)
 4006ff0:	dcc00517 	ldw	r19,20(sp)
 4006ff4:	dc800417 	ldw	r18,16(sp)
 4006ff8:	dc400317 	ldw	r17,12(sp)
 4006ffc:	dc000217 	ldw	r16,8(sp)
 4007000:	dec00c04 	addi	sp,sp,48
 4007004:	f800283a 	ret
 4007008:	800b883a 	mov	r5,r16
 400700c:	a809883a 	mov	r4,r21
 4007010:	4004ac80 	call	4004ac8 <__swsetup_r>
 4007014:	1000eb1e 	bne	r2,zero,40073c4 <__sfvwrite_r+0x4a4>
 4007018:	80c0030b 	ldhu	r3,12(r16)
 400701c:	a4400017 	ldw	r17,0(r20)
 4007020:	1880008c 	andi	r2,r3,2
 4007024:	103fd61e 	bne	r2,zero,4006f80 <__alt_data_end+0xfbffef80>
 4007028:	1880004c 	andi	r2,r3,1
 400702c:	10003f1e 	bne	r2,zero,400712c <__sfvwrite_r+0x20c>
 4007030:	0039883a 	mov	fp,zero
 4007034:	0025883a 	mov	r18,zero
 4007038:	90001a26 	beq	r18,zero,40070a4 <__sfvwrite_r+0x184>
 400703c:	1880800c 	andi	r2,r3,512
 4007040:	84c00217 	ldw	r19,8(r16)
 4007044:	10002126 	beq	r2,zero,40070cc <__sfvwrite_r+0x1ac>
 4007048:	982f883a 	mov	r23,r19
 400704c:	94c09336 	bltu	r18,r19,400729c <__sfvwrite_r+0x37c>
 4007050:	1881200c 	andi	r2,r3,1152
 4007054:	10009e1e 	bne	r2,zero,40072d0 <__sfvwrite_r+0x3b0>
 4007058:	81000017 	ldw	r4,0(r16)
 400705c:	b80d883a 	mov	r6,r23
 4007060:	e00b883a 	mov	r5,fp
 4007064:	40082340 	call	4008234 <memmove>
 4007068:	80c00217 	ldw	r3,8(r16)
 400706c:	81000017 	ldw	r4,0(r16)
 4007070:	9005883a 	mov	r2,r18
 4007074:	1ce7c83a 	sub	r19,r3,r19
 4007078:	25cf883a 	add	r7,r4,r23
 400707c:	84c00215 	stw	r19,8(r16)
 4007080:	81c00015 	stw	r7,0(r16)
 4007084:	a0c00217 	ldw	r3,8(r20)
 4007088:	e0b9883a 	add	fp,fp,r2
 400708c:	90a5c83a 	sub	r18,r18,r2
 4007090:	18a7c83a 	sub	r19,r3,r2
 4007094:	a4c00215 	stw	r19,8(r20)
 4007098:	983fce26 	beq	r19,zero,4006fd4 <__alt_data_end+0xfbffefd4>
 400709c:	80c0030b 	ldhu	r3,12(r16)
 40070a0:	903fe61e 	bne	r18,zero,400703c <__alt_data_end+0xfbfff03c>
 40070a4:	8f000017 	ldw	fp,0(r17)
 40070a8:	8c800117 	ldw	r18,4(r17)
 40070ac:	8c400204 	addi	r17,r17,8
 40070b0:	003fe106 	br	4007038 <__alt_data_end+0xfbfff038>
 40070b4:	8cc00017 	ldw	r19,0(r17)
 40070b8:	8c800117 	ldw	r18,4(r17)
 40070bc:	8c400204 	addi	r17,r17,8
 40070c0:	003fb306 	br	4006f90 <__alt_data_end+0xfbffef90>
 40070c4:	0005883a 	mov	r2,zero
 40070c8:	f800283a 	ret
 40070cc:	81000017 	ldw	r4,0(r16)
 40070d0:	80800417 	ldw	r2,16(r16)
 40070d4:	11005736 	bltu	r2,r4,4007234 <__sfvwrite_r+0x314>
 40070d8:	85c00517 	ldw	r23,20(r16)
 40070dc:	95c05536 	bltu	r18,r23,4007234 <__sfvwrite_r+0x314>
 40070e0:	00a00034 	movhi	r2,32768
 40070e4:	10bfffc4 	addi	r2,r2,-1
 40070e8:	9009883a 	mov	r4,r18
 40070ec:	1480012e 	bgeu	r2,r18,40070f4 <__sfvwrite_r+0x1d4>
 40070f0:	1009883a 	mov	r4,r2
 40070f4:	b80b883a 	mov	r5,r23
 40070f8:	40008880 	call	4000888 <__divsi3>
 40070fc:	15cf383a 	mul	r7,r2,r23
 4007100:	81400717 	ldw	r5,28(r16)
 4007104:	80800917 	ldw	r2,36(r16)
 4007108:	e00d883a 	mov	r6,fp
 400710c:	a809883a 	mov	r4,r21
 4007110:	103ee83a 	callr	r2
 4007114:	00bfdb16 	blt	zero,r2,4007084 <__alt_data_end+0xfbfff084>
 4007118:	8080030b 	ldhu	r2,12(r16)
 400711c:	10801014 	ori	r2,r2,64
 4007120:	8080030d 	sth	r2,12(r16)
 4007124:	00bfffc4 	movi	r2,-1
 4007128:	003fab06 	br	4006fd8 <__alt_data_end+0xfbffefd8>
 400712c:	0027883a 	mov	r19,zero
 4007130:	0011883a 	mov	r8,zero
 4007134:	0039883a 	mov	fp,zero
 4007138:	0025883a 	mov	r18,zero
 400713c:	90001f26 	beq	r18,zero,40071bc <__sfvwrite_r+0x29c>
 4007140:	40005a26 	beq	r8,zero,40072ac <__sfvwrite_r+0x38c>
 4007144:	982d883a 	mov	r22,r19
 4007148:	94c0012e 	bgeu	r18,r19,4007150 <__sfvwrite_r+0x230>
 400714c:	902d883a 	mov	r22,r18
 4007150:	81000017 	ldw	r4,0(r16)
 4007154:	80800417 	ldw	r2,16(r16)
 4007158:	b02f883a 	mov	r23,r22
 400715c:	81c00517 	ldw	r7,20(r16)
 4007160:	1100032e 	bgeu	r2,r4,4007170 <__sfvwrite_r+0x250>
 4007164:	80c00217 	ldw	r3,8(r16)
 4007168:	38c7883a 	add	r3,r7,r3
 400716c:	1d801816 	blt	r3,r22,40071d0 <__sfvwrite_r+0x2b0>
 4007170:	b1c03e16 	blt	r22,r7,400726c <__sfvwrite_r+0x34c>
 4007174:	80800917 	ldw	r2,36(r16)
 4007178:	81400717 	ldw	r5,28(r16)
 400717c:	e00d883a 	mov	r6,fp
 4007180:	da000115 	stw	r8,4(sp)
 4007184:	a809883a 	mov	r4,r21
 4007188:	103ee83a 	callr	r2
 400718c:	102f883a 	mov	r23,r2
 4007190:	da000117 	ldw	r8,4(sp)
 4007194:	00bfe00e 	bge	zero,r2,4007118 <__alt_data_end+0xfbfff118>
 4007198:	9de7c83a 	sub	r19,r19,r23
 400719c:	98001f26 	beq	r19,zero,400721c <__sfvwrite_r+0x2fc>
 40071a0:	a0800217 	ldw	r2,8(r20)
 40071a4:	e5f9883a 	add	fp,fp,r23
 40071a8:	95e5c83a 	sub	r18,r18,r23
 40071ac:	15efc83a 	sub	r23,r2,r23
 40071b0:	a5c00215 	stw	r23,8(r20)
 40071b4:	b83f8726 	beq	r23,zero,4006fd4 <__alt_data_end+0xfbffefd4>
 40071b8:	903fe11e 	bne	r18,zero,4007140 <__alt_data_end+0xfbfff140>
 40071bc:	8f000017 	ldw	fp,0(r17)
 40071c0:	8c800117 	ldw	r18,4(r17)
 40071c4:	0011883a 	mov	r8,zero
 40071c8:	8c400204 	addi	r17,r17,8
 40071cc:	003fdb06 	br	400713c <__alt_data_end+0xfbfff13c>
 40071d0:	180d883a 	mov	r6,r3
 40071d4:	e00b883a 	mov	r5,fp
 40071d8:	da000115 	stw	r8,4(sp)
 40071dc:	d8c00015 	stw	r3,0(sp)
 40071e0:	40082340 	call	4008234 <memmove>
 40071e4:	d8c00017 	ldw	r3,0(sp)
 40071e8:	80800017 	ldw	r2,0(r16)
 40071ec:	800b883a 	mov	r5,r16
 40071f0:	a809883a 	mov	r4,r21
 40071f4:	10c5883a 	add	r2,r2,r3
 40071f8:	80800015 	stw	r2,0(r16)
 40071fc:	d8c00015 	stw	r3,0(sp)
 4007200:	40066c00 	call	40066c0 <_fflush_r>
 4007204:	d8c00017 	ldw	r3,0(sp)
 4007208:	da000117 	ldw	r8,4(sp)
 400720c:	103fc21e 	bne	r2,zero,4007118 <__alt_data_end+0xfbfff118>
 4007210:	182f883a 	mov	r23,r3
 4007214:	9de7c83a 	sub	r19,r19,r23
 4007218:	983fe11e 	bne	r19,zero,40071a0 <__alt_data_end+0xfbfff1a0>
 400721c:	800b883a 	mov	r5,r16
 4007220:	a809883a 	mov	r4,r21
 4007224:	40066c00 	call	40066c0 <_fflush_r>
 4007228:	103fbb1e 	bne	r2,zero,4007118 <__alt_data_end+0xfbfff118>
 400722c:	0011883a 	mov	r8,zero
 4007230:	003fdb06 	br	40071a0 <__alt_data_end+0xfbfff1a0>
 4007234:	94c0012e 	bgeu	r18,r19,400723c <__sfvwrite_r+0x31c>
 4007238:	9027883a 	mov	r19,r18
 400723c:	980d883a 	mov	r6,r19
 4007240:	e00b883a 	mov	r5,fp
 4007244:	40082340 	call	4008234 <memmove>
 4007248:	80800217 	ldw	r2,8(r16)
 400724c:	80c00017 	ldw	r3,0(r16)
 4007250:	14c5c83a 	sub	r2,r2,r19
 4007254:	1cc7883a 	add	r3,r3,r19
 4007258:	80800215 	stw	r2,8(r16)
 400725c:	80c00015 	stw	r3,0(r16)
 4007260:	10004326 	beq	r2,zero,4007370 <__sfvwrite_r+0x450>
 4007264:	9805883a 	mov	r2,r19
 4007268:	003f8606 	br	4007084 <__alt_data_end+0xfbfff084>
 400726c:	b00d883a 	mov	r6,r22
 4007270:	e00b883a 	mov	r5,fp
 4007274:	da000115 	stw	r8,4(sp)
 4007278:	40082340 	call	4008234 <memmove>
 400727c:	80800217 	ldw	r2,8(r16)
 4007280:	80c00017 	ldw	r3,0(r16)
 4007284:	da000117 	ldw	r8,4(sp)
 4007288:	1585c83a 	sub	r2,r2,r22
 400728c:	1dad883a 	add	r22,r3,r22
 4007290:	80800215 	stw	r2,8(r16)
 4007294:	85800015 	stw	r22,0(r16)
 4007298:	003fbf06 	br	4007198 <__alt_data_end+0xfbfff198>
 400729c:	81000017 	ldw	r4,0(r16)
 40072a0:	9027883a 	mov	r19,r18
 40072a4:	902f883a 	mov	r23,r18
 40072a8:	003f6c06 	br	400705c <__alt_data_end+0xfbfff05c>
 40072ac:	900d883a 	mov	r6,r18
 40072b0:	01400284 	movi	r5,10
 40072b4:	e009883a 	mov	r4,fp
 40072b8:	40080080 	call	4008008 <memchr>
 40072bc:	10003e26 	beq	r2,zero,40073b8 <__sfvwrite_r+0x498>
 40072c0:	10800044 	addi	r2,r2,1
 40072c4:	1727c83a 	sub	r19,r2,fp
 40072c8:	02000044 	movi	r8,1
 40072cc:	003f9d06 	br	4007144 <__alt_data_end+0xfbfff144>
 40072d0:	80800517 	ldw	r2,20(r16)
 40072d4:	81400417 	ldw	r5,16(r16)
 40072d8:	81c00017 	ldw	r7,0(r16)
 40072dc:	10a7883a 	add	r19,r2,r2
 40072e0:	9885883a 	add	r2,r19,r2
 40072e4:	1026d7fa 	srli	r19,r2,31
 40072e8:	396dc83a 	sub	r22,r7,r5
 40072ec:	b1000044 	addi	r4,r22,1
 40072f0:	9885883a 	add	r2,r19,r2
 40072f4:	1027d07a 	srai	r19,r2,1
 40072f8:	2485883a 	add	r2,r4,r18
 40072fc:	980d883a 	mov	r6,r19
 4007300:	9880022e 	bgeu	r19,r2,400730c <__sfvwrite_r+0x3ec>
 4007304:	1027883a 	mov	r19,r2
 4007308:	100d883a 	mov	r6,r2
 400730c:	18c1000c 	andi	r3,r3,1024
 4007310:	18001c26 	beq	r3,zero,4007384 <__sfvwrite_r+0x464>
 4007314:	300b883a 	mov	r5,r6
 4007318:	a809883a 	mov	r4,r21
 400731c:	40077fc0 	call	40077fc <_malloc_r>
 4007320:	102f883a 	mov	r23,r2
 4007324:	10002926 	beq	r2,zero,40073cc <__sfvwrite_r+0x4ac>
 4007328:	81400417 	ldw	r5,16(r16)
 400732c:	b00d883a 	mov	r6,r22
 4007330:	1009883a 	mov	r4,r2
 4007334:	40080ec0 	call	40080ec <memcpy>
 4007338:	8080030b 	ldhu	r2,12(r16)
 400733c:	00fedfc4 	movi	r3,-1153
 4007340:	10c4703a 	and	r2,r2,r3
 4007344:	10802014 	ori	r2,r2,128
 4007348:	8080030d 	sth	r2,12(r16)
 400734c:	bd89883a 	add	r4,r23,r22
 4007350:	9d8fc83a 	sub	r7,r19,r22
 4007354:	85c00415 	stw	r23,16(r16)
 4007358:	84c00515 	stw	r19,20(r16)
 400735c:	81000015 	stw	r4,0(r16)
 4007360:	9027883a 	mov	r19,r18
 4007364:	81c00215 	stw	r7,8(r16)
 4007368:	902f883a 	mov	r23,r18
 400736c:	003f3b06 	br	400705c <__alt_data_end+0xfbfff05c>
 4007370:	800b883a 	mov	r5,r16
 4007374:	a809883a 	mov	r4,r21
 4007378:	40066c00 	call	40066c0 <_fflush_r>
 400737c:	103fb926 	beq	r2,zero,4007264 <__alt_data_end+0xfbfff264>
 4007380:	003f6506 	br	4007118 <__alt_data_end+0xfbfff118>
 4007384:	a809883a 	mov	r4,r21
 4007388:	400961c0 	call	400961c <_realloc_r>
 400738c:	102f883a 	mov	r23,r2
 4007390:	103fee1e 	bne	r2,zero,400734c <__alt_data_end+0xfbfff34c>
 4007394:	81400417 	ldw	r5,16(r16)
 4007398:	a809883a 	mov	r4,r21
 400739c:	4006c100 	call	4006c10 <_free_r>
 40073a0:	8080030b 	ldhu	r2,12(r16)
 40073a4:	00ffdfc4 	movi	r3,-129
 40073a8:	1884703a 	and	r2,r3,r2
 40073ac:	00c00304 	movi	r3,12
 40073b0:	a8c00015 	stw	r3,0(r21)
 40073b4:	003f5906 	br	400711c <__alt_data_end+0xfbfff11c>
 40073b8:	94c00044 	addi	r19,r18,1
 40073bc:	02000044 	movi	r8,1
 40073c0:	003f6006 	br	4007144 <__alt_data_end+0xfbfff144>
 40073c4:	00bfffc4 	movi	r2,-1
 40073c8:	003f0306 	br	4006fd8 <__alt_data_end+0xfbffefd8>
 40073cc:	00800304 	movi	r2,12
 40073d0:	a8800015 	stw	r2,0(r21)
 40073d4:	8080030b 	ldhu	r2,12(r16)
 40073d8:	003f5006 	br	400711c <__alt_data_end+0xfbfff11c>

040073dc <_fwalk>:
 40073dc:	defff704 	addi	sp,sp,-36
 40073e0:	dd000415 	stw	r20,16(sp)
 40073e4:	dfc00815 	stw	ra,32(sp)
 40073e8:	ddc00715 	stw	r23,28(sp)
 40073ec:	dd800615 	stw	r22,24(sp)
 40073f0:	dd400515 	stw	r21,20(sp)
 40073f4:	dcc00315 	stw	r19,12(sp)
 40073f8:	dc800215 	stw	r18,8(sp)
 40073fc:	dc400115 	stw	r17,4(sp)
 4007400:	dc000015 	stw	r16,0(sp)
 4007404:	2500b804 	addi	r20,r4,736
 4007408:	a0002326 	beq	r20,zero,4007498 <_fwalk+0xbc>
 400740c:	282b883a 	mov	r21,r5
 4007410:	002f883a 	mov	r23,zero
 4007414:	05800044 	movi	r22,1
 4007418:	04ffffc4 	movi	r19,-1
 400741c:	a4400117 	ldw	r17,4(r20)
 4007420:	a4800217 	ldw	r18,8(r20)
 4007424:	8c7fffc4 	addi	r17,r17,-1
 4007428:	88000d16 	blt	r17,zero,4007460 <_fwalk+0x84>
 400742c:	94000304 	addi	r16,r18,12
 4007430:	94800384 	addi	r18,r18,14
 4007434:	8080000b 	ldhu	r2,0(r16)
 4007438:	8c7fffc4 	addi	r17,r17,-1
 400743c:	813ffd04 	addi	r4,r16,-12
 4007440:	b080042e 	bgeu	r22,r2,4007454 <_fwalk+0x78>
 4007444:	9080000f 	ldh	r2,0(r18)
 4007448:	14c00226 	beq	r2,r19,4007454 <_fwalk+0x78>
 400744c:	a83ee83a 	callr	r21
 4007450:	b8aeb03a 	or	r23,r23,r2
 4007454:	84001a04 	addi	r16,r16,104
 4007458:	94801a04 	addi	r18,r18,104
 400745c:	8cfff51e 	bne	r17,r19,4007434 <__alt_data_end+0xfbfff434>
 4007460:	a5000017 	ldw	r20,0(r20)
 4007464:	a03fed1e 	bne	r20,zero,400741c <__alt_data_end+0xfbfff41c>
 4007468:	b805883a 	mov	r2,r23
 400746c:	dfc00817 	ldw	ra,32(sp)
 4007470:	ddc00717 	ldw	r23,28(sp)
 4007474:	dd800617 	ldw	r22,24(sp)
 4007478:	dd400517 	ldw	r21,20(sp)
 400747c:	dd000417 	ldw	r20,16(sp)
 4007480:	dcc00317 	ldw	r19,12(sp)
 4007484:	dc800217 	ldw	r18,8(sp)
 4007488:	dc400117 	ldw	r17,4(sp)
 400748c:	dc000017 	ldw	r16,0(sp)
 4007490:	dec00904 	addi	sp,sp,36
 4007494:	f800283a 	ret
 4007498:	002f883a 	mov	r23,zero
 400749c:	003ff206 	br	4007468 <__alt_data_end+0xfbfff468>

040074a0 <_fwalk_reent>:
 40074a0:	defff704 	addi	sp,sp,-36
 40074a4:	dd000415 	stw	r20,16(sp)
 40074a8:	dfc00815 	stw	ra,32(sp)
 40074ac:	ddc00715 	stw	r23,28(sp)
 40074b0:	dd800615 	stw	r22,24(sp)
 40074b4:	dd400515 	stw	r21,20(sp)
 40074b8:	dcc00315 	stw	r19,12(sp)
 40074bc:	dc800215 	stw	r18,8(sp)
 40074c0:	dc400115 	stw	r17,4(sp)
 40074c4:	dc000015 	stw	r16,0(sp)
 40074c8:	2500b804 	addi	r20,r4,736
 40074cc:	a0002326 	beq	r20,zero,400755c <_fwalk_reent+0xbc>
 40074d0:	282b883a 	mov	r21,r5
 40074d4:	2027883a 	mov	r19,r4
 40074d8:	002f883a 	mov	r23,zero
 40074dc:	05800044 	movi	r22,1
 40074e0:	04bfffc4 	movi	r18,-1
 40074e4:	a4400117 	ldw	r17,4(r20)
 40074e8:	a4000217 	ldw	r16,8(r20)
 40074ec:	8c7fffc4 	addi	r17,r17,-1
 40074f0:	88000c16 	blt	r17,zero,4007524 <_fwalk_reent+0x84>
 40074f4:	84000304 	addi	r16,r16,12
 40074f8:	8080000b 	ldhu	r2,0(r16)
 40074fc:	8c7fffc4 	addi	r17,r17,-1
 4007500:	817ffd04 	addi	r5,r16,-12
 4007504:	b080052e 	bgeu	r22,r2,400751c <_fwalk_reent+0x7c>
 4007508:	8080008f 	ldh	r2,2(r16)
 400750c:	9809883a 	mov	r4,r19
 4007510:	14800226 	beq	r2,r18,400751c <_fwalk_reent+0x7c>
 4007514:	a83ee83a 	callr	r21
 4007518:	b8aeb03a 	or	r23,r23,r2
 400751c:	84001a04 	addi	r16,r16,104
 4007520:	8cbff51e 	bne	r17,r18,40074f8 <__alt_data_end+0xfbfff4f8>
 4007524:	a5000017 	ldw	r20,0(r20)
 4007528:	a03fee1e 	bne	r20,zero,40074e4 <__alt_data_end+0xfbfff4e4>
 400752c:	b805883a 	mov	r2,r23
 4007530:	dfc00817 	ldw	ra,32(sp)
 4007534:	ddc00717 	ldw	r23,28(sp)
 4007538:	dd800617 	ldw	r22,24(sp)
 400753c:	dd400517 	ldw	r21,20(sp)
 4007540:	dd000417 	ldw	r20,16(sp)
 4007544:	dcc00317 	ldw	r19,12(sp)
 4007548:	dc800217 	ldw	r18,8(sp)
 400754c:	dc400117 	ldw	r17,4(sp)
 4007550:	dc000017 	ldw	r16,0(sp)
 4007554:	dec00904 	addi	sp,sp,36
 4007558:	f800283a 	ret
 400755c:	002f883a 	mov	r23,zero
 4007560:	003ff206 	br	400752c <__alt_data_end+0xfbfff52c>

04007564 <_setlocale_r>:
 4007564:	30001b26 	beq	r6,zero,40075d4 <_setlocale_r+0x70>
 4007568:	01420034 	movhi	r5,2048
 400756c:	defffe04 	addi	sp,sp,-8
 4007570:	2940ca04 	addi	r5,r5,808
 4007574:	3009883a 	mov	r4,r6
 4007578:	dc000015 	stw	r16,0(sp)
 400757c:	dfc00115 	stw	ra,4(sp)
 4007580:	3021883a 	mov	r16,r6
 4007584:	4009d840 	call	4009d84 <strcmp>
 4007588:	1000061e 	bne	r2,zero,40075a4 <_setlocale_r+0x40>
 400758c:	00820034 	movhi	r2,2048
 4007590:	1080c904 	addi	r2,r2,804
 4007594:	dfc00117 	ldw	ra,4(sp)
 4007598:	dc000017 	ldw	r16,0(sp)
 400759c:	dec00204 	addi	sp,sp,8
 40075a0:	f800283a 	ret
 40075a4:	01420034 	movhi	r5,2048
 40075a8:	2940c904 	addi	r5,r5,804
 40075ac:	8009883a 	mov	r4,r16
 40075b0:	4009d840 	call	4009d84 <strcmp>
 40075b4:	103ff526 	beq	r2,zero,400758c <__alt_data_end+0xfbfff58c>
 40075b8:	01420034 	movhi	r5,2048
 40075bc:	2940b404 	addi	r5,r5,720
 40075c0:	8009883a 	mov	r4,r16
 40075c4:	4009d840 	call	4009d84 <strcmp>
 40075c8:	103ff026 	beq	r2,zero,400758c <__alt_data_end+0xfbfff58c>
 40075cc:	0005883a 	mov	r2,zero
 40075d0:	003ff006 	br	4007594 <__alt_data_end+0xfbfff594>
 40075d4:	00820034 	movhi	r2,2048
 40075d8:	1080c904 	addi	r2,r2,804
 40075dc:	f800283a 	ret

040075e0 <__locale_charset>:
 40075e0:	00810074 	movhi	r2,1025
 40075e4:	10827904 	addi	r2,r2,2532
 40075e8:	f800283a 	ret

040075ec <__locale_mb_cur_max>:
 40075ec:	00810074 	movhi	r2,1025
 40075f0:	10881504 	addi	r2,r2,8276
 40075f4:	10800017 	ldw	r2,0(r2)
 40075f8:	f800283a 	ret

040075fc <__locale_msgcharset>:
 40075fc:	00810074 	movhi	r2,1025
 4007600:	10827104 	addi	r2,r2,2500
 4007604:	f800283a 	ret

04007608 <__locale_cjk_lang>:
 4007608:	0005883a 	mov	r2,zero
 400760c:	f800283a 	ret

04007610 <_localeconv_r>:
 4007610:	00810074 	movhi	r2,1025
 4007614:	10828104 	addi	r2,r2,2564
 4007618:	f800283a 	ret

0400761c <setlocale>:
 400761c:	00810074 	movhi	r2,1025
 4007620:	10881404 	addi	r2,r2,8272
 4007624:	280d883a 	mov	r6,r5
 4007628:	200b883a 	mov	r5,r4
 400762c:	11000017 	ldw	r4,0(r2)
 4007630:	40075641 	jmpi	4007564 <_setlocale_r>

04007634 <localeconv>:
 4007634:	00810074 	movhi	r2,1025
 4007638:	10828104 	addi	r2,r2,2564
 400763c:	f800283a 	ret

04007640 <__smakebuf_r>:
 4007640:	2880030b 	ldhu	r2,12(r5)
 4007644:	10c0008c 	andi	r3,r2,2
 4007648:	1800411e 	bne	r3,zero,4007750 <__smakebuf_r+0x110>
 400764c:	deffec04 	addi	sp,sp,-80
 4007650:	dc000f15 	stw	r16,60(sp)
 4007654:	2821883a 	mov	r16,r5
 4007658:	2940038f 	ldh	r5,14(r5)
 400765c:	dc401015 	stw	r17,64(sp)
 4007660:	dfc01315 	stw	ra,76(sp)
 4007664:	dcc01215 	stw	r19,72(sp)
 4007668:	dc801115 	stw	r18,68(sp)
 400766c:	2023883a 	mov	r17,r4
 4007670:	28001c16 	blt	r5,zero,40076e4 <__smakebuf_r+0xa4>
 4007674:	d80d883a 	mov	r6,sp
 4007678:	400ba840 	call	400ba84 <_fstat_r>
 400767c:	10001816 	blt	r2,zero,40076e0 <__smakebuf_r+0xa0>
 4007680:	d8800117 	ldw	r2,4(sp)
 4007684:	00e00014 	movui	r3,32768
 4007688:	10bc000c 	andi	r2,r2,61440
 400768c:	14c80020 	cmpeqi	r19,r2,8192
 4007690:	10c03726 	beq	r2,r3,4007770 <__smakebuf_r+0x130>
 4007694:	80c0030b 	ldhu	r3,12(r16)
 4007698:	18c20014 	ori	r3,r3,2048
 400769c:	80c0030d 	sth	r3,12(r16)
 40076a0:	00c80004 	movi	r3,8192
 40076a4:	10c0521e 	bne	r2,r3,40077f0 <__smakebuf_r+0x1b0>
 40076a8:	8140038f 	ldh	r5,14(r16)
 40076ac:	8809883a 	mov	r4,r17
 40076b0:	400bae00 	call	400bae0 <_isatty_r>
 40076b4:	10004c26 	beq	r2,zero,40077e8 <__smakebuf_r+0x1a8>
 40076b8:	8080030b 	ldhu	r2,12(r16)
 40076bc:	80c010c4 	addi	r3,r16,67
 40076c0:	80c00015 	stw	r3,0(r16)
 40076c4:	10800054 	ori	r2,r2,1
 40076c8:	8080030d 	sth	r2,12(r16)
 40076cc:	00800044 	movi	r2,1
 40076d0:	80c00415 	stw	r3,16(r16)
 40076d4:	80800515 	stw	r2,20(r16)
 40076d8:	04810004 	movi	r18,1024
 40076dc:	00000706 	br	40076fc <__smakebuf_r+0xbc>
 40076e0:	8080030b 	ldhu	r2,12(r16)
 40076e4:	10c0200c 	andi	r3,r2,128
 40076e8:	18001f1e 	bne	r3,zero,4007768 <__smakebuf_r+0x128>
 40076ec:	04810004 	movi	r18,1024
 40076f0:	10820014 	ori	r2,r2,2048
 40076f4:	8080030d 	sth	r2,12(r16)
 40076f8:	0027883a 	mov	r19,zero
 40076fc:	900b883a 	mov	r5,r18
 4007700:	8809883a 	mov	r4,r17
 4007704:	40077fc0 	call	40077fc <_malloc_r>
 4007708:	10002c26 	beq	r2,zero,40077bc <__smakebuf_r+0x17c>
 400770c:	80c0030b 	ldhu	r3,12(r16)
 4007710:	01010034 	movhi	r4,1024
 4007714:	2119d504 	addi	r4,r4,26452
 4007718:	89000f15 	stw	r4,60(r17)
 400771c:	18c02014 	ori	r3,r3,128
 4007720:	80c0030d 	sth	r3,12(r16)
 4007724:	80800015 	stw	r2,0(r16)
 4007728:	80800415 	stw	r2,16(r16)
 400772c:	84800515 	stw	r18,20(r16)
 4007730:	98001a1e 	bne	r19,zero,400779c <__smakebuf_r+0x15c>
 4007734:	dfc01317 	ldw	ra,76(sp)
 4007738:	dcc01217 	ldw	r19,72(sp)
 400773c:	dc801117 	ldw	r18,68(sp)
 4007740:	dc401017 	ldw	r17,64(sp)
 4007744:	dc000f17 	ldw	r16,60(sp)
 4007748:	dec01404 	addi	sp,sp,80
 400774c:	f800283a 	ret
 4007750:	288010c4 	addi	r2,r5,67
 4007754:	28800015 	stw	r2,0(r5)
 4007758:	28800415 	stw	r2,16(r5)
 400775c:	00800044 	movi	r2,1
 4007760:	28800515 	stw	r2,20(r5)
 4007764:	f800283a 	ret
 4007768:	04801004 	movi	r18,64
 400776c:	003fe006 	br	40076f0 <__alt_data_end+0xfbfff6f0>
 4007770:	81000a17 	ldw	r4,40(r16)
 4007774:	00c10074 	movhi	r3,1025
 4007778:	18e74804 	addi	r3,r3,-25312
 400777c:	20ffc51e 	bne	r4,r3,4007694 <__alt_data_end+0xfbfff694>
 4007780:	8080030b 	ldhu	r2,12(r16)
 4007784:	04810004 	movi	r18,1024
 4007788:	84801315 	stw	r18,76(r16)
 400778c:	1484b03a 	or	r2,r2,r18
 4007790:	8080030d 	sth	r2,12(r16)
 4007794:	0027883a 	mov	r19,zero
 4007798:	003fd806 	br	40076fc <__alt_data_end+0xfbfff6fc>
 400779c:	8140038f 	ldh	r5,14(r16)
 40077a0:	8809883a 	mov	r4,r17
 40077a4:	400bae00 	call	400bae0 <_isatty_r>
 40077a8:	103fe226 	beq	r2,zero,4007734 <__alt_data_end+0xfbfff734>
 40077ac:	8080030b 	ldhu	r2,12(r16)
 40077b0:	10800054 	ori	r2,r2,1
 40077b4:	8080030d 	sth	r2,12(r16)
 40077b8:	003fde06 	br	4007734 <__alt_data_end+0xfbfff734>
 40077bc:	8080030b 	ldhu	r2,12(r16)
 40077c0:	10c0800c 	andi	r3,r2,512
 40077c4:	183fdb1e 	bne	r3,zero,4007734 <__alt_data_end+0xfbfff734>
 40077c8:	10800094 	ori	r2,r2,2
 40077cc:	80c010c4 	addi	r3,r16,67
 40077d0:	8080030d 	sth	r2,12(r16)
 40077d4:	00800044 	movi	r2,1
 40077d8:	80c00015 	stw	r3,0(r16)
 40077dc:	80c00415 	stw	r3,16(r16)
 40077e0:	80800515 	stw	r2,20(r16)
 40077e4:	003fd306 	br	4007734 <__alt_data_end+0xfbfff734>
 40077e8:	04810004 	movi	r18,1024
 40077ec:	003fc306 	br	40076fc <__alt_data_end+0xfbfff6fc>
 40077f0:	0027883a 	mov	r19,zero
 40077f4:	04810004 	movi	r18,1024
 40077f8:	003fc006 	br	40076fc <__alt_data_end+0xfbfff6fc>

040077fc <_malloc_r>:
 40077fc:	defff504 	addi	sp,sp,-44
 4007800:	dc800315 	stw	r18,12(sp)
 4007804:	dfc00a15 	stw	ra,40(sp)
 4007808:	df000915 	stw	fp,36(sp)
 400780c:	ddc00815 	stw	r23,32(sp)
 4007810:	dd800715 	stw	r22,28(sp)
 4007814:	dd400615 	stw	r21,24(sp)
 4007818:	dd000515 	stw	r20,20(sp)
 400781c:	dcc00415 	stw	r19,16(sp)
 4007820:	dc400215 	stw	r17,8(sp)
 4007824:	dc000115 	stw	r16,4(sp)
 4007828:	288002c4 	addi	r2,r5,11
 400782c:	00c00584 	movi	r3,22
 4007830:	2025883a 	mov	r18,r4
 4007834:	18807f2e 	bgeu	r3,r2,4007a34 <_malloc_r+0x238>
 4007838:	047ffe04 	movi	r17,-8
 400783c:	1462703a 	and	r17,r2,r17
 4007840:	8800a316 	blt	r17,zero,4007ad0 <_malloc_r+0x2d4>
 4007844:	8940a236 	bltu	r17,r5,4007ad0 <_malloc_r+0x2d4>
 4007848:	400e4600 	call	400e460 <__malloc_lock>
 400784c:	00807dc4 	movi	r2,503
 4007850:	1441e92e 	bgeu	r2,r17,4007ff8 <_malloc_r+0x7fc>
 4007854:	8804d27a 	srli	r2,r17,9
 4007858:	1000a126 	beq	r2,zero,4007ae0 <_malloc_r+0x2e4>
 400785c:	00c00104 	movi	r3,4
 4007860:	18811e36 	bltu	r3,r2,4007cdc <_malloc_r+0x4e0>
 4007864:	8804d1ba 	srli	r2,r17,6
 4007868:	12000e44 	addi	r8,r2,57
 400786c:	11c00e04 	addi	r7,r2,56
 4007870:	4209883a 	add	r4,r8,r8
 4007874:	04c10074 	movhi	r19,1025
 4007878:	2109883a 	add	r4,r4,r4
 400787c:	9cc28f04 	addi	r19,r19,2620
 4007880:	2109883a 	add	r4,r4,r4
 4007884:	9909883a 	add	r4,r19,r4
 4007888:	24000117 	ldw	r16,4(r4)
 400788c:	213ffe04 	addi	r4,r4,-8
 4007890:	24009726 	beq	r4,r16,4007af0 <_malloc_r+0x2f4>
 4007894:	80800117 	ldw	r2,4(r16)
 4007898:	01bfff04 	movi	r6,-4
 400789c:	014003c4 	movi	r5,15
 40078a0:	1184703a 	and	r2,r2,r6
 40078a4:	1447c83a 	sub	r3,r2,r17
 40078a8:	28c00716 	blt	r5,r3,40078c8 <_malloc_r+0xcc>
 40078ac:	1800920e 	bge	r3,zero,4007af8 <_malloc_r+0x2fc>
 40078b0:	84000317 	ldw	r16,12(r16)
 40078b4:	24008e26 	beq	r4,r16,4007af0 <_malloc_r+0x2f4>
 40078b8:	80800117 	ldw	r2,4(r16)
 40078bc:	1184703a 	and	r2,r2,r6
 40078c0:	1447c83a 	sub	r3,r2,r17
 40078c4:	28fff90e 	bge	r5,r3,40078ac <__alt_data_end+0xfbfff8ac>
 40078c8:	3809883a 	mov	r4,r7
 40078cc:	01810074 	movhi	r6,1025
 40078d0:	9c000417 	ldw	r16,16(r19)
 40078d4:	31828f04 	addi	r6,r6,2620
 40078d8:	32000204 	addi	r8,r6,8
 40078dc:	82013426 	beq	r16,r8,4007db0 <_malloc_r+0x5b4>
 40078e0:	80c00117 	ldw	r3,4(r16)
 40078e4:	00bfff04 	movi	r2,-4
 40078e8:	188e703a 	and	r7,r3,r2
 40078ec:	3c45c83a 	sub	r2,r7,r17
 40078f0:	00c003c4 	movi	r3,15
 40078f4:	18811f16 	blt	r3,r2,4007d74 <_malloc_r+0x578>
 40078f8:	32000515 	stw	r8,20(r6)
 40078fc:	32000415 	stw	r8,16(r6)
 4007900:	10007f0e 	bge	r2,zero,4007b00 <_malloc_r+0x304>
 4007904:	00807fc4 	movi	r2,511
 4007908:	11c0fd36 	bltu	r2,r7,4007d00 <_malloc_r+0x504>
 400790c:	3806d0fa 	srli	r3,r7,3
 4007910:	01c00044 	movi	r7,1
 4007914:	30800117 	ldw	r2,4(r6)
 4007918:	19400044 	addi	r5,r3,1
 400791c:	294b883a 	add	r5,r5,r5
 4007920:	1807d0ba 	srai	r3,r3,2
 4007924:	294b883a 	add	r5,r5,r5
 4007928:	294b883a 	add	r5,r5,r5
 400792c:	298b883a 	add	r5,r5,r6
 4007930:	38c6983a 	sll	r3,r7,r3
 4007934:	29c00017 	ldw	r7,0(r5)
 4007938:	2a7ffe04 	addi	r9,r5,-8
 400793c:	1886b03a 	or	r3,r3,r2
 4007940:	82400315 	stw	r9,12(r16)
 4007944:	81c00215 	stw	r7,8(r16)
 4007948:	30c00115 	stw	r3,4(r6)
 400794c:	2c000015 	stw	r16,0(r5)
 4007950:	3c000315 	stw	r16,12(r7)
 4007954:	2005d0ba 	srai	r2,r4,2
 4007958:	01400044 	movi	r5,1
 400795c:	288a983a 	sll	r5,r5,r2
 4007960:	19406f36 	bltu	r3,r5,4007b20 <_malloc_r+0x324>
 4007964:	28c4703a 	and	r2,r5,r3
 4007968:	10000a1e 	bne	r2,zero,4007994 <_malloc_r+0x198>
 400796c:	00bfff04 	movi	r2,-4
 4007970:	294b883a 	add	r5,r5,r5
 4007974:	2088703a 	and	r4,r4,r2
 4007978:	28c4703a 	and	r2,r5,r3
 400797c:	21000104 	addi	r4,r4,4
 4007980:	1000041e 	bne	r2,zero,4007994 <_malloc_r+0x198>
 4007984:	294b883a 	add	r5,r5,r5
 4007988:	28c4703a 	and	r2,r5,r3
 400798c:	21000104 	addi	r4,r4,4
 4007990:	103ffc26 	beq	r2,zero,4007984 <__alt_data_end+0xfbfff984>
 4007994:	02bfff04 	movi	r10,-4
 4007998:	024003c4 	movi	r9,15
 400799c:	21800044 	addi	r6,r4,1
 40079a0:	318d883a 	add	r6,r6,r6
 40079a4:	318d883a 	add	r6,r6,r6
 40079a8:	318d883a 	add	r6,r6,r6
 40079ac:	998d883a 	add	r6,r19,r6
 40079b0:	333ffe04 	addi	r12,r6,-8
 40079b4:	2017883a 	mov	r11,r4
 40079b8:	31800104 	addi	r6,r6,4
 40079bc:	34000017 	ldw	r16,0(r6)
 40079c0:	31fffd04 	addi	r7,r6,-12
 40079c4:	81c0041e 	bne	r16,r7,40079d8 <_malloc_r+0x1dc>
 40079c8:	0000fb06 	br	4007db8 <_malloc_r+0x5bc>
 40079cc:	1801030e 	bge	r3,zero,4007ddc <_malloc_r+0x5e0>
 40079d0:	84000317 	ldw	r16,12(r16)
 40079d4:	81c0f826 	beq	r16,r7,4007db8 <_malloc_r+0x5bc>
 40079d8:	80800117 	ldw	r2,4(r16)
 40079dc:	1284703a 	and	r2,r2,r10
 40079e0:	1447c83a 	sub	r3,r2,r17
 40079e4:	48fff90e 	bge	r9,r3,40079cc <__alt_data_end+0xfbfff9cc>
 40079e8:	80800317 	ldw	r2,12(r16)
 40079ec:	81000217 	ldw	r4,8(r16)
 40079f0:	89400054 	ori	r5,r17,1
 40079f4:	81400115 	stw	r5,4(r16)
 40079f8:	20800315 	stw	r2,12(r4)
 40079fc:	11000215 	stw	r4,8(r2)
 4007a00:	8463883a 	add	r17,r16,r17
 4007a04:	9c400515 	stw	r17,20(r19)
 4007a08:	9c400415 	stw	r17,16(r19)
 4007a0c:	18800054 	ori	r2,r3,1
 4007a10:	88800115 	stw	r2,4(r17)
 4007a14:	8a000315 	stw	r8,12(r17)
 4007a18:	8a000215 	stw	r8,8(r17)
 4007a1c:	88e3883a 	add	r17,r17,r3
 4007a20:	88c00015 	stw	r3,0(r17)
 4007a24:	9009883a 	mov	r4,r18
 4007a28:	400e4840 	call	400e484 <__malloc_unlock>
 4007a2c:	80800204 	addi	r2,r16,8
 4007a30:	00001b06 	br	4007aa0 <_malloc_r+0x2a4>
 4007a34:	04400404 	movi	r17,16
 4007a38:	89402536 	bltu	r17,r5,4007ad0 <_malloc_r+0x2d4>
 4007a3c:	400e4600 	call	400e460 <__malloc_lock>
 4007a40:	00800184 	movi	r2,6
 4007a44:	01000084 	movi	r4,2
 4007a48:	04c10074 	movhi	r19,1025
 4007a4c:	1085883a 	add	r2,r2,r2
 4007a50:	9cc28f04 	addi	r19,r19,2620
 4007a54:	1085883a 	add	r2,r2,r2
 4007a58:	9885883a 	add	r2,r19,r2
 4007a5c:	14000117 	ldw	r16,4(r2)
 4007a60:	10fffe04 	addi	r3,r2,-8
 4007a64:	80c0d926 	beq	r16,r3,4007dcc <_malloc_r+0x5d0>
 4007a68:	80c00117 	ldw	r3,4(r16)
 4007a6c:	81000317 	ldw	r4,12(r16)
 4007a70:	00bfff04 	movi	r2,-4
 4007a74:	1884703a 	and	r2,r3,r2
 4007a78:	81400217 	ldw	r5,8(r16)
 4007a7c:	8085883a 	add	r2,r16,r2
 4007a80:	10c00117 	ldw	r3,4(r2)
 4007a84:	29000315 	stw	r4,12(r5)
 4007a88:	21400215 	stw	r5,8(r4)
 4007a8c:	18c00054 	ori	r3,r3,1
 4007a90:	10c00115 	stw	r3,4(r2)
 4007a94:	9009883a 	mov	r4,r18
 4007a98:	400e4840 	call	400e484 <__malloc_unlock>
 4007a9c:	80800204 	addi	r2,r16,8
 4007aa0:	dfc00a17 	ldw	ra,40(sp)
 4007aa4:	df000917 	ldw	fp,36(sp)
 4007aa8:	ddc00817 	ldw	r23,32(sp)
 4007aac:	dd800717 	ldw	r22,28(sp)
 4007ab0:	dd400617 	ldw	r21,24(sp)
 4007ab4:	dd000517 	ldw	r20,20(sp)
 4007ab8:	dcc00417 	ldw	r19,16(sp)
 4007abc:	dc800317 	ldw	r18,12(sp)
 4007ac0:	dc400217 	ldw	r17,8(sp)
 4007ac4:	dc000117 	ldw	r16,4(sp)
 4007ac8:	dec00b04 	addi	sp,sp,44
 4007acc:	f800283a 	ret
 4007ad0:	00800304 	movi	r2,12
 4007ad4:	90800015 	stw	r2,0(r18)
 4007ad8:	0005883a 	mov	r2,zero
 4007adc:	003ff006 	br	4007aa0 <__alt_data_end+0xfbfffaa0>
 4007ae0:	01002004 	movi	r4,128
 4007ae4:	02001004 	movi	r8,64
 4007ae8:	01c00fc4 	movi	r7,63
 4007aec:	003f6106 	br	4007874 <__alt_data_end+0xfbfff874>
 4007af0:	4009883a 	mov	r4,r8
 4007af4:	003f7506 	br	40078cc <__alt_data_end+0xfbfff8cc>
 4007af8:	81000317 	ldw	r4,12(r16)
 4007afc:	003fde06 	br	4007a78 <__alt_data_end+0xfbfffa78>
 4007b00:	81c5883a 	add	r2,r16,r7
 4007b04:	11400117 	ldw	r5,4(r2)
 4007b08:	9009883a 	mov	r4,r18
 4007b0c:	29400054 	ori	r5,r5,1
 4007b10:	11400115 	stw	r5,4(r2)
 4007b14:	400e4840 	call	400e484 <__malloc_unlock>
 4007b18:	80800204 	addi	r2,r16,8
 4007b1c:	003fe006 	br	4007aa0 <__alt_data_end+0xfbfffaa0>
 4007b20:	9c000217 	ldw	r16,8(r19)
 4007b24:	00bfff04 	movi	r2,-4
 4007b28:	85800117 	ldw	r22,4(r16)
 4007b2c:	b0ac703a 	and	r22,r22,r2
 4007b30:	b4400336 	bltu	r22,r17,4007b40 <_malloc_r+0x344>
 4007b34:	b445c83a 	sub	r2,r22,r17
 4007b38:	00c003c4 	movi	r3,15
 4007b3c:	18805d16 	blt	r3,r2,4007cb4 <_malloc_r+0x4b8>
 4007b40:	05c10074 	movhi	r23,1025
 4007b44:	00810074 	movhi	r2,1025
 4007b48:	108ee704 	addi	r2,r2,15260
 4007b4c:	bdc81604 	addi	r23,r23,8280
 4007b50:	15400017 	ldw	r21,0(r2)
 4007b54:	b8c00017 	ldw	r3,0(r23)
 4007b58:	00bfffc4 	movi	r2,-1
 4007b5c:	858d883a 	add	r6,r16,r22
 4007b60:	8d6b883a 	add	r21,r17,r21
 4007b64:	1880ea26 	beq	r3,r2,4007f10 <_malloc_r+0x714>
 4007b68:	ad4403c4 	addi	r21,r21,4111
 4007b6c:	00bc0004 	movi	r2,-4096
 4007b70:	a8aa703a 	and	r21,r21,r2
 4007b74:	a80b883a 	mov	r5,r21
 4007b78:	9009883a 	mov	r4,r18
 4007b7c:	d9800015 	stw	r6,0(sp)
 4007b80:	4009bf40 	call	4009bf4 <_sbrk_r>
 4007b84:	1029883a 	mov	r20,r2
 4007b88:	00bfffc4 	movi	r2,-1
 4007b8c:	d9800017 	ldw	r6,0(sp)
 4007b90:	a080e826 	beq	r20,r2,4007f34 <_malloc_r+0x738>
 4007b94:	a180a636 	bltu	r20,r6,4007e30 <_malloc_r+0x634>
 4007b98:	07010074 	movhi	fp,1025
 4007b9c:	e70ef104 	addi	fp,fp,15300
 4007ba0:	e0800017 	ldw	r2,0(fp)
 4007ba4:	a887883a 	add	r3,r21,r2
 4007ba8:	e0c00015 	stw	r3,0(fp)
 4007bac:	3500e626 	beq	r6,r20,4007f48 <_malloc_r+0x74c>
 4007bb0:	b9000017 	ldw	r4,0(r23)
 4007bb4:	00bfffc4 	movi	r2,-1
 4007bb8:	2080ee26 	beq	r4,r2,4007f74 <_malloc_r+0x778>
 4007bbc:	a185c83a 	sub	r2,r20,r6
 4007bc0:	10c5883a 	add	r2,r2,r3
 4007bc4:	e0800015 	stw	r2,0(fp)
 4007bc8:	a0c001cc 	andi	r3,r20,7
 4007bcc:	1800bc26 	beq	r3,zero,4007ec0 <_malloc_r+0x6c4>
 4007bd0:	a0e9c83a 	sub	r20,r20,r3
 4007bd4:	00840204 	movi	r2,4104
 4007bd8:	a5000204 	addi	r20,r20,8
 4007bdc:	10c7c83a 	sub	r3,r2,r3
 4007be0:	a545883a 	add	r2,r20,r21
 4007be4:	1083ffcc 	andi	r2,r2,4095
 4007be8:	18abc83a 	sub	r21,r3,r2
 4007bec:	a80b883a 	mov	r5,r21
 4007bf0:	9009883a 	mov	r4,r18
 4007bf4:	4009bf40 	call	4009bf4 <_sbrk_r>
 4007bf8:	00ffffc4 	movi	r3,-1
 4007bfc:	10c0e126 	beq	r2,r3,4007f84 <_malloc_r+0x788>
 4007c00:	1505c83a 	sub	r2,r2,r20
 4007c04:	1545883a 	add	r2,r2,r21
 4007c08:	10800054 	ori	r2,r2,1
 4007c0c:	e0c00017 	ldw	r3,0(fp)
 4007c10:	9d000215 	stw	r20,8(r19)
 4007c14:	a0800115 	stw	r2,4(r20)
 4007c18:	a8c7883a 	add	r3,r21,r3
 4007c1c:	e0c00015 	stw	r3,0(fp)
 4007c20:	84c00e26 	beq	r16,r19,4007c5c <_malloc_r+0x460>
 4007c24:	018003c4 	movi	r6,15
 4007c28:	3580a72e 	bgeu	r6,r22,4007ec8 <_malloc_r+0x6cc>
 4007c2c:	81400117 	ldw	r5,4(r16)
 4007c30:	013ffe04 	movi	r4,-8
 4007c34:	b0bffd04 	addi	r2,r22,-12
 4007c38:	1104703a 	and	r2,r2,r4
 4007c3c:	2900004c 	andi	r4,r5,1
 4007c40:	2088b03a 	or	r4,r4,r2
 4007c44:	81000115 	stw	r4,4(r16)
 4007c48:	01400144 	movi	r5,5
 4007c4c:	8089883a 	add	r4,r16,r2
 4007c50:	21400115 	stw	r5,4(r4)
 4007c54:	21400215 	stw	r5,8(r4)
 4007c58:	3080cd36 	bltu	r6,r2,4007f90 <_malloc_r+0x794>
 4007c5c:	00810074 	movhi	r2,1025
 4007c60:	108ee604 	addi	r2,r2,15256
 4007c64:	11000017 	ldw	r4,0(r2)
 4007c68:	20c0012e 	bgeu	r4,r3,4007c70 <_malloc_r+0x474>
 4007c6c:	10c00015 	stw	r3,0(r2)
 4007c70:	00810074 	movhi	r2,1025
 4007c74:	108ee504 	addi	r2,r2,15252
 4007c78:	11000017 	ldw	r4,0(r2)
 4007c7c:	9c000217 	ldw	r16,8(r19)
 4007c80:	20c0012e 	bgeu	r4,r3,4007c88 <_malloc_r+0x48c>
 4007c84:	10c00015 	stw	r3,0(r2)
 4007c88:	80c00117 	ldw	r3,4(r16)
 4007c8c:	00bfff04 	movi	r2,-4
 4007c90:	1886703a 	and	r3,r3,r2
 4007c94:	1c45c83a 	sub	r2,r3,r17
 4007c98:	1c400236 	bltu	r3,r17,4007ca4 <_malloc_r+0x4a8>
 4007c9c:	00c003c4 	movi	r3,15
 4007ca0:	18800416 	blt	r3,r2,4007cb4 <_malloc_r+0x4b8>
 4007ca4:	9009883a 	mov	r4,r18
 4007ca8:	400e4840 	call	400e484 <__malloc_unlock>
 4007cac:	0005883a 	mov	r2,zero
 4007cb0:	003f7b06 	br	4007aa0 <__alt_data_end+0xfbfffaa0>
 4007cb4:	88c00054 	ori	r3,r17,1
 4007cb8:	80c00115 	stw	r3,4(r16)
 4007cbc:	8463883a 	add	r17,r16,r17
 4007cc0:	10800054 	ori	r2,r2,1
 4007cc4:	9c400215 	stw	r17,8(r19)
 4007cc8:	88800115 	stw	r2,4(r17)
 4007ccc:	9009883a 	mov	r4,r18
 4007cd0:	400e4840 	call	400e484 <__malloc_unlock>
 4007cd4:	80800204 	addi	r2,r16,8
 4007cd8:	003f7106 	br	4007aa0 <__alt_data_end+0xfbfffaa0>
 4007cdc:	00c00504 	movi	r3,20
 4007ce0:	18804a2e 	bgeu	r3,r2,4007e0c <_malloc_r+0x610>
 4007ce4:	00c01504 	movi	r3,84
 4007ce8:	18806e36 	bltu	r3,r2,4007ea4 <_malloc_r+0x6a8>
 4007cec:	8804d33a 	srli	r2,r17,12
 4007cf0:	12001bc4 	addi	r8,r2,111
 4007cf4:	11c01b84 	addi	r7,r2,110
 4007cf8:	4209883a 	add	r4,r8,r8
 4007cfc:	003edd06 	br	4007874 <__alt_data_end+0xfbfff874>
 4007d00:	3804d27a 	srli	r2,r7,9
 4007d04:	00c00104 	movi	r3,4
 4007d08:	1880442e 	bgeu	r3,r2,4007e1c <_malloc_r+0x620>
 4007d0c:	00c00504 	movi	r3,20
 4007d10:	18808136 	bltu	r3,r2,4007f18 <_malloc_r+0x71c>
 4007d14:	11401704 	addi	r5,r2,92
 4007d18:	10c016c4 	addi	r3,r2,91
 4007d1c:	294b883a 	add	r5,r5,r5
 4007d20:	294b883a 	add	r5,r5,r5
 4007d24:	294b883a 	add	r5,r5,r5
 4007d28:	994b883a 	add	r5,r19,r5
 4007d2c:	28800017 	ldw	r2,0(r5)
 4007d30:	01810074 	movhi	r6,1025
 4007d34:	297ffe04 	addi	r5,r5,-8
 4007d38:	31828f04 	addi	r6,r6,2620
 4007d3c:	28806526 	beq	r5,r2,4007ed4 <_malloc_r+0x6d8>
 4007d40:	01bfff04 	movi	r6,-4
 4007d44:	10c00117 	ldw	r3,4(r2)
 4007d48:	1986703a 	and	r3,r3,r6
 4007d4c:	38c0022e 	bgeu	r7,r3,4007d58 <_malloc_r+0x55c>
 4007d50:	10800217 	ldw	r2,8(r2)
 4007d54:	28bffb1e 	bne	r5,r2,4007d44 <__alt_data_end+0xfbfffd44>
 4007d58:	11400317 	ldw	r5,12(r2)
 4007d5c:	98c00117 	ldw	r3,4(r19)
 4007d60:	81400315 	stw	r5,12(r16)
 4007d64:	80800215 	stw	r2,8(r16)
 4007d68:	2c000215 	stw	r16,8(r5)
 4007d6c:	14000315 	stw	r16,12(r2)
 4007d70:	003ef806 	br	4007954 <__alt_data_end+0xfbfff954>
 4007d74:	88c00054 	ori	r3,r17,1
 4007d78:	80c00115 	stw	r3,4(r16)
 4007d7c:	8463883a 	add	r17,r16,r17
 4007d80:	34400515 	stw	r17,20(r6)
 4007d84:	34400415 	stw	r17,16(r6)
 4007d88:	10c00054 	ori	r3,r2,1
 4007d8c:	8a000315 	stw	r8,12(r17)
 4007d90:	8a000215 	stw	r8,8(r17)
 4007d94:	88c00115 	stw	r3,4(r17)
 4007d98:	88a3883a 	add	r17,r17,r2
 4007d9c:	88800015 	stw	r2,0(r17)
 4007da0:	9009883a 	mov	r4,r18
 4007da4:	400e4840 	call	400e484 <__malloc_unlock>
 4007da8:	80800204 	addi	r2,r16,8
 4007dac:	003f3c06 	br	4007aa0 <__alt_data_end+0xfbfffaa0>
 4007db0:	30c00117 	ldw	r3,4(r6)
 4007db4:	003ee706 	br	4007954 <__alt_data_end+0xfbfff954>
 4007db8:	5ac00044 	addi	r11,r11,1
 4007dbc:	588000cc 	andi	r2,r11,3
 4007dc0:	31800204 	addi	r6,r6,8
 4007dc4:	103efd1e 	bne	r2,zero,40079bc <__alt_data_end+0xfbfff9bc>
 4007dc8:	00002406 	br	4007e5c <_malloc_r+0x660>
 4007dcc:	14000317 	ldw	r16,12(r2)
 4007dd0:	143f251e 	bne	r2,r16,4007a68 <__alt_data_end+0xfbfffa68>
 4007dd4:	21000084 	addi	r4,r4,2
 4007dd8:	003ebc06 	br	40078cc <__alt_data_end+0xfbfff8cc>
 4007ddc:	8085883a 	add	r2,r16,r2
 4007de0:	10c00117 	ldw	r3,4(r2)
 4007de4:	81000317 	ldw	r4,12(r16)
 4007de8:	81400217 	ldw	r5,8(r16)
 4007dec:	18c00054 	ori	r3,r3,1
 4007df0:	10c00115 	stw	r3,4(r2)
 4007df4:	29000315 	stw	r4,12(r5)
 4007df8:	21400215 	stw	r5,8(r4)
 4007dfc:	9009883a 	mov	r4,r18
 4007e00:	400e4840 	call	400e484 <__malloc_unlock>
 4007e04:	80800204 	addi	r2,r16,8
 4007e08:	003f2506 	br	4007aa0 <__alt_data_end+0xfbfffaa0>
 4007e0c:	12001704 	addi	r8,r2,92
 4007e10:	11c016c4 	addi	r7,r2,91
 4007e14:	4209883a 	add	r4,r8,r8
 4007e18:	003e9606 	br	4007874 <__alt_data_end+0xfbfff874>
 4007e1c:	3804d1ba 	srli	r2,r7,6
 4007e20:	11400e44 	addi	r5,r2,57
 4007e24:	10c00e04 	addi	r3,r2,56
 4007e28:	294b883a 	add	r5,r5,r5
 4007e2c:	003fbc06 	br	4007d20 <__alt_data_end+0xfbfffd20>
 4007e30:	84ff5926 	beq	r16,r19,4007b98 <__alt_data_end+0xfbfffb98>
 4007e34:	00810074 	movhi	r2,1025
 4007e38:	10828f04 	addi	r2,r2,2620
 4007e3c:	14000217 	ldw	r16,8(r2)
 4007e40:	00bfff04 	movi	r2,-4
 4007e44:	80c00117 	ldw	r3,4(r16)
 4007e48:	1886703a 	and	r3,r3,r2
 4007e4c:	003f9106 	br	4007c94 <__alt_data_end+0xfbfffc94>
 4007e50:	60800217 	ldw	r2,8(r12)
 4007e54:	213fffc4 	addi	r4,r4,-1
 4007e58:	1300651e 	bne	r2,r12,4007ff0 <_malloc_r+0x7f4>
 4007e5c:	208000cc 	andi	r2,r4,3
 4007e60:	633ffe04 	addi	r12,r12,-8
 4007e64:	103ffa1e 	bne	r2,zero,4007e50 <__alt_data_end+0xfbfffe50>
 4007e68:	98800117 	ldw	r2,4(r19)
 4007e6c:	0146303a 	nor	r3,zero,r5
 4007e70:	1884703a 	and	r2,r3,r2
 4007e74:	98800115 	stw	r2,4(r19)
 4007e78:	294b883a 	add	r5,r5,r5
 4007e7c:	117f2836 	bltu	r2,r5,4007b20 <__alt_data_end+0xfbfffb20>
 4007e80:	283f2726 	beq	r5,zero,4007b20 <__alt_data_end+0xfbfffb20>
 4007e84:	2886703a 	and	r3,r5,r2
 4007e88:	5809883a 	mov	r4,r11
 4007e8c:	183ec31e 	bne	r3,zero,400799c <__alt_data_end+0xfbfff99c>
 4007e90:	294b883a 	add	r5,r5,r5
 4007e94:	2886703a 	and	r3,r5,r2
 4007e98:	21000104 	addi	r4,r4,4
 4007e9c:	183ffc26 	beq	r3,zero,4007e90 <__alt_data_end+0xfbfffe90>
 4007ea0:	003ebe06 	br	400799c <__alt_data_end+0xfbfff99c>
 4007ea4:	00c05504 	movi	r3,340
 4007ea8:	18801236 	bltu	r3,r2,4007ef4 <_malloc_r+0x6f8>
 4007eac:	8804d3fa 	srli	r2,r17,15
 4007eb0:	12001e04 	addi	r8,r2,120
 4007eb4:	11c01dc4 	addi	r7,r2,119
 4007eb8:	4209883a 	add	r4,r8,r8
 4007ebc:	003e6d06 	br	4007874 <__alt_data_end+0xfbfff874>
 4007ec0:	00c40004 	movi	r3,4096
 4007ec4:	003f4606 	br	4007be0 <__alt_data_end+0xfbfffbe0>
 4007ec8:	00800044 	movi	r2,1
 4007ecc:	a0800115 	stw	r2,4(r20)
 4007ed0:	003f7406 	br	4007ca4 <__alt_data_end+0xfbfffca4>
 4007ed4:	1805d0ba 	srai	r2,r3,2
 4007ed8:	01c00044 	movi	r7,1
 4007edc:	30c00117 	ldw	r3,4(r6)
 4007ee0:	388e983a 	sll	r7,r7,r2
 4007ee4:	2805883a 	mov	r2,r5
 4007ee8:	38c6b03a 	or	r3,r7,r3
 4007eec:	30c00115 	stw	r3,4(r6)
 4007ef0:	003f9b06 	br	4007d60 <__alt_data_end+0xfbfffd60>
 4007ef4:	00c15504 	movi	r3,1364
 4007ef8:	18801a36 	bltu	r3,r2,4007f64 <_malloc_r+0x768>
 4007efc:	8804d4ba 	srli	r2,r17,18
 4007f00:	12001f44 	addi	r8,r2,125
 4007f04:	11c01f04 	addi	r7,r2,124
 4007f08:	4209883a 	add	r4,r8,r8
 4007f0c:	003e5906 	br	4007874 <__alt_data_end+0xfbfff874>
 4007f10:	ad400404 	addi	r21,r21,16
 4007f14:	003f1706 	br	4007b74 <__alt_data_end+0xfbfffb74>
 4007f18:	00c01504 	movi	r3,84
 4007f1c:	18802336 	bltu	r3,r2,4007fac <_malloc_r+0x7b0>
 4007f20:	3804d33a 	srli	r2,r7,12
 4007f24:	11401bc4 	addi	r5,r2,111
 4007f28:	10c01b84 	addi	r3,r2,110
 4007f2c:	294b883a 	add	r5,r5,r5
 4007f30:	003f7b06 	br	4007d20 <__alt_data_end+0xfbfffd20>
 4007f34:	9c000217 	ldw	r16,8(r19)
 4007f38:	00bfff04 	movi	r2,-4
 4007f3c:	80c00117 	ldw	r3,4(r16)
 4007f40:	1886703a 	and	r3,r3,r2
 4007f44:	003f5306 	br	4007c94 <__alt_data_end+0xfbfffc94>
 4007f48:	3083ffcc 	andi	r2,r6,4095
 4007f4c:	103f181e 	bne	r2,zero,4007bb0 <__alt_data_end+0xfbfffbb0>
 4007f50:	99000217 	ldw	r4,8(r19)
 4007f54:	b545883a 	add	r2,r22,r21
 4007f58:	10800054 	ori	r2,r2,1
 4007f5c:	20800115 	stw	r2,4(r4)
 4007f60:	003f3e06 	br	4007c5c <__alt_data_end+0xfbfffc5c>
 4007f64:	01003f84 	movi	r4,254
 4007f68:	02001fc4 	movi	r8,127
 4007f6c:	01c01f84 	movi	r7,126
 4007f70:	003e4006 	br	4007874 <__alt_data_end+0xfbfff874>
 4007f74:	00810074 	movhi	r2,1025
 4007f78:	10881604 	addi	r2,r2,8280
 4007f7c:	15000015 	stw	r20,0(r2)
 4007f80:	003f1106 	br	4007bc8 <__alt_data_end+0xfbfffbc8>
 4007f84:	00800044 	movi	r2,1
 4007f88:	002b883a 	mov	r21,zero
 4007f8c:	003f1f06 	br	4007c0c <__alt_data_end+0xfbfffc0c>
 4007f90:	81400204 	addi	r5,r16,8
 4007f94:	9009883a 	mov	r4,r18
 4007f98:	4006c100 	call	4006c10 <_free_r>
 4007f9c:	00810074 	movhi	r2,1025
 4007fa0:	108ef104 	addi	r2,r2,15300
 4007fa4:	10c00017 	ldw	r3,0(r2)
 4007fa8:	003f2c06 	br	4007c5c <__alt_data_end+0xfbfffc5c>
 4007fac:	00c05504 	movi	r3,340
 4007fb0:	18800536 	bltu	r3,r2,4007fc8 <_malloc_r+0x7cc>
 4007fb4:	3804d3fa 	srli	r2,r7,15
 4007fb8:	11401e04 	addi	r5,r2,120
 4007fbc:	10c01dc4 	addi	r3,r2,119
 4007fc0:	294b883a 	add	r5,r5,r5
 4007fc4:	003f5606 	br	4007d20 <__alt_data_end+0xfbfffd20>
 4007fc8:	00c15504 	movi	r3,1364
 4007fcc:	18800536 	bltu	r3,r2,4007fe4 <_malloc_r+0x7e8>
 4007fd0:	3804d4ba 	srli	r2,r7,18
 4007fd4:	11401f44 	addi	r5,r2,125
 4007fd8:	10c01f04 	addi	r3,r2,124
 4007fdc:	294b883a 	add	r5,r5,r5
 4007fe0:	003f4f06 	br	4007d20 <__alt_data_end+0xfbfffd20>
 4007fe4:	01403f84 	movi	r5,254
 4007fe8:	00c01f84 	movi	r3,126
 4007fec:	003f4c06 	br	4007d20 <__alt_data_end+0xfbfffd20>
 4007ff0:	98800117 	ldw	r2,4(r19)
 4007ff4:	003fa006 	br	4007e78 <__alt_data_end+0xfbfffe78>
 4007ff8:	8808d0fa 	srli	r4,r17,3
 4007ffc:	20800044 	addi	r2,r4,1
 4008000:	1085883a 	add	r2,r2,r2
 4008004:	003e9006 	br	4007a48 <__alt_data_end+0xfbfffa48>

04008008 <memchr>:
 4008008:	208000cc 	andi	r2,r4,3
 400800c:	280f883a 	mov	r7,r5
 4008010:	10003426 	beq	r2,zero,40080e4 <memchr+0xdc>
 4008014:	30bfffc4 	addi	r2,r6,-1
 4008018:	30001a26 	beq	r6,zero,4008084 <memchr+0x7c>
 400801c:	20c00003 	ldbu	r3,0(r4)
 4008020:	29803fcc 	andi	r6,r5,255
 4008024:	30c0051e 	bne	r6,r3,400803c <memchr+0x34>
 4008028:	00001806 	br	400808c <memchr+0x84>
 400802c:	10001526 	beq	r2,zero,4008084 <memchr+0x7c>
 4008030:	20c00003 	ldbu	r3,0(r4)
 4008034:	10bfffc4 	addi	r2,r2,-1
 4008038:	30c01426 	beq	r6,r3,400808c <memchr+0x84>
 400803c:	21000044 	addi	r4,r4,1
 4008040:	20c000cc 	andi	r3,r4,3
 4008044:	183ff91e 	bne	r3,zero,400802c <__alt_data_end+0xfc00002c>
 4008048:	020000c4 	movi	r8,3
 400804c:	40801136 	bltu	r8,r2,4008094 <memchr+0x8c>
 4008050:	10000c26 	beq	r2,zero,4008084 <memchr+0x7c>
 4008054:	20c00003 	ldbu	r3,0(r4)
 4008058:	29403fcc 	andi	r5,r5,255
 400805c:	28c00b26 	beq	r5,r3,400808c <memchr+0x84>
 4008060:	20c00044 	addi	r3,r4,1
 4008064:	39803fcc 	andi	r6,r7,255
 4008068:	2089883a 	add	r4,r4,r2
 400806c:	00000306 	br	400807c <memchr+0x74>
 4008070:	18c00044 	addi	r3,r3,1
 4008074:	197fffc3 	ldbu	r5,-1(r3)
 4008078:	31400526 	beq	r6,r5,4008090 <memchr+0x88>
 400807c:	1805883a 	mov	r2,r3
 4008080:	20fffb1e 	bne	r4,r3,4008070 <__alt_data_end+0xfc000070>
 4008084:	0005883a 	mov	r2,zero
 4008088:	f800283a 	ret
 400808c:	2005883a 	mov	r2,r4
 4008090:	f800283a 	ret
 4008094:	28c03fcc 	andi	r3,r5,255
 4008098:	1812923a 	slli	r9,r3,8
 400809c:	02ffbff4 	movhi	r11,65279
 40080a0:	02a02074 	movhi	r10,32897
 40080a4:	48d2b03a 	or	r9,r9,r3
 40080a8:	4806943a 	slli	r3,r9,16
 40080ac:	5affbfc4 	addi	r11,r11,-257
 40080b0:	52a02004 	addi	r10,r10,-32640
 40080b4:	48d2b03a 	or	r9,r9,r3
 40080b8:	20c00017 	ldw	r3,0(r4)
 40080bc:	48c6f03a 	xor	r3,r9,r3
 40080c0:	1acd883a 	add	r6,r3,r11
 40080c4:	00c6303a 	nor	r3,zero,r3
 40080c8:	30c6703a 	and	r3,r6,r3
 40080cc:	1a86703a 	and	r3,r3,r10
 40080d0:	183fe01e 	bne	r3,zero,4008054 <__alt_data_end+0xfc000054>
 40080d4:	10bfff04 	addi	r2,r2,-4
 40080d8:	21000104 	addi	r4,r4,4
 40080dc:	40bff636 	bltu	r8,r2,40080b8 <__alt_data_end+0xfc0000b8>
 40080e0:	003fdb06 	br	4008050 <__alt_data_end+0xfc000050>
 40080e4:	3005883a 	mov	r2,r6
 40080e8:	003fd706 	br	4008048 <__alt_data_end+0xfc000048>

040080ec <memcpy>:
 40080ec:	defffd04 	addi	sp,sp,-12
 40080f0:	dfc00215 	stw	ra,8(sp)
 40080f4:	dc400115 	stw	r17,4(sp)
 40080f8:	dc000015 	stw	r16,0(sp)
 40080fc:	00c003c4 	movi	r3,15
 4008100:	2005883a 	mov	r2,r4
 4008104:	1980452e 	bgeu	r3,r6,400821c <memcpy+0x130>
 4008108:	2906b03a 	or	r3,r5,r4
 400810c:	18c000cc 	andi	r3,r3,3
 4008110:	1800441e 	bne	r3,zero,4008224 <memcpy+0x138>
 4008114:	347ffc04 	addi	r17,r6,-16
 4008118:	8822d13a 	srli	r17,r17,4
 400811c:	28c00104 	addi	r3,r5,4
 4008120:	23400104 	addi	r13,r4,4
 4008124:	8820913a 	slli	r16,r17,4
 4008128:	2b000204 	addi	r12,r5,8
 400812c:	22c00204 	addi	r11,r4,8
 4008130:	84000504 	addi	r16,r16,20
 4008134:	2a800304 	addi	r10,r5,12
 4008138:	22400304 	addi	r9,r4,12
 400813c:	2c21883a 	add	r16,r5,r16
 4008140:	2811883a 	mov	r8,r5
 4008144:	200f883a 	mov	r7,r4
 4008148:	41000017 	ldw	r4,0(r8)
 400814c:	1fc00017 	ldw	ra,0(r3)
 4008150:	63c00017 	ldw	r15,0(r12)
 4008154:	39000015 	stw	r4,0(r7)
 4008158:	53800017 	ldw	r14,0(r10)
 400815c:	6fc00015 	stw	ra,0(r13)
 4008160:	5bc00015 	stw	r15,0(r11)
 4008164:	4b800015 	stw	r14,0(r9)
 4008168:	18c00404 	addi	r3,r3,16
 400816c:	39c00404 	addi	r7,r7,16
 4008170:	42000404 	addi	r8,r8,16
 4008174:	6b400404 	addi	r13,r13,16
 4008178:	63000404 	addi	r12,r12,16
 400817c:	5ac00404 	addi	r11,r11,16
 4008180:	52800404 	addi	r10,r10,16
 4008184:	4a400404 	addi	r9,r9,16
 4008188:	1c3fef1e 	bne	r3,r16,4008148 <__alt_data_end+0xfc000148>
 400818c:	89c00044 	addi	r7,r17,1
 4008190:	380e913a 	slli	r7,r7,4
 4008194:	310003cc 	andi	r4,r6,15
 4008198:	02c000c4 	movi	r11,3
 400819c:	11c7883a 	add	r3,r2,r7
 40081a0:	29cb883a 	add	r5,r5,r7
 40081a4:	5900212e 	bgeu	r11,r4,400822c <memcpy+0x140>
 40081a8:	1813883a 	mov	r9,r3
 40081ac:	2811883a 	mov	r8,r5
 40081b0:	200f883a 	mov	r7,r4
 40081b4:	42800017 	ldw	r10,0(r8)
 40081b8:	4a400104 	addi	r9,r9,4
 40081bc:	39ffff04 	addi	r7,r7,-4
 40081c0:	4abfff15 	stw	r10,-4(r9)
 40081c4:	42000104 	addi	r8,r8,4
 40081c8:	59fffa36 	bltu	r11,r7,40081b4 <__alt_data_end+0xfc0001b4>
 40081cc:	213fff04 	addi	r4,r4,-4
 40081d0:	2008d0ba 	srli	r4,r4,2
 40081d4:	318000cc 	andi	r6,r6,3
 40081d8:	21000044 	addi	r4,r4,1
 40081dc:	2109883a 	add	r4,r4,r4
 40081e0:	2109883a 	add	r4,r4,r4
 40081e4:	1907883a 	add	r3,r3,r4
 40081e8:	290b883a 	add	r5,r5,r4
 40081ec:	30000626 	beq	r6,zero,4008208 <memcpy+0x11c>
 40081f0:	198d883a 	add	r6,r3,r6
 40081f4:	29c00003 	ldbu	r7,0(r5)
 40081f8:	18c00044 	addi	r3,r3,1
 40081fc:	29400044 	addi	r5,r5,1
 4008200:	19ffffc5 	stb	r7,-1(r3)
 4008204:	19bffb1e 	bne	r3,r6,40081f4 <__alt_data_end+0xfc0001f4>
 4008208:	dfc00217 	ldw	ra,8(sp)
 400820c:	dc400117 	ldw	r17,4(sp)
 4008210:	dc000017 	ldw	r16,0(sp)
 4008214:	dec00304 	addi	sp,sp,12
 4008218:	f800283a 	ret
 400821c:	2007883a 	mov	r3,r4
 4008220:	003ff206 	br	40081ec <__alt_data_end+0xfc0001ec>
 4008224:	2007883a 	mov	r3,r4
 4008228:	003ff106 	br	40081f0 <__alt_data_end+0xfc0001f0>
 400822c:	200d883a 	mov	r6,r4
 4008230:	003fee06 	br	40081ec <__alt_data_end+0xfc0001ec>

04008234 <memmove>:
 4008234:	2005883a 	mov	r2,r4
 4008238:	29000b2e 	bgeu	r5,r4,4008268 <memmove+0x34>
 400823c:	298f883a 	add	r7,r5,r6
 4008240:	21c0092e 	bgeu	r4,r7,4008268 <memmove+0x34>
 4008244:	2187883a 	add	r3,r4,r6
 4008248:	198bc83a 	sub	r5,r3,r6
 400824c:	30004826 	beq	r6,zero,4008370 <memmove+0x13c>
 4008250:	39ffffc4 	addi	r7,r7,-1
 4008254:	39000003 	ldbu	r4,0(r7)
 4008258:	18ffffc4 	addi	r3,r3,-1
 400825c:	19000005 	stb	r4,0(r3)
 4008260:	28fffb1e 	bne	r5,r3,4008250 <__alt_data_end+0xfc000250>
 4008264:	f800283a 	ret
 4008268:	00c003c4 	movi	r3,15
 400826c:	1980412e 	bgeu	r3,r6,4008374 <memmove+0x140>
 4008270:	2886b03a 	or	r3,r5,r2
 4008274:	18c000cc 	andi	r3,r3,3
 4008278:	1800401e 	bne	r3,zero,400837c <memmove+0x148>
 400827c:	33fffc04 	addi	r15,r6,-16
 4008280:	781ed13a 	srli	r15,r15,4
 4008284:	28c00104 	addi	r3,r5,4
 4008288:	13400104 	addi	r13,r2,4
 400828c:	781c913a 	slli	r14,r15,4
 4008290:	2b000204 	addi	r12,r5,8
 4008294:	12c00204 	addi	r11,r2,8
 4008298:	73800504 	addi	r14,r14,20
 400829c:	2a800304 	addi	r10,r5,12
 40082a0:	12400304 	addi	r9,r2,12
 40082a4:	2b9d883a 	add	r14,r5,r14
 40082a8:	2811883a 	mov	r8,r5
 40082ac:	100f883a 	mov	r7,r2
 40082b0:	41000017 	ldw	r4,0(r8)
 40082b4:	39c00404 	addi	r7,r7,16
 40082b8:	18c00404 	addi	r3,r3,16
 40082bc:	393ffc15 	stw	r4,-16(r7)
 40082c0:	193ffc17 	ldw	r4,-16(r3)
 40082c4:	6b400404 	addi	r13,r13,16
 40082c8:	5ac00404 	addi	r11,r11,16
 40082cc:	693ffc15 	stw	r4,-16(r13)
 40082d0:	61000017 	ldw	r4,0(r12)
 40082d4:	4a400404 	addi	r9,r9,16
 40082d8:	42000404 	addi	r8,r8,16
 40082dc:	593ffc15 	stw	r4,-16(r11)
 40082e0:	51000017 	ldw	r4,0(r10)
 40082e4:	63000404 	addi	r12,r12,16
 40082e8:	52800404 	addi	r10,r10,16
 40082ec:	493ffc15 	stw	r4,-16(r9)
 40082f0:	1bbfef1e 	bne	r3,r14,40082b0 <__alt_data_end+0xfc0002b0>
 40082f4:	79000044 	addi	r4,r15,1
 40082f8:	2008913a 	slli	r4,r4,4
 40082fc:	328003cc 	andi	r10,r6,15
 4008300:	02c000c4 	movi	r11,3
 4008304:	1107883a 	add	r3,r2,r4
 4008308:	290b883a 	add	r5,r5,r4
 400830c:	5a801e2e 	bgeu	r11,r10,4008388 <memmove+0x154>
 4008310:	1813883a 	mov	r9,r3
 4008314:	2811883a 	mov	r8,r5
 4008318:	500f883a 	mov	r7,r10
 400831c:	41000017 	ldw	r4,0(r8)
 4008320:	4a400104 	addi	r9,r9,4
 4008324:	39ffff04 	addi	r7,r7,-4
 4008328:	493fff15 	stw	r4,-4(r9)
 400832c:	42000104 	addi	r8,r8,4
 4008330:	59fffa36 	bltu	r11,r7,400831c <__alt_data_end+0xfc00031c>
 4008334:	513fff04 	addi	r4,r10,-4
 4008338:	2008d0ba 	srli	r4,r4,2
 400833c:	318000cc 	andi	r6,r6,3
 4008340:	21000044 	addi	r4,r4,1
 4008344:	2109883a 	add	r4,r4,r4
 4008348:	2109883a 	add	r4,r4,r4
 400834c:	1907883a 	add	r3,r3,r4
 4008350:	290b883a 	add	r5,r5,r4
 4008354:	30000b26 	beq	r6,zero,4008384 <memmove+0x150>
 4008358:	198d883a 	add	r6,r3,r6
 400835c:	29c00003 	ldbu	r7,0(r5)
 4008360:	18c00044 	addi	r3,r3,1
 4008364:	29400044 	addi	r5,r5,1
 4008368:	19ffffc5 	stb	r7,-1(r3)
 400836c:	19bffb1e 	bne	r3,r6,400835c <__alt_data_end+0xfc00035c>
 4008370:	f800283a 	ret
 4008374:	1007883a 	mov	r3,r2
 4008378:	003ff606 	br	4008354 <__alt_data_end+0xfc000354>
 400837c:	1007883a 	mov	r3,r2
 4008380:	003ff506 	br	4008358 <__alt_data_end+0xfc000358>
 4008384:	f800283a 	ret
 4008388:	500d883a 	mov	r6,r10
 400838c:	003ff106 	br	4008354 <__alt_data_end+0xfc000354>

04008390 <memset>:
 4008390:	20c000cc 	andi	r3,r4,3
 4008394:	2005883a 	mov	r2,r4
 4008398:	18004426 	beq	r3,zero,40084ac <memset+0x11c>
 400839c:	31ffffc4 	addi	r7,r6,-1
 40083a0:	30004026 	beq	r6,zero,40084a4 <memset+0x114>
 40083a4:	2813883a 	mov	r9,r5
 40083a8:	200d883a 	mov	r6,r4
 40083ac:	2007883a 	mov	r3,r4
 40083b0:	00000406 	br	40083c4 <memset+0x34>
 40083b4:	3a3fffc4 	addi	r8,r7,-1
 40083b8:	31800044 	addi	r6,r6,1
 40083bc:	38003926 	beq	r7,zero,40084a4 <memset+0x114>
 40083c0:	400f883a 	mov	r7,r8
 40083c4:	18c00044 	addi	r3,r3,1
 40083c8:	32400005 	stb	r9,0(r6)
 40083cc:	1a0000cc 	andi	r8,r3,3
 40083d0:	403ff81e 	bne	r8,zero,40083b4 <__alt_data_end+0xfc0003b4>
 40083d4:	010000c4 	movi	r4,3
 40083d8:	21c02d2e 	bgeu	r4,r7,4008490 <memset+0x100>
 40083dc:	29003fcc 	andi	r4,r5,255
 40083e0:	200c923a 	slli	r6,r4,8
 40083e4:	3108b03a 	or	r4,r6,r4
 40083e8:	200c943a 	slli	r6,r4,16
 40083ec:	218cb03a 	or	r6,r4,r6
 40083f0:	010003c4 	movi	r4,15
 40083f4:	21c0182e 	bgeu	r4,r7,4008458 <memset+0xc8>
 40083f8:	3b3ffc04 	addi	r12,r7,-16
 40083fc:	6018d13a 	srli	r12,r12,4
 4008400:	1a000104 	addi	r8,r3,4
 4008404:	1ac00204 	addi	r11,r3,8
 4008408:	6008913a 	slli	r4,r12,4
 400840c:	1a800304 	addi	r10,r3,12
 4008410:	1813883a 	mov	r9,r3
 4008414:	21000504 	addi	r4,r4,20
 4008418:	1909883a 	add	r4,r3,r4
 400841c:	49800015 	stw	r6,0(r9)
 4008420:	41800015 	stw	r6,0(r8)
 4008424:	59800015 	stw	r6,0(r11)
 4008428:	51800015 	stw	r6,0(r10)
 400842c:	42000404 	addi	r8,r8,16
 4008430:	4a400404 	addi	r9,r9,16
 4008434:	5ac00404 	addi	r11,r11,16
 4008438:	52800404 	addi	r10,r10,16
 400843c:	413ff71e 	bne	r8,r4,400841c <__alt_data_end+0xfc00041c>
 4008440:	63000044 	addi	r12,r12,1
 4008444:	6018913a 	slli	r12,r12,4
 4008448:	39c003cc 	andi	r7,r7,15
 400844c:	010000c4 	movi	r4,3
 4008450:	1b07883a 	add	r3,r3,r12
 4008454:	21c00e2e 	bgeu	r4,r7,4008490 <memset+0x100>
 4008458:	1813883a 	mov	r9,r3
 400845c:	3811883a 	mov	r8,r7
 4008460:	010000c4 	movi	r4,3
 4008464:	49800015 	stw	r6,0(r9)
 4008468:	423fff04 	addi	r8,r8,-4
 400846c:	4a400104 	addi	r9,r9,4
 4008470:	223ffc36 	bltu	r4,r8,4008464 <__alt_data_end+0xfc000464>
 4008474:	393fff04 	addi	r4,r7,-4
 4008478:	2008d0ba 	srli	r4,r4,2
 400847c:	39c000cc 	andi	r7,r7,3
 4008480:	21000044 	addi	r4,r4,1
 4008484:	2109883a 	add	r4,r4,r4
 4008488:	2109883a 	add	r4,r4,r4
 400848c:	1907883a 	add	r3,r3,r4
 4008490:	38000526 	beq	r7,zero,40084a8 <memset+0x118>
 4008494:	19cf883a 	add	r7,r3,r7
 4008498:	19400005 	stb	r5,0(r3)
 400849c:	18c00044 	addi	r3,r3,1
 40084a0:	38fffd1e 	bne	r7,r3,4008498 <__alt_data_end+0xfc000498>
 40084a4:	f800283a 	ret
 40084a8:	f800283a 	ret
 40084ac:	2007883a 	mov	r3,r4
 40084b0:	300f883a 	mov	r7,r6
 40084b4:	003fc706 	br	40083d4 <__alt_data_end+0xfc0003d4>

040084b8 <_Balloc>:
 40084b8:	20801317 	ldw	r2,76(r4)
 40084bc:	defffc04 	addi	sp,sp,-16
 40084c0:	dc400115 	stw	r17,4(sp)
 40084c4:	dc000015 	stw	r16,0(sp)
 40084c8:	dfc00315 	stw	ra,12(sp)
 40084cc:	dc800215 	stw	r18,8(sp)
 40084d0:	2023883a 	mov	r17,r4
 40084d4:	2821883a 	mov	r16,r5
 40084d8:	10000f26 	beq	r2,zero,4008518 <_Balloc+0x60>
 40084dc:	8407883a 	add	r3,r16,r16
 40084e0:	18c7883a 	add	r3,r3,r3
 40084e4:	10c7883a 	add	r3,r2,r3
 40084e8:	18800017 	ldw	r2,0(r3)
 40084ec:	10001126 	beq	r2,zero,4008534 <_Balloc+0x7c>
 40084f0:	11000017 	ldw	r4,0(r2)
 40084f4:	19000015 	stw	r4,0(r3)
 40084f8:	10000415 	stw	zero,16(r2)
 40084fc:	10000315 	stw	zero,12(r2)
 4008500:	dfc00317 	ldw	ra,12(sp)
 4008504:	dc800217 	ldw	r18,8(sp)
 4008508:	dc400117 	ldw	r17,4(sp)
 400850c:	dc000017 	ldw	r16,0(sp)
 4008510:	dec00404 	addi	sp,sp,16
 4008514:	f800283a 	ret
 4008518:	01800844 	movi	r6,33
 400851c:	01400104 	movi	r5,4
 4008520:	400b6b40 	call	400b6b4 <_calloc_r>
 4008524:	88801315 	stw	r2,76(r17)
 4008528:	103fec1e 	bne	r2,zero,40084dc <__alt_data_end+0xfc0004dc>
 400852c:	0005883a 	mov	r2,zero
 4008530:	003ff306 	br	4008500 <__alt_data_end+0xfc000500>
 4008534:	01400044 	movi	r5,1
 4008538:	2c24983a 	sll	r18,r5,r16
 400853c:	8809883a 	mov	r4,r17
 4008540:	91800144 	addi	r6,r18,5
 4008544:	318d883a 	add	r6,r6,r6
 4008548:	318d883a 	add	r6,r6,r6
 400854c:	400b6b40 	call	400b6b4 <_calloc_r>
 4008550:	103ff626 	beq	r2,zero,400852c <__alt_data_end+0xfc00052c>
 4008554:	14000115 	stw	r16,4(r2)
 4008558:	14800215 	stw	r18,8(r2)
 400855c:	003fe606 	br	40084f8 <__alt_data_end+0xfc0004f8>

04008560 <_Bfree>:
 4008560:	28000826 	beq	r5,zero,4008584 <_Bfree+0x24>
 4008564:	28c00117 	ldw	r3,4(r5)
 4008568:	20801317 	ldw	r2,76(r4)
 400856c:	18c7883a 	add	r3,r3,r3
 4008570:	18c7883a 	add	r3,r3,r3
 4008574:	10c5883a 	add	r2,r2,r3
 4008578:	10c00017 	ldw	r3,0(r2)
 400857c:	28c00015 	stw	r3,0(r5)
 4008580:	11400015 	stw	r5,0(r2)
 4008584:	f800283a 	ret

04008588 <__multadd>:
 4008588:	defffa04 	addi	sp,sp,-24
 400858c:	dc800315 	stw	r18,12(sp)
 4008590:	dc400215 	stw	r17,8(sp)
 4008594:	dc000115 	stw	r16,4(sp)
 4008598:	2823883a 	mov	r17,r5
 400859c:	2c000417 	ldw	r16,16(r5)
 40085a0:	dfc00515 	stw	ra,20(sp)
 40085a4:	dcc00415 	stw	r19,16(sp)
 40085a8:	2025883a 	mov	r18,r4
 40085ac:	29400504 	addi	r5,r5,20
 40085b0:	0011883a 	mov	r8,zero
 40085b4:	28c00017 	ldw	r3,0(r5)
 40085b8:	29400104 	addi	r5,r5,4
 40085bc:	42000044 	addi	r8,r8,1
 40085c0:	18bfffcc 	andi	r2,r3,65535
 40085c4:	1185383a 	mul	r2,r2,r6
 40085c8:	1806d43a 	srli	r3,r3,16
 40085cc:	11cf883a 	add	r7,r2,r7
 40085d0:	3808d43a 	srli	r4,r7,16
 40085d4:	1987383a 	mul	r3,r3,r6
 40085d8:	38bfffcc 	andi	r2,r7,65535
 40085dc:	1907883a 	add	r3,r3,r4
 40085e0:	1808943a 	slli	r4,r3,16
 40085e4:	180ed43a 	srli	r7,r3,16
 40085e8:	2085883a 	add	r2,r4,r2
 40085ec:	28bfff15 	stw	r2,-4(r5)
 40085f0:	443ff016 	blt	r8,r16,40085b4 <__alt_data_end+0xfc0005b4>
 40085f4:	38000926 	beq	r7,zero,400861c <__multadd+0x94>
 40085f8:	88800217 	ldw	r2,8(r17)
 40085fc:	80800f0e 	bge	r16,r2,400863c <__multadd+0xb4>
 4008600:	80800144 	addi	r2,r16,5
 4008604:	1085883a 	add	r2,r2,r2
 4008608:	1085883a 	add	r2,r2,r2
 400860c:	8885883a 	add	r2,r17,r2
 4008610:	11c00015 	stw	r7,0(r2)
 4008614:	84000044 	addi	r16,r16,1
 4008618:	8c000415 	stw	r16,16(r17)
 400861c:	8805883a 	mov	r2,r17
 4008620:	dfc00517 	ldw	ra,20(sp)
 4008624:	dcc00417 	ldw	r19,16(sp)
 4008628:	dc800317 	ldw	r18,12(sp)
 400862c:	dc400217 	ldw	r17,8(sp)
 4008630:	dc000117 	ldw	r16,4(sp)
 4008634:	dec00604 	addi	sp,sp,24
 4008638:	f800283a 	ret
 400863c:	89400117 	ldw	r5,4(r17)
 4008640:	9009883a 	mov	r4,r18
 4008644:	d9c00015 	stw	r7,0(sp)
 4008648:	29400044 	addi	r5,r5,1
 400864c:	40084b80 	call	40084b8 <_Balloc>
 4008650:	89800417 	ldw	r6,16(r17)
 4008654:	89400304 	addi	r5,r17,12
 4008658:	11000304 	addi	r4,r2,12
 400865c:	31800084 	addi	r6,r6,2
 4008660:	318d883a 	add	r6,r6,r6
 4008664:	318d883a 	add	r6,r6,r6
 4008668:	1027883a 	mov	r19,r2
 400866c:	40080ec0 	call	40080ec <memcpy>
 4008670:	d9c00017 	ldw	r7,0(sp)
 4008674:	88000a26 	beq	r17,zero,40086a0 <__multadd+0x118>
 4008678:	88c00117 	ldw	r3,4(r17)
 400867c:	90801317 	ldw	r2,76(r18)
 4008680:	18c7883a 	add	r3,r3,r3
 4008684:	18c7883a 	add	r3,r3,r3
 4008688:	10c5883a 	add	r2,r2,r3
 400868c:	10c00017 	ldw	r3,0(r2)
 4008690:	88c00015 	stw	r3,0(r17)
 4008694:	14400015 	stw	r17,0(r2)
 4008698:	9823883a 	mov	r17,r19
 400869c:	003fd806 	br	4008600 <__alt_data_end+0xfc000600>
 40086a0:	9823883a 	mov	r17,r19
 40086a4:	003fd606 	br	4008600 <__alt_data_end+0xfc000600>

040086a8 <__s2b>:
 40086a8:	defff904 	addi	sp,sp,-28
 40086ac:	dc400115 	stw	r17,4(sp)
 40086b0:	dc000015 	stw	r16,0(sp)
 40086b4:	2023883a 	mov	r17,r4
 40086b8:	2821883a 	mov	r16,r5
 40086bc:	39000204 	addi	r4,r7,8
 40086c0:	01400244 	movi	r5,9
 40086c4:	dcc00315 	stw	r19,12(sp)
 40086c8:	dc800215 	stw	r18,8(sp)
 40086cc:	dfc00615 	stw	ra,24(sp)
 40086d0:	dd400515 	stw	r21,20(sp)
 40086d4:	dd000415 	stw	r20,16(sp)
 40086d8:	3825883a 	mov	r18,r7
 40086dc:	3027883a 	mov	r19,r6
 40086e0:	40008880 	call	4000888 <__divsi3>
 40086e4:	00c00044 	movi	r3,1
 40086e8:	000b883a 	mov	r5,zero
 40086ec:	1880030e 	bge	r3,r2,40086fc <__s2b+0x54>
 40086f0:	18c7883a 	add	r3,r3,r3
 40086f4:	29400044 	addi	r5,r5,1
 40086f8:	18bffd16 	blt	r3,r2,40086f0 <__alt_data_end+0xfc0006f0>
 40086fc:	8809883a 	mov	r4,r17
 4008700:	40084b80 	call	40084b8 <_Balloc>
 4008704:	d8c00717 	ldw	r3,28(sp)
 4008708:	10c00515 	stw	r3,20(r2)
 400870c:	00c00044 	movi	r3,1
 4008710:	10c00415 	stw	r3,16(r2)
 4008714:	00c00244 	movi	r3,9
 4008718:	1cc0210e 	bge	r3,r19,40087a0 <__s2b+0xf8>
 400871c:	80eb883a 	add	r21,r16,r3
 4008720:	a829883a 	mov	r20,r21
 4008724:	84e1883a 	add	r16,r16,r19
 4008728:	a1c00007 	ldb	r7,0(r20)
 400872c:	01800284 	movi	r6,10
 4008730:	a5000044 	addi	r20,r20,1
 4008734:	100b883a 	mov	r5,r2
 4008738:	39fff404 	addi	r7,r7,-48
 400873c:	8809883a 	mov	r4,r17
 4008740:	40085880 	call	4008588 <__multadd>
 4008744:	a43ff81e 	bne	r20,r16,4008728 <__alt_data_end+0xfc000728>
 4008748:	ace1883a 	add	r16,r21,r19
 400874c:	843ffe04 	addi	r16,r16,-8
 4008750:	9c800a0e 	bge	r19,r18,400877c <__s2b+0xd4>
 4008754:	94e5c83a 	sub	r18,r18,r19
 4008758:	84a5883a 	add	r18,r16,r18
 400875c:	81c00007 	ldb	r7,0(r16)
 4008760:	01800284 	movi	r6,10
 4008764:	84000044 	addi	r16,r16,1
 4008768:	100b883a 	mov	r5,r2
 400876c:	39fff404 	addi	r7,r7,-48
 4008770:	8809883a 	mov	r4,r17
 4008774:	40085880 	call	4008588 <__multadd>
 4008778:	84bff81e 	bne	r16,r18,400875c <__alt_data_end+0xfc00075c>
 400877c:	dfc00617 	ldw	ra,24(sp)
 4008780:	dd400517 	ldw	r21,20(sp)
 4008784:	dd000417 	ldw	r20,16(sp)
 4008788:	dcc00317 	ldw	r19,12(sp)
 400878c:	dc800217 	ldw	r18,8(sp)
 4008790:	dc400117 	ldw	r17,4(sp)
 4008794:	dc000017 	ldw	r16,0(sp)
 4008798:	dec00704 	addi	sp,sp,28
 400879c:	f800283a 	ret
 40087a0:	84000284 	addi	r16,r16,10
 40087a4:	1827883a 	mov	r19,r3
 40087a8:	003fe906 	br	4008750 <__alt_data_end+0xfc000750>

040087ac <__hi0bits>:
 40087ac:	20bfffec 	andhi	r2,r4,65535
 40087b0:	1000141e 	bne	r2,zero,4008804 <__hi0bits+0x58>
 40087b4:	2008943a 	slli	r4,r4,16
 40087b8:	00800404 	movi	r2,16
 40087bc:	20ffc02c 	andhi	r3,r4,65280
 40087c0:	1800021e 	bne	r3,zero,40087cc <__hi0bits+0x20>
 40087c4:	2008923a 	slli	r4,r4,8
 40087c8:	10800204 	addi	r2,r2,8
 40087cc:	20fc002c 	andhi	r3,r4,61440
 40087d0:	1800021e 	bne	r3,zero,40087dc <__hi0bits+0x30>
 40087d4:	2008913a 	slli	r4,r4,4
 40087d8:	10800104 	addi	r2,r2,4
 40087dc:	20f0002c 	andhi	r3,r4,49152
 40087e0:	1800031e 	bne	r3,zero,40087f0 <__hi0bits+0x44>
 40087e4:	2109883a 	add	r4,r4,r4
 40087e8:	10800084 	addi	r2,r2,2
 40087ec:	2109883a 	add	r4,r4,r4
 40087f0:	20000316 	blt	r4,zero,4008800 <__hi0bits+0x54>
 40087f4:	2110002c 	andhi	r4,r4,16384
 40087f8:	2000041e 	bne	r4,zero,400880c <__hi0bits+0x60>
 40087fc:	00800804 	movi	r2,32
 4008800:	f800283a 	ret
 4008804:	0005883a 	mov	r2,zero
 4008808:	003fec06 	br	40087bc <__alt_data_end+0xfc0007bc>
 400880c:	10800044 	addi	r2,r2,1
 4008810:	f800283a 	ret

04008814 <__lo0bits>:
 4008814:	20c00017 	ldw	r3,0(r4)
 4008818:	188001cc 	andi	r2,r3,7
 400881c:	10000826 	beq	r2,zero,4008840 <__lo0bits+0x2c>
 4008820:	1880004c 	andi	r2,r3,1
 4008824:	1000211e 	bne	r2,zero,40088ac <__lo0bits+0x98>
 4008828:	1880008c 	andi	r2,r3,2
 400882c:	1000211e 	bne	r2,zero,40088b4 <__lo0bits+0xa0>
 4008830:	1806d0ba 	srli	r3,r3,2
 4008834:	00800084 	movi	r2,2
 4008838:	20c00015 	stw	r3,0(r4)
 400883c:	f800283a 	ret
 4008840:	18bfffcc 	andi	r2,r3,65535
 4008844:	10001326 	beq	r2,zero,4008894 <__lo0bits+0x80>
 4008848:	0005883a 	mov	r2,zero
 400884c:	19403fcc 	andi	r5,r3,255
 4008850:	2800021e 	bne	r5,zero,400885c <__lo0bits+0x48>
 4008854:	1806d23a 	srli	r3,r3,8
 4008858:	10800204 	addi	r2,r2,8
 400885c:	194003cc 	andi	r5,r3,15
 4008860:	2800021e 	bne	r5,zero,400886c <__lo0bits+0x58>
 4008864:	1806d13a 	srli	r3,r3,4
 4008868:	10800104 	addi	r2,r2,4
 400886c:	194000cc 	andi	r5,r3,3
 4008870:	2800021e 	bne	r5,zero,400887c <__lo0bits+0x68>
 4008874:	1806d0ba 	srli	r3,r3,2
 4008878:	10800084 	addi	r2,r2,2
 400887c:	1940004c 	andi	r5,r3,1
 4008880:	2800081e 	bne	r5,zero,40088a4 <__lo0bits+0x90>
 4008884:	1806d07a 	srli	r3,r3,1
 4008888:	1800051e 	bne	r3,zero,40088a0 <__lo0bits+0x8c>
 400888c:	00800804 	movi	r2,32
 4008890:	f800283a 	ret
 4008894:	1806d43a 	srli	r3,r3,16
 4008898:	00800404 	movi	r2,16
 400889c:	003feb06 	br	400884c <__alt_data_end+0xfc00084c>
 40088a0:	10800044 	addi	r2,r2,1
 40088a4:	20c00015 	stw	r3,0(r4)
 40088a8:	f800283a 	ret
 40088ac:	0005883a 	mov	r2,zero
 40088b0:	f800283a 	ret
 40088b4:	1806d07a 	srli	r3,r3,1
 40088b8:	00800044 	movi	r2,1
 40088bc:	20c00015 	stw	r3,0(r4)
 40088c0:	f800283a 	ret

040088c4 <__i2b>:
 40088c4:	defffd04 	addi	sp,sp,-12
 40088c8:	dc000015 	stw	r16,0(sp)
 40088cc:	04000044 	movi	r16,1
 40088d0:	dc400115 	stw	r17,4(sp)
 40088d4:	2823883a 	mov	r17,r5
 40088d8:	800b883a 	mov	r5,r16
 40088dc:	dfc00215 	stw	ra,8(sp)
 40088e0:	40084b80 	call	40084b8 <_Balloc>
 40088e4:	14400515 	stw	r17,20(r2)
 40088e8:	14000415 	stw	r16,16(r2)
 40088ec:	dfc00217 	ldw	ra,8(sp)
 40088f0:	dc400117 	ldw	r17,4(sp)
 40088f4:	dc000017 	ldw	r16,0(sp)
 40088f8:	dec00304 	addi	sp,sp,12
 40088fc:	f800283a 	ret

04008900 <__multiply>:
 4008900:	defffa04 	addi	sp,sp,-24
 4008904:	dcc00315 	stw	r19,12(sp)
 4008908:	dc800215 	stw	r18,8(sp)
 400890c:	34c00417 	ldw	r19,16(r6)
 4008910:	2c800417 	ldw	r18,16(r5)
 4008914:	dd000415 	stw	r20,16(sp)
 4008918:	dc400115 	stw	r17,4(sp)
 400891c:	dfc00515 	stw	ra,20(sp)
 4008920:	dc000015 	stw	r16,0(sp)
 4008924:	2829883a 	mov	r20,r5
 4008928:	3023883a 	mov	r17,r6
 400892c:	94c0050e 	bge	r18,r19,4008944 <__multiply+0x44>
 4008930:	9007883a 	mov	r3,r18
 4008934:	3029883a 	mov	r20,r6
 4008938:	9825883a 	mov	r18,r19
 400893c:	2823883a 	mov	r17,r5
 4008940:	1827883a 	mov	r19,r3
 4008944:	a0800217 	ldw	r2,8(r20)
 4008948:	94e1883a 	add	r16,r18,r19
 400894c:	a1400117 	ldw	r5,4(r20)
 4008950:	1400010e 	bge	r2,r16,4008958 <__multiply+0x58>
 4008954:	29400044 	addi	r5,r5,1
 4008958:	40084b80 	call	40084b8 <_Balloc>
 400895c:	8415883a 	add	r10,r16,r16
 4008960:	12c00504 	addi	r11,r2,20
 4008964:	5295883a 	add	r10,r10,r10
 4008968:	5a95883a 	add	r10,r11,r10
 400896c:	5807883a 	mov	r3,r11
 4008970:	5a80032e 	bgeu	r11,r10,4008980 <__multiply+0x80>
 4008974:	18000015 	stw	zero,0(r3)
 4008978:	18c00104 	addi	r3,r3,4
 400897c:	1abffd36 	bltu	r3,r10,4008974 <__alt_data_end+0xfc000974>
 4008980:	9ce7883a 	add	r19,r19,r19
 4008984:	94a5883a 	add	r18,r18,r18
 4008988:	89800504 	addi	r6,r17,20
 400898c:	9ce7883a 	add	r19,r19,r19
 4008990:	a3400504 	addi	r13,r20,20
 4008994:	94a5883a 	add	r18,r18,r18
 4008998:	34d9883a 	add	r12,r6,r19
 400899c:	6c93883a 	add	r9,r13,r18
 40089a0:	3300422e 	bgeu	r6,r12,4008aac <__multiply+0x1ac>
 40089a4:	37c00017 	ldw	ra,0(r6)
 40089a8:	fbffffcc 	andi	r15,ra,65535
 40089ac:	78001b26 	beq	r15,zero,4008a1c <__multiply+0x11c>
 40089b0:	5811883a 	mov	r8,r11
 40089b4:	681d883a 	mov	r14,r13
 40089b8:	000f883a 	mov	r7,zero
 40089bc:	71000017 	ldw	r4,0(r14)
 40089c0:	40c00017 	ldw	r3,0(r8)
 40089c4:	73800104 	addi	r14,r14,4
 40089c8:	217fffcc 	andi	r5,r4,65535
 40089cc:	2bcb383a 	mul	r5,r5,r15
 40089d0:	2008d43a 	srli	r4,r4,16
 40089d4:	1c7fffcc 	andi	r17,r3,65535
 40089d8:	2c4b883a 	add	r5,r5,r17
 40089dc:	29cb883a 	add	r5,r5,r7
 40089e0:	23c9383a 	mul	r4,r4,r15
 40089e4:	1806d43a 	srli	r3,r3,16
 40089e8:	280ed43a 	srli	r7,r5,16
 40089ec:	297fffcc 	andi	r5,r5,65535
 40089f0:	20c7883a 	add	r3,r4,r3
 40089f4:	19c7883a 	add	r3,r3,r7
 40089f8:	1808943a 	slli	r4,r3,16
 40089fc:	4023883a 	mov	r17,r8
 4008a00:	180ed43a 	srli	r7,r3,16
 4008a04:	214ab03a 	or	r5,r4,r5
 4008a08:	41400015 	stw	r5,0(r8)
 4008a0c:	42000104 	addi	r8,r8,4
 4008a10:	727fea36 	bltu	r14,r9,40089bc <__alt_data_end+0xfc0009bc>
 4008a14:	89c00115 	stw	r7,4(r17)
 4008a18:	37c00017 	ldw	ra,0(r6)
 4008a1c:	f83ed43a 	srli	ra,ra,16
 4008a20:	f8001f26 	beq	ra,zero,4008aa0 <__multiply+0x1a0>
 4008a24:	58c00017 	ldw	r3,0(r11)
 4008a28:	681d883a 	mov	r14,r13
 4008a2c:	581f883a 	mov	r15,r11
 4008a30:	1811883a 	mov	r8,r3
 4008a34:	5825883a 	mov	r18,r11
 4008a38:	000f883a 	mov	r7,zero
 4008a3c:	00000106 	br	4008a44 <__multiply+0x144>
 4008a40:	8825883a 	mov	r18,r17
 4008a44:	7140000b 	ldhu	r5,0(r14)
 4008a48:	4010d43a 	srli	r8,r8,16
 4008a4c:	193fffcc 	andi	r4,r3,65535
 4008a50:	2fcb383a 	mul	r5,r5,ra
 4008a54:	7bc00104 	addi	r15,r15,4
 4008a58:	73800104 	addi	r14,r14,4
 4008a5c:	2a0b883a 	add	r5,r5,r8
 4008a60:	29cb883a 	add	r5,r5,r7
 4008a64:	2806943a 	slli	r3,r5,16
 4008a68:	94400104 	addi	r17,r18,4
 4008a6c:	280ad43a 	srli	r5,r5,16
 4008a70:	1908b03a 	or	r4,r3,r4
 4008a74:	793fff15 	stw	r4,-4(r15)
 4008a78:	70ffff17 	ldw	r3,-4(r14)
 4008a7c:	8a000017 	ldw	r8,0(r17)
 4008a80:	1806d43a 	srli	r3,r3,16
 4008a84:	413fffcc 	andi	r4,r8,65535
 4008a88:	1fc7383a 	mul	r3,r3,ra
 4008a8c:	1907883a 	add	r3,r3,r4
 4008a90:	1947883a 	add	r3,r3,r5
 4008a94:	180ed43a 	srli	r7,r3,16
 4008a98:	727fe936 	bltu	r14,r9,4008a40 <__alt_data_end+0xfc000a40>
 4008a9c:	90c00115 	stw	r3,4(r18)
 4008aa0:	31800104 	addi	r6,r6,4
 4008aa4:	5ac00104 	addi	r11,r11,4
 4008aa8:	333fbe36 	bltu	r6,r12,40089a4 <__alt_data_end+0xfc0009a4>
 4008aac:	0400090e 	bge	zero,r16,4008ad4 <__multiply+0x1d4>
 4008ab0:	50ffff17 	ldw	r3,-4(r10)
 4008ab4:	52bfff04 	addi	r10,r10,-4
 4008ab8:	18000326 	beq	r3,zero,4008ac8 <__multiply+0x1c8>
 4008abc:	00000506 	br	4008ad4 <__multiply+0x1d4>
 4008ac0:	50c00017 	ldw	r3,0(r10)
 4008ac4:	1800031e 	bne	r3,zero,4008ad4 <__multiply+0x1d4>
 4008ac8:	843fffc4 	addi	r16,r16,-1
 4008acc:	52bfff04 	addi	r10,r10,-4
 4008ad0:	803ffb1e 	bne	r16,zero,4008ac0 <__alt_data_end+0xfc000ac0>
 4008ad4:	14000415 	stw	r16,16(r2)
 4008ad8:	dfc00517 	ldw	ra,20(sp)
 4008adc:	dd000417 	ldw	r20,16(sp)
 4008ae0:	dcc00317 	ldw	r19,12(sp)
 4008ae4:	dc800217 	ldw	r18,8(sp)
 4008ae8:	dc400117 	ldw	r17,4(sp)
 4008aec:	dc000017 	ldw	r16,0(sp)
 4008af0:	dec00604 	addi	sp,sp,24
 4008af4:	f800283a 	ret

04008af8 <__pow5mult>:
 4008af8:	defffa04 	addi	sp,sp,-24
 4008afc:	dcc00315 	stw	r19,12(sp)
 4008b00:	dc000015 	stw	r16,0(sp)
 4008b04:	dfc00515 	stw	ra,20(sp)
 4008b08:	dd000415 	stw	r20,16(sp)
 4008b0c:	dc800215 	stw	r18,8(sp)
 4008b10:	dc400115 	stw	r17,4(sp)
 4008b14:	308000cc 	andi	r2,r6,3
 4008b18:	3021883a 	mov	r16,r6
 4008b1c:	2027883a 	mov	r19,r4
 4008b20:	10002f1e 	bne	r2,zero,4008be0 <__pow5mult+0xe8>
 4008b24:	2825883a 	mov	r18,r5
 4008b28:	8021d0ba 	srai	r16,r16,2
 4008b2c:	80001a26 	beq	r16,zero,4008b98 <__pow5mult+0xa0>
 4008b30:	9c401217 	ldw	r17,72(r19)
 4008b34:	8800061e 	bne	r17,zero,4008b50 <__pow5mult+0x58>
 4008b38:	00003406 	br	4008c0c <__pow5mult+0x114>
 4008b3c:	8021d07a 	srai	r16,r16,1
 4008b40:	80001526 	beq	r16,zero,4008b98 <__pow5mult+0xa0>
 4008b44:	88800017 	ldw	r2,0(r17)
 4008b48:	10001c26 	beq	r2,zero,4008bbc <__pow5mult+0xc4>
 4008b4c:	1023883a 	mov	r17,r2
 4008b50:	8080004c 	andi	r2,r16,1
 4008b54:	103ff926 	beq	r2,zero,4008b3c <__alt_data_end+0xfc000b3c>
 4008b58:	880d883a 	mov	r6,r17
 4008b5c:	900b883a 	mov	r5,r18
 4008b60:	9809883a 	mov	r4,r19
 4008b64:	40089000 	call	4008900 <__multiply>
 4008b68:	90001b26 	beq	r18,zero,4008bd8 <__pow5mult+0xe0>
 4008b6c:	91000117 	ldw	r4,4(r18)
 4008b70:	98c01317 	ldw	r3,76(r19)
 4008b74:	8021d07a 	srai	r16,r16,1
 4008b78:	2109883a 	add	r4,r4,r4
 4008b7c:	2109883a 	add	r4,r4,r4
 4008b80:	1907883a 	add	r3,r3,r4
 4008b84:	19000017 	ldw	r4,0(r3)
 4008b88:	91000015 	stw	r4,0(r18)
 4008b8c:	1c800015 	stw	r18,0(r3)
 4008b90:	1025883a 	mov	r18,r2
 4008b94:	803feb1e 	bne	r16,zero,4008b44 <__alt_data_end+0xfc000b44>
 4008b98:	9005883a 	mov	r2,r18
 4008b9c:	dfc00517 	ldw	ra,20(sp)
 4008ba0:	dd000417 	ldw	r20,16(sp)
 4008ba4:	dcc00317 	ldw	r19,12(sp)
 4008ba8:	dc800217 	ldw	r18,8(sp)
 4008bac:	dc400117 	ldw	r17,4(sp)
 4008bb0:	dc000017 	ldw	r16,0(sp)
 4008bb4:	dec00604 	addi	sp,sp,24
 4008bb8:	f800283a 	ret
 4008bbc:	880d883a 	mov	r6,r17
 4008bc0:	880b883a 	mov	r5,r17
 4008bc4:	9809883a 	mov	r4,r19
 4008bc8:	40089000 	call	4008900 <__multiply>
 4008bcc:	88800015 	stw	r2,0(r17)
 4008bd0:	10000015 	stw	zero,0(r2)
 4008bd4:	003fdd06 	br	4008b4c <__alt_data_end+0xfc000b4c>
 4008bd8:	1025883a 	mov	r18,r2
 4008bdc:	003fd706 	br	4008b3c <__alt_data_end+0xfc000b3c>
 4008be0:	10bfffc4 	addi	r2,r2,-1
 4008be4:	1085883a 	add	r2,r2,r2
 4008be8:	00c20034 	movhi	r3,2048
 4008bec:	18c0cd04 	addi	r3,r3,820
 4008bf0:	1085883a 	add	r2,r2,r2
 4008bf4:	1885883a 	add	r2,r3,r2
 4008bf8:	11800017 	ldw	r6,0(r2)
 4008bfc:	000f883a 	mov	r7,zero
 4008c00:	40085880 	call	4008588 <__multadd>
 4008c04:	1025883a 	mov	r18,r2
 4008c08:	003fc706 	br	4008b28 <__alt_data_end+0xfc000b28>
 4008c0c:	05000044 	movi	r20,1
 4008c10:	a00b883a 	mov	r5,r20
 4008c14:	9809883a 	mov	r4,r19
 4008c18:	40084b80 	call	40084b8 <_Balloc>
 4008c1c:	1023883a 	mov	r17,r2
 4008c20:	00809c44 	movi	r2,625
 4008c24:	88800515 	stw	r2,20(r17)
 4008c28:	8d000415 	stw	r20,16(r17)
 4008c2c:	9c401215 	stw	r17,72(r19)
 4008c30:	88000015 	stw	zero,0(r17)
 4008c34:	003fc606 	br	4008b50 <__alt_data_end+0xfc000b50>

04008c38 <__lshift>:
 4008c38:	defff904 	addi	sp,sp,-28
 4008c3c:	dd400515 	stw	r21,20(sp)
 4008c40:	dcc00315 	stw	r19,12(sp)
 4008c44:	302bd17a 	srai	r21,r6,5
 4008c48:	2cc00417 	ldw	r19,16(r5)
 4008c4c:	28800217 	ldw	r2,8(r5)
 4008c50:	dd000415 	stw	r20,16(sp)
 4008c54:	ace7883a 	add	r19,r21,r19
 4008c58:	dc800215 	stw	r18,8(sp)
 4008c5c:	dc400115 	stw	r17,4(sp)
 4008c60:	dc000015 	stw	r16,0(sp)
 4008c64:	dfc00615 	stw	ra,24(sp)
 4008c68:	9c000044 	addi	r16,r19,1
 4008c6c:	2823883a 	mov	r17,r5
 4008c70:	3029883a 	mov	r20,r6
 4008c74:	2025883a 	mov	r18,r4
 4008c78:	29400117 	ldw	r5,4(r5)
 4008c7c:	1400030e 	bge	r2,r16,4008c8c <__lshift+0x54>
 4008c80:	1085883a 	add	r2,r2,r2
 4008c84:	29400044 	addi	r5,r5,1
 4008c88:	143ffd16 	blt	r2,r16,4008c80 <__alt_data_end+0xfc000c80>
 4008c8c:	9009883a 	mov	r4,r18
 4008c90:	40084b80 	call	40084b8 <_Balloc>
 4008c94:	10c00504 	addi	r3,r2,20
 4008c98:	0540070e 	bge	zero,r21,4008cb8 <__lshift+0x80>
 4008c9c:	ad6b883a 	add	r21,r21,r21
 4008ca0:	ad6b883a 	add	r21,r21,r21
 4008ca4:	1809883a 	mov	r4,r3
 4008ca8:	1d47883a 	add	r3,r3,r21
 4008cac:	20000015 	stw	zero,0(r4)
 4008cb0:	21000104 	addi	r4,r4,4
 4008cb4:	193ffd1e 	bne	r3,r4,4008cac <__alt_data_end+0xfc000cac>
 4008cb8:	8a000417 	ldw	r8,16(r17)
 4008cbc:	89000504 	addi	r4,r17,20
 4008cc0:	a18007cc 	andi	r6,r20,31
 4008cc4:	4211883a 	add	r8,r8,r8
 4008cc8:	4211883a 	add	r8,r8,r8
 4008ccc:	2211883a 	add	r8,r4,r8
 4008cd0:	30002326 	beq	r6,zero,4008d60 <__lshift+0x128>
 4008cd4:	02400804 	movi	r9,32
 4008cd8:	4993c83a 	sub	r9,r9,r6
 4008cdc:	000b883a 	mov	r5,zero
 4008ce0:	21c00017 	ldw	r7,0(r4)
 4008ce4:	1815883a 	mov	r10,r3
 4008ce8:	18c00104 	addi	r3,r3,4
 4008cec:	398e983a 	sll	r7,r7,r6
 4008cf0:	21000104 	addi	r4,r4,4
 4008cf4:	394ab03a 	or	r5,r7,r5
 4008cf8:	197fff15 	stw	r5,-4(r3)
 4008cfc:	217fff17 	ldw	r5,-4(r4)
 4008d00:	2a4ad83a 	srl	r5,r5,r9
 4008d04:	223ff636 	bltu	r4,r8,4008ce0 <__alt_data_end+0xfc000ce0>
 4008d08:	51400115 	stw	r5,4(r10)
 4008d0c:	28001a1e 	bne	r5,zero,4008d78 <__lshift+0x140>
 4008d10:	843fffc4 	addi	r16,r16,-1
 4008d14:	14000415 	stw	r16,16(r2)
 4008d18:	88000826 	beq	r17,zero,4008d3c <__lshift+0x104>
 4008d1c:	89000117 	ldw	r4,4(r17)
 4008d20:	90c01317 	ldw	r3,76(r18)
 4008d24:	2109883a 	add	r4,r4,r4
 4008d28:	2109883a 	add	r4,r4,r4
 4008d2c:	1907883a 	add	r3,r3,r4
 4008d30:	19000017 	ldw	r4,0(r3)
 4008d34:	89000015 	stw	r4,0(r17)
 4008d38:	1c400015 	stw	r17,0(r3)
 4008d3c:	dfc00617 	ldw	ra,24(sp)
 4008d40:	dd400517 	ldw	r21,20(sp)
 4008d44:	dd000417 	ldw	r20,16(sp)
 4008d48:	dcc00317 	ldw	r19,12(sp)
 4008d4c:	dc800217 	ldw	r18,8(sp)
 4008d50:	dc400117 	ldw	r17,4(sp)
 4008d54:	dc000017 	ldw	r16,0(sp)
 4008d58:	dec00704 	addi	sp,sp,28
 4008d5c:	f800283a 	ret
 4008d60:	21400017 	ldw	r5,0(r4)
 4008d64:	18c00104 	addi	r3,r3,4
 4008d68:	21000104 	addi	r4,r4,4
 4008d6c:	197fff15 	stw	r5,-4(r3)
 4008d70:	223ffb36 	bltu	r4,r8,4008d60 <__alt_data_end+0xfc000d60>
 4008d74:	003fe606 	br	4008d10 <__alt_data_end+0xfc000d10>
 4008d78:	9c000084 	addi	r16,r19,2
 4008d7c:	003fe406 	br	4008d10 <__alt_data_end+0xfc000d10>

04008d80 <__mcmp>:
 4008d80:	20800417 	ldw	r2,16(r4)
 4008d84:	28c00417 	ldw	r3,16(r5)
 4008d88:	10c5c83a 	sub	r2,r2,r3
 4008d8c:	1000111e 	bne	r2,zero,4008dd4 <__mcmp+0x54>
 4008d90:	18c7883a 	add	r3,r3,r3
 4008d94:	18c7883a 	add	r3,r3,r3
 4008d98:	21000504 	addi	r4,r4,20
 4008d9c:	29400504 	addi	r5,r5,20
 4008da0:	20c5883a 	add	r2,r4,r3
 4008da4:	28cb883a 	add	r5,r5,r3
 4008da8:	00000106 	br	4008db0 <__mcmp+0x30>
 4008dac:	20800a2e 	bgeu	r4,r2,4008dd8 <__mcmp+0x58>
 4008db0:	10bfff04 	addi	r2,r2,-4
 4008db4:	297fff04 	addi	r5,r5,-4
 4008db8:	11800017 	ldw	r6,0(r2)
 4008dbc:	28c00017 	ldw	r3,0(r5)
 4008dc0:	30fffa26 	beq	r6,r3,4008dac <__alt_data_end+0xfc000dac>
 4008dc4:	30c00236 	bltu	r6,r3,4008dd0 <__mcmp+0x50>
 4008dc8:	00800044 	movi	r2,1
 4008dcc:	f800283a 	ret
 4008dd0:	00bfffc4 	movi	r2,-1
 4008dd4:	f800283a 	ret
 4008dd8:	0005883a 	mov	r2,zero
 4008ddc:	f800283a 	ret

04008de0 <__mdiff>:
 4008de0:	28c00417 	ldw	r3,16(r5)
 4008de4:	30800417 	ldw	r2,16(r6)
 4008de8:	defffa04 	addi	sp,sp,-24
 4008dec:	dcc00315 	stw	r19,12(sp)
 4008df0:	dc800215 	stw	r18,8(sp)
 4008df4:	dfc00515 	stw	ra,20(sp)
 4008df8:	dd000415 	stw	r20,16(sp)
 4008dfc:	dc400115 	stw	r17,4(sp)
 4008e00:	dc000015 	stw	r16,0(sp)
 4008e04:	1887c83a 	sub	r3,r3,r2
 4008e08:	2825883a 	mov	r18,r5
 4008e0c:	3027883a 	mov	r19,r6
 4008e10:	1800141e 	bne	r3,zero,4008e64 <__mdiff+0x84>
 4008e14:	1085883a 	add	r2,r2,r2
 4008e18:	1085883a 	add	r2,r2,r2
 4008e1c:	2a000504 	addi	r8,r5,20
 4008e20:	34000504 	addi	r16,r6,20
 4008e24:	4087883a 	add	r3,r8,r2
 4008e28:	8085883a 	add	r2,r16,r2
 4008e2c:	00000106 	br	4008e34 <__mdiff+0x54>
 4008e30:	40c0592e 	bgeu	r8,r3,4008f98 <__mdiff+0x1b8>
 4008e34:	18ffff04 	addi	r3,r3,-4
 4008e38:	10bfff04 	addi	r2,r2,-4
 4008e3c:	19c00017 	ldw	r7,0(r3)
 4008e40:	11400017 	ldw	r5,0(r2)
 4008e44:	397ffa26 	beq	r7,r5,4008e30 <__alt_data_end+0xfc000e30>
 4008e48:	3940592e 	bgeu	r7,r5,4008fb0 <__mdiff+0x1d0>
 4008e4c:	9005883a 	mov	r2,r18
 4008e50:	4023883a 	mov	r17,r8
 4008e54:	9825883a 	mov	r18,r19
 4008e58:	05000044 	movi	r20,1
 4008e5c:	1027883a 	mov	r19,r2
 4008e60:	00000406 	br	4008e74 <__mdiff+0x94>
 4008e64:	18005616 	blt	r3,zero,4008fc0 <__mdiff+0x1e0>
 4008e68:	34400504 	addi	r17,r6,20
 4008e6c:	2c000504 	addi	r16,r5,20
 4008e70:	0029883a 	mov	r20,zero
 4008e74:	91400117 	ldw	r5,4(r18)
 4008e78:	40084b80 	call	40084b8 <_Balloc>
 4008e7c:	92400417 	ldw	r9,16(r18)
 4008e80:	9b000417 	ldw	r12,16(r19)
 4008e84:	12c00504 	addi	r11,r2,20
 4008e88:	4a51883a 	add	r8,r9,r9
 4008e8c:	6319883a 	add	r12,r12,r12
 4008e90:	4211883a 	add	r8,r8,r8
 4008e94:	6319883a 	add	r12,r12,r12
 4008e98:	15000315 	stw	r20,12(r2)
 4008e9c:	8211883a 	add	r8,r16,r8
 4008ea0:	8b19883a 	add	r12,r17,r12
 4008ea4:	0007883a 	mov	r3,zero
 4008ea8:	81400017 	ldw	r5,0(r16)
 4008eac:	89c00017 	ldw	r7,0(r17)
 4008eb0:	59800104 	addi	r6,r11,4
 4008eb4:	293fffcc 	andi	r4,r5,65535
 4008eb8:	20c7883a 	add	r3,r4,r3
 4008ebc:	393fffcc 	andi	r4,r7,65535
 4008ec0:	1909c83a 	sub	r4,r3,r4
 4008ec4:	280ad43a 	srli	r5,r5,16
 4008ec8:	380ed43a 	srli	r7,r7,16
 4008ecc:	2007d43a 	srai	r3,r4,16
 4008ed0:	213fffcc 	andi	r4,r4,65535
 4008ed4:	29cbc83a 	sub	r5,r5,r7
 4008ed8:	28c7883a 	add	r3,r5,r3
 4008edc:	180a943a 	slli	r5,r3,16
 4008ee0:	8c400104 	addi	r17,r17,4
 4008ee4:	84000104 	addi	r16,r16,4
 4008ee8:	2908b03a 	or	r4,r5,r4
 4008eec:	59000015 	stw	r4,0(r11)
 4008ef0:	1807d43a 	srai	r3,r3,16
 4008ef4:	3015883a 	mov	r10,r6
 4008ef8:	3017883a 	mov	r11,r6
 4008efc:	8b3fea36 	bltu	r17,r12,4008ea8 <__alt_data_end+0xfc000ea8>
 4008f00:	8200162e 	bgeu	r16,r8,4008f5c <__mdiff+0x17c>
 4008f04:	8017883a 	mov	r11,r16
 4008f08:	59400017 	ldw	r5,0(r11)
 4008f0c:	31800104 	addi	r6,r6,4
 4008f10:	5ac00104 	addi	r11,r11,4
 4008f14:	293fffcc 	andi	r4,r5,65535
 4008f18:	20c7883a 	add	r3,r4,r3
 4008f1c:	280ed43a 	srli	r7,r5,16
 4008f20:	180bd43a 	srai	r5,r3,16
 4008f24:	193fffcc 	andi	r4,r3,65535
 4008f28:	3947883a 	add	r3,r7,r5
 4008f2c:	180a943a 	slli	r5,r3,16
 4008f30:	1807d43a 	srai	r3,r3,16
 4008f34:	2908b03a 	or	r4,r5,r4
 4008f38:	313fff15 	stw	r4,-4(r6)
 4008f3c:	5a3ff236 	bltu	r11,r8,4008f08 <__alt_data_end+0xfc000f08>
 4008f40:	0406303a 	nor	r3,zero,r16
 4008f44:	1a07883a 	add	r3,r3,r8
 4008f48:	1806d0ba 	srli	r3,r3,2
 4008f4c:	18c00044 	addi	r3,r3,1
 4008f50:	18c7883a 	add	r3,r3,r3
 4008f54:	18c7883a 	add	r3,r3,r3
 4008f58:	50d5883a 	add	r10,r10,r3
 4008f5c:	50ffff04 	addi	r3,r10,-4
 4008f60:	2000041e 	bne	r4,zero,4008f74 <__mdiff+0x194>
 4008f64:	18ffff04 	addi	r3,r3,-4
 4008f68:	19000017 	ldw	r4,0(r3)
 4008f6c:	4a7fffc4 	addi	r9,r9,-1
 4008f70:	203ffc26 	beq	r4,zero,4008f64 <__alt_data_end+0xfc000f64>
 4008f74:	12400415 	stw	r9,16(r2)
 4008f78:	dfc00517 	ldw	ra,20(sp)
 4008f7c:	dd000417 	ldw	r20,16(sp)
 4008f80:	dcc00317 	ldw	r19,12(sp)
 4008f84:	dc800217 	ldw	r18,8(sp)
 4008f88:	dc400117 	ldw	r17,4(sp)
 4008f8c:	dc000017 	ldw	r16,0(sp)
 4008f90:	dec00604 	addi	sp,sp,24
 4008f94:	f800283a 	ret
 4008f98:	000b883a 	mov	r5,zero
 4008f9c:	40084b80 	call	40084b8 <_Balloc>
 4008fa0:	00c00044 	movi	r3,1
 4008fa4:	10c00415 	stw	r3,16(r2)
 4008fa8:	10000515 	stw	zero,20(r2)
 4008fac:	003ff206 	br	4008f78 <__alt_data_end+0xfc000f78>
 4008fb0:	8023883a 	mov	r17,r16
 4008fb4:	0029883a 	mov	r20,zero
 4008fb8:	4021883a 	mov	r16,r8
 4008fbc:	003fad06 	br	4008e74 <__alt_data_end+0xfc000e74>
 4008fc0:	9005883a 	mov	r2,r18
 4008fc4:	94400504 	addi	r17,r18,20
 4008fc8:	9c000504 	addi	r16,r19,20
 4008fcc:	9825883a 	mov	r18,r19
 4008fd0:	05000044 	movi	r20,1
 4008fd4:	1027883a 	mov	r19,r2
 4008fd8:	003fa606 	br	4008e74 <__alt_data_end+0xfc000e74>

04008fdc <__ulp>:
 4008fdc:	295ffc2c 	andhi	r5,r5,32752
 4008fe0:	00bf3034 	movhi	r2,64704
 4008fe4:	2887883a 	add	r3,r5,r2
 4008fe8:	00c0020e 	bge	zero,r3,4008ff4 <__ulp+0x18>
 4008fec:	0005883a 	mov	r2,zero
 4008ff0:	f800283a 	ret
 4008ff4:	00c7c83a 	sub	r3,zero,r3
 4008ff8:	1807d53a 	srai	r3,r3,20
 4008ffc:	008004c4 	movi	r2,19
 4009000:	10c00b0e 	bge	r2,r3,4009030 <__ulp+0x54>
 4009004:	18bffb04 	addi	r2,r3,-20
 4009008:	01000784 	movi	r4,30
 400900c:	0007883a 	mov	r3,zero
 4009010:	20800516 	blt	r4,r2,4009028 <__ulp+0x4c>
 4009014:	010007c4 	movi	r4,31
 4009018:	2089c83a 	sub	r4,r4,r2
 400901c:	00800044 	movi	r2,1
 4009020:	1104983a 	sll	r2,r2,r4
 4009024:	f800283a 	ret
 4009028:	00800044 	movi	r2,1
 400902c:	f800283a 	ret
 4009030:	01400234 	movhi	r5,8
 4009034:	28c7d83a 	sra	r3,r5,r3
 4009038:	0005883a 	mov	r2,zero
 400903c:	f800283a 	ret

04009040 <__b2d>:
 4009040:	defffa04 	addi	sp,sp,-24
 4009044:	dc000015 	stw	r16,0(sp)
 4009048:	24000417 	ldw	r16,16(r4)
 400904c:	dc400115 	stw	r17,4(sp)
 4009050:	24400504 	addi	r17,r4,20
 4009054:	8421883a 	add	r16,r16,r16
 4009058:	8421883a 	add	r16,r16,r16
 400905c:	8c21883a 	add	r16,r17,r16
 4009060:	dc800215 	stw	r18,8(sp)
 4009064:	84bfff17 	ldw	r18,-4(r16)
 4009068:	dd000415 	stw	r20,16(sp)
 400906c:	dcc00315 	stw	r19,12(sp)
 4009070:	9009883a 	mov	r4,r18
 4009074:	2829883a 	mov	r20,r5
 4009078:	dfc00515 	stw	ra,20(sp)
 400907c:	40087ac0 	call	40087ac <__hi0bits>
 4009080:	00c00804 	movi	r3,32
 4009084:	1889c83a 	sub	r4,r3,r2
 4009088:	a1000015 	stw	r4,0(r20)
 400908c:	01000284 	movi	r4,10
 4009090:	84ffff04 	addi	r19,r16,-4
 4009094:	20801216 	blt	r4,r2,40090e0 <__b2d+0xa0>
 4009098:	018002c4 	movi	r6,11
 400909c:	308dc83a 	sub	r6,r6,r2
 40090a0:	9186d83a 	srl	r3,r18,r6
 40090a4:	18cffc34 	orhi	r3,r3,16368
 40090a8:	8cc0212e 	bgeu	r17,r19,4009130 <__b2d+0xf0>
 40090ac:	813ffe17 	ldw	r4,-8(r16)
 40090b0:	218cd83a 	srl	r6,r4,r6
 40090b4:	10800544 	addi	r2,r2,21
 40090b8:	9084983a 	sll	r2,r18,r2
 40090bc:	1184b03a 	or	r2,r2,r6
 40090c0:	dfc00517 	ldw	ra,20(sp)
 40090c4:	dd000417 	ldw	r20,16(sp)
 40090c8:	dcc00317 	ldw	r19,12(sp)
 40090cc:	dc800217 	ldw	r18,8(sp)
 40090d0:	dc400117 	ldw	r17,4(sp)
 40090d4:	dc000017 	ldw	r16,0(sp)
 40090d8:	dec00604 	addi	sp,sp,24
 40090dc:	f800283a 	ret
 40090e0:	8cc00f2e 	bgeu	r17,r19,4009120 <__b2d+0xe0>
 40090e4:	117ffd44 	addi	r5,r2,-11
 40090e8:	80bffe17 	ldw	r2,-8(r16)
 40090ec:	28000e26 	beq	r5,zero,4009128 <__b2d+0xe8>
 40090f0:	1949c83a 	sub	r4,r3,r5
 40090f4:	9164983a 	sll	r18,r18,r5
 40090f8:	1106d83a 	srl	r3,r2,r4
 40090fc:	81bffe04 	addi	r6,r16,-8
 4009100:	948ffc34 	orhi	r18,r18,16368
 4009104:	90c6b03a 	or	r3,r18,r3
 4009108:	89800e2e 	bgeu	r17,r6,4009144 <__b2d+0x104>
 400910c:	81bffd17 	ldw	r6,-12(r16)
 4009110:	1144983a 	sll	r2,r2,r5
 4009114:	310ad83a 	srl	r5,r6,r4
 4009118:	2884b03a 	or	r2,r5,r2
 400911c:	003fe806 	br	40090c0 <__alt_data_end+0xfc0010c0>
 4009120:	10bffd44 	addi	r2,r2,-11
 4009124:	1000041e 	bne	r2,zero,4009138 <__b2d+0xf8>
 4009128:	90cffc34 	orhi	r3,r18,16368
 400912c:	003fe406 	br	40090c0 <__alt_data_end+0xfc0010c0>
 4009130:	000d883a 	mov	r6,zero
 4009134:	003fdf06 	br	40090b4 <__alt_data_end+0xfc0010b4>
 4009138:	90a4983a 	sll	r18,r18,r2
 400913c:	0005883a 	mov	r2,zero
 4009140:	003ff906 	br	4009128 <__alt_data_end+0xfc001128>
 4009144:	1144983a 	sll	r2,r2,r5
 4009148:	003fdd06 	br	40090c0 <__alt_data_end+0xfc0010c0>

0400914c <__d2b>:
 400914c:	defff804 	addi	sp,sp,-32
 4009150:	dc000215 	stw	r16,8(sp)
 4009154:	3021883a 	mov	r16,r6
 4009158:	dc400315 	stw	r17,12(sp)
 400915c:	8022907a 	slli	r17,r16,1
 4009160:	dd000615 	stw	r20,24(sp)
 4009164:	2829883a 	mov	r20,r5
 4009168:	01400044 	movi	r5,1
 400916c:	dcc00515 	stw	r19,20(sp)
 4009170:	dc800415 	stw	r18,16(sp)
 4009174:	dfc00715 	stw	ra,28(sp)
 4009178:	3825883a 	mov	r18,r7
 400917c:	8822d57a 	srli	r17,r17,21
 4009180:	40084b80 	call	40084b8 <_Balloc>
 4009184:	1027883a 	mov	r19,r2
 4009188:	00800434 	movhi	r2,16
 400918c:	10bfffc4 	addi	r2,r2,-1
 4009190:	808c703a 	and	r6,r16,r2
 4009194:	88000126 	beq	r17,zero,400919c <__d2b+0x50>
 4009198:	31800434 	orhi	r6,r6,16
 400919c:	d9800015 	stw	r6,0(sp)
 40091a0:	a0002426 	beq	r20,zero,4009234 <__d2b+0xe8>
 40091a4:	d9000104 	addi	r4,sp,4
 40091a8:	dd000115 	stw	r20,4(sp)
 40091ac:	40088140 	call	4008814 <__lo0bits>
 40091b0:	d8c00017 	ldw	r3,0(sp)
 40091b4:	10002f1e 	bne	r2,zero,4009274 <__d2b+0x128>
 40091b8:	d9000117 	ldw	r4,4(sp)
 40091bc:	99000515 	stw	r4,20(r19)
 40091c0:	1821003a 	cmpeq	r16,r3,zero
 40091c4:	01000084 	movi	r4,2
 40091c8:	2421c83a 	sub	r16,r4,r16
 40091cc:	98c00615 	stw	r3,24(r19)
 40091d0:	9c000415 	stw	r16,16(r19)
 40091d4:	88001f1e 	bne	r17,zero,4009254 <__d2b+0x108>
 40091d8:	10bef384 	addi	r2,r2,-1074
 40091dc:	90800015 	stw	r2,0(r18)
 40091e0:	00900034 	movhi	r2,16384
 40091e4:	10bfffc4 	addi	r2,r2,-1
 40091e8:	8085883a 	add	r2,r16,r2
 40091ec:	1085883a 	add	r2,r2,r2
 40091f0:	1085883a 	add	r2,r2,r2
 40091f4:	9885883a 	add	r2,r19,r2
 40091f8:	11000517 	ldw	r4,20(r2)
 40091fc:	8020917a 	slli	r16,r16,5
 4009200:	40087ac0 	call	40087ac <__hi0bits>
 4009204:	d8c00817 	ldw	r3,32(sp)
 4009208:	8085c83a 	sub	r2,r16,r2
 400920c:	18800015 	stw	r2,0(r3)
 4009210:	9805883a 	mov	r2,r19
 4009214:	dfc00717 	ldw	ra,28(sp)
 4009218:	dd000617 	ldw	r20,24(sp)
 400921c:	dcc00517 	ldw	r19,20(sp)
 4009220:	dc800417 	ldw	r18,16(sp)
 4009224:	dc400317 	ldw	r17,12(sp)
 4009228:	dc000217 	ldw	r16,8(sp)
 400922c:	dec00804 	addi	sp,sp,32
 4009230:	f800283a 	ret
 4009234:	d809883a 	mov	r4,sp
 4009238:	40088140 	call	4008814 <__lo0bits>
 400923c:	d8c00017 	ldw	r3,0(sp)
 4009240:	04000044 	movi	r16,1
 4009244:	9c000415 	stw	r16,16(r19)
 4009248:	98c00515 	stw	r3,20(r19)
 400924c:	10800804 	addi	r2,r2,32
 4009250:	883fe126 	beq	r17,zero,40091d8 <__alt_data_end+0xfc0011d8>
 4009254:	00c00d44 	movi	r3,53
 4009258:	8c7ef344 	addi	r17,r17,-1075
 400925c:	88a3883a 	add	r17,r17,r2
 4009260:	1885c83a 	sub	r2,r3,r2
 4009264:	d8c00817 	ldw	r3,32(sp)
 4009268:	94400015 	stw	r17,0(r18)
 400926c:	18800015 	stw	r2,0(r3)
 4009270:	003fe706 	br	4009210 <__alt_data_end+0xfc001210>
 4009274:	01000804 	movi	r4,32
 4009278:	2089c83a 	sub	r4,r4,r2
 400927c:	1908983a 	sll	r4,r3,r4
 4009280:	d9400117 	ldw	r5,4(sp)
 4009284:	1886d83a 	srl	r3,r3,r2
 4009288:	2148b03a 	or	r4,r4,r5
 400928c:	99000515 	stw	r4,20(r19)
 4009290:	d8c00015 	stw	r3,0(sp)
 4009294:	003fca06 	br	40091c0 <__alt_data_end+0xfc0011c0>

04009298 <__ratio>:
 4009298:	defff904 	addi	sp,sp,-28
 400929c:	dc400315 	stw	r17,12(sp)
 40092a0:	2823883a 	mov	r17,r5
 40092a4:	d9400104 	addi	r5,sp,4
 40092a8:	dfc00615 	stw	ra,24(sp)
 40092ac:	dcc00515 	stw	r19,20(sp)
 40092b0:	dc800415 	stw	r18,16(sp)
 40092b4:	2027883a 	mov	r19,r4
 40092b8:	dc000215 	stw	r16,8(sp)
 40092bc:	40090400 	call	4009040 <__b2d>
 40092c0:	d80b883a 	mov	r5,sp
 40092c4:	8809883a 	mov	r4,r17
 40092c8:	1025883a 	mov	r18,r2
 40092cc:	1821883a 	mov	r16,r3
 40092d0:	40090400 	call	4009040 <__b2d>
 40092d4:	8a000417 	ldw	r8,16(r17)
 40092d8:	99000417 	ldw	r4,16(r19)
 40092dc:	d9400117 	ldw	r5,4(sp)
 40092e0:	2209c83a 	sub	r4,r4,r8
 40092e4:	2010917a 	slli	r8,r4,5
 40092e8:	d9000017 	ldw	r4,0(sp)
 40092ec:	2909c83a 	sub	r4,r5,r4
 40092f0:	4109883a 	add	r4,r8,r4
 40092f4:	01000e0e 	bge	zero,r4,4009330 <__ratio+0x98>
 40092f8:	2008953a 	slli	r4,r4,20
 40092fc:	2421883a 	add	r16,r4,r16
 4009300:	100d883a 	mov	r6,r2
 4009304:	180f883a 	mov	r7,r3
 4009308:	9009883a 	mov	r4,r18
 400930c:	800b883a 	mov	r5,r16
 4009310:	400148c0 	call	400148c <__divdf3>
 4009314:	dfc00617 	ldw	ra,24(sp)
 4009318:	dcc00517 	ldw	r19,20(sp)
 400931c:	dc800417 	ldw	r18,16(sp)
 4009320:	dc400317 	ldw	r17,12(sp)
 4009324:	dc000217 	ldw	r16,8(sp)
 4009328:	dec00704 	addi	sp,sp,28
 400932c:	f800283a 	ret
 4009330:	2008953a 	slli	r4,r4,20
 4009334:	1907c83a 	sub	r3,r3,r4
 4009338:	003ff106 	br	4009300 <__alt_data_end+0xfc001300>

0400933c <_mprec_log10>:
 400933c:	defffe04 	addi	sp,sp,-8
 4009340:	dc000015 	stw	r16,0(sp)
 4009344:	dfc00115 	stw	ra,4(sp)
 4009348:	008005c4 	movi	r2,23
 400934c:	2021883a 	mov	r16,r4
 4009350:	11000d0e 	bge	r2,r4,4009388 <_mprec_log10+0x4c>
 4009354:	0005883a 	mov	r2,zero
 4009358:	00cffc34 	movhi	r3,16368
 400935c:	843fffc4 	addi	r16,r16,-1
 4009360:	000d883a 	mov	r6,zero
 4009364:	01d00934 	movhi	r7,16420
 4009368:	1009883a 	mov	r4,r2
 400936c:	180b883a 	mov	r5,r3
 4009370:	4001d740 	call	4001d74 <__muldf3>
 4009374:	803ff91e 	bne	r16,zero,400935c <__alt_data_end+0xfc00135c>
 4009378:	dfc00117 	ldw	ra,4(sp)
 400937c:	dc000017 	ldw	r16,0(sp)
 4009380:	dec00204 	addi	sp,sp,8
 4009384:	f800283a 	ret
 4009388:	202090fa 	slli	r16,r4,3
 400938c:	00820034 	movhi	r2,2048
 4009390:	1080e404 	addi	r2,r2,912
 4009394:	1421883a 	add	r16,r2,r16
 4009398:	80800017 	ldw	r2,0(r16)
 400939c:	80c00117 	ldw	r3,4(r16)
 40093a0:	dfc00117 	ldw	ra,4(sp)
 40093a4:	dc000017 	ldw	r16,0(sp)
 40093a8:	dec00204 	addi	sp,sp,8
 40093ac:	f800283a 	ret

040093b0 <__copybits>:
 40093b0:	297fffc4 	addi	r5,r5,-1
 40093b4:	280fd17a 	srai	r7,r5,5
 40093b8:	30c00417 	ldw	r3,16(r6)
 40093bc:	30800504 	addi	r2,r6,20
 40093c0:	39c00044 	addi	r7,r7,1
 40093c4:	18c7883a 	add	r3,r3,r3
 40093c8:	39cf883a 	add	r7,r7,r7
 40093cc:	18c7883a 	add	r3,r3,r3
 40093d0:	39cf883a 	add	r7,r7,r7
 40093d4:	10c7883a 	add	r3,r2,r3
 40093d8:	21cf883a 	add	r7,r4,r7
 40093dc:	10c00d2e 	bgeu	r2,r3,4009414 <__copybits+0x64>
 40093e0:	200b883a 	mov	r5,r4
 40093e4:	12000017 	ldw	r8,0(r2)
 40093e8:	29400104 	addi	r5,r5,4
 40093ec:	10800104 	addi	r2,r2,4
 40093f0:	2a3fff15 	stw	r8,-4(r5)
 40093f4:	10fffb36 	bltu	r2,r3,40093e4 <__alt_data_end+0xfc0013e4>
 40093f8:	1985c83a 	sub	r2,r3,r6
 40093fc:	10bffac4 	addi	r2,r2,-21
 4009400:	1004d0ba 	srli	r2,r2,2
 4009404:	10800044 	addi	r2,r2,1
 4009408:	1085883a 	add	r2,r2,r2
 400940c:	1085883a 	add	r2,r2,r2
 4009410:	2089883a 	add	r4,r4,r2
 4009414:	21c0032e 	bgeu	r4,r7,4009424 <__copybits+0x74>
 4009418:	20000015 	stw	zero,0(r4)
 400941c:	21000104 	addi	r4,r4,4
 4009420:	21fffd36 	bltu	r4,r7,4009418 <__alt_data_end+0xfc001418>
 4009424:	f800283a 	ret

04009428 <__any_on>:
 4009428:	20c00417 	ldw	r3,16(r4)
 400942c:	2805d17a 	srai	r2,r5,5
 4009430:	21000504 	addi	r4,r4,20
 4009434:	18800d0e 	bge	r3,r2,400946c <__any_on+0x44>
 4009438:	18c7883a 	add	r3,r3,r3
 400943c:	18c7883a 	add	r3,r3,r3
 4009440:	20c7883a 	add	r3,r4,r3
 4009444:	20c0192e 	bgeu	r4,r3,40094ac <__any_on+0x84>
 4009448:	18bfff17 	ldw	r2,-4(r3)
 400944c:	18ffff04 	addi	r3,r3,-4
 4009450:	1000041e 	bne	r2,zero,4009464 <__any_on+0x3c>
 4009454:	20c0142e 	bgeu	r4,r3,40094a8 <__any_on+0x80>
 4009458:	18ffff04 	addi	r3,r3,-4
 400945c:	19400017 	ldw	r5,0(r3)
 4009460:	283ffc26 	beq	r5,zero,4009454 <__alt_data_end+0xfc001454>
 4009464:	00800044 	movi	r2,1
 4009468:	f800283a 	ret
 400946c:	10c00a0e 	bge	r2,r3,4009498 <__any_on+0x70>
 4009470:	1085883a 	add	r2,r2,r2
 4009474:	1085883a 	add	r2,r2,r2
 4009478:	294007cc 	andi	r5,r5,31
 400947c:	2087883a 	add	r3,r4,r2
 4009480:	283ff026 	beq	r5,zero,4009444 <__alt_data_end+0xfc001444>
 4009484:	19800017 	ldw	r6,0(r3)
 4009488:	3144d83a 	srl	r2,r6,r5
 400948c:	114a983a 	sll	r5,r2,r5
 4009490:	317ff41e 	bne	r6,r5,4009464 <__alt_data_end+0xfc001464>
 4009494:	003feb06 	br	4009444 <__alt_data_end+0xfc001444>
 4009498:	1085883a 	add	r2,r2,r2
 400949c:	1085883a 	add	r2,r2,r2
 40094a0:	2087883a 	add	r3,r4,r2
 40094a4:	003fe706 	br	4009444 <__alt_data_end+0xfc001444>
 40094a8:	f800283a 	ret
 40094ac:	0005883a 	mov	r2,zero
 40094b0:	f800283a 	ret

040094b4 <_putc_r>:
 40094b4:	defffc04 	addi	sp,sp,-16
 40094b8:	dc000215 	stw	r16,8(sp)
 40094bc:	dfc00315 	stw	ra,12(sp)
 40094c0:	2021883a 	mov	r16,r4
 40094c4:	20000226 	beq	r4,zero,40094d0 <_putc_r+0x1c>
 40094c8:	20800e17 	ldw	r2,56(r4)
 40094cc:	10001b26 	beq	r2,zero,400953c <_putc_r+0x88>
 40094d0:	30800217 	ldw	r2,8(r6)
 40094d4:	10bfffc4 	addi	r2,r2,-1
 40094d8:	30800215 	stw	r2,8(r6)
 40094dc:	10000a16 	blt	r2,zero,4009508 <_putc_r+0x54>
 40094e0:	30800017 	ldw	r2,0(r6)
 40094e4:	11400005 	stb	r5,0(r2)
 40094e8:	30800017 	ldw	r2,0(r6)
 40094ec:	10c00044 	addi	r3,r2,1
 40094f0:	30c00015 	stw	r3,0(r6)
 40094f4:	10800003 	ldbu	r2,0(r2)
 40094f8:	dfc00317 	ldw	ra,12(sp)
 40094fc:	dc000217 	ldw	r16,8(sp)
 4009500:	dec00404 	addi	sp,sp,16
 4009504:	f800283a 	ret
 4009508:	30c00617 	ldw	r3,24(r6)
 400950c:	10c00616 	blt	r2,r3,4009528 <_putc_r+0x74>
 4009510:	30800017 	ldw	r2,0(r6)
 4009514:	00c00284 	movi	r3,10
 4009518:	11400005 	stb	r5,0(r2)
 400951c:	30800017 	ldw	r2,0(r6)
 4009520:	11400003 	ldbu	r5,0(r2)
 4009524:	28fff11e 	bne	r5,r3,40094ec <__alt_data_end+0xfc0014ec>
 4009528:	8009883a 	mov	r4,r16
 400952c:	dfc00317 	ldw	ra,12(sp)
 4009530:	dc000217 	ldw	r16,8(sp)
 4009534:	dec00404 	addi	sp,sp,16
 4009538:	400b4a81 	jmpi	400b4a8 <__swbuf_r>
 400953c:	d9400015 	stw	r5,0(sp)
 4009540:	d9800115 	stw	r6,4(sp)
 4009544:	4006a9c0 	call	4006a9c <__sinit>
 4009548:	d9800117 	ldw	r6,4(sp)
 400954c:	d9400017 	ldw	r5,0(sp)
 4009550:	003fdf06 	br	40094d0 <__alt_data_end+0xfc0014d0>

04009554 <putc>:
 4009554:	00810074 	movhi	r2,1025
 4009558:	defffc04 	addi	sp,sp,-16
 400955c:	10881404 	addi	r2,r2,8272
 4009560:	dc000115 	stw	r16,4(sp)
 4009564:	14000017 	ldw	r16,0(r2)
 4009568:	dc400215 	stw	r17,8(sp)
 400956c:	dfc00315 	stw	ra,12(sp)
 4009570:	2023883a 	mov	r17,r4
 4009574:	80000226 	beq	r16,zero,4009580 <putc+0x2c>
 4009578:	80800e17 	ldw	r2,56(r16)
 400957c:	10001a26 	beq	r2,zero,40095e8 <putc+0x94>
 4009580:	28800217 	ldw	r2,8(r5)
 4009584:	10bfffc4 	addi	r2,r2,-1
 4009588:	28800215 	stw	r2,8(r5)
 400958c:	10000b16 	blt	r2,zero,40095bc <putc+0x68>
 4009590:	28800017 	ldw	r2,0(r5)
 4009594:	14400005 	stb	r17,0(r2)
 4009598:	28800017 	ldw	r2,0(r5)
 400959c:	10c00044 	addi	r3,r2,1
 40095a0:	28c00015 	stw	r3,0(r5)
 40095a4:	10800003 	ldbu	r2,0(r2)
 40095a8:	dfc00317 	ldw	ra,12(sp)
 40095ac:	dc400217 	ldw	r17,8(sp)
 40095b0:	dc000117 	ldw	r16,4(sp)
 40095b4:	dec00404 	addi	sp,sp,16
 40095b8:	f800283a 	ret
 40095bc:	28c00617 	ldw	r3,24(r5)
 40095c0:	10c00e16 	blt	r2,r3,40095fc <putc+0xa8>
 40095c4:	28800017 	ldw	r2,0(r5)
 40095c8:	01000284 	movi	r4,10
 40095cc:	14400005 	stb	r17,0(r2)
 40095d0:	28800017 	ldw	r2,0(r5)
 40095d4:	10c00003 	ldbu	r3,0(r2)
 40095d8:	193ff01e 	bne	r3,r4,400959c <__alt_data_end+0xfc00159c>
 40095dc:	280d883a 	mov	r6,r5
 40095e0:	180b883a 	mov	r5,r3
 40095e4:	00000706 	br	4009604 <putc+0xb0>
 40095e8:	8009883a 	mov	r4,r16
 40095ec:	d9400015 	stw	r5,0(sp)
 40095f0:	4006a9c0 	call	4006a9c <__sinit>
 40095f4:	d9400017 	ldw	r5,0(sp)
 40095f8:	003fe106 	br	4009580 <__alt_data_end+0xfc001580>
 40095fc:	280d883a 	mov	r6,r5
 4009600:	880b883a 	mov	r5,r17
 4009604:	8009883a 	mov	r4,r16
 4009608:	dfc00317 	ldw	ra,12(sp)
 400960c:	dc400217 	ldw	r17,8(sp)
 4009610:	dc000117 	ldw	r16,4(sp)
 4009614:	dec00404 	addi	sp,sp,16
 4009618:	400b4a81 	jmpi	400b4a8 <__swbuf_r>

0400961c <_realloc_r>:
 400961c:	defff604 	addi	sp,sp,-40
 4009620:	dc800215 	stw	r18,8(sp)
 4009624:	dfc00915 	stw	ra,36(sp)
 4009628:	df000815 	stw	fp,32(sp)
 400962c:	ddc00715 	stw	r23,28(sp)
 4009630:	dd800615 	stw	r22,24(sp)
 4009634:	dd400515 	stw	r21,20(sp)
 4009638:	dd000415 	stw	r20,16(sp)
 400963c:	dcc00315 	stw	r19,12(sp)
 4009640:	dc400115 	stw	r17,4(sp)
 4009644:	dc000015 	stw	r16,0(sp)
 4009648:	3025883a 	mov	r18,r6
 400964c:	2800b726 	beq	r5,zero,400992c <_realloc_r+0x310>
 4009650:	282b883a 	mov	r21,r5
 4009654:	2029883a 	mov	r20,r4
 4009658:	400e4600 	call	400e460 <__malloc_lock>
 400965c:	a8bfff17 	ldw	r2,-4(r21)
 4009660:	043fff04 	movi	r16,-4
 4009664:	90c002c4 	addi	r3,r18,11
 4009668:	01000584 	movi	r4,22
 400966c:	acfffe04 	addi	r19,r21,-8
 4009670:	1420703a 	and	r16,r2,r16
 4009674:	20c0332e 	bgeu	r4,r3,4009744 <_realloc_r+0x128>
 4009678:	047ffe04 	movi	r17,-8
 400967c:	1c62703a 	and	r17,r3,r17
 4009680:	8807883a 	mov	r3,r17
 4009684:	88005816 	blt	r17,zero,40097e8 <_realloc_r+0x1cc>
 4009688:	8c805736 	bltu	r17,r18,40097e8 <_realloc_r+0x1cc>
 400968c:	80c0300e 	bge	r16,r3,4009750 <_realloc_r+0x134>
 4009690:	07010074 	movhi	fp,1025
 4009694:	e7028f04 	addi	fp,fp,2620
 4009698:	e1c00217 	ldw	r7,8(fp)
 400969c:	9c09883a 	add	r4,r19,r16
 40096a0:	22000117 	ldw	r8,4(r4)
 40096a4:	21c06326 	beq	r4,r7,4009834 <_realloc_r+0x218>
 40096a8:	017fff84 	movi	r5,-2
 40096ac:	414a703a 	and	r5,r8,r5
 40096b0:	214b883a 	add	r5,r4,r5
 40096b4:	29800117 	ldw	r6,4(r5)
 40096b8:	3180004c 	andi	r6,r6,1
 40096bc:	30003f26 	beq	r6,zero,40097bc <_realloc_r+0x1a0>
 40096c0:	1080004c 	andi	r2,r2,1
 40096c4:	10008326 	beq	r2,zero,40098d4 <_realloc_r+0x2b8>
 40096c8:	900b883a 	mov	r5,r18
 40096cc:	a009883a 	mov	r4,r20
 40096d0:	40077fc0 	call	40077fc <_malloc_r>
 40096d4:	1025883a 	mov	r18,r2
 40096d8:	10011e26 	beq	r2,zero,4009b54 <_realloc_r+0x538>
 40096dc:	a93fff17 	ldw	r4,-4(r21)
 40096e0:	10fffe04 	addi	r3,r2,-8
 40096e4:	00bfff84 	movi	r2,-2
 40096e8:	2084703a 	and	r2,r4,r2
 40096ec:	9885883a 	add	r2,r19,r2
 40096f0:	1880ee26 	beq	r3,r2,4009aac <_realloc_r+0x490>
 40096f4:	81bfff04 	addi	r6,r16,-4
 40096f8:	00800904 	movi	r2,36
 40096fc:	1180b836 	bltu	r2,r6,40099e0 <_realloc_r+0x3c4>
 4009700:	00c004c4 	movi	r3,19
 4009704:	19809636 	bltu	r3,r6,4009960 <_realloc_r+0x344>
 4009708:	9005883a 	mov	r2,r18
 400970c:	a807883a 	mov	r3,r21
 4009710:	19000017 	ldw	r4,0(r3)
 4009714:	11000015 	stw	r4,0(r2)
 4009718:	19000117 	ldw	r4,4(r3)
 400971c:	11000115 	stw	r4,4(r2)
 4009720:	18c00217 	ldw	r3,8(r3)
 4009724:	10c00215 	stw	r3,8(r2)
 4009728:	a80b883a 	mov	r5,r21
 400972c:	a009883a 	mov	r4,r20
 4009730:	4006c100 	call	4006c10 <_free_r>
 4009734:	a009883a 	mov	r4,r20
 4009738:	400e4840 	call	400e484 <__malloc_unlock>
 400973c:	9005883a 	mov	r2,r18
 4009740:	00001206 	br	400978c <_realloc_r+0x170>
 4009744:	00c00404 	movi	r3,16
 4009748:	1823883a 	mov	r17,r3
 400974c:	003fce06 	br	4009688 <__alt_data_end+0xfc001688>
 4009750:	a825883a 	mov	r18,r21
 4009754:	8445c83a 	sub	r2,r16,r17
 4009758:	00c003c4 	movi	r3,15
 400975c:	18802636 	bltu	r3,r2,40097f8 <_realloc_r+0x1dc>
 4009760:	99800117 	ldw	r6,4(r19)
 4009764:	9c07883a 	add	r3,r19,r16
 4009768:	3180004c 	andi	r6,r6,1
 400976c:	3420b03a 	or	r16,r6,r16
 4009770:	9c000115 	stw	r16,4(r19)
 4009774:	18800117 	ldw	r2,4(r3)
 4009778:	10800054 	ori	r2,r2,1
 400977c:	18800115 	stw	r2,4(r3)
 4009780:	a009883a 	mov	r4,r20
 4009784:	400e4840 	call	400e484 <__malloc_unlock>
 4009788:	9005883a 	mov	r2,r18
 400978c:	dfc00917 	ldw	ra,36(sp)
 4009790:	df000817 	ldw	fp,32(sp)
 4009794:	ddc00717 	ldw	r23,28(sp)
 4009798:	dd800617 	ldw	r22,24(sp)
 400979c:	dd400517 	ldw	r21,20(sp)
 40097a0:	dd000417 	ldw	r20,16(sp)
 40097a4:	dcc00317 	ldw	r19,12(sp)
 40097a8:	dc800217 	ldw	r18,8(sp)
 40097ac:	dc400117 	ldw	r17,4(sp)
 40097b0:	dc000017 	ldw	r16,0(sp)
 40097b4:	dec00a04 	addi	sp,sp,40
 40097b8:	f800283a 	ret
 40097bc:	017fff04 	movi	r5,-4
 40097c0:	414a703a 	and	r5,r8,r5
 40097c4:	814d883a 	add	r6,r16,r5
 40097c8:	30c01f16 	blt	r6,r3,4009848 <_realloc_r+0x22c>
 40097cc:	20800317 	ldw	r2,12(r4)
 40097d0:	20c00217 	ldw	r3,8(r4)
 40097d4:	a825883a 	mov	r18,r21
 40097d8:	3021883a 	mov	r16,r6
 40097dc:	18800315 	stw	r2,12(r3)
 40097e0:	10c00215 	stw	r3,8(r2)
 40097e4:	003fdb06 	br	4009754 <__alt_data_end+0xfc001754>
 40097e8:	00800304 	movi	r2,12
 40097ec:	a0800015 	stw	r2,0(r20)
 40097f0:	0005883a 	mov	r2,zero
 40097f4:	003fe506 	br	400978c <__alt_data_end+0xfc00178c>
 40097f8:	98c00117 	ldw	r3,4(r19)
 40097fc:	9c4b883a 	add	r5,r19,r17
 4009800:	11000054 	ori	r4,r2,1
 4009804:	18c0004c 	andi	r3,r3,1
 4009808:	1c62b03a 	or	r17,r3,r17
 400980c:	9c400115 	stw	r17,4(r19)
 4009810:	29000115 	stw	r4,4(r5)
 4009814:	2885883a 	add	r2,r5,r2
 4009818:	10c00117 	ldw	r3,4(r2)
 400981c:	29400204 	addi	r5,r5,8
 4009820:	a009883a 	mov	r4,r20
 4009824:	18c00054 	ori	r3,r3,1
 4009828:	10c00115 	stw	r3,4(r2)
 400982c:	4006c100 	call	4006c10 <_free_r>
 4009830:	003fd306 	br	4009780 <__alt_data_end+0xfc001780>
 4009834:	017fff04 	movi	r5,-4
 4009838:	414a703a 	and	r5,r8,r5
 400983c:	89800404 	addi	r6,r17,16
 4009840:	8151883a 	add	r8,r16,r5
 4009844:	4180590e 	bge	r8,r6,40099ac <_realloc_r+0x390>
 4009848:	1080004c 	andi	r2,r2,1
 400984c:	103f9e1e 	bne	r2,zero,40096c8 <__alt_data_end+0xfc0016c8>
 4009850:	adbffe17 	ldw	r22,-8(r21)
 4009854:	00bfff04 	movi	r2,-4
 4009858:	9dadc83a 	sub	r22,r19,r22
 400985c:	b1800117 	ldw	r6,4(r22)
 4009860:	3084703a 	and	r2,r6,r2
 4009864:	20002026 	beq	r4,zero,40098e8 <_realloc_r+0x2cc>
 4009868:	80af883a 	add	r23,r16,r2
 400986c:	b96f883a 	add	r23,r23,r5
 4009870:	21c05f26 	beq	r4,r7,40099f0 <_realloc_r+0x3d4>
 4009874:	b8c01c16 	blt	r23,r3,40098e8 <_realloc_r+0x2cc>
 4009878:	20800317 	ldw	r2,12(r4)
 400987c:	20c00217 	ldw	r3,8(r4)
 4009880:	81bfff04 	addi	r6,r16,-4
 4009884:	01000904 	movi	r4,36
 4009888:	18800315 	stw	r2,12(r3)
 400988c:	10c00215 	stw	r3,8(r2)
 4009890:	b0c00217 	ldw	r3,8(r22)
 4009894:	b0800317 	ldw	r2,12(r22)
 4009898:	b4800204 	addi	r18,r22,8
 400989c:	18800315 	stw	r2,12(r3)
 40098a0:	10c00215 	stw	r3,8(r2)
 40098a4:	21801b36 	bltu	r4,r6,4009914 <_realloc_r+0x2f8>
 40098a8:	008004c4 	movi	r2,19
 40098ac:	1180352e 	bgeu	r2,r6,4009984 <_realloc_r+0x368>
 40098b0:	a8800017 	ldw	r2,0(r21)
 40098b4:	b0800215 	stw	r2,8(r22)
 40098b8:	a8800117 	ldw	r2,4(r21)
 40098bc:	b0800315 	stw	r2,12(r22)
 40098c0:	008006c4 	movi	r2,27
 40098c4:	11807f36 	bltu	r2,r6,4009ac4 <_realloc_r+0x4a8>
 40098c8:	b0800404 	addi	r2,r22,16
 40098cc:	ad400204 	addi	r21,r21,8
 40098d0:	00002d06 	br	4009988 <_realloc_r+0x36c>
 40098d4:	adbffe17 	ldw	r22,-8(r21)
 40098d8:	00bfff04 	movi	r2,-4
 40098dc:	9dadc83a 	sub	r22,r19,r22
 40098e0:	b1000117 	ldw	r4,4(r22)
 40098e4:	2084703a 	and	r2,r4,r2
 40098e8:	b03f7726 	beq	r22,zero,40096c8 <__alt_data_end+0xfc0016c8>
 40098ec:	80af883a 	add	r23,r16,r2
 40098f0:	b8ff7516 	blt	r23,r3,40096c8 <__alt_data_end+0xfc0016c8>
 40098f4:	b0800317 	ldw	r2,12(r22)
 40098f8:	b0c00217 	ldw	r3,8(r22)
 40098fc:	81bfff04 	addi	r6,r16,-4
 4009900:	01000904 	movi	r4,36
 4009904:	18800315 	stw	r2,12(r3)
 4009908:	10c00215 	stw	r3,8(r2)
 400990c:	b4800204 	addi	r18,r22,8
 4009910:	21bfe52e 	bgeu	r4,r6,40098a8 <__alt_data_end+0xfc0018a8>
 4009914:	a80b883a 	mov	r5,r21
 4009918:	9009883a 	mov	r4,r18
 400991c:	40082340 	call	4008234 <memmove>
 4009920:	b821883a 	mov	r16,r23
 4009924:	b027883a 	mov	r19,r22
 4009928:	003f8a06 	br	4009754 <__alt_data_end+0xfc001754>
 400992c:	300b883a 	mov	r5,r6
 4009930:	dfc00917 	ldw	ra,36(sp)
 4009934:	df000817 	ldw	fp,32(sp)
 4009938:	ddc00717 	ldw	r23,28(sp)
 400993c:	dd800617 	ldw	r22,24(sp)
 4009940:	dd400517 	ldw	r21,20(sp)
 4009944:	dd000417 	ldw	r20,16(sp)
 4009948:	dcc00317 	ldw	r19,12(sp)
 400994c:	dc800217 	ldw	r18,8(sp)
 4009950:	dc400117 	ldw	r17,4(sp)
 4009954:	dc000017 	ldw	r16,0(sp)
 4009958:	dec00a04 	addi	sp,sp,40
 400995c:	40077fc1 	jmpi	40077fc <_malloc_r>
 4009960:	a8c00017 	ldw	r3,0(r21)
 4009964:	90c00015 	stw	r3,0(r18)
 4009968:	a8c00117 	ldw	r3,4(r21)
 400996c:	90c00115 	stw	r3,4(r18)
 4009970:	00c006c4 	movi	r3,27
 4009974:	19804536 	bltu	r3,r6,4009a8c <_realloc_r+0x470>
 4009978:	90800204 	addi	r2,r18,8
 400997c:	a8c00204 	addi	r3,r21,8
 4009980:	003f6306 	br	4009710 <__alt_data_end+0xfc001710>
 4009984:	9005883a 	mov	r2,r18
 4009988:	a8c00017 	ldw	r3,0(r21)
 400998c:	b821883a 	mov	r16,r23
 4009990:	b027883a 	mov	r19,r22
 4009994:	10c00015 	stw	r3,0(r2)
 4009998:	a8c00117 	ldw	r3,4(r21)
 400999c:	10c00115 	stw	r3,4(r2)
 40099a0:	a8c00217 	ldw	r3,8(r21)
 40099a4:	10c00215 	stw	r3,8(r2)
 40099a8:	003f6a06 	br	4009754 <__alt_data_end+0xfc001754>
 40099ac:	9c67883a 	add	r19,r19,r17
 40099b0:	4445c83a 	sub	r2,r8,r17
 40099b4:	e4c00215 	stw	r19,8(fp)
 40099b8:	10800054 	ori	r2,r2,1
 40099bc:	98800115 	stw	r2,4(r19)
 40099c0:	a8bfff17 	ldw	r2,-4(r21)
 40099c4:	a009883a 	mov	r4,r20
 40099c8:	1080004c 	andi	r2,r2,1
 40099cc:	1462b03a 	or	r17,r2,r17
 40099d0:	ac7fff15 	stw	r17,-4(r21)
 40099d4:	400e4840 	call	400e484 <__malloc_unlock>
 40099d8:	a805883a 	mov	r2,r21
 40099dc:	003f6b06 	br	400978c <__alt_data_end+0xfc00178c>
 40099e0:	a80b883a 	mov	r5,r21
 40099e4:	9009883a 	mov	r4,r18
 40099e8:	40082340 	call	4008234 <memmove>
 40099ec:	003f4e06 	br	4009728 <__alt_data_end+0xfc001728>
 40099f0:	89000404 	addi	r4,r17,16
 40099f4:	b93fbc16 	blt	r23,r4,40098e8 <__alt_data_end+0xfc0018e8>
 40099f8:	b0800317 	ldw	r2,12(r22)
 40099fc:	b0c00217 	ldw	r3,8(r22)
 4009a00:	81bfff04 	addi	r6,r16,-4
 4009a04:	01000904 	movi	r4,36
 4009a08:	18800315 	stw	r2,12(r3)
 4009a0c:	10c00215 	stw	r3,8(r2)
 4009a10:	b4800204 	addi	r18,r22,8
 4009a14:	21804336 	bltu	r4,r6,4009b24 <_realloc_r+0x508>
 4009a18:	008004c4 	movi	r2,19
 4009a1c:	11803f2e 	bgeu	r2,r6,4009b1c <_realloc_r+0x500>
 4009a20:	a8800017 	ldw	r2,0(r21)
 4009a24:	b0800215 	stw	r2,8(r22)
 4009a28:	a8800117 	ldw	r2,4(r21)
 4009a2c:	b0800315 	stw	r2,12(r22)
 4009a30:	008006c4 	movi	r2,27
 4009a34:	11803f36 	bltu	r2,r6,4009b34 <_realloc_r+0x518>
 4009a38:	b0800404 	addi	r2,r22,16
 4009a3c:	ad400204 	addi	r21,r21,8
 4009a40:	a8c00017 	ldw	r3,0(r21)
 4009a44:	10c00015 	stw	r3,0(r2)
 4009a48:	a8c00117 	ldw	r3,4(r21)
 4009a4c:	10c00115 	stw	r3,4(r2)
 4009a50:	a8c00217 	ldw	r3,8(r21)
 4009a54:	10c00215 	stw	r3,8(r2)
 4009a58:	b447883a 	add	r3,r22,r17
 4009a5c:	bc45c83a 	sub	r2,r23,r17
 4009a60:	e0c00215 	stw	r3,8(fp)
 4009a64:	10800054 	ori	r2,r2,1
 4009a68:	18800115 	stw	r2,4(r3)
 4009a6c:	b0800117 	ldw	r2,4(r22)
 4009a70:	a009883a 	mov	r4,r20
 4009a74:	1080004c 	andi	r2,r2,1
 4009a78:	1462b03a 	or	r17,r2,r17
 4009a7c:	b4400115 	stw	r17,4(r22)
 4009a80:	400e4840 	call	400e484 <__malloc_unlock>
 4009a84:	9005883a 	mov	r2,r18
 4009a88:	003f4006 	br	400978c <__alt_data_end+0xfc00178c>
 4009a8c:	a8c00217 	ldw	r3,8(r21)
 4009a90:	90c00215 	stw	r3,8(r18)
 4009a94:	a8c00317 	ldw	r3,12(r21)
 4009a98:	90c00315 	stw	r3,12(r18)
 4009a9c:	30801126 	beq	r6,r2,4009ae4 <_realloc_r+0x4c8>
 4009aa0:	90800404 	addi	r2,r18,16
 4009aa4:	a8c00404 	addi	r3,r21,16
 4009aa8:	003f1906 	br	4009710 <__alt_data_end+0xfc001710>
 4009aac:	90ffff17 	ldw	r3,-4(r18)
 4009ab0:	00bfff04 	movi	r2,-4
 4009ab4:	a825883a 	mov	r18,r21
 4009ab8:	1884703a 	and	r2,r3,r2
 4009abc:	80a1883a 	add	r16,r16,r2
 4009ac0:	003f2406 	br	4009754 <__alt_data_end+0xfc001754>
 4009ac4:	a8800217 	ldw	r2,8(r21)
 4009ac8:	b0800415 	stw	r2,16(r22)
 4009acc:	a8800317 	ldw	r2,12(r21)
 4009ad0:	b0800515 	stw	r2,20(r22)
 4009ad4:	31000a26 	beq	r6,r4,4009b00 <_realloc_r+0x4e4>
 4009ad8:	b0800604 	addi	r2,r22,24
 4009adc:	ad400404 	addi	r21,r21,16
 4009ae0:	003fa906 	br	4009988 <__alt_data_end+0xfc001988>
 4009ae4:	a9000417 	ldw	r4,16(r21)
 4009ae8:	90800604 	addi	r2,r18,24
 4009aec:	a8c00604 	addi	r3,r21,24
 4009af0:	91000415 	stw	r4,16(r18)
 4009af4:	a9000517 	ldw	r4,20(r21)
 4009af8:	91000515 	stw	r4,20(r18)
 4009afc:	003f0406 	br	4009710 <__alt_data_end+0xfc001710>
 4009b00:	a8c00417 	ldw	r3,16(r21)
 4009b04:	ad400604 	addi	r21,r21,24
 4009b08:	b0800804 	addi	r2,r22,32
 4009b0c:	b0c00615 	stw	r3,24(r22)
 4009b10:	a8ffff17 	ldw	r3,-4(r21)
 4009b14:	b0c00715 	stw	r3,28(r22)
 4009b18:	003f9b06 	br	4009988 <__alt_data_end+0xfc001988>
 4009b1c:	9005883a 	mov	r2,r18
 4009b20:	003fc706 	br	4009a40 <__alt_data_end+0xfc001a40>
 4009b24:	a80b883a 	mov	r5,r21
 4009b28:	9009883a 	mov	r4,r18
 4009b2c:	40082340 	call	4008234 <memmove>
 4009b30:	003fc906 	br	4009a58 <__alt_data_end+0xfc001a58>
 4009b34:	a8800217 	ldw	r2,8(r21)
 4009b38:	b0800415 	stw	r2,16(r22)
 4009b3c:	a8800317 	ldw	r2,12(r21)
 4009b40:	b0800515 	stw	r2,20(r22)
 4009b44:	31000726 	beq	r6,r4,4009b64 <_realloc_r+0x548>
 4009b48:	b0800604 	addi	r2,r22,24
 4009b4c:	ad400404 	addi	r21,r21,16
 4009b50:	003fbb06 	br	4009a40 <__alt_data_end+0xfc001a40>
 4009b54:	a009883a 	mov	r4,r20
 4009b58:	400e4840 	call	400e484 <__malloc_unlock>
 4009b5c:	0005883a 	mov	r2,zero
 4009b60:	003f0a06 	br	400978c <__alt_data_end+0xfc00178c>
 4009b64:	a8c00417 	ldw	r3,16(r21)
 4009b68:	ad400604 	addi	r21,r21,24
 4009b6c:	b0800804 	addi	r2,r22,32
 4009b70:	b0c00615 	stw	r3,24(r22)
 4009b74:	a8ffff17 	ldw	r3,-4(r21)
 4009b78:	b0c00715 	stw	r3,28(r22)
 4009b7c:	003fb006 	br	4009a40 <__alt_data_end+0xfc001a40>

04009b80 <__fpclassifyd>:
 4009b80:	00a00034 	movhi	r2,32768
 4009b84:	10bfffc4 	addi	r2,r2,-1
 4009b88:	2884703a 	and	r2,r5,r2
 4009b8c:	10000726 	beq	r2,zero,4009bac <__fpclassifyd+0x2c>
 4009b90:	00fffc34 	movhi	r3,65520
 4009b94:	019ff834 	movhi	r6,32736
 4009b98:	28c7883a 	add	r3,r5,r3
 4009b9c:	31bfffc4 	addi	r6,r6,-1
 4009ba0:	30c00536 	bltu	r6,r3,4009bb8 <__fpclassifyd+0x38>
 4009ba4:	00800104 	movi	r2,4
 4009ba8:	f800283a 	ret
 4009bac:	2000021e 	bne	r4,zero,4009bb8 <__fpclassifyd+0x38>
 4009bb0:	00800084 	movi	r2,2
 4009bb4:	f800283a 	ret
 4009bb8:	00dffc34 	movhi	r3,32752
 4009bbc:	019ff834 	movhi	r6,32736
 4009bc0:	28cb883a 	add	r5,r5,r3
 4009bc4:	31bfffc4 	addi	r6,r6,-1
 4009bc8:	317ff62e 	bgeu	r6,r5,4009ba4 <__alt_data_end+0xfc001ba4>
 4009bcc:	01400434 	movhi	r5,16
 4009bd0:	297fffc4 	addi	r5,r5,-1
 4009bd4:	28800236 	bltu	r5,r2,4009be0 <__fpclassifyd+0x60>
 4009bd8:	008000c4 	movi	r2,3
 4009bdc:	f800283a 	ret
 4009be0:	10c00226 	beq	r2,r3,4009bec <__fpclassifyd+0x6c>
 4009be4:	0005883a 	mov	r2,zero
 4009be8:	f800283a 	ret
 4009bec:	2005003a 	cmpeq	r2,r4,zero
 4009bf0:	f800283a 	ret

04009bf4 <_sbrk_r>:
 4009bf4:	defffd04 	addi	sp,sp,-12
 4009bf8:	dc000015 	stw	r16,0(sp)
 4009bfc:	04010074 	movhi	r16,1025
 4009c00:	dc400115 	stw	r17,4(sp)
 4009c04:	840ee804 	addi	r16,r16,15264
 4009c08:	2023883a 	mov	r17,r4
 4009c0c:	2809883a 	mov	r4,r5
 4009c10:	dfc00215 	stw	ra,8(sp)
 4009c14:	80000015 	stw	zero,0(r16)
 4009c18:	400e6440 	call	400e644 <sbrk>
 4009c1c:	00ffffc4 	movi	r3,-1
 4009c20:	10c00526 	beq	r2,r3,4009c38 <_sbrk_r+0x44>
 4009c24:	dfc00217 	ldw	ra,8(sp)
 4009c28:	dc400117 	ldw	r17,4(sp)
 4009c2c:	dc000017 	ldw	r16,0(sp)
 4009c30:	dec00304 	addi	sp,sp,12
 4009c34:	f800283a 	ret
 4009c38:	80c00017 	ldw	r3,0(r16)
 4009c3c:	183ff926 	beq	r3,zero,4009c24 <__alt_data_end+0xfc001c24>
 4009c40:	88c00015 	stw	r3,0(r17)
 4009c44:	003ff706 	br	4009c24 <__alt_data_end+0xfc001c24>

04009c48 <__sread>:
 4009c48:	defffe04 	addi	sp,sp,-8
 4009c4c:	dc000015 	stw	r16,0(sp)
 4009c50:	2821883a 	mov	r16,r5
 4009c54:	2940038f 	ldh	r5,14(r5)
 4009c58:	dfc00115 	stw	ra,4(sp)
 4009c5c:	400bb940 	call	400bb94 <_read_r>
 4009c60:	10000716 	blt	r2,zero,4009c80 <__sread+0x38>
 4009c64:	80c01417 	ldw	r3,80(r16)
 4009c68:	1887883a 	add	r3,r3,r2
 4009c6c:	80c01415 	stw	r3,80(r16)
 4009c70:	dfc00117 	ldw	ra,4(sp)
 4009c74:	dc000017 	ldw	r16,0(sp)
 4009c78:	dec00204 	addi	sp,sp,8
 4009c7c:	f800283a 	ret
 4009c80:	80c0030b 	ldhu	r3,12(r16)
 4009c84:	18fbffcc 	andi	r3,r3,61439
 4009c88:	80c0030d 	sth	r3,12(r16)
 4009c8c:	dfc00117 	ldw	ra,4(sp)
 4009c90:	dc000017 	ldw	r16,0(sp)
 4009c94:	dec00204 	addi	sp,sp,8
 4009c98:	f800283a 	ret

04009c9c <__seofread>:
 4009c9c:	0005883a 	mov	r2,zero
 4009ca0:	f800283a 	ret

04009ca4 <__swrite>:
 4009ca4:	2880030b 	ldhu	r2,12(r5)
 4009ca8:	defffb04 	addi	sp,sp,-20
 4009cac:	dcc00315 	stw	r19,12(sp)
 4009cb0:	dc800215 	stw	r18,8(sp)
 4009cb4:	dc400115 	stw	r17,4(sp)
 4009cb8:	dc000015 	stw	r16,0(sp)
 4009cbc:	dfc00415 	stw	ra,16(sp)
 4009cc0:	10c0400c 	andi	r3,r2,256
 4009cc4:	2821883a 	mov	r16,r5
 4009cc8:	2023883a 	mov	r17,r4
 4009ccc:	3025883a 	mov	r18,r6
 4009cd0:	3827883a 	mov	r19,r7
 4009cd4:	18000526 	beq	r3,zero,4009cec <__swrite+0x48>
 4009cd8:	2940038f 	ldh	r5,14(r5)
 4009cdc:	01c00084 	movi	r7,2
 4009ce0:	000d883a 	mov	r6,zero
 4009ce4:	400bb340 	call	400bb34 <_lseek_r>
 4009ce8:	8080030b 	ldhu	r2,12(r16)
 4009cec:	8140038f 	ldh	r5,14(r16)
 4009cf0:	10bbffcc 	andi	r2,r2,61439
 4009cf4:	980f883a 	mov	r7,r19
 4009cf8:	900d883a 	mov	r6,r18
 4009cfc:	8809883a 	mov	r4,r17
 4009d00:	8080030d 	sth	r2,12(r16)
 4009d04:	dfc00417 	ldw	ra,16(sp)
 4009d08:	dcc00317 	ldw	r19,12(sp)
 4009d0c:	dc800217 	ldw	r18,8(sp)
 4009d10:	dc400117 	ldw	r17,4(sp)
 4009d14:	dc000017 	ldw	r16,0(sp)
 4009d18:	dec00504 	addi	sp,sp,20
 4009d1c:	400b6001 	jmpi	400b600 <_write_r>

04009d20 <__sseek>:
 4009d20:	defffe04 	addi	sp,sp,-8
 4009d24:	dc000015 	stw	r16,0(sp)
 4009d28:	2821883a 	mov	r16,r5
 4009d2c:	2940038f 	ldh	r5,14(r5)
 4009d30:	dfc00115 	stw	ra,4(sp)
 4009d34:	400bb340 	call	400bb34 <_lseek_r>
 4009d38:	00ffffc4 	movi	r3,-1
 4009d3c:	10c00826 	beq	r2,r3,4009d60 <__sseek+0x40>
 4009d40:	80c0030b 	ldhu	r3,12(r16)
 4009d44:	80801415 	stw	r2,80(r16)
 4009d48:	18c40014 	ori	r3,r3,4096
 4009d4c:	80c0030d 	sth	r3,12(r16)
 4009d50:	dfc00117 	ldw	ra,4(sp)
 4009d54:	dc000017 	ldw	r16,0(sp)
 4009d58:	dec00204 	addi	sp,sp,8
 4009d5c:	f800283a 	ret
 4009d60:	80c0030b 	ldhu	r3,12(r16)
 4009d64:	18fbffcc 	andi	r3,r3,61439
 4009d68:	80c0030d 	sth	r3,12(r16)
 4009d6c:	dfc00117 	ldw	ra,4(sp)
 4009d70:	dc000017 	ldw	r16,0(sp)
 4009d74:	dec00204 	addi	sp,sp,8
 4009d78:	f800283a 	ret

04009d7c <__sclose>:
 4009d7c:	2940038f 	ldh	r5,14(r5)
 4009d80:	400b6601 	jmpi	400b660 <_close_r>

04009d84 <strcmp>:
 4009d84:	2144b03a 	or	r2,r4,r5
 4009d88:	108000cc 	andi	r2,r2,3
 4009d8c:	1000171e 	bne	r2,zero,4009dec <strcmp+0x68>
 4009d90:	20800017 	ldw	r2,0(r4)
 4009d94:	28c00017 	ldw	r3,0(r5)
 4009d98:	10c0141e 	bne	r2,r3,4009dec <strcmp+0x68>
 4009d9c:	027fbff4 	movhi	r9,65279
 4009da0:	4a7fbfc4 	addi	r9,r9,-257
 4009da4:	0086303a 	nor	r3,zero,r2
 4009da8:	02202074 	movhi	r8,32897
 4009dac:	1245883a 	add	r2,r2,r9
 4009db0:	42202004 	addi	r8,r8,-32640
 4009db4:	10c4703a 	and	r2,r2,r3
 4009db8:	1204703a 	and	r2,r2,r8
 4009dbc:	10000226 	beq	r2,zero,4009dc8 <strcmp+0x44>
 4009dc0:	00002306 	br	4009e50 <strcmp+0xcc>
 4009dc4:	1000221e 	bne	r2,zero,4009e50 <strcmp+0xcc>
 4009dc8:	21000104 	addi	r4,r4,4
 4009dcc:	20c00017 	ldw	r3,0(r4)
 4009dd0:	29400104 	addi	r5,r5,4
 4009dd4:	29800017 	ldw	r6,0(r5)
 4009dd8:	1a4f883a 	add	r7,r3,r9
 4009ddc:	00c4303a 	nor	r2,zero,r3
 4009de0:	3884703a 	and	r2,r7,r2
 4009de4:	1204703a 	and	r2,r2,r8
 4009de8:	19bff626 	beq	r3,r6,4009dc4 <__alt_data_end+0xfc001dc4>
 4009dec:	20800003 	ldbu	r2,0(r4)
 4009df0:	10c03fcc 	andi	r3,r2,255
 4009df4:	18c0201c 	xori	r3,r3,128
 4009df8:	18ffe004 	addi	r3,r3,-128
 4009dfc:	18000c26 	beq	r3,zero,4009e30 <strcmp+0xac>
 4009e00:	29800007 	ldb	r6,0(r5)
 4009e04:	19800326 	beq	r3,r6,4009e14 <strcmp+0x90>
 4009e08:	00001306 	br	4009e58 <strcmp+0xd4>
 4009e0c:	29800007 	ldb	r6,0(r5)
 4009e10:	11800b1e 	bne	r2,r6,4009e40 <strcmp+0xbc>
 4009e14:	21000044 	addi	r4,r4,1
 4009e18:	20c00003 	ldbu	r3,0(r4)
 4009e1c:	29400044 	addi	r5,r5,1
 4009e20:	18803fcc 	andi	r2,r3,255
 4009e24:	1080201c 	xori	r2,r2,128
 4009e28:	10bfe004 	addi	r2,r2,-128
 4009e2c:	103ff71e 	bne	r2,zero,4009e0c <__alt_data_end+0xfc001e0c>
 4009e30:	0007883a 	mov	r3,zero
 4009e34:	28800003 	ldbu	r2,0(r5)
 4009e38:	1885c83a 	sub	r2,r3,r2
 4009e3c:	f800283a 	ret
 4009e40:	28800003 	ldbu	r2,0(r5)
 4009e44:	18c03fcc 	andi	r3,r3,255
 4009e48:	1885c83a 	sub	r2,r3,r2
 4009e4c:	f800283a 	ret
 4009e50:	0005883a 	mov	r2,zero
 4009e54:	f800283a 	ret
 4009e58:	10c03fcc 	andi	r3,r2,255
 4009e5c:	003ff506 	br	4009e34 <__alt_data_end+0xfc001e34>

04009e60 <__sprint_r.part.0>:
 4009e60:	28801917 	ldw	r2,100(r5)
 4009e64:	defff604 	addi	sp,sp,-40
 4009e68:	dd400515 	stw	r21,20(sp)
 4009e6c:	dfc00915 	stw	ra,36(sp)
 4009e70:	df000815 	stw	fp,32(sp)
 4009e74:	ddc00715 	stw	r23,28(sp)
 4009e78:	dd800615 	stw	r22,24(sp)
 4009e7c:	dd000415 	stw	r20,16(sp)
 4009e80:	dcc00315 	stw	r19,12(sp)
 4009e84:	dc800215 	stw	r18,8(sp)
 4009e88:	dc400115 	stw	r17,4(sp)
 4009e8c:	dc000015 	stw	r16,0(sp)
 4009e90:	1088000c 	andi	r2,r2,8192
 4009e94:	302b883a 	mov	r21,r6
 4009e98:	10002e26 	beq	r2,zero,4009f54 <__sprint_r.part.0+0xf4>
 4009e9c:	30800217 	ldw	r2,8(r6)
 4009ea0:	35800017 	ldw	r22,0(r6)
 4009ea4:	10002926 	beq	r2,zero,4009f4c <__sprint_r.part.0+0xec>
 4009ea8:	2827883a 	mov	r19,r5
 4009eac:	2029883a 	mov	r20,r4
 4009eb0:	b5c00104 	addi	r23,r22,4
 4009eb4:	04bfffc4 	movi	r18,-1
 4009eb8:	bc400017 	ldw	r17,0(r23)
 4009ebc:	b4000017 	ldw	r16,0(r22)
 4009ec0:	0039883a 	mov	fp,zero
 4009ec4:	8822d0ba 	srli	r17,r17,2
 4009ec8:	8800031e 	bne	r17,zero,4009ed8 <__sprint_r.part.0+0x78>
 4009ecc:	00001806 	br	4009f30 <__sprint_r.part.0+0xd0>
 4009ed0:	84000104 	addi	r16,r16,4
 4009ed4:	8f001526 	beq	r17,fp,4009f2c <__sprint_r.part.0+0xcc>
 4009ed8:	81400017 	ldw	r5,0(r16)
 4009edc:	980d883a 	mov	r6,r19
 4009ee0:	a009883a 	mov	r4,r20
 4009ee4:	400b9e00 	call	400b9e0 <_fputwc_r>
 4009ee8:	e7000044 	addi	fp,fp,1
 4009eec:	14bff81e 	bne	r2,r18,4009ed0 <__alt_data_end+0xfc001ed0>
 4009ef0:	9005883a 	mov	r2,r18
 4009ef4:	a8000215 	stw	zero,8(r21)
 4009ef8:	a8000115 	stw	zero,4(r21)
 4009efc:	dfc00917 	ldw	ra,36(sp)
 4009f00:	df000817 	ldw	fp,32(sp)
 4009f04:	ddc00717 	ldw	r23,28(sp)
 4009f08:	dd800617 	ldw	r22,24(sp)
 4009f0c:	dd400517 	ldw	r21,20(sp)
 4009f10:	dd000417 	ldw	r20,16(sp)
 4009f14:	dcc00317 	ldw	r19,12(sp)
 4009f18:	dc800217 	ldw	r18,8(sp)
 4009f1c:	dc400117 	ldw	r17,4(sp)
 4009f20:	dc000017 	ldw	r16,0(sp)
 4009f24:	dec00a04 	addi	sp,sp,40
 4009f28:	f800283a 	ret
 4009f2c:	a8800217 	ldw	r2,8(r21)
 4009f30:	8c63883a 	add	r17,r17,r17
 4009f34:	8c63883a 	add	r17,r17,r17
 4009f38:	1445c83a 	sub	r2,r2,r17
 4009f3c:	a8800215 	stw	r2,8(r21)
 4009f40:	b5800204 	addi	r22,r22,8
 4009f44:	bdc00204 	addi	r23,r23,8
 4009f48:	103fdb1e 	bne	r2,zero,4009eb8 <__alt_data_end+0xfc001eb8>
 4009f4c:	0005883a 	mov	r2,zero
 4009f50:	003fe806 	br	4009ef4 <__alt_data_end+0xfc001ef4>
 4009f54:	4006f200 	call	4006f20 <__sfvwrite_r>
 4009f58:	003fe606 	br	4009ef4 <__alt_data_end+0xfc001ef4>

04009f5c <__sprint_r>:
 4009f5c:	30c00217 	ldw	r3,8(r6)
 4009f60:	18000126 	beq	r3,zero,4009f68 <__sprint_r+0xc>
 4009f64:	4009e601 	jmpi	4009e60 <__sprint_r.part.0>
 4009f68:	30000115 	stw	zero,4(r6)
 4009f6c:	0005883a 	mov	r2,zero
 4009f70:	f800283a 	ret

04009f74 <___vfiprintf_internal_r>:
 4009f74:	deffc904 	addi	sp,sp,-220
 4009f78:	df003515 	stw	fp,212(sp)
 4009f7c:	dd003115 	stw	r20,196(sp)
 4009f80:	dfc03615 	stw	ra,216(sp)
 4009f84:	ddc03415 	stw	r23,208(sp)
 4009f88:	dd803315 	stw	r22,204(sp)
 4009f8c:	dd403215 	stw	r21,200(sp)
 4009f90:	dcc03015 	stw	r19,192(sp)
 4009f94:	dc802f15 	stw	r18,188(sp)
 4009f98:	dc402e15 	stw	r17,184(sp)
 4009f9c:	dc002d15 	stw	r16,180(sp)
 4009fa0:	d9002015 	stw	r4,128(sp)
 4009fa4:	d9c02215 	stw	r7,136(sp)
 4009fa8:	2829883a 	mov	r20,r5
 4009fac:	3039883a 	mov	fp,r6
 4009fb0:	20000226 	beq	r4,zero,4009fbc <___vfiprintf_internal_r+0x48>
 4009fb4:	20800e17 	ldw	r2,56(r4)
 4009fb8:	1000cf26 	beq	r2,zero,400a2f8 <___vfiprintf_internal_r+0x384>
 4009fbc:	a080030b 	ldhu	r2,12(r20)
 4009fc0:	10c8000c 	andi	r3,r2,8192
 4009fc4:	1800061e 	bne	r3,zero,4009fe0 <___vfiprintf_internal_r+0x6c>
 4009fc8:	a1001917 	ldw	r4,100(r20)
 4009fcc:	00f7ffc4 	movi	r3,-8193
 4009fd0:	10880014 	ori	r2,r2,8192
 4009fd4:	20c6703a 	and	r3,r4,r3
 4009fd8:	a080030d 	sth	r2,12(r20)
 4009fdc:	a0c01915 	stw	r3,100(r20)
 4009fe0:	10c0020c 	andi	r3,r2,8
 4009fe4:	1800a926 	beq	r3,zero,400a28c <___vfiprintf_internal_r+0x318>
 4009fe8:	a0c00417 	ldw	r3,16(r20)
 4009fec:	1800a726 	beq	r3,zero,400a28c <___vfiprintf_internal_r+0x318>
 4009ff0:	1080068c 	andi	r2,r2,26
 4009ff4:	00c00284 	movi	r3,10
 4009ff8:	10c0ac26 	beq	r2,r3,400a2ac <___vfiprintf_internal_r+0x338>
 4009ffc:	da801a04 	addi	r10,sp,104
 400a000:	da801e15 	stw	r10,120(sp)
 400a004:	d8801e17 	ldw	r2,120(sp)
 400a008:	da8019c4 	addi	r10,sp,103
 400a00c:	05820034 	movhi	r22,2048
 400a010:	05c20034 	movhi	r23,2048
 400a014:	da801f15 	stw	r10,124(sp)
 400a018:	1295c83a 	sub	r10,r2,r10
 400a01c:	b5811a04 	addi	r22,r22,1128
 400a020:	bdc11604 	addi	r23,r23,1112
 400a024:	dec01a15 	stw	sp,104(sp)
 400a028:	d8001c15 	stw	zero,112(sp)
 400a02c:	d8001b15 	stw	zero,108(sp)
 400a030:	d8002615 	stw	zero,152(sp)
 400a034:	d8002315 	stw	zero,140(sp)
 400a038:	da802715 	stw	r10,156(sp)
 400a03c:	d811883a 	mov	r8,sp
 400a040:	dd002115 	stw	r20,132(sp)
 400a044:	e021883a 	mov	r16,fp
 400a048:	80800007 	ldb	r2,0(r16)
 400a04c:	1003ea26 	beq	r2,zero,400aff8 <___vfiprintf_internal_r+0x1084>
 400a050:	00c00944 	movi	r3,37
 400a054:	8025883a 	mov	r18,r16
 400a058:	10c0021e 	bne	r2,r3,400a064 <___vfiprintf_internal_r+0xf0>
 400a05c:	00001606 	br	400a0b8 <___vfiprintf_internal_r+0x144>
 400a060:	10c00326 	beq	r2,r3,400a070 <___vfiprintf_internal_r+0xfc>
 400a064:	94800044 	addi	r18,r18,1
 400a068:	90800007 	ldb	r2,0(r18)
 400a06c:	103ffc1e 	bne	r2,zero,400a060 <__alt_data_end+0xfc002060>
 400a070:	9423c83a 	sub	r17,r18,r16
 400a074:	88001026 	beq	r17,zero,400a0b8 <___vfiprintf_internal_r+0x144>
 400a078:	d8c01c17 	ldw	r3,112(sp)
 400a07c:	d8801b17 	ldw	r2,108(sp)
 400a080:	44000015 	stw	r16,0(r8)
 400a084:	88c7883a 	add	r3,r17,r3
 400a088:	10800044 	addi	r2,r2,1
 400a08c:	44400115 	stw	r17,4(r8)
 400a090:	d8c01c15 	stw	r3,112(sp)
 400a094:	d8801b15 	stw	r2,108(sp)
 400a098:	010001c4 	movi	r4,7
 400a09c:	2080760e 	bge	r4,r2,400a278 <___vfiprintf_internal_r+0x304>
 400a0a0:	1803821e 	bne	r3,zero,400aeac <___vfiprintf_internal_r+0xf38>
 400a0a4:	da802317 	ldw	r10,140(sp)
 400a0a8:	d8001b15 	stw	zero,108(sp)
 400a0ac:	d811883a 	mov	r8,sp
 400a0b0:	5455883a 	add	r10,r10,r17
 400a0b4:	da802315 	stw	r10,140(sp)
 400a0b8:	90800007 	ldb	r2,0(r18)
 400a0bc:	10044626 	beq	r2,zero,400b1d8 <___vfiprintf_internal_r+0x1264>
 400a0c0:	90c00047 	ldb	r3,1(r18)
 400a0c4:	94000044 	addi	r16,r18,1
 400a0c8:	d8001d85 	stb	zero,118(sp)
 400a0cc:	0009883a 	mov	r4,zero
 400a0d0:	000f883a 	mov	r7,zero
 400a0d4:	027fffc4 	movi	r9,-1
 400a0d8:	0023883a 	mov	r17,zero
 400a0dc:	0029883a 	mov	r20,zero
 400a0e0:	01401604 	movi	r5,88
 400a0e4:	01800244 	movi	r6,9
 400a0e8:	03400a84 	movi	r13,42
 400a0ec:	03001b04 	movi	r12,108
 400a0f0:	84000044 	addi	r16,r16,1
 400a0f4:	18bff804 	addi	r2,r3,-32
 400a0f8:	28827336 	bltu	r5,r2,400aac8 <___vfiprintf_internal_r+0xb54>
 400a0fc:	100490ba 	slli	r2,r2,2
 400a100:	02810074 	movhi	r10,1025
 400a104:	52a84504 	addi	r10,r10,-24300
 400a108:	1285883a 	add	r2,r2,r10
 400a10c:	10800017 	ldw	r2,0(r2)
 400a110:	1000683a 	jmp	r2
 400a114:	0400a7fc 	xorhi	r16,zero,671
 400a118:	0400aac8 	cmpgei	r16,zero,683
 400a11c:	0400aac8 	cmpgei	r16,zero,683
 400a120:	0400a81c 	xori	r16,zero,672
 400a124:	0400aac8 	cmpgei	r16,zero,683
 400a128:	0400aac8 	cmpgei	r16,zero,683
 400a12c:	0400aac8 	cmpgei	r16,zero,683
 400a130:	0400aac8 	cmpgei	r16,zero,683
 400a134:	0400aac8 	cmpgei	r16,zero,683
 400a138:	0400aac8 	cmpgei	r16,zero,683
 400a13c:	0400aa04 	movi	r16,680
 400a140:	0400aa20 	cmpeqi	r16,zero,680
 400a144:	0400aac8 	cmpgei	r16,zero,683
 400a148:	0400a308 	cmpgei	r16,zero,652
 400a14c:	0400aa30 	cmpltui	r16,zero,680
 400a150:	0400aac8 	cmpgei	r16,zero,683
 400a154:	0400a828 	cmpgeui	r16,zero,672
 400a158:	0400a834 	movhi	r16,672
 400a15c:	0400a834 	movhi	r16,672
 400a160:	0400a834 	movhi	r16,672
 400a164:	0400a834 	movhi	r16,672
 400a168:	0400a834 	movhi	r16,672
 400a16c:	0400a834 	movhi	r16,672
 400a170:	0400a834 	movhi	r16,672
 400a174:	0400a834 	movhi	r16,672
 400a178:	0400a834 	movhi	r16,672
 400a17c:	0400aac8 	cmpgei	r16,zero,683
 400a180:	0400aac8 	cmpgei	r16,zero,683
 400a184:	0400aac8 	cmpgei	r16,zero,683
 400a188:	0400aac8 	cmpgei	r16,zero,683
 400a18c:	0400aac8 	cmpgei	r16,zero,683
 400a190:	0400aac8 	cmpgei	r16,zero,683
 400a194:	0400aac8 	cmpgei	r16,zero,683
 400a198:	0400aac8 	cmpgei	r16,zero,683
 400a19c:	0400aac8 	cmpgei	r16,zero,683
 400a1a0:	0400aac8 	cmpgei	r16,zero,683
 400a1a4:	0400a860 	cmpeqi	r16,zero,673
 400a1a8:	0400aac8 	cmpgei	r16,zero,683
 400a1ac:	0400aac8 	cmpgei	r16,zero,683
 400a1b0:	0400aac8 	cmpgei	r16,zero,683
 400a1b4:	0400aac8 	cmpgei	r16,zero,683
 400a1b8:	0400aac8 	cmpgei	r16,zero,683
 400a1bc:	0400aac8 	cmpgei	r16,zero,683
 400a1c0:	0400aac8 	cmpgei	r16,zero,683
 400a1c4:	0400aac8 	cmpgei	r16,zero,683
 400a1c8:	0400aac8 	cmpgei	r16,zero,683
 400a1cc:	0400aac8 	cmpgei	r16,zero,683
 400a1d0:	0400a898 	cmpnei	r16,zero,674
 400a1d4:	0400aac8 	cmpgei	r16,zero,683
 400a1d8:	0400aac8 	cmpgei	r16,zero,683
 400a1dc:	0400aac8 	cmpgei	r16,zero,683
 400a1e0:	0400aac8 	cmpgei	r16,zero,683
 400a1e4:	0400aac8 	cmpgei	r16,zero,683
 400a1e8:	0400a8f0 	cmpltui	r16,zero,675
 400a1ec:	0400aac8 	cmpgei	r16,zero,683
 400a1f0:	0400aac8 	cmpgei	r16,zero,683
 400a1f4:	0400a960 	cmpeqi	r16,zero,677
 400a1f8:	0400aac8 	cmpgei	r16,zero,683
 400a1fc:	0400aac8 	cmpgei	r16,zero,683
 400a200:	0400aac8 	cmpgei	r16,zero,683
 400a204:	0400aac8 	cmpgei	r16,zero,683
 400a208:	0400aac8 	cmpgei	r16,zero,683
 400a20c:	0400aac8 	cmpgei	r16,zero,683
 400a210:	0400aac8 	cmpgei	r16,zero,683
 400a214:	0400aac8 	cmpgei	r16,zero,683
 400a218:	0400aac8 	cmpgei	r16,zero,683
 400a21c:	0400aac8 	cmpgei	r16,zero,683
 400a220:	0400a70c 	andi	r16,zero,668
 400a224:	0400a738 	rdprs	r16,zero,668
 400a228:	0400aac8 	cmpgei	r16,zero,683
 400a22c:	0400aac8 	cmpgei	r16,zero,683
 400a230:	0400aac8 	cmpgei	r16,zero,683
 400a234:	0400aa70 	cmpltui	r16,zero,681
 400a238:	0400a738 	rdprs	r16,zero,668
 400a23c:	0400aac8 	cmpgei	r16,zero,683
 400a240:	0400aac8 	cmpgei	r16,zero,683
 400a244:	0400a5cc 	andi	r16,zero,663
 400a248:	0400aac8 	cmpgei	r16,zero,683
 400a24c:	0400a5dc 	xori	r16,zero,663
 400a250:	0400a618 	cmpnei	r16,zero,664
 400a254:	0400a314 	movui	r16,652
 400a258:	0400a5c0 	call	400a5c <__alt_mem_new_sdram_controller_0-0x3bff5a4>
 400a25c:	0400aac8 	cmpgei	r16,zero,683
 400a260:	0400a99c 	xori	r16,zero,678
 400a264:	0400aac8 	cmpgei	r16,zero,683
 400a268:	0400a9f4 	movhi	r16,679
 400a26c:	0400aac8 	cmpgei	r16,zero,683
 400a270:	0400aac8 	cmpgei	r16,zero,683
 400a274:	0400a6b8 	rdprs	r16,zero,666
 400a278:	42000204 	addi	r8,r8,8
 400a27c:	da802317 	ldw	r10,140(sp)
 400a280:	5455883a 	add	r10,r10,r17
 400a284:	da802315 	stw	r10,140(sp)
 400a288:	003f8b06 	br	400a0b8 <__alt_data_end+0xfc0020b8>
 400a28c:	d9002017 	ldw	r4,128(sp)
 400a290:	a00b883a 	mov	r5,r20
 400a294:	4004ac80 	call	4004ac8 <__swsetup_r>
 400a298:	1003b11e 	bne	r2,zero,400b160 <___vfiprintf_internal_r+0x11ec>
 400a29c:	a080030b 	ldhu	r2,12(r20)
 400a2a0:	00c00284 	movi	r3,10
 400a2a4:	1080068c 	andi	r2,r2,26
 400a2a8:	10ff541e 	bne	r2,r3,4009ffc <__alt_data_end+0xfc001ffc>
 400a2ac:	a080038f 	ldh	r2,14(r20)
 400a2b0:	103f5216 	blt	r2,zero,4009ffc <__alt_data_end+0xfc001ffc>
 400a2b4:	d9c02217 	ldw	r7,136(sp)
 400a2b8:	d9002017 	ldw	r4,128(sp)
 400a2bc:	e00d883a 	mov	r6,fp
 400a2c0:	a00b883a 	mov	r5,r20
 400a2c4:	400b3ec0 	call	400b3ec <__sbprintf>
 400a2c8:	dfc03617 	ldw	ra,216(sp)
 400a2cc:	df003517 	ldw	fp,212(sp)
 400a2d0:	ddc03417 	ldw	r23,208(sp)
 400a2d4:	dd803317 	ldw	r22,204(sp)
 400a2d8:	dd403217 	ldw	r21,200(sp)
 400a2dc:	dd003117 	ldw	r20,196(sp)
 400a2e0:	dcc03017 	ldw	r19,192(sp)
 400a2e4:	dc802f17 	ldw	r18,188(sp)
 400a2e8:	dc402e17 	ldw	r17,184(sp)
 400a2ec:	dc002d17 	ldw	r16,180(sp)
 400a2f0:	dec03704 	addi	sp,sp,220
 400a2f4:	f800283a 	ret
 400a2f8:	4006a9c0 	call	4006a9c <__sinit>
 400a2fc:	003f2f06 	br	4009fbc <__alt_data_end+0xfc001fbc>
 400a300:	0463c83a 	sub	r17,zero,r17
 400a304:	d8802215 	stw	r2,136(sp)
 400a308:	a5000114 	ori	r20,r20,4
 400a30c:	80c00007 	ldb	r3,0(r16)
 400a310:	003f7706 	br	400a0f0 <__alt_data_end+0xfc0020f0>
 400a314:	00800c04 	movi	r2,48
 400a318:	da802217 	ldw	r10,136(sp)
 400a31c:	d8801d05 	stb	r2,116(sp)
 400a320:	00801e04 	movi	r2,120
 400a324:	d8801d45 	stb	r2,117(sp)
 400a328:	d8001d85 	stb	zero,118(sp)
 400a32c:	50c00104 	addi	r3,r10,4
 400a330:	54800017 	ldw	r18,0(r10)
 400a334:	0027883a 	mov	r19,zero
 400a338:	a0800094 	ori	r2,r20,2
 400a33c:	48030b16 	blt	r9,zero,400af6c <___vfiprintf_internal_r+0xff8>
 400a340:	00bfdfc4 	movi	r2,-129
 400a344:	a096703a 	and	r11,r20,r2
 400a348:	d8c02215 	stw	r3,136(sp)
 400a34c:	5d000094 	ori	r20,r11,2
 400a350:	90032b1e 	bne	r18,zero,400b000 <___vfiprintf_internal_r+0x108c>
 400a354:	00820034 	movhi	r2,2048
 400a358:	1080b504 	addi	r2,r2,724
 400a35c:	d8802615 	stw	r2,152(sp)
 400a360:	0039883a 	mov	fp,zero
 400a364:	48017b1e 	bne	r9,zero,400a954 <___vfiprintf_internal_r+0x9e0>
 400a368:	0013883a 	mov	r9,zero
 400a36c:	0027883a 	mov	r19,zero
 400a370:	dd401a04 	addi	r21,sp,104
 400a374:	4825883a 	mov	r18,r9
 400a378:	4cc0010e 	bge	r9,r19,400a380 <___vfiprintf_internal_r+0x40c>
 400a37c:	9825883a 	mov	r18,r19
 400a380:	e7003fcc 	andi	fp,fp,255
 400a384:	e700201c 	xori	fp,fp,128
 400a388:	e73fe004 	addi	fp,fp,-128
 400a38c:	e0000126 	beq	fp,zero,400a394 <___vfiprintf_internal_r+0x420>
 400a390:	94800044 	addi	r18,r18,1
 400a394:	a380008c 	andi	r14,r20,2
 400a398:	70000126 	beq	r14,zero,400a3a0 <___vfiprintf_internal_r+0x42c>
 400a39c:	94800084 	addi	r18,r18,2
 400a3a0:	a700210c 	andi	fp,r20,132
 400a3a4:	e001df1e 	bne	fp,zero,400ab24 <___vfiprintf_internal_r+0xbb0>
 400a3a8:	8c87c83a 	sub	r3,r17,r18
 400a3ac:	00c1dd0e 	bge	zero,r3,400ab24 <___vfiprintf_internal_r+0xbb0>
 400a3b0:	01c00404 	movi	r7,16
 400a3b4:	d8801c17 	ldw	r2,112(sp)
 400a3b8:	38c3ad0e 	bge	r7,r3,400b270 <___vfiprintf_internal_r+0x12fc>
 400a3bc:	02820034 	movhi	r10,2048
 400a3c0:	52811a04 	addi	r10,r10,1128
 400a3c4:	dc002915 	stw	r16,164(sp)
 400a3c8:	d9801b17 	ldw	r6,108(sp)
 400a3cc:	da802415 	stw	r10,144(sp)
 400a3d0:	03c001c4 	movi	r15,7
 400a3d4:	da402515 	stw	r9,148(sp)
 400a3d8:	db802815 	stw	r14,160(sp)
 400a3dc:	1821883a 	mov	r16,r3
 400a3e0:	00000506 	br	400a3f8 <___vfiprintf_internal_r+0x484>
 400a3e4:	31400084 	addi	r5,r6,2
 400a3e8:	42000204 	addi	r8,r8,8
 400a3ec:	200d883a 	mov	r6,r4
 400a3f0:	843ffc04 	addi	r16,r16,-16
 400a3f4:	3c000d0e 	bge	r7,r16,400a42c <___vfiprintf_internal_r+0x4b8>
 400a3f8:	10800404 	addi	r2,r2,16
 400a3fc:	31000044 	addi	r4,r6,1
 400a400:	45800015 	stw	r22,0(r8)
 400a404:	41c00115 	stw	r7,4(r8)
 400a408:	d8801c15 	stw	r2,112(sp)
 400a40c:	d9001b15 	stw	r4,108(sp)
 400a410:	793ff40e 	bge	r15,r4,400a3e4 <__alt_data_end+0xfc0023e4>
 400a414:	1001b51e 	bne	r2,zero,400aaec <___vfiprintf_internal_r+0xb78>
 400a418:	843ffc04 	addi	r16,r16,-16
 400a41c:	000d883a 	mov	r6,zero
 400a420:	01400044 	movi	r5,1
 400a424:	d811883a 	mov	r8,sp
 400a428:	3c3ff316 	blt	r7,r16,400a3f8 <__alt_data_end+0xfc0023f8>
 400a42c:	8007883a 	mov	r3,r16
 400a430:	da402517 	ldw	r9,148(sp)
 400a434:	db802817 	ldw	r14,160(sp)
 400a438:	dc002917 	ldw	r16,164(sp)
 400a43c:	da802417 	ldw	r10,144(sp)
 400a440:	1885883a 	add	r2,r3,r2
 400a444:	40c00115 	stw	r3,4(r8)
 400a448:	42800015 	stw	r10,0(r8)
 400a44c:	d8801c15 	stw	r2,112(sp)
 400a450:	d9401b15 	stw	r5,108(sp)
 400a454:	00c001c4 	movi	r3,7
 400a458:	19426016 	blt	r3,r5,400addc <___vfiprintf_internal_r+0xe68>
 400a45c:	d8c01d87 	ldb	r3,118(sp)
 400a460:	42000204 	addi	r8,r8,8
 400a464:	29000044 	addi	r4,r5,1
 400a468:	1801b31e 	bne	r3,zero,400ab38 <___vfiprintf_internal_r+0xbc4>
 400a46c:	7001c026 	beq	r14,zero,400ab70 <___vfiprintf_internal_r+0xbfc>
 400a470:	d8c01d04 	addi	r3,sp,116
 400a474:	10800084 	addi	r2,r2,2
 400a478:	40c00015 	stw	r3,0(r8)
 400a47c:	00c00084 	movi	r3,2
 400a480:	40c00115 	stw	r3,4(r8)
 400a484:	d8801c15 	stw	r2,112(sp)
 400a488:	d9001b15 	stw	r4,108(sp)
 400a48c:	00c001c4 	movi	r3,7
 400a490:	1902650e 	bge	r3,r4,400ae28 <___vfiprintf_internal_r+0xeb4>
 400a494:	10029a1e 	bne	r2,zero,400af00 <___vfiprintf_internal_r+0xf8c>
 400a498:	00c02004 	movi	r3,128
 400a49c:	01000044 	movi	r4,1
 400a4a0:	000b883a 	mov	r5,zero
 400a4a4:	d811883a 	mov	r8,sp
 400a4a8:	e0c1b31e 	bne	fp,r3,400ab78 <___vfiprintf_internal_r+0xc04>
 400a4ac:	8cb9c83a 	sub	fp,r17,r18
 400a4b0:	0701b10e 	bge	zero,fp,400ab78 <___vfiprintf_internal_r+0xc04>
 400a4b4:	01c00404 	movi	r7,16
 400a4b8:	3f03890e 	bge	r7,fp,400b2e0 <___vfiprintf_internal_r+0x136c>
 400a4bc:	00c20034 	movhi	r3,2048
 400a4c0:	18c11604 	addi	r3,r3,1112
 400a4c4:	d8c02415 	stw	r3,144(sp)
 400a4c8:	8007883a 	mov	r3,r16
 400a4cc:	034001c4 	movi	r13,7
 400a4d0:	e021883a 	mov	r16,fp
 400a4d4:	da402515 	stw	r9,148(sp)
 400a4d8:	1839883a 	mov	fp,r3
 400a4dc:	00000506 	br	400a4f4 <___vfiprintf_internal_r+0x580>
 400a4e0:	29800084 	addi	r6,r5,2
 400a4e4:	42000204 	addi	r8,r8,8
 400a4e8:	180b883a 	mov	r5,r3
 400a4ec:	843ffc04 	addi	r16,r16,-16
 400a4f0:	3c000d0e 	bge	r7,r16,400a528 <___vfiprintf_internal_r+0x5b4>
 400a4f4:	10800404 	addi	r2,r2,16
 400a4f8:	28c00044 	addi	r3,r5,1
 400a4fc:	45c00015 	stw	r23,0(r8)
 400a500:	41c00115 	stw	r7,4(r8)
 400a504:	d8801c15 	stw	r2,112(sp)
 400a508:	d8c01b15 	stw	r3,108(sp)
 400a50c:	68fff40e 	bge	r13,r3,400a4e0 <__alt_data_end+0xfc0024e0>
 400a510:	1002241e 	bne	r2,zero,400ada4 <___vfiprintf_internal_r+0xe30>
 400a514:	843ffc04 	addi	r16,r16,-16
 400a518:	01800044 	movi	r6,1
 400a51c:	000b883a 	mov	r5,zero
 400a520:	d811883a 	mov	r8,sp
 400a524:	3c3ff316 	blt	r7,r16,400a4f4 <__alt_data_end+0xfc0024f4>
 400a528:	da402517 	ldw	r9,148(sp)
 400a52c:	e007883a 	mov	r3,fp
 400a530:	8039883a 	mov	fp,r16
 400a534:	1821883a 	mov	r16,r3
 400a538:	d8c02417 	ldw	r3,144(sp)
 400a53c:	1705883a 	add	r2,r2,fp
 400a540:	47000115 	stw	fp,4(r8)
 400a544:	40c00015 	stw	r3,0(r8)
 400a548:	d8801c15 	stw	r2,112(sp)
 400a54c:	d9801b15 	stw	r6,108(sp)
 400a550:	00c001c4 	movi	r3,7
 400a554:	19827616 	blt	r3,r6,400af30 <___vfiprintf_internal_r+0xfbc>
 400a558:	4cf9c83a 	sub	fp,r9,r19
 400a55c:	42000204 	addi	r8,r8,8
 400a560:	31000044 	addi	r4,r6,1
 400a564:	300b883a 	mov	r5,r6
 400a568:	07018516 	blt	zero,fp,400ab80 <___vfiprintf_internal_r+0xc0c>
 400a56c:	9885883a 	add	r2,r19,r2
 400a570:	45400015 	stw	r21,0(r8)
 400a574:	44c00115 	stw	r19,4(r8)
 400a578:	d8801c15 	stw	r2,112(sp)
 400a57c:	d9001b15 	stw	r4,108(sp)
 400a580:	00c001c4 	movi	r3,7
 400a584:	1901dd0e 	bge	r3,r4,400acfc <___vfiprintf_internal_r+0xd88>
 400a588:	1002401e 	bne	r2,zero,400ae8c <___vfiprintf_internal_r+0xf18>
 400a58c:	d8001b15 	stw	zero,108(sp)
 400a590:	a2c0010c 	andi	r11,r20,4
 400a594:	58000226 	beq	r11,zero,400a5a0 <___vfiprintf_internal_r+0x62c>
 400a598:	8ca7c83a 	sub	r19,r17,r18
 400a59c:	04c2f216 	blt	zero,r19,400b168 <___vfiprintf_internal_r+0x11f4>
 400a5a0:	8c80010e 	bge	r17,r18,400a5a8 <___vfiprintf_internal_r+0x634>
 400a5a4:	9023883a 	mov	r17,r18
 400a5a8:	da802317 	ldw	r10,140(sp)
 400a5ac:	5455883a 	add	r10,r10,r17
 400a5b0:	da802315 	stw	r10,140(sp)
 400a5b4:	d8001b15 	stw	zero,108(sp)
 400a5b8:	d811883a 	mov	r8,sp
 400a5bc:	003ea206 	br	400a048 <__alt_data_end+0xfc002048>
 400a5c0:	a5000814 	ori	r20,r20,32
 400a5c4:	80c00007 	ldb	r3,0(r16)
 400a5c8:	003ec906 	br	400a0f0 <__alt_data_end+0xfc0020f0>
 400a5cc:	80c00007 	ldb	r3,0(r16)
 400a5d0:	1b030926 	beq	r3,r12,400b1f8 <___vfiprintf_internal_r+0x1284>
 400a5d4:	a5000414 	ori	r20,r20,16
 400a5d8:	003ec506 	br	400a0f0 <__alt_data_end+0xfc0020f0>
 400a5dc:	21003fcc 	andi	r4,r4,255
 400a5e0:	20035e1e 	bne	r4,zero,400b35c <___vfiprintf_internal_r+0x13e8>
 400a5e4:	a080080c 	andi	r2,r20,32
 400a5e8:	1002a526 	beq	r2,zero,400b080 <___vfiprintf_internal_r+0x110c>
 400a5ec:	da802217 	ldw	r10,136(sp)
 400a5f0:	50800017 	ldw	r2,0(r10)
 400a5f4:	da802317 	ldw	r10,140(sp)
 400a5f8:	5007d7fa 	srai	r3,r10,31
 400a5fc:	da802217 	ldw	r10,136(sp)
 400a600:	10c00115 	stw	r3,4(r2)
 400a604:	52800104 	addi	r10,r10,4
 400a608:	da802215 	stw	r10,136(sp)
 400a60c:	da802317 	ldw	r10,140(sp)
 400a610:	12800015 	stw	r10,0(r2)
 400a614:	003e8c06 	br	400a048 <__alt_data_end+0xfc002048>
 400a618:	21003fcc 	andi	r4,r4,255
 400a61c:	2003511e 	bne	r4,zero,400b364 <___vfiprintf_internal_r+0x13f0>
 400a620:	a080080c 	andi	r2,r20,32
 400a624:	1000a126 	beq	r2,zero,400a8ac <___vfiprintf_internal_r+0x938>
 400a628:	da802217 	ldw	r10,136(sp)
 400a62c:	d8001d85 	stb	zero,118(sp)
 400a630:	50800204 	addi	r2,r10,8
 400a634:	54800017 	ldw	r18,0(r10)
 400a638:	54c00117 	ldw	r19,4(r10)
 400a63c:	4802b416 	blt	r9,zero,400b110 <___vfiprintf_internal_r+0x119c>
 400a640:	013fdfc4 	movi	r4,-129
 400a644:	94c6b03a 	or	r3,r18,r19
 400a648:	d8802215 	stw	r2,136(sp)
 400a64c:	a128703a 	and	r20,r20,r4
 400a650:	1800a226 	beq	r3,zero,400a8dc <___vfiprintf_internal_r+0x968>
 400a654:	0039883a 	mov	fp,zero
 400a658:	dd401a04 	addi	r21,sp,104
 400a65c:	9006d0fa 	srli	r3,r18,3
 400a660:	9808977a 	slli	r4,r19,29
 400a664:	9826d0fa 	srli	r19,r19,3
 400a668:	948001cc 	andi	r18,r18,7
 400a66c:	90800c04 	addi	r2,r18,48
 400a670:	ad7fffc4 	addi	r21,r21,-1
 400a674:	20e4b03a 	or	r18,r4,r3
 400a678:	a8800005 	stb	r2,0(r21)
 400a67c:	94c6b03a 	or	r3,r18,r19
 400a680:	183ff61e 	bne	r3,zero,400a65c <__alt_data_end+0xfc00265c>
 400a684:	a0c0004c 	andi	r3,r20,1
 400a688:	18005926 	beq	r3,zero,400a7f0 <___vfiprintf_internal_r+0x87c>
 400a68c:	10803fcc 	andi	r2,r2,255
 400a690:	1080201c 	xori	r2,r2,128
 400a694:	10bfe004 	addi	r2,r2,-128
 400a698:	00c00c04 	movi	r3,48
 400a69c:	10c05426 	beq	r2,r3,400a7f0 <___vfiprintf_internal_r+0x87c>
 400a6a0:	da801e17 	ldw	r10,120(sp)
 400a6a4:	a8bfffc4 	addi	r2,r21,-1
 400a6a8:	a8ffffc5 	stb	r3,-1(r21)
 400a6ac:	50a7c83a 	sub	r19,r10,r2
 400a6b0:	102b883a 	mov	r21,r2
 400a6b4:	003f2f06 	br	400a374 <__alt_data_end+0xfc002374>
 400a6b8:	21003fcc 	andi	r4,r4,255
 400a6bc:	2003421e 	bne	r4,zero,400b3c8 <___vfiprintf_internal_r+0x1454>
 400a6c0:	00820034 	movhi	r2,2048
 400a6c4:	1080b504 	addi	r2,r2,724
 400a6c8:	d8802615 	stw	r2,152(sp)
 400a6cc:	a080080c 	andi	r2,r20,32
 400a6d0:	1000aa26 	beq	r2,zero,400a97c <___vfiprintf_internal_r+0xa08>
 400a6d4:	da802217 	ldw	r10,136(sp)
 400a6d8:	54800017 	ldw	r18,0(r10)
 400a6dc:	54c00117 	ldw	r19,4(r10)
 400a6e0:	52800204 	addi	r10,r10,8
 400a6e4:	da802215 	stw	r10,136(sp)
 400a6e8:	a080004c 	andi	r2,r20,1
 400a6ec:	1001d226 	beq	r2,zero,400ae38 <___vfiprintf_internal_r+0xec4>
 400a6f0:	94c4b03a 	or	r2,r18,r19
 400a6f4:	1002351e 	bne	r2,zero,400afcc <___vfiprintf_internal_r+0x1058>
 400a6f8:	d8001d85 	stb	zero,118(sp)
 400a6fc:	48022216 	blt	r9,zero,400af88 <___vfiprintf_internal_r+0x1014>
 400a700:	00bfdfc4 	movi	r2,-129
 400a704:	a0a8703a 	and	r20,r20,r2
 400a708:	003f1506 	br	400a360 <__alt_data_end+0xfc002360>
 400a70c:	da802217 	ldw	r10,136(sp)
 400a710:	04800044 	movi	r18,1
 400a714:	d8001d85 	stb	zero,118(sp)
 400a718:	50800017 	ldw	r2,0(r10)
 400a71c:	52800104 	addi	r10,r10,4
 400a720:	da802215 	stw	r10,136(sp)
 400a724:	d8801005 	stb	r2,64(sp)
 400a728:	9027883a 	mov	r19,r18
 400a72c:	dd401004 	addi	r21,sp,64
 400a730:	0013883a 	mov	r9,zero
 400a734:	003f1706 	br	400a394 <__alt_data_end+0xfc002394>
 400a738:	21003fcc 	andi	r4,r4,255
 400a73c:	2003201e 	bne	r4,zero,400b3c0 <___vfiprintf_internal_r+0x144c>
 400a740:	a080080c 	andi	r2,r20,32
 400a744:	10004b26 	beq	r2,zero,400a874 <___vfiprintf_internal_r+0x900>
 400a748:	da802217 	ldw	r10,136(sp)
 400a74c:	50800117 	ldw	r2,4(r10)
 400a750:	54800017 	ldw	r18,0(r10)
 400a754:	52800204 	addi	r10,r10,8
 400a758:	da802215 	stw	r10,136(sp)
 400a75c:	1027883a 	mov	r19,r2
 400a760:	10022c16 	blt	r2,zero,400b014 <___vfiprintf_internal_r+0x10a0>
 400a764:	df001d83 	ldbu	fp,118(sp)
 400a768:	48007216 	blt	r9,zero,400a934 <___vfiprintf_internal_r+0x9c0>
 400a76c:	00ffdfc4 	movi	r3,-129
 400a770:	94c4b03a 	or	r2,r18,r19
 400a774:	a0e8703a 	and	r20,r20,r3
 400a778:	1000cc26 	beq	r2,zero,400aaac <___vfiprintf_internal_r+0xb38>
 400a77c:	98021026 	beq	r19,zero,400afc0 <___vfiprintf_internal_r+0x104c>
 400a780:	dc402415 	stw	r17,144(sp)
 400a784:	dc002515 	stw	r16,148(sp)
 400a788:	9823883a 	mov	r17,r19
 400a78c:	9021883a 	mov	r16,r18
 400a790:	dd401a04 	addi	r21,sp,104
 400a794:	4825883a 	mov	r18,r9
 400a798:	4027883a 	mov	r19,r8
 400a79c:	8009883a 	mov	r4,r16
 400a7a0:	880b883a 	mov	r5,r17
 400a7a4:	01800284 	movi	r6,10
 400a7a8:	000f883a 	mov	r7,zero
 400a7ac:	400c3540 	call	400c354 <__umoddi3>
 400a7b0:	10800c04 	addi	r2,r2,48
 400a7b4:	ad7fffc4 	addi	r21,r21,-1
 400a7b8:	8009883a 	mov	r4,r16
 400a7bc:	880b883a 	mov	r5,r17
 400a7c0:	a8800005 	stb	r2,0(r21)
 400a7c4:	01800284 	movi	r6,10
 400a7c8:	000f883a 	mov	r7,zero
 400a7cc:	400bddc0 	call	400bddc <__udivdi3>
 400a7d0:	1021883a 	mov	r16,r2
 400a7d4:	10c4b03a 	or	r2,r2,r3
 400a7d8:	1823883a 	mov	r17,r3
 400a7dc:	103fef1e 	bne	r2,zero,400a79c <__alt_data_end+0xfc00279c>
 400a7e0:	dc402417 	ldw	r17,144(sp)
 400a7e4:	dc002517 	ldw	r16,148(sp)
 400a7e8:	9013883a 	mov	r9,r18
 400a7ec:	9811883a 	mov	r8,r19
 400a7f0:	da801e17 	ldw	r10,120(sp)
 400a7f4:	5567c83a 	sub	r19,r10,r21
 400a7f8:	003ede06 	br	400a374 <__alt_data_end+0xfc002374>
 400a7fc:	38803fcc 	andi	r2,r7,255
 400a800:	1080201c 	xori	r2,r2,128
 400a804:	10bfe004 	addi	r2,r2,-128
 400a808:	1002371e 	bne	r2,zero,400b0e8 <___vfiprintf_internal_r+0x1174>
 400a80c:	01000044 	movi	r4,1
 400a810:	01c00804 	movi	r7,32
 400a814:	80c00007 	ldb	r3,0(r16)
 400a818:	003e3506 	br	400a0f0 <__alt_data_end+0xfc0020f0>
 400a81c:	a5000054 	ori	r20,r20,1
 400a820:	80c00007 	ldb	r3,0(r16)
 400a824:	003e3206 	br	400a0f0 <__alt_data_end+0xfc0020f0>
 400a828:	a5002014 	ori	r20,r20,128
 400a82c:	80c00007 	ldb	r3,0(r16)
 400a830:	003e2f06 	br	400a0f0 <__alt_data_end+0xfc0020f0>
 400a834:	8015883a 	mov	r10,r16
 400a838:	0023883a 	mov	r17,zero
 400a83c:	18bff404 	addi	r2,r3,-48
 400a840:	50c00007 	ldb	r3,0(r10)
 400a844:	8c4002a4 	muli	r17,r17,10
 400a848:	84000044 	addi	r16,r16,1
 400a84c:	8015883a 	mov	r10,r16
 400a850:	1463883a 	add	r17,r2,r17
 400a854:	18bff404 	addi	r2,r3,-48
 400a858:	30bff92e 	bgeu	r6,r2,400a840 <__alt_data_end+0xfc002840>
 400a85c:	003e2506 	br	400a0f4 <__alt_data_end+0xfc0020f4>
 400a860:	21003fcc 	andi	r4,r4,255
 400a864:	2002d41e 	bne	r4,zero,400b3b8 <___vfiprintf_internal_r+0x1444>
 400a868:	a5000414 	ori	r20,r20,16
 400a86c:	a080080c 	andi	r2,r20,32
 400a870:	103fb51e 	bne	r2,zero,400a748 <__alt_data_end+0xfc002748>
 400a874:	a080040c 	andi	r2,r20,16
 400a878:	1001f826 	beq	r2,zero,400b05c <___vfiprintf_internal_r+0x10e8>
 400a87c:	da802217 	ldw	r10,136(sp)
 400a880:	54800017 	ldw	r18,0(r10)
 400a884:	52800104 	addi	r10,r10,4
 400a888:	da802215 	stw	r10,136(sp)
 400a88c:	9027d7fa 	srai	r19,r18,31
 400a890:	9805883a 	mov	r2,r19
 400a894:	003fb206 	br	400a760 <__alt_data_end+0xfc002760>
 400a898:	21003fcc 	andi	r4,r4,255
 400a89c:	2002c41e 	bne	r4,zero,400b3b0 <___vfiprintf_internal_r+0x143c>
 400a8a0:	a5000414 	ori	r20,r20,16
 400a8a4:	a080080c 	andi	r2,r20,32
 400a8a8:	103f5f1e 	bne	r2,zero,400a628 <__alt_data_end+0xfc002628>
 400a8ac:	a080040c 	andi	r2,r20,16
 400a8b0:	10020f26 	beq	r2,zero,400b0f0 <___vfiprintf_internal_r+0x117c>
 400a8b4:	da802217 	ldw	r10,136(sp)
 400a8b8:	d8001d85 	stb	zero,118(sp)
 400a8bc:	0027883a 	mov	r19,zero
 400a8c0:	50800104 	addi	r2,r10,4
 400a8c4:	54800017 	ldw	r18,0(r10)
 400a8c8:	48021116 	blt	r9,zero,400b110 <___vfiprintf_internal_r+0x119c>
 400a8cc:	00ffdfc4 	movi	r3,-129
 400a8d0:	d8802215 	stw	r2,136(sp)
 400a8d4:	a0e8703a 	and	r20,r20,r3
 400a8d8:	903f5e1e 	bne	r18,zero,400a654 <__alt_data_end+0xfc002654>
 400a8dc:	0039883a 	mov	fp,zero
 400a8e0:	4802a626 	beq	r9,zero,400b37c <___vfiprintf_internal_r+0x1408>
 400a8e4:	0025883a 	mov	r18,zero
 400a8e8:	0027883a 	mov	r19,zero
 400a8ec:	003f5a06 	br	400a658 <__alt_data_end+0xfc002658>
 400a8f0:	21003fcc 	andi	r4,r4,255
 400a8f4:	20029f1e 	bne	r4,zero,400b374 <___vfiprintf_internal_r+0x1400>
 400a8f8:	a5000414 	ori	r20,r20,16
 400a8fc:	a080080c 	andi	r2,r20,32
 400a900:	10005e1e 	bne	r2,zero,400aa7c <___vfiprintf_internal_r+0xb08>
 400a904:	a080040c 	andi	r2,r20,16
 400a908:	1001a21e 	bne	r2,zero,400af94 <___vfiprintf_internal_r+0x1020>
 400a90c:	a080100c 	andi	r2,r20,64
 400a910:	d8001d85 	stb	zero,118(sp)
 400a914:	da802217 	ldw	r10,136(sp)
 400a918:	1002231e 	bne	r2,zero,400b1a8 <___vfiprintf_internal_r+0x1234>
 400a91c:	50800104 	addi	r2,r10,4
 400a920:	54800017 	ldw	r18,0(r10)
 400a924:	0027883a 	mov	r19,zero
 400a928:	4801a00e 	bge	r9,zero,400afac <___vfiprintf_internal_r+0x1038>
 400a92c:	d8802215 	stw	r2,136(sp)
 400a930:	0039883a 	mov	fp,zero
 400a934:	94c4b03a 	or	r2,r18,r19
 400a938:	103f901e 	bne	r2,zero,400a77c <__alt_data_end+0xfc00277c>
 400a93c:	00800044 	movi	r2,1
 400a940:	10803fcc 	andi	r2,r2,255
 400a944:	00c00044 	movi	r3,1
 400a948:	10c05926 	beq	r2,r3,400aab0 <___vfiprintf_internal_r+0xb3c>
 400a94c:	00c00084 	movi	r3,2
 400a950:	10ffe41e 	bne	r2,r3,400a8e4 <__alt_data_end+0xfc0028e4>
 400a954:	0025883a 	mov	r18,zero
 400a958:	0027883a 	mov	r19,zero
 400a95c:	00013d06 	br	400ae54 <___vfiprintf_internal_r+0xee0>
 400a960:	21003fcc 	andi	r4,r4,255
 400a964:	2002811e 	bne	r4,zero,400b36c <___vfiprintf_internal_r+0x13f8>
 400a968:	00820034 	movhi	r2,2048
 400a96c:	1080b004 	addi	r2,r2,704
 400a970:	d8802615 	stw	r2,152(sp)
 400a974:	a080080c 	andi	r2,r20,32
 400a978:	103f561e 	bne	r2,zero,400a6d4 <__alt_data_end+0xfc0026d4>
 400a97c:	a080040c 	andi	r2,r20,16
 400a980:	1001d126 	beq	r2,zero,400b0c8 <___vfiprintf_internal_r+0x1154>
 400a984:	da802217 	ldw	r10,136(sp)
 400a988:	0027883a 	mov	r19,zero
 400a98c:	54800017 	ldw	r18,0(r10)
 400a990:	52800104 	addi	r10,r10,4
 400a994:	da802215 	stw	r10,136(sp)
 400a998:	003f5306 	br	400a6e8 <__alt_data_end+0xfc0026e8>
 400a99c:	da802217 	ldw	r10,136(sp)
 400a9a0:	d8001d85 	stb	zero,118(sp)
 400a9a4:	55400017 	ldw	r21,0(r10)
 400a9a8:	50c00104 	addi	r3,r10,4
 400a9ac:	a8024226 	beq	r21,zero,400b2b8 <___vfiprintf_internal_r+0x1344>
 400a9b0:	48021816 	blt	r9,zero,400b214 <___vfiprintf_internal_r+0x12a0>
 400a9b4:	480d883a 	mov	r6,r9
 400a9b8:	000b883a 	mov	r5,zero
 400a9bc:	a809883a 	mov	r4,r21
 400a9c0:	d8c02a15 	stw	r3,168(sp)
 400a9c4:	da002b15 	stw	r8,172(sp)
 400a9c8:	da402c15 	stw	r9,176(sp)
 400a9cc:	40080080 	call	4008008 <memchr>
 400a9d0:	d8c02a17 	ldw	r3,168(sp)
 400a9d4:	da002b17 	ldw	r8,172(sp)
 400a9d8:	da402c17 	ldw	r9,176(sp)
 400a9dc:	10024826 	beq	r2,zero,400b300 <___vfiprintf_internal_r+0x138c>
 400a9e0:	1567c83a 	sub	r19,r2,r21
 400a9e4:	df001d83 	ldbu	fp,118(sp)
 400a9e8:	d8c02215 	stw	r3,136(sp)
 400a9ec:	0013883a 	mov	r9,zero
 400a9f0:	003e6006 	br	400a374 <__alt_data_end+0xfc002374>
 400a9f4:	21003fcc 	andi	r4,r4,255
 400a9f8:	203fc026 	beq	r4,zero,400a8fc <__alt_data_end+0xfc0028fc>
 400a9fc:	d9c01d85 	stb	r7,118(sp)
 400aa00:	003fbe06 	br	400a8fc <__alt_data_end+0xfc0028fc>
 400aa04:	da802217 	ldw	r10,136(sp)
 400aa08:	54400017 	ldw	r17,0(r10)
 400aa0c:	50800104 	addi	r2,r10,4
 400aa10:	883e3b16 	blt	r17,zero,400a300 <__alt_data_end+0xfc002300>
 400aa14:	d8802215 	stw	r2,136(sp)
 400aa18:	80c00007 	ldb	r3,0(r16)
 400aa1c:	003db406 	br	400a0f0 <__alt_data_end+0xfc0020f0>
 400aa20:	01000044 	movi	r4,1
 400aa24:	01c00ac4 	movi	r7,43
 400aa28:	80c00007 	ldb	r3,0(r16)
 400aa2c:	003db006 	br	400a0f0 <__alt_data_end+0xfc0020f0>
 400aa30:	80c00007 	ldb	r3,0(r16)
 400aa34:	82800044 	addi	r10,r16,1
 400aa38:	1b423c26 	beq	r3,r13,400b32c <___vfiprintf_internal_r+0x13b8>
 400aa3c:	18bff404 	addi	r2,r3,-48
 400aa40:	0013883a 	mov	r9,zero
 400aa44:	30822b36 	bltu	r6,r2,400b2f4 <___vfiprintf_internal_r+0x1380>
 400aa48:	50c00007 	ldb	r3,0(r10)
 400aa4c:	4a4002a4 	muli	r9,r9,10
 400aa50:	54000044 	addi	r16,r10,1
 400aa54:	8015883a 	mov	r10,r16
 400aa58:	4893883a 	add	r9,r9,r2
 400aa5c:	18bff404 	addi	r2,r3,-48
 400aa60:	30bff92e 	bgeu	r6,r2,400aa48 <__alt_data_end+0xfc002a48>
 400aa64:	483da30e 	bge	r9,zero,400a0f4 <__alt_data_end+0xfc0020f4>
 400aa68:	027fffc4 	movi	r9,-1
 400aa6c:	003da106 	br	400a0f4 <__alt_data_end+0xfc0020f4>
 400aa70:	a5001014 	ori	r20,r20,64
 400aa74:	80c00007 	ldb	r3,0(r16)
 400aa78:	003d9d06 	br	400a0f0 <__alt_data_end+0xfc0020f0>
 400aa7c:	da802217 	ldw	r10,136(sp)
 400aa80:	d8001d85 	stb	zero,118(sp)
 400aa84:	50c00204 	addi	r3,r10,8
 400aa88:	54800017 	ldw	r18,0(r10)
 400aa8c:	54c00117 	ldw	r19,4(r10)
 400aa90:	4801ca16 	blt	r9,zero,400b1bc <___vfiprintf_internal_r+0x1248>
 400aa94:	013fdfc4 	movi	r4,-129
 400aa98:	94c4b03a 	or	r2,r18,r19
 400aa9c:	d8c02215 	stw	r3,136(sp)
 400aaa0:	a128703a 	and	r20,r20,r4
 400aaa4:	0039883a 	mov	fp,zero
 400aaa8:	103f341e 	bne	r2,zero,400a77c <__alt_data_end+0xfc00277c>
 400aaac:	483e2e26 	beq	r9,zero,400a368 <__alt_data_end+0xfc002368>
 400aab0:	0025883a 	mov	r18,zero
 400aab4:	94800c04 	addi	r18,r18,48
 400aab8:	dc8019c5 	stb	r18,103(sp)
 400aabc:	dcc02717 	ldw	r19,156(sp)
 400aac0:	dd4019c4 	addi	r21,sp,103
 400aac4:	003e2b06 	br	400a374 <__alt_data_end+0xfc002374>
 400aac8:	21003fcc 	andi	r4,r4,255
 400aacc:	2002361e 	bne	r4,zero,400b3a8 <___vfiprintf_internal_r+0x1434>
 400aad0:	1801c126 	beq	r3,zero,400b1d8 <___vfiprintf_internal_r+0x1264>
 400aad4:	04800044 	movi	r18,1
 400aad8:	d8c01005 	stb	r3,64(sp)
 400aadc:	d8001d85 	stb	zero,118(sp)
 400aae0:	9027883a 	mov	r19,r18
 400aae4:	dd401004 	addi	r21,sp,64
 400aae8:	003f1106 	br	400a730 <__alt_data_end+0xfc002730>
 400aaec:	d9402117 	ldw	r5,132(sp)
 400aaf0:	d9002017 	ldw	r4,128(sp)
 400aaf4:	d9801a04 	addi	r6,sp,104
 400aaf8:	d9c02b15 	stw	r7,172(sp)
 400aafc:	dbc02a15 	stw	r15,168(sp)
 400ab00:	4009e600 	call	4009e60 <__sprint_r.part.0>
 400ab04:	d9c02b17 	ldw	r7,172(sp)
 400ab08:	dbc02a17 	ldw	r15,168(sp)
 400ab0c:	10006d1e 	bne	r2,zero,400acc4 <___vfiprintf_internal_r+0xd50>
 400ab10:	d9801b17 	ldw	r6,108(sp)
 400ab14:	d8801c17 	ldw	r2,112(sp)
 400ab18:	d811883a 	mov	r8,sp
 400ab1c:	31400044 	addi	r5,r6,1
 400ab20:	003e3306 	br	400a3f0 <__alt_data_end+0xfc0023f0>
 400ab24:	d9401b17 	ldw	r5,108(sp)
 400ab28:	d8801c17 	ldw	r2,112(sp)
 400ab2c:	29000044 	addi	r4,r5,1
 400ab30:	d8c01d87 	ldb	r3,118(sp)
 400ab34:	183e4d26 	beq	r3,zero,400a46c <__alt_data_end+0xfc00246c>
 400ab38:	00c00044 	movi	r3,1
 400ab3c:	d9401d84 	addi	r5,sp,118
 400ab40:	10c5883a 	add	r2,r2,r3
 400ab44:	41400015 	stw	r5,0(r8)
 400ab48:	40c00115 	stw	r3,4(r8)
 400ab4c:	d8801c15 	stw	r2,112(sp)
 400ab50:	d9001b15 	stw	r4,108(sp)
 400ab54:	014001c4 	movi	r5,7
 400ab58:	2900a90e 	bge	r5,r4,400ae00 <___vfiprintf_internal_r+0xe8c>
 400ab5c:	1000da1e 	bne	r2,zero,400aec8 <___vfiprintf_internal_r+0xf54>
 400ab60:	7000ab1e 	bne	r14,zero,400ae10 <___vfiprintf_internal_r+0xe9c>
 400ab64:	000b883a 	mov	r5,zero
 400ab68:	1809883a 	mov	r4,r3
 400ab6c:	d811883a 	mov	r8,sp
 400ab70:	00c02004 	movi	r3,128
 400ab74:	e0fe4d26 	beq	fp,r3,400a4ac <__alt_data_end+0xfc0024ac>
 400ab78:	4cf9c83a 	sub	fp,r9,r19
 400ab7c:	073e7b0e 	bge	zero,fp,400a56c <__alt_data_end+0xfc00256c>
 400ab80:	01c00404 	movi	r7,16
 400ab84:	3f01900e 	bge	r7,fp,400b1c8 <___vfiprintf_internal_r+0x1254>
 400ab88:	00c20034 	movhi	r3,2048
 400ab8c:	18c11604 	addi	r3,r3,1112
 400ab90:	d8c02415 	stw	r3,144(sp)
 400ab94:	034001c4 	movi	r13,7
 400ab98:	00000506 	br	400abb0 <___vfiprintf_internal_r+0xc3c>
 400ab9c:	29000084 	addi	r4,r5,2
 400aba0:	42000204 	addi	r8,r8,8
 400aba4:	180b883a 	mov	r5,r3
 400aba8:	e73ffc04 	addi	fp,fp,-16
 400abac:	3f000d0e 	bge	r7,fp,400abe4 <___vfiprintf_internal_r+0xc70>
 400abb0:	10800404 	addi	r2,r2,16
 400abb4:	28c00044 	addi	r3,r5,1
 400abb8:	45c00015 	stw	r23,0(r8)
 400abbc:	41c00115 	stw	r7,4(r8)
 400abc0:	d8801c15 	stw	r2,112(sp)
 400abc4:	d8c01b15 	stw	r3,108(sp)
 400abc8:	68fff40e 	bge	r13,r3,400ab9c <__alt_data_end+0xfc002b9c>
 400abcc:	1000101e 	bne	r2,zero,400ac10 <___vfiprintf_internal_r+0xc9c>
 400abd0:	e73ffc04 	addi	fp,fp,-16
 400abd4:	01000044 	movi	r4,1
 400abd8:	000b883a 	mov	r5,zero
 400abdc:	d811883a 	mov	r8,sp
 400abe0:	3f3ff316 	blt	r7,fp,400abb0 <__alt_data_end+0xfc002bb0>
 400abe4:	da802417 	ldw	r10,144(sp)
 400abe8:	1705883a 	add	r2,r2,fp
 400abec:	47000115 	stw	fp,4(r8)
 400abf0:	42800015 	stw	r10,0(r8)
 400abf4:	d8801c15 	stw	r2,112(sp)
 400abf8:	d9001b15 	stw	r4,108(sp)
 400abfc:	00c001c4 	movi	r3,7
 400ac00:	19003616 	blt	r3,r4,400acdc <___vfiprintf_internal_r+0xd68>
 400ac04:	42000204 	addi	r8,r8,8
 400ac08:	21000044 	addi	r4,r4,1
 400ac0c:	003e5706 	br	400a56c <__alt_data_end+0xfc00256c>
 400ac10:	d9402117 	ldw	r5,132(sp)
 400ac14:	d9002017 	ldw	r4,128(sp)
 400ac18:	d9801a04 	addi	r6,sp,104
 400ac1c:	d9c02b15 	stw	r7,172(sp)
 400ac20:	db402a15 	stw	r13,168(sp)
 400ac24:	4009e600 	call	4009e60 <__sprint_r.part.0>
 400ac28:	d9c02b17 	ldw	r7,172(sp)
 400ac2c:	db402a17 	ldw	r13,168(sp)
 400ac30:	1000241e 	bne	r2,zero,400acc4 <___vfiprintf_internal_r+0xd50>
 400ac34:	d9401b17 	ldw	r5,108(sp)
 400ac38:	d8801c17 	ldw	r2,112(sp)
 400ac3c:	d811883a 	mov	r8,sp
 400ac40:	29000044 	addi	r4,r5,1
 400ac44:	003fd806 	br	400aba8 <__alt_data_end+0xfc002ba8>
 400ac48:	d9401b17 	ldw	r5,108(sp)
 400ac4c:	00c20034 	movhi	r3,2048
 400ac50:	18c11a04 	addi	r3,r3,1128
 400ac54:	d8c02415 	stw	r3,144(sp)
 400ac58:	29400044 	addi	r5,r5,1
 400ac5c:	d8c02417 	ldw	r3,144(sp)
 400ac60:	14c5883a 	add	r2,r2,r19
 400ac64:	44c00115 	stw	r19,4(r8)
 400ac68:	40c00015 	stw	r3,0(r8)
 400ac6c:	d8801c15 	stw	r2,112(sp)
 400ac70:	d9401b15 	stw	r5,108(sp)
 400ac74:	00c001c4 	movi	r3,7
 400ac78:	1940070e 	bge	r3,r5,400ac98 <___vfiprintf_internal_r+0xd24>
 400ac7c:	103e4826 	beq	r2,zero,400a5a0 <__alt_data_end+0xfc0025a0>
 400ac80:	d9402117 	ldw	r5,132(sp)
 400ac84:	d9002017 	ldw	r4,128(sp)
 400ac88:	d9801a04 	addi	r6,sp,104
 400ac8c:	4009e600 	call	4009e60 <__sprint_r.part.0>
 400ac90:	10000c1e 	bne	r2,zero,400acc4 <___vfiprintf_internal_r+0xd50>
 400ac94:	d8801c17 	ldw	r2,112(sp)
 400ac98:	8c80010e 	bge	r17,r18,400aca0 <___vfiprintf_internal_r+0xd2c>
 400ac9c:	9023883a 	mov	r17,r18
 400aca0:	da802317 	ldw	r10,140(sp)
 400aca4:	5455883a 	add	r10,r10,r17
 400aca8:	da802315 	stw	r10,140(sp)
 400acac:	103e4126 	beq	r2,zero,400a5b4 <__alt_data_end+0xfc0025b4>
 400acb0:	d9402117 	ldw	r5,132(sp)
 400acb4:	d9002017 	ldw	r4,128(sp)
 400acb8:	d9801a04 	addi	r6,sp,104
 400acbc:	4009e600 	call	4009e60 <__sprint_r.part.0>
 400acc0:	103e3c26 	beq	r2,zero,400a5b4 <__alt_data_end+0xfc0025b4>
 400acc4:	dd002117 	ldw	r20,132(sp)
 400acc8:	a080030b 	ldhu	r2,12(r20)
 400accc:	1080100c 	andi	r2,r2,64
 400acd0:	1001231e 	bne	r2,zero,400b160 <___vfiprintf_internal_r+0x11ec>
 400acd4:	d8802317 	ldw	r2,140(sp)
 400acd8:	003d7b06 	br	400a2c8 <__alt_data_end+0xfc0022c8>
 400acdc:	1000991e 	bne	r2,zero,400af44 <___vfiprintf_internal_r+0xfd0>
 400ace0:	00c00044 	movi	r3,1
 400ace4:	9805883a 	mov	r2,r19
 400ace8:	dd400015 	stw	r21,0(sp)
 400acec:	dcc00115 	stw	r19,4(sp)
 400acf0:	dcc01c15 	stw	r19,112(sp)
 400acf4:	d8c01b15 	stw	r3,108(sp)
 400acf8:	d811883a 	mov	r8,sp
 400acfc:	42000204 	addi	r8,r8,8
 400ad00:	a2c0010c 	andi	r11,r20,4
 400ad04:	583fe426 	beq	r11,zero,400ac98 <__alt_data_end+0xfc002c98>
 400ad08:	8ca7c83a 	sub	r19,r17,r18
 400ad0c:	04ffe20e 	bge	zero,r19,400ac98 <__alt_data_end+0xfc002c98>
 400ad10:	01c00404 	movi	r7,16
 400ad14:	3cffcc0e 	bge	r7,r19,400ac48 <__alt_data_end+0xfc002c48>
 400ad18:	02820034 	movhi	r10,2048
 400ad1c:	52811a04 	addi	r10,r10,1128
 400ad20:	d9001b17 	ldw	r4,108(sp)
 400ad24:	da802415 	stw	r10,144(sp)
 400ad28:	382b883a 	mov	r21,r7
 400ad2c:	050001c4 	movi	r20,7
 400ad30:	df002017 	ldw	fp,128(sp)
 400ad34:	00000506 	br	400ad4c <___vfiprintf_internal_r+0xdd8>
 400ad38:	21400084 	addi	r5,r4,2
 400ad3c:	42000204 	addi	r8,r8,8
 400ad40:	1809883a 	mov	r4,r3
 400ad44:	9cfffc04 	addi	r19,r19,-16
 400ad48:	acffc40e 	bge	r21,r19,400ac5c <__alt_data_end+0xfc002c5c>
 400ad4c:	10800404 	addi	r2,r2,16
 400ad50:	20c00044 	addi	r3,r4,1
 400ad54:	45800015 	stw	r22,0(r8)
 400ad58:	45400115 	stw	r21,4(r8)
 400ad5c:	d8801c15 	stw	r2,112(sp)
 400ad60:	d8c01b15 	stw	r3,108(sp)
 400ad64:	a0fff40e 	bge	r20,r3,400ad38 <__alt_data_end+0xfc002d38>
 400ad68:	1000041e 	bne	r2,zero,400ad7c <___vfiprintf_internal_r+0xe08>
 400ad6c:	01400044 	movi	r5,1
 400ad70:	0009883a 	mov	r4,zero
 400ad74:	d811883a 	mov	r8,sp
 400ad78:	003ff206 	br	400ad44 <__alt_data_end+0xfc002d44>
 400ad7c:	d9402117 	ldw	r5,132(sp)
 400ad80:	d9801a04 	addi	r6,sp,104
 400ad84:	e009883a 	mov	r4,fp
 400ad88:	4009e600 	call	4009e60 <__sprint_r.part.0>
 400ad8c:	103fcd1e 	bne	r2,zero,400acc4 <__alt_data_end+0xfc002cc4>
 400ad90:	d9001b17 	ldw	r4,108(sp)
 400ad94:	d8801c17 	ldw	r2,112(sp)
 400ad98:	d811883a 	mov	r8,sp
 400ad9c:	21400044 	addi	r5,r4,1
 400ada0:	003fe806 	br	400ad44 <__alt_data_end+0xfc002d44>
 400ada4:	d9402117 	ldw	r5,132(sp)
 400ada8:	d9002017 	ldw	r4,128(sp)
 400adac:	d9801a04 	addi	r6,sp,104
 400adb0:	d9c02b15 	stw	r7,172(sp)
 400adb4:	db402a15 	stw	r13,168(sp)
 400adb8:	4009e600 	call	4009e60 <__sprint_r.part.0>
 400adbc:	d9c02b17 	ldw	r7,172(sp)
 400adc0:	db402a17 	ldw	r13,168(sp)
 400adc4:	103fbf1e 	bne	r2,zero,400acc4 <__alt_data_end+0xfc002cc4>
 400adc8:	d9401b17 	ldw	r5,108(sp)
 400adcc:	d8801c17 	ldw	r2,112(sp)
 400add0:	d811883a 	mov	r8,sp
 400add4:	29800044 	addi	r6,r5,1
 400add8:	003dc406 	br	400a4ec <__alt_data_end+0xfc0024ec>
 400addc:	1000d21e 	bne	r2,zero,400b128 <___vfiprintf_internal_r+0x11b4>
 400ade0:	d8c01d87 	ldb	r3,118(sp)
 400ade4:	18009526 	beq	r3,zero,400b03c <___vfiprintf_internal_r+0x10c8>
 400ade8:	00800044 	movi	r2,1
 400adec:	d8c01d84 	addi	r3,sp,118
 400adf0:	1009883a 	mov	r4,r2
 400adf4:	d8c00015 	stw	r3,0(sp)
 400adf8:	d8800115 	stw	r2,4(sp)
 400adfc:	d811883a 	mov	r8,sp
 400ae00:	200b883a 	mov	r5,r4
 400ae04:	42000204 	addi	r8,r8,8
 400ae08:	21000044 	addi	r4,r4,1
 400ae0c:	003d9706 	br	400a46c <__alt_data_end+0xfc00246c>
 400ae10:	d9001d04 	addi	r4,sp,116
 400ae14:	00800084 	movi	r2,2
 400ae18:	d9000015 	stw	r4,0(sp)
 400ae1c:	d8800115 	stw	r2,4(sp)
 400ae20:	1809883a 	mov	r4,r3
 400ae24:	d811883a 	mov	r8,sp
 400ae28:	200b883a 	mov	r5,r4
 400ae2c:	42000204 	addi	r8,r8,8
 400ae30:	21000044 	addi	r4,r4,1
 400ae34:	003f4e06 	br	400ab70 <__alt_data_end+0xfc002b70>
 400ae38:	d8001d85 	stb	zero,118(sp)
 400ae3c:	48005016 	blt	r9,zero,400af80 <___vfiprintf_internal_r+0x100c>
 400ae40:	00ffdfc4 	movi	r3,-129
 400ae44:	94c4b03a 	or	r2,r18,r19
 400ae48:	a0e8703a 	and	r20,r20,r3
 400ae4c:	103d4426 	beq	r2,zero,400a360 <__alt_data_end+0xfc002360>
 400ae50:	0039883a 	mov	fp,zero
 400ae54:	d9002617 	ldw	r4,152(sp)
 400ae58:	dd401a04 	addi	r21,sp,104
 400ae5c:	908003cc 	andi	r2,r18,15
 400ae60:	9806973a 	slli	r3,r19,28
 400ae64:	2085883a 	add	r2,r4,r2
 400ae68:	9024d13a 	srli	r18,r18,4
 400ae6c:	10800003 	ldbu	r2,0(r2)
 400ae70:	9826d13a 	srli	r19,r19,4
 400ae74:	ad7fffc4 	addi	r21,r21,-1
 400ae78:	1ca4b03a 	or	r18,r3,r18
 400ae7c:	a8800005 	stb	r2,0(r21)
 400ae80:	94c4b03a 	or	r2,r18,r19
 400ae84:	103ff51e 	bne	r2,zero,400ae5c <__alt_data_end+0xfc002e5c>
 400ae88:	003e5906 	br	400a7f0 <__alt_data_end+0xfc0027f0>
 400ae8c:	d9402117 	ldw	r5,132(sp)
 400ae90:	d9002017 	ldw	r4,128(sp)
 400ae94:	d9801a04 	addi	r6,sp,104
 400ae98:	4009e600 	call	4009e60 <__sprint_r.part.0>
 400ae9c:	103f891e 	bne	r2,zero,400acc4 <__alt_data_end+0xfc002cc4>
 400aea0:	d8801c17 	ldw	r2,112(sp)
 400aea4:	d811883a 	mov	r8,sp
 400aea8:	003f9506 	br	400ad00 <__alt_data_end+0xfc002d00>
 400aeac:	d9402117 	ldw	r5,132(sp)
 400aeb0:	d9002017 	ldw	r4,128(sp)
 400aeb4:	d9801a04 	addi	r6,sp,104
 400aeb8:	4009e600 	call	4009e60 <__sprint_r.part.0>
 400aebc:	103f811e 	bne	r2,zero,400acc4 <__alt_data_end+0xfc002cc4>
 400aec0:	d811883a 	mov	r8,sp
 400aec4:	003ced06 	br	400a27c <__alt_data_end+0xfc00227c>
 400aec8:	d9402117 	ldw	r5,132(sp)
 400aecc:	d9002017 	ldw	r4,128(sp)
 400aed0:	d9801a04 	addi	r6,sp,104
 400aed4:	da402c15 	stw	r9,176(sp)
 400aed8:	db802a15 	stw	r14,168(sp)
 400aedc:	4009e600 	call	4009e60 <__sprint_r.part.0>
 400aee0:	da402c17 	ldw	r9,176(sp)
 400aee4:	db802a17 	ldw	r14,168(sp)
 400aee8:	103f761e 	bne	r2,zero,400acc4 <__alt_data_end+0xfc002cc4>
 400aeec:	d9401b17 	ldw	r5,108(sp)
 400aef0:	d8801c17 	ldw	r2,112(sp)
 400aef4:	d811883a 	mov	r8,sp
 400aef8:	29000044 	addi	r4,r5,1
 400aefc:	003d5b06 	br	400a46c <__alt_data_end+0xfc00246c>
 400af00:	d9402117 	ldw	r5,132(sp)
 400af04:	d9002017 	ldw	r4,128(sp)
 400af08:	d9801a04 	addi	r6,sp,104
 400af0c:	da402c15 	stw	r9,176(sp)
 400af10:	4009e600 	call	4009e60 <__sprint_r.part.0>
 400af14:	da402c17 	ldw	r9,176(sp)
 400af18:	103f6a1e 	bne	r2,zero,400acc4 <__alt_data_end+0xfc002cc4>
 400af1c:	d9401b17 	ldw	r5,108(sp)
 400af20:	d8801c17 	ldw	r2,112(sp)
 400af24:	d811883a 	mov	r8,sp
 400af28:	29000044 	addi	r4,r5,1
 400af2c:	003f1006 	br	400ab70 <__alt_data_end+0xfc002b70>
 400af30:	1000c31e 	bne	r2,zero,400b240 <___vfiprintf_internal_r+0x12cc>
 400af34:	01000044 	movi	r4,1
 400af38:	000b883a 	mov	r5,zero
 400af3c:	d811883a 	mov	r8,sp
 400af40:	003f0d06 	br	400ab78 <__alt_data_end+0xfc002b78>
 400af44:	d9402117 	ldw	r5,132(sp)
 400af48:	d9002017 	ldw	r4,128(sp)
 400af4c:	d9801a04 	addi	r6,sp,104
 400af50:	4009e600 	call	4009e60 <__sprint_r.part.0>
 400af54:	103f5b1e 	bne	r2,zero,400acc4 <__alt_data_end+0xfc002cc4>
 400af58:	d9001b17 	ldw	r4,108(sp)
 400af5c:	d8801c17 	ldw	r2,112(sp)
 400af60:	d811883a 	mov	r8,sp
 400af64:	21000044 	addi	r4,r4,1
 400af68:	003d8006 	br	400a56c <__alt_data_end+0xfc00256c>
 400af6c:	01020034 	movhi	r4,2048
 400af70:	2100b504 	addi	r4,r4,724
 400af74:	d9002615 	stw	r4,152(sp)
 400af78:	d8c02215 	stw	r3,136(sp)
 400af7c:	1029883a 	mov	r20,r2
 400af80:	94c4b03a 	or	r2,r18,r19
 400af84:	103fb21e 	bne	r2,zero,400ae50 <__alt_data_end+0xfc002e50>
 400af88:	0039883a 	mov	fp,zero
 400af8c:	00800084 	movi	r2,2
 400af90:	003e6b06 	br	400a940 <__alt_data_end+0xfc002940>
 400af94:	da802217 	ldw	r10,136(sp)
 400af98:	d8001d85 	stb	zero,118(sp)
 400af9c:	0027883a 	mov	r19,zero
 400afa0:	50800104 	addi	r2,r10,4
 400afa4:	54800017 	ldw	r18,0(r10)
 400afa8:	483e6016 	blt	r9,zero,400a92c <__alt_data_end+0xfc00292c>
 400afac:	00ffdfc4 	movi	r3,-129
 400afb0:	d8802215 	stw	r2,136(sp)
 400afb4:	a0e8703a 	and	r20,r20,r3
 400afb8:	0039883a 	mov	fp,zero
 400afbc:	903ebb26 	beq	r18,zero,400aaac <__alt_data_end+0xfc002aac>
 400afc0:	00800244 	movi	r2,9
 400afc4:	14bdee36 	bltu	r2,r18,400a780 <__alt_data_end+0xfc002780>
 400afc8:	003eba06 	br	400aab4 <__alt_data_end+0xfc002ab4>
 400afcc:	00800c04 	movi	r2,48
 400afd0:	d8c01d45 	stb	r3,117(sp)
 400afd4:	d8801d05 	stb	r2,116(sp)
 400afd8:	d8001d85 	stb	zero,118(sp)
 400afdc:	a0c00094 	ori	r3,r20,2
 400afe0:	4800a916 	blt	r9,zero,400b288 <___vfiprintf_internal_r+0x1314>
 400afe4:	00bfdfc4 	movi	r2,-129
 400afe8:	a096703a 	and	r11,r20,r2
 400afec:	5d000094 	ori	r20,r11,2
 400aff0:	0039883a 	mov	fp,zero
 400aff4:	003f9706 	br	400ae54 <__alt_data_end+0xfc002e54>
 400aff8:	8025883a 	mov	r18,r16
 400affc:	003c2e06 	br	400a0b8 <__alt_data_end+0xfc0020b8>
 400b000:	00820034 	movhi	r2,2048
 400b004:	1080b504 	addi	r2,r2,724
 400b008:	0039883a 	mov	fp,zero
 400b00c:	d8802615 	stw	r2,152(sp)
 400b010:	003f9006 	br	400ae54 <__alt_data_end+0xfc002e54>
 400b014:	04a5c83a 	sub	r18,zero,r18
 400b018:	07000b44 	movi	fp,45
 400b01c:	9004c03a 	cmpne	r2,r18,zero
 400b020:	04e7c83a 	sub	r19,zero,r19
 400b024:	df001d85 	stb	fp,118(sp)
 400b028:	98a7c83a 	sub	r19,r19,r2
 400b02c:	48009f16 	blt	r9,zero,400b2ac <___vfiprintf_internal_r+0x1338>
 400b030:	00bfdfc4 	movi	r2,-129
 400b034:	a0a8703a 	and	r20,r20,r2
 400b038:	003dd006 	br	400a77c <__alt_data_end+0xfc00277c>
 400b03c:	70004c26 	beq	r14,zero,400b170 <___vfiprintf_internal_r+0x11fc>
 400b040:	00800084 	movi	r2,2
 400b044:	d8c01d04 	addi	r3,sp,116
 400b048:	d8c00015 	stw	r3,0(sp)
 400b04c:	d8800115 	stw	r2,4(sp)
 400b050:	01000044 	movi	r4,1
 400b054:	d811883a 	mov	r8,sp
 400b058:	003f7306 	br	400ae28 <__alt_data_end+0xfc002e28>
 400b05c:	a080100c 	andi	r2,r20,64
 400b060:	da802217 	ldw	r10,136(sp)
 400b064:	103e0626 	beq	r2,zero,400a880 <__alt_data_end+0xfc002880>
 400b068:	5480000f 	ldh	r18,0(r10)
 400b06c:	52800104 	addi	r10,r10,4
 400b070:	da802215 	stw	r10,136(sp)
 400b074:	9027d7fa 	srai	r19,r18,31
 400b078:	9805883a 	mov	r2,r19
 400b07c:	003db806 	br	400a760 <__alt_data_end+0xfc002760>
 400b080:	a080040c 	andi	r2,r20,16
 400b084:	1000091e 	bne	r2,zero,400b0ac <___vfiprintf_internal_r+0x1138>
 400b088:	a2c0100c 	andi	r11,r20,64
 400b08c:	58000726 	beq	r11,zero,400b0ac <___vfiprintf_internal_r+0x1138>
 400b090:	da802217 	ldw	r10,136(sp)
 400b094:	50800017 	ldw	r2,0(r10)
 400b098:	52800104 	addi	r10,r10,4
 400b09c:	da802215 	stw	r10,136(sp)
 400b0a0:	da802317 	ldw	r10,140(sp)
 400b0a4:	1280000d 	sth	r10,0(r2)
 400b0a8:	003be706 	br	400a048 <__alt_data_end+0xfc002048>
 400b0ac:	da802217 	ldw	r10,136(sp)
 400b0b0:	50800017 	ldw	r2,0(r10)
 400b0b4:	52800104 	addi	r10,r10,4
 400b0b8:	da802215 	stw	r10,136(sp)
 400b0bc:	da802317 	ldw	r10,140(sp)
 400b0c0:	12800015 	stw	r10,0(r2)
 400b0c4:	003be006 	br	400a048 <__alt_data_end+0xfc002048>
 400b0c8:	a080100c 	andi	r2,r20,64
 400b0cc:	da802217 	ldw	r10,136(sp)
 400b0d0:	10003026 	beq	r2,zero,400b194 <___vfiprintf_internal_r+0x1220>
 400b0d4:	5480000b 	ldhu	r18,0(r10)
 400b0d8:	52800104 	addi	r10,r10,4
 400b0dc:	0027883a 	mov	r19,zero
 400b0e0:	da802215 	stw	r10,136(sp)
 400b0e4:	003d8006 	br	400a6e8 <__alt_data_end+0xfc0026e8>
 400b0e8:	80c00007 	ldb	r3,0(r16)
 400b0ec:	003c0006 	br	400a0f0 <__alt_data_end+0xfc0020f0>
 400b0f0:	a080100c 	andi	r2,r20,64
 400b0f4:	d8001d85 	stb	zero,118(sp)
 400b0f8:	da802217 	ldw	r10,136(sp)
 400b0fc:	1000201e 	bne	r2,zero,400b180 <___vfiprintf_internal_r+0x120c>
 400b100:	50800104 	addi	r2,r10,4
 400b104:	54800017 	ldw	r18,0(r10)
 400b108:	0027883a 	mov	r19,zero
 400b10c:	483def0e 	bge	r9,zero,400a8cc <__alt_data_end+0xfc0028cc>
 400b110:	94c6b03a 	or	r3,r18,r19
 400b114:	d8802215 	stw	r2,136(sp)
 400b118:	183d4e1e 	bne	r3,zero,400a654 <__alt_data_end+0xfc002654>
 400b11c:	0039883a 	mov	fp,zero
 400b120:	0005883a 	mov	r2,zero
 400b124:	003e0606 	br	400a940 <__alt_data_end+0xfc002940>
 400b128:	d9402117 	ldw	r5,132(sp)
 400b12c:	d9002017 	ldw	r4,128(sp)
 400b130:	d9801a04 	addi	r6,sp,104
 400b134:	da402c15 	stw	r9,176(sp)
 400b138:	db802a15 	stw	r14,168(sp)
 400b13c:	4009e600 	call	4009e60 <__sprint_r.part.0>
 400b140:	da402c17 	ldw	r9,176(sp)
 400b144:	db802a17 	ldw	r14,168(sp)
 400b148:	103ede1e 	bne	r2,zero,400acc4 <__alt_data_end+0xfc002cc4>
 400b14c:	d9401b17 	ldw	r5,108(sp)
 400b150:	d8801c17 	ldw	r2,112(sp)
 400b154:	d811883a 	mov	r8,sp
 400b158:	29000044 	addi	r4,r5,1
 400b15c:	003e7406 	br	400ab30 <__alt_data_end+0xfc002b30>
 400b160:	00bfffc4 	movi	r2,-1
 400b164:	003c5806 	br	400a2c8 <__alt_data_end+0xfc0022c8>
 400b168:	d811883a 	mov	r8,sp
 400b16c:	003ee806 	br	400ad10 <__alt_data_end+0xfc002d10>
 400b170:	000b883a 	mov	r5,zero
 400b174:	01000044 	movi	r4,1
 400b178:	d811883a 	mov	r8,sp
 400b17c:	003e7c06 	br	400ab70 <__alt_data_end+0xfc002b70>
 400b180:	50800104 	addi	r2,r10,4
 400b184:	5480000b 	ldhu	r18,0(r10)
 400b188:	0027883a 	mov	r19,zero
 400b18c:	483dcf0e 	bge	r9,zero,400a8cc <__alt_data_end+0xfc0028cc>
 400b190:	003fdf06 	br	400b110 <__alt_data_end+0xfc003110>
 400b194:	54800017 	ldw	r18,0(r10)
 400b198:	52800104 	addi	r10,r10,4
 400b19c:	0027883a 	mov	r19,zero
 400b1a0:	da802215 	stw	r10,136(sp)
 400b1a4:	003d5006 	br	400a6e8 <__alt_data_end+0xfc0026e8>
 400b1a8:	50800104 	addi	r2,r10,4
 400b1ac:	5480000b 	ldhu	r18,0(r10)
 400b1b0:	0027883a 	mov	r19,zero
 400b1b4:	483f7d0e 	bge	r9,zero,400afac <__alt_data_end+0xfc002fac>
 400b1b8:	003ddc06 	br	400a92c <__alt_data_end+0xfc00292c>
 400b1bc:	d8c02215 	stw	r3,136(sp)
 400b1c0:	0039883a 	mov	fp,zero
 400b1c4:	003ddb06 	br	400a934 <__alt_data_end+0xfc002934>
 400b1c8:	02820034 	movhi	r10,2048
 400b1cc:	52811604 	addi	r10,r10,1112
 400b1d0:	da802415 	stw	r10,144(sp)
 400b1d4:	003e8306 	br	400abe4 <__alt_data_end+0xfc002be4>
 400b1d8:	d8801c17 	ldw	r2,112(sp)
 400b1dc:	dd002117 	ldw	r20,132(sp)
 400b1e0:	103eb926 	beq	r2,zero,400acc8 <__alt_data_end+0xfc002cc8>
 400b1e4:	d9002017 	ldw	r4,128(sp)
 400b1e8:	d9801a04 	addi	r6,sp,104
 400b1ec:	a00b883a 	mov	r5,r20
 400b1f0:	4009e600 	call	4009e60 <__sprint_r.part.0>
 400b1f4:	003eb406 	br	400acc8 <__alt_data_end+0xfc002cc8>
 400b1f8:	80c00043 	ldbu	r3,1(r16)
 400b1fc:	a5000814 	ori	r20,r20,32
 400b200:	84000044 	addi	r16,r16,1
 400b204:	18c03fcc 	andi	r3,r3,255
 400b208:	18c0201c 	xori	r3,r3,128
 400b20c:	18ffe004 	addi	r3,r3,-128
 400b210:	003bb706 	br	400a0f0 <__alt_data_end+0xfc0020f0>
 400b214:	a809883a 	mov	r4,r21
 400b218:	d8c02a15 	stw	r3,168(sp)
 400b21c:	da002b15 	stw	r8,172(sp)
 400b220:	40027600 	call	4002760 <strlen>
 400b224:	d8c02a17 	ldw	r3,168(sp)
 400b228:	1027883a 	mov	r19,r2
 400b22c:	df001d83 	ldbu	fp,118(sp)
 400b230:	d8c02215 	stw	r3,136(sp)
 400b234:	0013883a 	mov	r9,zero
 400b238:	da002b17 	ldw	r8,172(sp)
 400b23c:	003c4d06 	br	400a374 <__alt_data_end+0xfc002374>
 400b240:	d9402117 	ldw	r5,132(sp)
 400b244:	d9002017 	ldw	r4,128(sp)
 400b248:	d9801a04 	addi	r6,sp,104
 400b24c:	da402c15 	stw	r9,176(sp)
 400b250:	4009e600 	call	4009e60 <__sprint_r.part.0>
 400b254:	da402c17 	ldw	r9,176(sp)
 400b258:	103e9a1e 	bne	r2,zero,400acc4 <__alt_data_end+0xfc002cc4>
 400b25c:	d9401b17 	ldw	r5,108(sp)
 400b260:	d8801c17 	ldw	r2,112(sp)
 400b264:	d811883a 	mov	r8,sp
 400b268:	29000044 	addi	r4,r5,1
 400b26c:	003e4206 	br	400ab78 <__alt_data_end+0xfc002b78>
 400b270:	d9401b17 	ldw	r5,108(sp)
 400b274:	01020034 	movhi	r4,2048
 400b278:	21011a04 	addi	r4,r4,1128
 400b27c:	d9002415 	stw	r4,144(sp)
 400b280:	29400044 	addi	r5,r5,1
 400b284:	003c6d06 	br	400a43c <__alt_data_end+0xfc00243c>
 400b288:	0039883a 	mov	fp,zero
 400b28c:	00800084 	movi	r2,2
 400b290:	10803fcc 	andi	r2,r2,255
 400b294:	01000044 	movi	r4,1
 400b298:	11001e26 	beq	r2,r4,400b314 <___vfiprintf_internal_r+0x13a0>
 400b29c:	01000084 	movi	r4,2
 400b2a0:	11001e1e 	bne	r2,r4,400b31c <___vfiprintf_internal_r+0x13a8>
 400b2a4:	1829883a 	mov	r20,r3
 400b2a8:	003eea06 	br	400ae54 <__alt_data_end+0xfc002e54>
 400b2ac:	a007883a 	mov	r3,r20
 400b2b0:	00800044 	movi	r2,1
 400b2b4:	003ff606 	br	400b290 <__alt_data_end+0xfc003290>
 400b2b8:	00800184 	movi	r2,6
 400b2bc:	1240012e 	bgeu	r2,r9,400b2c4 <___vfiprintf_internal_r+0x1350>
 400b2c0:	1013883a 	mov	r9,r2
 400b2c4:	4827883a 	mov	r19,r9
 400b2c8:	4825883a 	mov	r18,r9
 400b2cc:	48001516 	blt	r9,zero,400b324 <___vfiprintf_internal_r+0x13b0>
 400b2d0:	05420034 	movhi	r21,2048
 400b2d4:	d8c02215 	stw	r3,136(sp)
 400b2d8:	ad40ba04 	addi	r21,r21,744
 400b2dc:	003d1406 	br	400a730 <__alt_data_end+0xfc002730>
 400b2e0:	02820034 	movhi	r10,2048
 400b2e4:	52811604 	addi	r10,r10,1112
 400b2e8:	da802415 	stw	r10,144(sp)
 400b2ec:	200d883a 	mov	r6,r4
 400b2f0:	003c9106 	br	400a538 <__alt_data_end+0xfc002538>
 400b2f4:	5021883a 	mov	r16,r10
 400b2f8:	0013883a 	mov	r9,zero
 400b2fc:	003b7d06 	br	400a0f4 <__alt_data_end+0xfc0020f4>
 400b300:	4827883a 	mov	r19,r9
 400b304:	df001d83 	ldbu	fp,118(sp)
 400b308:	d8c02215 	stw	r3,136(sp)
 400b30c:	0013883a 	mov	r9,zero
 400b310:	003c1806 	br	400a374 <__alt_data_end+0xfc002374>
 400b314:	1829883a 	mov	r20,r3
 400b318:	003d1806 	br	400a77c <__alt_data_end+0xfc00277c>
 400b31c:	1829883a 	mov	r20,r3
 400b320:	003ccd06 	br	400a658 <__alt_data_end+0xfc002658>
 400b324:	0025883a 	mov	r18,zero
 400b328:	003fe906 	br	400b2d0 <__alt_data_end+0xfc0032d0>
 400b32c:	d8802217 	ldw	r2,136(sp)
 400b330:	80c00043 	ldbu	r3,1(r16)
 400b334:	5021883a 	mov	r16,r10
 400b338:	12400017 	ldw	r9,0(r2)
 400b33c:	10800104 	addi	r2,r2,4
 400b340:	d8802215 	stw	r2,136(sp)
 400b344:	483faf0e 	bge	r9,zero,400b204 <__alt_data_end+0xfc003204>
 400b348:	18c03fcc 	andi	r3,r3,255
 400b34c:	18c0201c 	xori	r3,r3,128
 400b350:	027fffc4 	movi	r9,-1
 400b354:	18ffe004 	addi	r3,r3,-128
 400b358:	003b6506 	br	400a0f0 <__alt_data_end+0xfc0020f0>
 400b35c:	d9c01d85 	stb	r7,118(sp)
 400b360:	003ca006 	br	400a5e4 <__alt_data_end+0xfc0025e4>
 400b364:	d9c01d85 	stb	r7,118(sp)
 400b368:	003cad06 	br	400a620 <__alt_data_end+0xfc002620>
 400b36c:	d9c01d85 	stb	r7,118(sp)
 400b370:	003d7d06 	br	400a968 <__alt_data_end+0xfc002968>
 400b374:	d9c01d85 	stb	r7,118(sp)
 400b378:	003d5f06 	br	400a8f8 <__alt_data_end+0xfc0028f8>
 400b37c:	a080004c 	andi	r2,r20,1
 400b380:	0039883a 	mov	fp,zero
 400b384:	10000526 	beq	r2,zero,400b39c <___vfiprintf_internal_r+0x1428>
 400b388:	00800c04 	movi	r2,48
 400b38c:	d88019c5 	stb	r2,103(sp)
 400b390:	dcc02717 	ldw	r19,156(sp)
 400b394:	dd4019c4 	addi	r21,sp,103
 400b398:	003bf606 	br	400a374 <__alt_data_end+0xfc002374>
 400b39c:	0027883a 	mov	r19,zero
 400b3a0:	dd401a04 	addi	r21,sp,104
 400b3a4:	003bf306 	br	400a374 <__alt_data_end+0xfc002374>
 400b3a8:	d9c01d85 	stb	r7,118(sp)
 400b3ac:	003dc806 	br	400aad0 <__alt_data_end+0xfc002ad0>
 400b3b0:	d9c01d85 	stb	r7,118(sp)
 400b3b4:	003d3a06 	br	400a8a0 <__alt_data_end+0xfc0028a0>
 400b3b8:	d9c01d85 	stb	r7,118(sp)
 400b3bc:	003d2a06 	br	400a868 <__alt_data_end+0xfc002868>
 400b3c0:	d9c01d85 	stb	r7,118(sp)
 400b3c4:	003cde06 	br	400a740 <__alt_data_end+0xfc002740>
 400b3c8:	d9c01d85 	stb	r7,118(sp)
 400b3cc:	003cbc06 	br	400a6c0 <__alt_data_end+0xfc0026c0>

0400b3d0 <__vfiprintf_internal>:
 400b3d0:	00810074 	movhi	r2,1025
 400b3d4:	10881404 	addi	r2,r2,8272
 400b3d8:	300f883a 	mov	r7,r6
 400b3dc:	280d883a 	mov	r6,r5
 400b3e0:	200b883a 	mov	r5,r4
 400b3e4:	11000017 	ldw	r4,0(r2)
 400b3e8:	4009f741 	jmpi	4009f74 <___vfiprintf_internal_r>

0400b3ec <__sbprintf>:
 400b3ec:	2880030b 	ldhu	r2,12(r5)
 400b3f0:	2ac01917 	ldw	r11,100(r5)
 400b3f4:	2a80038b 	ldhu	r10,14(r5)
 400b3f8:	2a400717 	ldw	r9,28(r5)
 400b3fc:	2a000917 	ldw	r8,36(r5)
 400b400:	defee204 	addi	sp,sp,-1144
 400b404:	00c10004 	movi	r3,1024
 400b408:	dc011a15 	stw	r16,1128(sp)
 400b40c:	10bfff4c 	andi	r2,r2,65533
 400b410:	2821883a 	mov	r16,r5
 400b414:	d8cb883a 	add	r5,sp,r3
 400b418:	dc811c15 	stw	r18,1136(sp)
 400b41c:	dc411b15 	stw	r17,1132(sp)
 400b420:	dfc11d15 	stw	ra,1140(sp)
 400b424:	2025883a 	mov	r18,r4
 400b428:	d881030d 	sth	r2,1036(sp)
 400b42c:	dac11915 	stw	r11,1124(sp)
 400b430:	da81038d 	sth	r10,1038(sp)
 400b434:	da410715 	stw	r9,1052(sp)
 400b438:	da010915 	stw	r8,1060(sp)
 400b43c:	dec10015 	stw	sp,1024(sp)
 400b440:	dec10415 	stw	sp,1040(sp)
 400b444:	d8c10215 	stw	r3,1032(sp)
 400b448:	d8c10515 	stw	r3,1044(sp)
 400b44c:	d8010615 	stw	zero,1048(sp)
 400b450:	4009f740 	call	4009f74 <___vfiprintf_internal_r>
 400b454:	1023883a 	mov	r17,r2
 400b458:	10000416 	blt	r2,zero,400b46c <__sbprintf+0x80>
 400b45c:	d9410004 	addi	r5,sp,1024
 400b460:	9009883a 	mov	r4,r18
 400b464:	40066c00 	call	40066c0 <_fflush_r>
 400b468:	10000d1e 	bne	r2,zero,400b4a0 <__sbprintf+0xb4>
 400b46c:	d881030b 	ldhu	r2,1036(sp)
 400b470:	1080100c 	andi	r2,r2,64
 400b474:	10000326 	beq	r2,zero,400b484 <__sbprintf+0x98>
 400b478:	8080030b 	ldhu	r2,12(r16)
 400b47c:	10801014 	ori	r2,r2,64
 400b480:	8080030d 	sth	r2,12(r16)
 400b484:	8805883a 	mov	r2,r17
 400b488:	dfc11d17 	ldw	ra,1140(sp)
 400b48c:	dc811c17 	ldw	r18,1136(sp)
 400b490:	dc411b17 	ldw	r17,1132(sp)
 400b494:	dc011a17 	ldw	r16,1128(sp)
 400b498:	dec11e04 	addi	sp,sp,1144
 400b49c:	f800283a 	ret
 400b4a0:	047fffc4 	movi	r17,-1
 400b4a4:	003ff106 	br	400b46c <__alt_data_end+0xfc00346c>

0400b4a8 <__swbuf_r>:
 400b4a8:	defffb04 	addi	sp,sp,-20
 400b4ac:	dcc00315 	stw	r19,12(sp)
 400b4b0:	dc800215 	stw	r18,8(sp)
 400b4b4:	dc000015 	stw	r16,0(sp)
 400b4b8:	dfc00415 	stw	ra,16(sp)
 400b4bc:	dc400115 	stw	r17,4(sp)
 400b4c0:	2025883a 	mov	r18,r4
 400b4c4:	2827883a 	mov	r19,r5
 400b4c8:	3021883a 	mov	r16,r6
 400b4cc:	20000226 	beq	r4,zero,400b4d8 <__swbuf_r+0x30>
 400b4d0:	20800e17 	ldw	r2,56(r4)
 400b4d4:	10004226 	beq	r2,zero,400b5e0 <__swbuf_r+0x138>
 400b4d8:	80800617 	ldw	r2,24(r16)
 400b4dc:	8100030b 	ldhu	r4,12(r16)
 400b4e0:	80800215 	stw	r2,8(r16)
 400b4e4:	2080020c 	andi	r2,r4,8
 400b4e8:	10003626 	beq	r2,zero,400b5c4 <__swbuf_r+0x11c>
 400b4ec:	80c00417 	ldw	r3,16(r16)
 400b4f0:	18003426 	beq	r3,zero,400b5c4 <__swbuf_r+0x11c>
 400b4f4:	2088000c 	andi	r2,r4,8192
 400b4f8:	9c403fcc 	andi	r17,r19,255
 400b4fc:	10001a26 	beq	r2,zero,400b568 <__swbuf_r+0xc0>
 400b500:	80800017 	ldw	r2,0(r16)
 400b504:	81000517 	ldw	r4,20(r16)
 400b508:	10c7c83a 	sub	r3,r2,r3
 400b50c:	1900200e 	bge	r3,r4,400b590 <__swbuf_r+0xe8>
 400b510:	18c00044 	addi	r3,r3,1
 400b514:	81000217 	ldw	r4,8(r16)
 400b518:	11400044 	addi	r5,r2,1
 400b51c:	81400015 	stw	r5,0(r16)
 400b520:	213fffc4 	addi	r4,r4,-1
 400b524:	81000215 	stw	r4,8(r16)
 400b528:	14c00005 	stb	r19,0(r2)
 400b52c:	80800517 	ldw	r2,20(r16)
 400b530:	10c01e26 	beq	r2,r3,400b5ac <__swbuf_r+0x104>
 400b534:	8080030b 	ldhu	r2,12(r16)
 400b538:	1080004c 	andi	r2,r2,1
 400b53c:	10000226 	beq	r2,zero,400b548 <__swbuf_r+0xa0>
 400b540:	00800284 	movi	r2,10
 400b544:	88801926 	beq	r17,r2,400b5ac <__swbuf_r+0x104>
 400b548:	8805883a 	mov	r2,r17
 400b54c:	dfc00417 	ldw	ra,16(sp)
 400b550:	dcc00317 	ldw	r19,12(sp)
 400b554:	dc800217 	ldw	r18,8(sp)
 400b558:	dc400117 	ldw	r17,4(sp)
 400b55c:	dc000017 	ldw	r16,0(sp)
 400b560:	dec00504 	addi	sp,sp,20
 400b564:	f800283a 	ret
 400b568:	81401917 	ldw	r5,100(r16)
 400b56c:	00b7ffc4 	movi	r2,-8193
 400b570:	21080014 	ori	r4,r4,8192
 400b574:	2884703a 	and	r2,r5,r2
 400b578:	80801915 	stw	r2,100(r16)
 400b57c:	80800017 	ldw	r2,0(r16)
 400b580:	8100030d 	sth	r4,12(r16)
 400b584:	81000517 	ldw	r4,20(r16)
 400b588:	10c7c83a 	sub	r3,r2,r3
 400b58c:	193fe016 	blt	r3,r4,400b510 <__alt_data_end+0xfc003510>
 400b590:	800b883a 	mov	r5,r16
 400b594:	9009883a 	mov	r4,r18
 400b598:	40066c00 	call	40066c0 <_fflush_r>
 400b59c:	1000071e 	bne	r2,zero,400b5bc <__swbuf_r+0x114>
 400b5a0:	80800017 	ldw	r2,0(r16)
 400b5a4:	00c00044 	movi	r3,1
 400b5a8:	003fda06 	br	400b514 <__alt_data_end+0xfc003514>
 400b5ac:	800b883a 	mov	r5,r16
 400b5b0:	9009883a 	mov	r4,r18
 400b5b4:	40066c00 	call	40066c0 <_fflush_r>
 400b5b8:	103fe326 	beq	r2,zero,400b548 <__alt_data_end+0xfc003548>
 400b5bc:	00bfffc4 	movi	r2,-1
 400b5c0:	003fe206 	br	400b54c <__alt_data_end+0xfc00354c>
 400b5c4:	800b883a 	mov	r5,r16
 400b5c8:	9009883a 	mov	r4,r18
 400b5cc:	4004ac80 	call	4004ac8 <__swsetup_r>
 400b5d0:	103ffa1e 	bne	r2,zero,400b5bc <__alt_data_end+0xfc0035bc>
 400b5d4:	8100030b 	ldhu	r4,12(r16)
 400b5d8:	80c00417 	ldw	r3,16(r16)
 400b5dc:	003fc506 	br	400b4f4 <__alt_data_end+0xfc0034f4>
 400b5e0:	4006a9c0 	call	4006a9c <__sinit>
 400b5e4:	003fbc06 	br	400b4d8 <__alt_data_end+0xfc0034d8>

0400b5e8 <__swbuf>:
 400b5e8:	00810074 	movhi	r2,1025
 400b5ec:	10881404 	addi	r2,r2,8272
 400b5f0:	280d883a 	mov	r6,r5
 400b5f4:	200b883a 	mov	r5,r4
 400b5f8:	11000017 	ldw	r4,0(r2)
 400b5fc:	400b4a81 	jmpi	400b4a8 <__swbuf_r>

0400b600 <_write_r>:
 400b600:	defffd04 	addi	sp,sp,-12
 400b604:	2805883a 	mov	r2,r5
 400b608:	dc000015 	stw	r16,0(sp)
 400b60c:	04010074 	movhi	r16,1025
 400b610:	dc400115 	stw	r17,4(sp)
 400b614:	300b883a 	mov	r5,r6
 400b618:	840ee804 	addi	r16,r16,15264
 400b61c:	2023883a 	mov	r17,r4
 400b620:	380d883a 	mov	r6,r7
 400b624:	1009883a 	mov	r4,r2
 400b628:	dfc00215 	stw	ra,8(sp)
 400b62c:	80000015 	stw	zero,0(r16)
 400b630:	400e7300 	call	400e730 <write>
 400b634:	00ffffc4 	movi	r3,-1
 400b638:	10c00526 	beq	r2,r3,400b650 <_write_r+0x50>
 400b63c:	dfc00217 	ldw	ra,8(sp)
 400b640:	dc400117 	ldw	r17,4(sp)
 400b644:	dc000017 	ldw	r16,0(sp)
 400b648:	dec00304 	addi	sp,sp,12
 400b64c:	f800283a 	ret
 400b650:	80c00017 	ldw	r3,0(r16)
 400b654:	183ff926 	beq	r3,zero,400b63c <__alt_data_end+0xfc00363c>
 400b658:	88c00015 	stw	r3,0(r17)
 400b65c:	003ff706 	br	400b63c <__alt_data_end+0xfc00363c>

0400b660 <_close_r>:
 400b660:	defffd04 	addi	sp,sp,-12
 400b664:	dc000015 	stw	r16,0(sp)
 400b668:	04010074 	movhi	r16,1025
 400b66c:	dc400115 	stw	r17,4(sp)
 400b670:	840ee804 	addi	r16,r16,15264
 400b674:	2023883a 	mov	r17,r4
 400b678:	2809883a 	mov	r4,r5
 400b67c:	dfc00215 	stw	ra,8(sp)
 400b680:	80000015 	stw	zero,0(r16)
 400b684:	400decc0 	call	400decc <close>
 400b688:	00ffffc4 	movi	r3,-1
 400b68c:	10c00526 	beq	r2,r3,400b6a4 <_close_r+0x44>
 400b690:	dfc00217 	ldw	ra,8(sp)
 400b694:	dc400117 	ldw	r17,4(sp)
 400b698:	dc000017 	ldw	r16,0(sp)
 400b69c:	dec00304 	addi	sp,sp,12
 400b6a0:	f800283a 	ret
 400b6a4:	80c00017 	ldw	r3,0(r16)
 400b6a8:	183ff926 	beq	r3,zero,400b690 <__alt_data_end+0xfc003690>
 400b6ac:	88c00015 	stw	r3,0(r17)
 400b6b0:	003ff706 	br	400b690 <__alt_data_end+0xfc003690>

0400b6b4 <_calloc_r>:
 400b6b4:	298b383a 	mul	r5,r5,r6
 400b6b8:	defffe04 	addi	sp,sp,-8
 400b6bc:	dfc00115 	stw	ra,4(sp)
 400b6c0:	dc000015 	stw	r16,0(sp)
 400b6c4:	40077fc0 	call	40077fc <_malloc_r>
 400b6c8:	10002926 	beq	r2,zero,400b770 <_calloc_r+0xbc>
 400b6cc:	11bfff17 	ldw	r6,-4(r2)
 400b6d0:	1021883a 	mov	r16,r2
 400b6d4:	00bfff04 	movi	r2,-4
 400b6d8:	308c703a 	and	r6,r6,r2
 400b6dc:	00c00904 	movi	r3,36
 400b6e0:	308d883a 	add	r6,r6,r2
 400b6e4:	19801636 	bltu	r3,r6,400b740 <_calloc_r+0x8c>
 400b6e8:	008004c4 	movi	r2,19
 400b6ec:	11800b2e 	bgeu	r2,r6,400b71c <_calloc_r+0x68>
 400b6f0:	80000015 	stw	zero,0(r16)
 400b6f4:	80000115 	stw	zero,4(r16)
 400b6f8:	008006c4 	movi	r2,27
 400b6fc:	11801a2e 	bgeu	r2,r6,400b768 <_calloc_r+0xb4>
 400b700:	80000215 	stw	zero,8(r16)
 400b704:	80000315 	stw	zero,12(r16)
 400b708:	30c0151e 	bne	r6,r3,400b760 <_calloc_r+0xac>
 400b70c:	80000415 	stw	zero,16(r16)
 400b710:	80800604 	addi	r2,r16,24
 400b714:	80000515 	stw	zero,20(r16)
 400b718:	00000106 	br	400b720 <_calloc_r+0x6c>
 400b71c:	8005883a 	mov	r2,r16
 400b720:	10000015 	stw	zero,0(r2)
 400b724:	10000115 	stw	zero,4(r2)
 400b728:	10000215 	stw	zero,8(r2)
 400b72c:	8005883a 	mov	r2,r16
 400b730:	dfc00117 	ldw	ra,4(sp)
 400b734:	dc000017 	ldw	r16,0(sp)
 400b738:	dec00204 	addi	sp,sp,8
 400b73c:	f800283a 	ret
 400b740:	000b883a 	mov	r5,zero
 400b744:	8009883a 	mov	r4,r16
 400b748:	40083900 	call	4008390 <memset>
 400b74c:	8005883a 	mov	r2,r16
 400b750:	dfc00117 	ldw	ra,4(sp)
 400b754:	dc000017 	ldw	r16,0(sp)
 400b758:	dec00204 	addi	sp,sp,8
 400b75c:	f800283a 	ret
 400b760:	80800404 	addi	r2,r16,16
 400b764:	003fee06 	br	400b720 <__alt_data_end+0xfc003720>
 400b768:	80800204 	addi	r2,r16,8
 400b76c:	003fec06 	br	400b720 <__alt_data_end+0xfc003720>
 400b770:	0005883a 	mov	r2,zero
 400b774:	003fee06 	br	400b730 <__alt_data_end+0xfc003730>

0400b778 <_fclose_r>:
 400b778:	28003926 	beq	r5,zero,400b860 <_fclose_r+0xe8>
 400b77c:	defffc04 	addi	sp,sp,-16
 400b780:	dc400115 	stw	r17,4(sp)
 400b784:	dc000015 	stw	r16,0(sp)
 400b788:	dfc00315 	stw	ra,12(sp)
 400b78c:	dc800215 	stw	r18,8(sp)
 400b790:	2023883a 	mov	r17,r4
 400b794:	2821883a 	mov	r16,r5
 400b798:	20000226 	beq	r4,zero,400b7a4 <_fclose_r+0x2c>
 400b79c:	20800e17 	ldw	r2,56(r4)
 400b7a0:	10002726 	beq	r2,zero,400b840 <_fclose_r+0xc8>
 400b7a4:	8080030f 	ldh	r2,12(r16)
 400b7a8:	1000071e 	bne	r2,zero,400b7c8 <_fclose_r+0x50>
 400b7ac:	0005883a 	mov	r2,zero
 400b7b0:	dfc00317 	ldw	ra,12(sp)
 400b7b4:	dc800217 	ldw	r18,8(sp)
 400b7b8:	dc400117 	ldw	r17,4(sp)
 400b7bc:	dc000017 	ldw	r16,0(sp)
 400b7c0:	dec00404 	addi	sp,sp,16
 400b7c4:	f800283a 	ret
 400b7c8:	800b883a 	mov	r5,r16
 400b7cc:	8809883a 	mov	r4,r17
 400b7d0:	40064a40 	call	40064a4 <__sflush_r>
 400b7d4:	1025883a 	mov	r18,r2
 400b7d8:	80800b17 	ldw	r2,44(r16)
 400b7dc:	10000426 	beq	r2,zero,400b7f0 <_fclose_r+0x78>
 400b7e0:	81400717 	ldw	r5,28(r16)
 400b7e4:	8809883a 	mov	r4,r17
 400b7e8:	103ee83a 	callr	r2
 400b7ec:	10001616 	blt	r2,zero,400b848 <_fclose_r+0xd0>
 400b7f0:	8080030b 	ldhu	r2,12(r16)
 400b7f4:	1080200c 	andi	r2,r2,128
 400b7f8:	1000151e 	bne	r2,zero,400b850 <_fclose_r+0xd8>
 400b7fc:	81400c17 	ldw	r5,48(r16)
 400b800:	28000526 	beq	r5,zero,400b818 <_fclose_r+0xa0>
 400b804:	80801004 	addi	r2,r16,64
 400b808:	28800226 	beq	r5,r2,400b814 <_fclose_r+0x9c>
 400b80c:	8809883a 	mov	r4,r17
 400b810:	4006c100 	call	4006c10 <_free_r>
 400b814:	80000c15 	stw	zero,48(r16)
 400b818:	81401117 	ldw	r5,68(r16)
 400b81c:	28000326 	beq	r5,zero,400b82c <_fclose_r+0xb4>
 400b820:	8809883a 	mov	r4,r17
 400b824:	4006c100 	call	4006c10 <_free_r>
 400b828:	80001115 	stw	zero,68(r16)
 400b82c:	4006aac0 	call	4006aac <__sfp_lock_acquire>
 400b830:	8000030d 	sth	zero,12(r16)
 400b834:	4006ab00 	call	4006ab0 <__sfp_lock_release>
 400b838:	9005883a 	mov	r2,r18
 400b83c:	003fdc06 	br	400b7b0 <__alt_data_end+0xfc0037b0>
 400b840:	4006a9c0 	call	4006a9c <__sinit>
 400b844:	003fd706 	br	400b7a4 <__alt_data_end+0xfc0037a4>
 400b848:	04bfffc4 	movi	r18,-1
 400b84c:	003fe806 	br	400b7f0 <__alt_data_end+0xfc0037f0>
 400b850:	81400417 	ldw	r5,16(r16)
 400b854:	8809883a 	mov	r4,r17
 400b858:	4006c100 	call	4006c10 <_free_r>
 400b85c:	003fe706 	br	400b7fc <__alt_data_end+0xfc0037fc>
 400b860:	0005883a 	mov	r2,zero
 400b864:	f800283a 	ret

0400b868 <fclose>:
 400b868:	00810074 	movhi	r2,1025
 400b86c:	10881404 	addi	r2,r2,8272
 400b870:	200b883a 	mov	r5,r4
 400b874:	11000017 	ldw	r4,0(r2)
 400b878:	400b7781 	jmpi	400b778 <_fclose_r>

0400b87c <__fputwc>:
 400b87c:	defff804 	addi	sp,sp,-32
 400b880:	dcc00415 	stw	r19,16(sp)
 400b884:	dc800315 	stw	r18,12(sp)
 400b888:	dc000115 	stw	r16,4(sp)
 400b88c:	dfc00715 	stw	ra,28(sp)
 400b890:	dd400615 	stw	r21,24(sp)
 400b894:	dd000515 	stw	r20,20(sp)
 400b898:	dc400215 	stw	r17,8(sp)
 400b89c:	2027883a 	mov	r19,r4
 400b8a0:	2825883a 	mov	r18,r5
 400b8a4:	3021883a 	mov	r16,r6
 400b8a8:	40075ec0 	call	40075ec <__locale_mb_cur_max>
 400b8ac:	00c00044 	movi	r3,1
 400b8b0:	10c03e26 	beq	r2,r3,400b9ac <__fputwc+0x130>
 400b8b4:	81c01704 	addi	r7,r16,92
 400b8b8:	900d883a 	mov	r6,r18
 400b8bc:	d80b883a 	mov	r5,sp
 400b8c0:	9809883a 	mov	r4,r19
 400b8c4:	400bbf40 	call	400bbf4 <_wcrtomb_r>
 400b8c8:	1029883a 	mov	r20,r2
 400b8cc:	00bfffc4 	movi	r2,-1
 400b8d0:	a0802026 	beq	r20,r2,400b954 <__fputwc+0xd8>
 400b8d4:	d9400003 	ldbu	r5,0(sp)
 400b8d8:	a0001c26 	beq	r20,zero,400b94c <__fputwc+0xd0>
 400b8dc:	0023883a 	mov	r17,zero
 400b8e0:	05400284 	movi	r21,10
 400b8e4:	00000906 	br	400b90c <__fputwc+0x90>
 400b8e8:	80800017 	ldw	r2,0(r16)
 400b8ec:	11400005 	stb	r5,0(r2)
 400b8f0:	80c00017 	ldw	r3,0(r16)
 400b8f4:	18c00044 	addi	r3,r3,1
 400b8f8:	80c00015 	stw	r3,0(r16)
 400b8fc:	8c400044 	addi	r17,r17,1
 400b900:	dc45883a 	add	r2,sp,r17
 400b904:	8d00112e 	bgeu	r17,r20,400b94c <__fputwc+0xd0>
 400b908:	11400003 	ldbu	r5,0(r2)
 400b90c:	80c00217 	ldw	r3,8(r16)
 400b910:	18ffffc4 	addi	r3,r3,-1
 400b914:	80c00215 	stw	r3,8(r16)
 400b918:	183ff30e 	bge	r3,zero,400b8e8 <__alt_data_end+0xfc0038e8>
 400b91c:	80800617 	ldw	r2,24(r16)
 400b920:	18801916 	blt	r3,r2,400b988 <__fputwc+0x10c>
 400b924:	80800017 	ldw	r2,0(r16)
 400b928:	11400005 	stb	r5,0(r2)
 400b92c:	80800017 	ldw	r2,0(r16)
 400b930:	10c00003 	ldbu	r3,0(r2)
 400b934:	10800044 	addi	r2,r2,1
 400b938:	1d402326 	beq	r3,r21,400b9c8 <__fputwc+0x14c>
 400b93c:	80800015 	stw	r2,0(r16)
 400b940:	8c400044 	addi	r17,r17,1
 400b944:	dc45883a 	add	r2,sp,r17
 400b948:	8d3fef36 	bltu	r17,r20,400b908 <__alt_data_end+0xfc003908>
 400b94c:	9005883a 	mov	r2,r18
 400b950:	00000406 	br	400b964 <__fputwc+0xe8>
 400b954:	80c0030b 	ldhu	r3,12(r16)
 400b958:	a005883a 	mov	r2,r20
 400b95c:	18c01014 	ori	r3,r3,64
 400b960:	80c0030d 	sth	r3,12(r16)
 400b964:	dfc00717 	ldw	ra,28(sp)
 400b968:	dd400617 	ldw	r21,24(sp)
 400b96c:	dd000517 	ldw	r20,20(sp)
 400b970:	dcc00417 	ldw	r19,16(sp)
 400b974:	dc800317 	ldw	r18,12(sp)
 400b978:	dc400217 	ldw	r17,8(sp)
 400b97c:	dc000117 	ldw	r16,4(sp)
 400b980:	dec00804 	addi	sp,sp,32
 400b984:	f800283a 	ret
 400b988:	800d883a 	mov	r6,r16
 400b98c:	29403fcc 	andi	r5,r5,255
 400b990:	9809883a 	mov	r4,r19
 400b994:	400b4a80 	call	400b4a8 <__swbuf_r>
 400b998:	10bfffe0 	cmpeqi	r2,r2,-1
 400b99c:	10803fcc 	andi	r2,r2,255
 400b9a0:	103fd626 	beq	r2,zero,400b8fc <__alt_data_end+0xfc0038fc>
 400b9a4:	00bfffc4 	movi	r2,-1
 400b9a8:	003fee06 	br	400b964 <__alt_data_end+0xfc003964>
 400b9ac:	90ffffc4 	addi	r3,r18,-1
 400b9b0:	01003f84 	movi	r4,254
 400b9b4:	20ffbf36 	bltu	r4,r3,400b8b4 <__alt_data_end+0xfc0038b4>
 400b9b8:	900b883a 	mov	r5,r18
 400b9bc:	dc800005 	stb	r18,0(sp)
 400b9c0:	1029883a 	mov	r20,r2
 400b9c4:	003fc506 	br	400b8dc <__alt_data_end+0xfc0038dc>
 400b9c8:	800d883a 	mov	r6,r16
 400b9cc:	a80b883a 	mov	r5,r21
 400b9d0:	9809883a 	mov	r4,r19
 400b9d4:	400b4a80 	call	400b4a8 <__swbuf_r>
 400b9d8:	10bfffe0 	cmpeqi	r2,r2,-1
 400b9dc:	003fef06 	br	400b99c <__alt_data_end+0xfc00399c>

0400b9e0 <_fputwc_r>:
 400b9e0:	3080030b 	ldhu	r2,12(r6)
 400b9e4:	10c8000c 	andi	r3,r2,8192
 400b9e8:	1800051e 	bne	r3,zero,400ba00 <_fputwc_r+0x20>
 400b9ec:	30c01917 	ldw	r3,100(r6)
 400b9f0:	10880014 	ori	r2,r2,8192
 400b9f4:	3080030d 	sth	r2,12(r6)
 400b9f8:	18880014 	ori	r2,r3,8192
 400b9fc:	30801915 	stw	r2,100(r6)
 400ba00:	400b87c1 	jmpi	400b87c <__fputwc>

0400ba04 <fputwc>:
 400ba04:	00810074 	movhi	r2,1025
 400ba08:	defffc04 	addi	sp,sp,-16
 400ba0c:	10881404 	addi	r2,r2,8272
 400ba10:	dc000115 	stw	r16,4(sp)
 400ba14:	14000017 	ldw	r16,0(r2)
 400ba18:	dc400215 	stw	r17,8(sp)
 400ba1c:	dfc00315 	stw	ra,12(sp)
 400ba20:	2023883a 	mov	r17,r4
 400ba24:	80000226 	beq	r16,zero,400ba30 <fputwc+0x2c>
 400ba28:	80800e17 	ldw	r2,56(r16)
 400ba2c:	10001026 	beq	r2,zero,400ba70 <fputwc+0x6c>
 400ba30:	2880030b 	ldhu	r2,12(r5)
 400ba34:	10c8000c 	andi	r3,r2,8192
 400ba38:	1800051e 	bne	r3,zero,400ba50 <fputwc+0x4c>
 400ba3c:	28c01917 	ldw	r3,100(r5)
 400ba40:	10880014 	ori	r2,r2,8192
 400ba44:	2880030d 	sth	r2,12(r5)
 400ba48:	18880014 	ori	r2,r3,8192
 400ba4c:	28801915 	stw	r2,100(r5)
 400ba50:	280d883a 	mov	r6,r5
 400ba54:	8009883a 	mov	r4,r16
 400ba58:	880b883a 	mov	r5,r17
 400ba5c:	dfc00317 	ldw	ra,12(sp)
 400ba60:	dc400217 	ldw	r17,8(sp)
 400ba64:	dc000117 	ldw	r16,4(sp)
 400ba68:	dec00404 	addi	sp,sp,16
 400ba6c:	400b87c1 	jmpi	400b87c <__fputwc>
 400ba70:	8009883a 	mov	r4,r16
 400ba74:	d9400015 	stw	r5,0(sp)
 400ba78:	4006a9c0 	call	4006a9c <__sinit>
 400ba7c:	d9400017 	ldw	r5,0(sp)
 400ba80:	003feb06 	br	400ba30 <__alt_data_end+0xfc003a30>

0400ba84 <_fstat_r>:
 400ba84:	defffd04 	addi	sp,sp,-12
 400ba88:	2805883a 	mov	r2,r5
 400ba8c:	dc000015 	stw	r16,0(sp)
 400ba90:	04010074 	movhi	r16,1025
 400ba94:	dc400115 	stw	r17,4(sp)
 400ba98:	840ee804 	addi	r16,r16,15264
 400ba9c:	2023883a 	mov	r17,r4
 400baa0:	300b883a 	mov	r5,r6
 400baa4:	1009883a 	mov	r4,r2
 400baa8:	dfc00215 	stw	ra,8(sp)
 400baac:	80000015 	stw	zero,0(r16)
 400bab0:	400e0240 	call	400e024 <fstat>
 400bab4:	00ffffc4 	movi	r3,-1
 400bab8:	10c00526 	beq	r2,r3,400bad0 <_fstat_r+0x4c>
 400babc:	dfc00217 	ldw	ra,8(sp)
 400bac0:	dc400117 	ldw	r17,4(sp)
 400bac4:	dc000017 	ldw	r16,0(sp)
 400bac8:	dec00304 	addi	sp,sp,12
 400bacc:	f800283a 	ret
 400bad0:	80c00017 	ldw	r3,0(r16)
 400bad4:	183ff926 	beq	r3,zero,400babc <__alt_data_end+0xfc003abc>
 400bad8:	88c00015 	stw	r3,0(r17)
 400badc:	003ff706 	br	400babc <__alt_data_end+0xfc003abc>

0400bae0 <_isatty_r>:
 400bae0:	defffd04 	addi	sp,sp,-12
 400bae4:	dc000015 	stw	r16,0(sp)
 400bae8:	04010074 	movhi	r16,1025
 400baec:	dc400115 	stw	r17,4(sp)
 400baf0:	840ee804 	addi	r16,r16,15264
 400baf4:	2023883a 	mov	r17,r4
 400baf8:	2809883a 	mov	r4,r5
 400bafc:	dfc00215 	stw	ra,8(sp)
 400bb00:	80000015 	stw	zero,0(r16)
 400bb04:	400e1440 	call	400e144 <isatty>
 400bb08:	00ffffc4 	movi	r3,-1
 400bb0c:	10c00526 	beq	r2,r3,400bb24 <_isatty_r+0x44>
 400bb10:	dfc00217 	ldw	ra,8(sp)
 400bb14:	dc400117 	ldw	r17,4(sp)
 400bb18:	dc000017 	ldw	r16,0(sp)
 400bb1c:	dec00304 	addi	sp,sp,12
 400bb20:	f800283a 	ret
 400bb24:	80c00017 	ldw	r3,0(r16)
 400bb28:	183ff926 	beq	r3,zero,400bb10 <__alt_data_end+0xfc003b10>
 400bb2c:	88c00015 	stw	r3,0(r17)
 400bb30:	003ff706 	br	400bb10 <__alt_data_end+0xfc003b10>

0400bb34 <_lseek_r>:
 400bb34:	defffd04 	addi	sp,sp,-12
 400bb38:	2805883a 	mov	r2,r5
 400bb3c:	dc000015 	stw	r16,0(sp)
 400bb40:	04010074 	movhi	r16,1025
 400bb44:	dc400115 	stw	r17,4(sp)
 400bb48:	300b883a 	mov	r5,r6
 400bb4c:	840ee804 	addi	r16,r16,15264
 400bb50:	2023883a 	mov	r17,r4
 400bb54:	380d883a 	mov	r6,r7
 400bb58:	1009883a 	mov	r4,r2
 400bb5c:	dfc00215 	stw	ra,8(sp)
 400bb60:	80000015 	stw	zero,0(r16)
 400bb64:	400e3100 	call	400e310 <lseek>
 400bb68:	00ffffc4 	movi	r3,-1
 400bb6c:	10c00526 	beq	r2,r3,400bb84 <_lseek_r+0x50>
 400bb70:	dfc00217 	ldw	ra,8(sp)
 400bb74:	dc400117 	ldw	r17,4(sp)
 400bb78:	dc000017 	ldw	r16,0(sp)
 400bb7c:	dec00304 	addi	sp,sp,12
 400bb80:	f800283a 	ret
 400bb84:	80c00017 	ldw	r3,0(r16)
 400bb88:	183ff926 	beq	r3,zero,400bb70 <__alt_data_end+0xfc003b70>
 400bb8c:	88c00015 	stw	r3,0(r17)
 400bb90:	003ff706 	br	400bb70 <__alt_data_end+0xfc003b70>

0400bb94 <_read_r>:
 400bb94:	defffd04 	addi	sp,sp,-12
 400bb98:	2805883a 	mov	r2,r5
 400bb9c:	dc000015 	stw	r16,0(sp)
 400bba0:	04010074 	movhi	r16,1025
 400bba4:	dc400115 	stw	r17,4(sp)
 400bba8:	300b883a 	mov	r5,r6
 400bbac:	840ee804 	addi	r16,r16,15264
 400bbb0:	2023883a 	mov	r17,r4
 400bbb4:	380d883a 	mov	r6,r7
 400bbb8:	1009883a 	mov	r4,r2
 400bbbc:	dfc00215 	stw	ra,8(sp)
 400bbc0:	80000015 	stw	zero,0(r16)
 400bbc4:	400e4e40 	call	400e4e4 <read>
 400bbc8:	00ffffc4 	movi	r3,-1
 400bbcc:	10c00526 	beq	r2,r3,400bbe4 <_read_r+0x50>
 400bbd0:	dfc00217 	ldw	ra,8(sp)
 400bbd4:	dc400117 	ldw	r17,4(sp)
 400bbd8:	dc000017 	ldw	r16,0(sp)
 400bbdc:	dec00304 	addi	sp,sp,12
 400bbe0:	f800283a 	ret
 400bbe4:	80c00017 	ldw	r3,0(r16)
 400bbe8:	183ff926 	beq	r3,zero,400bbd0 <__alt_data_end+0xfc003bd0>
 400bbec:	88c00015 	stw	r3,0(r17)
 400bbf0:	003ff706 	br	400bbd0 <__alt_data_end+0xfc003bd0>

0400bbf4 <_wcrtomb_r>:
 400bbf4:	defff604 	addi	sp,sp,-40
 400bbf8:	00810074 	movhi	r2,1025
 400bbfc:	dc800815 	stw	r18,32(sp)
 400bc00:	dc400715 	stw	r17,28(sp)
 400bc04:	dc000615 	stw	r16,24(sp)
 400bc08:	10881804 	addi	r2,r2,8288
 400bc0c:	dfc00915 	stw	ra,36(sp)
 400bc10:	2021883a 	mov	r16,r4
 400bc14:	3823883a 	mov	r17,r7
 400bc18:	14800017 	ldw	r18,0(r2)
 400bc1c:	28001426 	beq	r5,zero,400bc70 <_wcrtomb_r+0x7c>
 400bc20:	d9400415 	stw	r5,16(sp)
 400bc24:	d9800515 	stw	r6,20(sp)
 400bc28:	40075e00 	call	40075e0 <__locale_charset>
 400bc2c:	d9800517 	ldw	r6,20(sp)
 400bc30:	d9400417 	ldw	r5,16(sp)
 400bc34:	100f883a 	mov	r7,r2
 400bc38:	dc400015 	stw	r17,0(sp)
 400bc3c:	8009883a 	mov	r4,r16
 400bc40:	903ee83a 	callr	r18
 400bc44:	00ffffc4 	movi	r3,-1
 400bc48:	10c0031e 	bne	r2,r3,400bc58 <_wcrtomb_r+0x64>
 400bc4c:	88000015 	stw	zero,0(r17)
 400bc50:	00c02284 	movi	r3,138
 400bc54:	80c00015 	stw	r3,0(r16)
 400bc58:	dfc00917 	ldw	ra,36(sp)
 400bc5c:	dc800817 	ldw	r18,32(sp)
 400bc60:	dc400717 	ldw	r17,28(sp)
 400bc64:	dc000617 	ldw	r16,24(sp)
 400bc68:	dec00a04 	addi	sp,sp,40
 400bc6c:	f800283a 	ret
 400bc70:	40075e00 	call	40075e0 <__locale_charset>
 400bc74:	100f883a 	mov	r7,r2
 400bc78:	dc400015 	stw	r17,0(sp)
 400bc7c:	000d883a 	mov	r6,zero
 400bc80:	d9400104 	addi	r5,sp,4
 400bc84:	8009883a 	mov	r4,r16
 400bc88:	903ee83a 	callr	r18
 400bc8c:	003fed06 	br	400bc44 <__alt_data_end+0xfc003c44>

0400bc90 <wcrtomb>:
 400bc90:	defff604 	addi	sp,sp,-40
 400bc94:	00810074 	movhi	r2,1025
 400bc98:	dc800615 	stw	r18,24(sp)
 400bc9c:	dc400515 	stw	r17,20(sp)
 400bca0:	10881404 	addi	r2,r2,8272
 400bca4:	dfc00915 	stw	ra,36(sp)
 400bca8:	dd000815 	stw	r20,32(sp)
 400bcac:	dcc00715 	stw	r19,28(sp)
 400bcb0:	dc000415 	stw	r16,16(sp)
 400bcb4:	3025883a 	mov	r18,r6
 400bcb8:	14400017 	ldw	r17,0(r2)
 400bcbc:	20001926 	beq	r4,zero,400bd24 <wcrtomb+0x94>
 400bcc0:	00810074 	movhi	r2,1025
 400bcc4:	10881804 	addi	r2,r2,8288
 400bcc8:	15000017 	ldw	r20,0(r2)
 400bccc:	2021883a 	mov	r16,r4
 400bcd0:	2827883a 	mov	r19,r5
 400bcd4:	40075e00 	call	40075e0 <__locale_charset>
 400bcd8:	100f883a 	mov	r7,r2
 400bcdc:	dc800015 	stw	r18,0(sp)
 400bce0:	980d883a 	mov	r6,r19
 400bce4:	800b883a 	mov	r5,r16
 400bce8:	8809883a 	mov	r4,r17
 400bcec:	a03ee83a 	callr	r20
 400bcf0:	00ffffc4 	movi	r3,-1
 400bcf4:	10c0031e 	bne	r2,r3,400bd04 <wcrtomb+0x74>
 400bcf8:	90000015 	stw	zero,0(r18)
 400bcfc:	00c02284 	movi	r3,138
 400bd00:	88c00015 	stw	r3,0(r17)
 400bd04:	dfc00917 	ldw	ra,36(sp)
 400bd08:	dd000817 	ldw	r20,32(sp)
 400bd0c:	dcc00717 	ldw	r19,28(sp)
 400bd10:	dc800617 	ldw	r18,24(sp)
 400bd14:	dc400517 	ldw	r17,20(sp)
 400bd18:	dc000417 	ldw	r16,16(sp)
 400bd1c:	dec00a04 	addi	sp,sp,40
 400bd20:	f800283a 	ret
 400bd24:	00810074 	movhi	r2,1025
 400bd28:	10881804 	addi	r2,r2,8288
 400bd2c:	14000017 	ldw	r16,0(r2)
 400bd30:	40075e00 	call	40075e0 <__locale_charset>
 400bd34:	100f883a 	mov	r7,r2
 400bd38:	dc800015 	stw	r18,0(sp)
 400bd3c:	000d883a 	mov	r6,zero
 400bd40:	d9400104 	addi	r5,sp,4
 400bd44:	8809883a 	mov	r4,r17
 400bd48:	803ee83a 	callr	r16
 400bd4c:	003fe806 	br	400bcf0 <__alt_data_end+0xfc003cf0>

0400bd50 <__ascii_wctomb>:
 400bd50:	28000526 	beq	r5,zero,400bd68 <__ascii_wctomb+0x18>
 400bd54:	00803fc4 	movi	r2,255
 400bd58:	11800536 	bltu	r2,r6,400bd70 <__ascii_wctomb+0x20>
 400bd5c:	29800005 	stb	r6,0(r5)
 400bd60:	00800044 	movi	r2,1
 400bd64:	f800283a 	ret
 400bd68:	0005883a 	mov	r2,zero
 400bd6c:	f800283a 	ret
 400bd70:	00802284 	movi	r2,138
 400bd74:	20800015 	stw	r2,0(r4)
 400bd78:	00bfffc4 	movi	r2,-1
 400bd7c:	f800283a 	ret

0400bd80 <_wctomb_r>:
 400bd80:	00810074 	movhi	r2,1025
 400bd84:	defff904 	addi	sp,sp,-28
 400bd88:	10881804 	addi	r2,r2,8288
 400bd8c:	dfc00615 	stw	ra,24(sp)
 400bd90:	dc400515 	stw	r17,20(sp)
 400bd94:	dc000415 	stw	r16,16(sp)
 400bd98:	3823883a 	mov	r17,r7
 400bd9c:	14000017 	ldw	r16,0(r2)
 400bda0:	d9000115 	stw	r4,4(sp)
 400bda4:	d9400215 	stw	r5,8(sp)
 400bda8:	d9800315 	stw	r6,12(sp)
 400bdac:	40075e00 	call	40075e0 <__locale_charset>
 400bdb0:	d9800317 	ldw	r6,12(sp)
 400bdb4:	d9400217 	ldw	r5,8(sp)
 400bdb8:	d9000117 	ldw	r4,4(sp)
 400bdbc:	100f883a 	mov	r7,r2
 400bdc0:	dc400015 	stw	r17,0(sp)
 400bdc4:	803ee83a 	callr	r16
 400bdc8:	dfc00617 	ldw	ra,24(sp)
 400bdcc:	dc400517 	ldw	r17,20(sp)
 400bdd0:	dc000417 	ldw	r16,16(sp)
 400bdd4:	dec00704 	addi	sp,sp,28
 400bdd8:	f800283a 	ret

0400bddc <__udivdi3>:
 400bddc:	defff504 	addi	sp,sp,-44
 400bde0:	dcc00415 	stw	r19,16(sp)
 400bde4:	dc000115 	stw	r16,4(sp)
 400bde8:	dfc00a15 	stw	ra,40(sp)
 400bdec:	df000915 	stw	fp,36(sp)
 400bdf0:	ddc00815 	stw	r23,32(sp)
 400bdf4:	dd800715 	stw	r22,28(sp)
 400bdf8:	dd400615 	stw	r21,24(sp)
 400bdfc:	dd000515 	stw	r20,20(sp)
 400be00:	dc800315 	stw	r18,12(sp)
 400be04:	dc400215 	stw	r17,8(sp)
 400be08:	2027883a 	mov	r19,r4
 400be0c:	2821883a 	mov	r16,r5
 400be10:	3800411e 	bne	r7,zero,400bf18 <__udivdi3+0x13c>
 400be14:	3023883a 	mov	r17,r6
 400be18:	2025883a 	mov	r18,r4
 400be1c:	2980522e 	bgeu	r5,r6,400bf68 <__udivdi3+0x18c>
 400be20:	00bfffd4 	movui	r2,65535
 400be24:	282d883a 	mov	r22,r5
 400be28:	1180a836 	bltu	r2,r6,400c0cc <__udivdi3+0x2f0>
 400be2c:	00803fc4 	movi	r2,255
 400be30:	1185803a 	cmpltu	r2,r2,r6
 400be34:	100490fa 	slli	r2,r2,3
 400be38:	3086d83a 	srl	r3,r6,r2
 400be3c:	01020034 	movhi	r4,2048
 400be40:	21006a84 	addi	r4,r4,426
 400be44:	20c7883a 	add	r3,r4,r3
 400be48:	18c00003 	ldbu	r3,0(r3)
 400be4c:	1885883a 	add	r2,r3,r2
 400be50:	00c00804 	movi	r3,32
 400be54:	1887c83a 	sub	r3,r3,r2
 400be58:	18000526 	beq	r3,zero,400be70 <__udivdi3+0x94>
 400be5c:	80e0983a 	sll	r16,r16,r3
 400be60:	9884d83a 	srl	r2,r19,r2
 400be64:	30e2983a 	sll	r17,r6,r3
 400be68:	98e4983a 	sll	r18,r19,r3
 400be6c:	142cb03a 	or	r22,r2,r16
 400be70:	882ad43a 	srli	r21,r17,16
 400be74:	b009883a 	mov	r4,r22
 400be78:	8d3fffcc 	andi	r20,r17,65535
 400be7c:	a80b883a 	mov	r5,r21
 400be80:	40009e40 	call	40009e4 <__umodsi3>
 400be84:	b009883a 	mov	r4,r22
 400be88:	a80b883a 	mov	r5,r21
 400be8c:	1027883a 	mov	r19,r2
 400be90:	40009800 	call	4000980 <__udivsi3>
 400be94:	102d883a 	mov	r22,r2
 400be98:	9826943a 	slli	r19,r19,16
 400be9c:	9004d43a 	srli	r2,r18,16
 400bea0:	a5a1383a 	mul	r16,r20,r22
 400bea4:	14c4b03a 	or	r2,r2,r19
 400bea8:	1400052e 	bgeu	r2,r16,400bec0 <__udivdi3+0xe4>
 400beac:	1445883a 	add	r2,r2,r17
 400beb0:	b0ffffc4 	addi	r3,r22,-1
 400beb4:	14400136 	bltu	r2,r17,400bebc <__udivdi3+0xe0>
 400beb8:	14012336 	bltu	r2,r16,400c348 <__udivdi3+0x56c>
 400bebc:	182d883a 	mov	r22,r3
 400bec0:	1421c83a 	sub	r16,r2,r16
 400bec4:	a80b883a 	mov	r5,r21
 400bec8:	8009883a 	mov	r4,r16
 400becc:	40009e40 	call	40009e4 <__umodsi3>
 400bed0:	1027883a 	mov	r19,r2
 400bed4:	a80b883a 	mov	r5,r21
 400bed8:	8009883a 	mov	r4,r16
 400bedc:	40009800 	call	4000980 <__udivsi3>
 400bee0:	9826943a 	slli	r19,r19,16
 400bee4:	a0a9383a 	mul	r20,r20,r2
 400bee8:	94bfffcc 	andi	r18,r18,65535
 400beec:	94e4b03a 	or	r18,r18,r19
 400bef0:	9500052e 	bgeu	r18,r20,400bf08 <__udivdi3+0x12c>
 400bef4:	8ca5883a 	add	r18,r17,r18
 400bef8:	10ffffc4 	addi	r3,r2,-1
 400befc:	9440f136 	bltu	r18,r17,400c2c4 <__udivdi3+0x4e8>
 400bf00:	9500f02e 	bgeu	r18,r20,400c2c4 <__udivdi3+0x4e8>
 400bf04:	10bfff84 	addi	r2,r2,-2
 400bf08:	b00c943a 	slli	r6,r22,16
 400bf0c:	0007883a 	mov	r3,zero
 400bf10:	3084b03a 	or	r2,r6,r2
 400bf14:	00005906 	br	400c07c <__udivdi3+0x2a0>
 400bf18:	29c05636 	bltu	r5,r7,400c074 <__udivdi3+0x298>
 400bf1c:	00bfffd4 	movui	r2,65535
 400bf20:	11c0622e 	bgeu	r2,r7,400c0ac <__udivdi3+0x2d0>
 400bf24:	00804034 	movhi	r2,256
 400bf28:	10bfffc4 	addi	r2,r2,-1
 400bf2c:	11c0ee36 	bltu	r2,r7,400c2e8 <__udivdi3+0x50c>
 400bf30:	00800404 	movi	r2,16
 400bf34:	3886d83a 	srl	r3,r7,r2
 400bf38:	01020034 	movhi	r4,2048
 400bf3c:	21006a84 	addi	r4,r4,426
 400bf40:	20c7883a 	add	r3,r4,r3
 400bf44:	18c00003 	ldbu	r3,0(r3)
 400bf48:	05400804 	movi	r21,32
 400bf4c:	1885883a 	add	r2,r3,r2
 400bf50:	a8abc83a 	sub	r21,r21,r2
 400bf54:	a800621e 	bne	r21,zero,400c0e0 <__udivdi3+0x304>
 400bf58:	3c00e936 	bltu	r7,r16,400c300 <__udivdi3+0x524>
 400bf5c:	9985403a 	cmpgeu	r2,r19,r6
 400bf60:	0007883a 	mov	r3,zero
 400bf64:	00004506 	br	400c07c <__udivdi3+0x2a0>
 400bf68:	3000041e 	bne	r6,zero,400bf7c <__udivdi3+0x1a0>
 400bf6c:	000b883a 	mov	r5,zero
 400bf70:	01000044 	movi	r4,1
 400bf74:	40009800 	call	4000980 <__udivsi3>
 400bf78:	1023883a 	mov	r17,r2
 400bf7c:	00bfffd4 	movui	r2,65535
 400bf80:	14404e2e 	bgeu	r2,r17,400c0bc <__udivdi3+0x2e0>
 400bf84:	00804034 	movhi	r2,256
 400bf88:	10bfffc4 	addi	r2,r2,-1
 400bf8c:	1440d836 	bltu	r2,r17,400c2f0 <__udivdi3+0x514>
 400bf90:	00800404 	movi	r2,16
 400bf94:	8886d83a 	srl	r3,r17,r2
 400bf98:	01020034 	movhi	r4,2048
 400bf9c:	21006a84 	addi	r4,r4,426
 400bfa0:	20c7883a 	add	r3,r4,r3
 400bfa4:	18c00003 	ldbu	r3,0(r3)
 400bfa8:	1885883a 	add	r2,r3,r2
 400bfac:	00c00804 	movi	r3,32
 400bfb0:	1887c83a 	sub	r3,r3,r2
 400bfb4:	18008f1e 	bne	r3,zero,400c1f4 <__udivdi3+0x418>
 400bfb8:	882ad43a 	srli	r21,r17,16
 400bfbc:	8461c83a 	sub	r16,r16,r17
 400bfc0:	8d3fffcc 	andi	r20,r17,65535
 400bfc4:	00c00044 	movi	r3,1
 400bfc8:	8009883a 	mov	r4,r16
 400bfcc:	a80b883a 	mov	r5,r21
 400bfd0:	d8c00015 	stw	r3,0(sp)
 400bfd4:	40009e40 	call	40009e4 <__umodsi3>
 400bfd8:	8009883a 	mov	r4,r16
 400bfdc:	a80b883a 	mov	r5,r21
 400bfe0:	1027883a 	mov	r19,r2
 400bfe4:	40009800 	call	4000980 <__udivsi3>
 400bfe8:	9826943a 	slli	r19,r19,16
 400bfec:	9008d43a 	srli	r4,r18,16
 400bff0:	1521383a 	mul	r16,r2,r20
 400bff4:	102d883a 	mov	r22,r2
 400bff8:	24c8b03a 	or	r4,r4,r19
 400bffc:	d8c00017 	ldw	r3,0(sp)
 400c000:	2400052e 	bgeu	r4,r16,400c018 <__udivdi3+0x23c>
 400c004:	2449883a 	add	r4,r4,r17
 400c008:	b0bfffc4 	addi	r2,r22,-1
 400c00c:	24400136 	bltu	r4,r17,400c014 <__udivdi3+0x238>
 400c010:	2400ca36 	bltu	r4,r16,400c33c <__udivdi3+0x560>
 400c014:	102d883a 	mov	r22,r2
 400c018:	2421c83a 	sub	r16,r4,r16
 400c01c:	a80b883a 	mov	r5,r21
 400c020:	8009883a 	mov	r4,r16
 400c024:	d8c00015 	stw	r3,0(sp)
 400c028:	40009e40 	call	40009e4 <__umodsi3>
 400c02c:	1027883a 	mov	r19,r2
 400c030:	a80b883a 	mov	r5,r21
 400c034:	8009883a 	mov	r4,r16
 400c038:	40009800 	call	4000980 <__udivsi3>
 400c03c:	9826943a 	slli	r19,r19,16
 400c040:	1529383a 	mul	r20,r2,r20
 400c044:	94bfffcc 	andi	r18,r18,65535
 400c048:	94e4b03a 	or	r18,r18,r19
 400c04c:	d8c00017 	ldw	r3,0(sp)
 400c050:	9500052e 	bgeu	r18,r20,400c068 <__udivdi3+0x28c>
 400c054:	8ca5883a 	add	r18,r17,r18
 400c058:	113fffc4 	addi	r4,r2,-1
 400c05c:	94409736 	bltu	r18,r17,400c2bc <__udivdi3+0x4e0>
 400c060:	9500962e 	bgeu	r18,r20,400c2bc <__udivdi3+0x4e0>
 400c064:	10bfff84 	addi	r2,r2,-2
 400c068:	b00c943a 	slli	r6,r22,16
 400c06c:	3084b03a 	or	r2,r6,r2
 400c070:	00000206 	br	400c07c <__udivdi3+0x2a0>
 400c074:	0007883a 	mov	r3,zero
 400c078:	0005883a 	mov	r2,zero
 400c07c:	dfc00a17 	ldw	ra,40(sp)
 400c080:	df000917 	ldw	fp,36(sp)
 400c084:	ddc00817 	ldw	r23,32(sp)
 400c088:	dd800717 	ldw	r22,28(sp)
 400c08c:	dd400617 	ldw	r21,24(sp)
 400c090:	dd000517 	ldw	r20,20(sp)
 400c094:	dcc00417 	ldw	r19,16(sp)
 400c098:	dc800317 	ldw	r18,12(sp)
 400c09c:	dc400217 	ldw	r17,8(sp)
 400c0a0:	dc000117 	ldw	r16,4(sp)
 400c0a4:	dec00b04 	addi	sp,sp,44
 400c0a8:	f800283a 	ret
 400c0ac:	00803fc4 	movi	r2,255
 400c0b0:	11c5803a 	cmpltu	r2,r2,r7
 400c0b4:	100490fa 	slli	r2,r2,3
 400c0b8:	003f9e06 	br	400bf34 <__alt_data_end+0xfc003f34>
 400c0bc:	00803fc4 	movi	r2,255
 400c0c0:	1445803a 	cmpltu	r2,r2,r17
 400c0c4:	100490fa 	slli	r2,r2,3
 400c0c8:	003fb206 	br	400bf94 <__alt_data_end+0xfc003f94>
 400c0cc:	00804034 	movhi	r2,256
 400c0d0:	10bfffc4 	addi	r2,r2,-1
 400c0d4:	11808836 	bltu	r2,r6,400c2f8 <__udivdi3+0x51c>
 400c0d8:	00800404 	movi	r2,16
 400c0dc:	003f5606 	br	400be38 <__alt_data_end+0xfc003e38>
 400c0e0:	30aed83a 	srl	r23,r6,r2
 400c0e4:	3d4e983a 	sll	r7,r7,r21
 400c0e8:	80acd83a 	srl	r22,r16,r2
 400c0ec:	9884d83a 	srl	r2,r19,r2
 400c0f0:	3deeb03a 	or	r23,r7,r23
 400c0f4:	b824d43a 	srli	r18,r23,16
 400c0f8:	8560983a 	sll	r16,r16,r21
 400c0fc:	b009883a 	mov	r4,r22
 400c100:	900b883a 	mov	r5,r18
 400c104:	3568983a 	sll	r20,r6,r21
 400c108:	1420b03a 	or	r16,r2,r16
 400c10c:	40009e40 	call	40009e4 <__umodsi3>
 400c110:	b009883a 	mov	r4,r22
 400c114:	900b883a 	mov	r5,r18
 400c118:	1023883a 	mov	r17,r2
 400c11c:	40009800 	call	4000980 <__udivsi3>
 400c120:	8808943a 	slli	r4,r17,16
 400c124:	bf3fffcc 	andi	fp,r23,65535
 400c128:	8006d43a 	srli	r3,r16,16
 400c12c:	e0a3383a 	mul	r17,fp,r2
 400c130:	100d883a 	mov	r6,r2
 400c134:	1906b03a 	or	r3,r3,r4
 400c138:	1c40042e 	bgeu	r3,r17,400c14c <__udivdi3+0x370>
 400c13c:	1dc7883a 	add	r3,r3,r23
 400c140:	10bfffc4 	addi	r2,r2,-1
 400c144:	1dc0752e 	bgeu	r3,r23,400c31c <__udivdi3+0x540>
 400c148:	100d883a 	mov	r6,r2
 400c14c:	1c63c83a 	sub	r17,r3,r17
 400c150:	900b883a 	mov	r5,r18
 400c154:	8809883a 	mov	r4,r17
 400c158:	d9800015 	stw	r6,0(sp)
 400c15c:	40009e40 	call	40009e4 <__umodsi3>
 400c160:	102d883a 	mov	r22,r2
 400c164:	8809883a 	mov	r4,r17
 400c168:	900b883a 	mov	r5,r18
 400c16c:	40009800 	call	4000980 <__udivsi3>
 400c170:	b02c943a 	slli	r22,r22,16
 400c174:	e089383a 	mul	r4,fp,r2
 400c178:	843fffcc 	andi	r16,r16,65535
 400c17c:	85a0b03a 	or	r16,r16,r22
 400c180:	d9800017 	ldw	r6,0(sp)
 400c184:	8100042e 	bgeu	r16,r4,400c198 <__udivdi3+0x3bc>
 400c188:	85e1883a 	add	r16,r16,r23
 400c18c:	10ffffc4 	addi	r3,r2,-1
 400c190:	85c05e2e 	bgeu	r16,r23,400c30c <__udivdi3+0x530>
 400c194:	1805883a 	mov	r2,r3
 400c198:	300c943a 	slli	r6,r6,16
 400c19c:	a17fffcc 	andi	r5,r20,65535
 400c1a0:	a028d43a 	srli	r20,r20,16
 400c1a4:	3084b03a 	or	r2,r6,r2
 400c1a8:	10ffffcc 	andi	r3,r2,65535
 400c1ac:	100cd43a 	srli	r6,r2,16
 400c1b0:	194f383a 	mul	r7,r3,r5
 400c1b4:	1d07383a 	mul	r3,r3,r20
 400c1b8:	314b383a 	mul	r5,r6,r5
 400c1bc:	3810d43a 	srli	r8,r7,16
 400c1c0:	8121c83a 	sub	r16,r16,r4
 400c1c4:	1947883a 	add	r3,r3,r5
 400c1c8:	40c7883a 	add	r3,r8,r3
 400c1cc:	350d383a 	mul	r6,r6,r20
 400c1d0:	1940022e 	bgeu	r3,r5,400c1dc <__udivdi3+0x400>
 400c1d4:	01000074 	movhi	r4,1
 400c1d8:	310d883a 	add	r6,r6,r4
 400c1dc:	1828d43a 	srli	r20,r3,16
 400c1e0:	a18d883a 	add	r6,r20,r6
 400c1e4:	81803e36 	bltu	r16,r6,400c2e0 <__udivdi3+0x504>
 400c1e8:	81803826 	beq	r16,r6,400c2cc <__udivdi3+0x4f0>
 400c1ec:	0007883a 	mov	r3,zero
 400c1f0:	003fa206 	br	400c07c <__alt_data_end+0xfc00407c>
 400c1f4:	88e2983a 	sll	r17,r17,r3
 400c1f8:	80a8d83a 	srl	r20,r16,r2
 400c1fc:	80e0983a 	sll	r16,r16,r3
 400c200:	882ad43a 	srli	r21,r17,16
 400c204:	9884d83a 	srl	r2,r19,r2
 400c208:	a009883a 	mov	r4,r20
 400c20c:	a80b883a 	mov	r5,r21
 400c210:	142eb03a 	or	r23,r2,r16
 400c214:	98e4983a 	sll	r18,r19,r3
 400c218:	40009e40 	call	40009e4 <__umodsi3>
 400c21c:	a009883a 	mov	r4,r20
 400c220:	a80b883a 	mov	r5,r21
 400c224:	1021883a 	mov	r16,r2
 400c228:	40009800 	call	4000980 <__udivsi3>
 400c22c:	1039883a 	mov	fp,r2
 400c230:	8d3fffcc 	andi	r20,r17,65535
 400c234:	8020943a 	slli	r16,r16,16
 400c238:	b804d43a 	srli	r2,r23,16
 400c23c:	a72d383a 	mul	r22,r20,fp
 400c240:	1404b03a 	or	r2,r2,r16
 400c244:	1580062e 	bgeu	r2,r22,400c260 <__udivdi3+0x484>
 400c248:	1445883a 	add	r2,r2,r17
 400c24c:	e0ffffc4 	addi	r3,fp,-1
 400c250:	14403836 	bltu	r2,r17,400c334 <__udivdi3+0x558>
 400c254:	1580372e 	bgeu	r2,r22,400c334 <__udivdi3+0x558>
 400c258:	e73fff84 	addi	fp,fp,-2
 400c25c:	1445883a 	add	r2,r2,r17
 400c260:	15adc83a 	sub	r22,r2,r22
 400c264:	a80b883a 	mov	r5,r21
 400c268:	b009883a 	mov	r4,r22
 400c26c:	40009e40 	call	40009e4 <__umodsi3>
 400c270:	1027883a 	mov	r19,r2
 400c274:	b009883a 	mov	r4,r22
 400c278:	a80b883a 	mov	r5,r21
 400c27c:	40009800 	call	4000980 <__udivsi3>
 400c280:	9826943a 	slli	r19,r19,16
 400c284:	a0a1383a 	mul	r16,r20,r2
 400c288:	b93fffcc 	andi	r4,r23,65535
 400c28c:	24c8b03a 	or	r4,r4,r19
 400c290:	2400062e 	bgeu	r4,r16,400c2ac <__udivdi3+0x4d0>
 400c294:	2449883a 	add	r4,r4,r17
 400c298:	10ffffc4 	addi	r3,r2,-1
 400c29c:	24402336 	bltu	r4,r17,400c32c <__udivdi3+0x550>
 400c2a0:	2400222e 	bgeu	r4,r16,400c32c <__udivdi3+0x550>
 400c2a4:	10bfff84 	addi	r2,r2,-2
 400c2a8:	2449883a 	add	r4,r4,r17
 400c2ac:	e038943a 	slli	fp,fp,16
 400c2b0:	2421c83a 	sub	r16,r4,r16
 400c2b4:	e086b03a 	or	r3,fp,r2
 400c2b8:	003f4306 	br	400bfc8 <__alt_data_end+0xfc003fc8>
 400c2bc:	2005883a 	mov	r2,r4
 400c2c0:	003f6906 	br	400c068 <__alt_data_end+0xfc004068>
 400c2c4:	1805883a 	mov	r2,r3
 400c2c8:	003f0f06 	br	400bf08 <__alt_data_end+0xfc003f08>
 400c2cc:	1806943a 	slli	r3,r3,16
 400c2d0:	9d66983a 	sll	r19,r19,r21
 400c2d4:	39ffffcc 	andi	r7,r7,65535
 400c2d8:	19c7883a 	add	r3,r3,r7
 400c2dc:	98ffc32e 	bgeu	r19,r3,400c1ec <__alt_data_end+0xfc0041ec>
 400c2e0:	10bfffc4 	addi	r2,r2,-1
 400c2e4:	003fc106 	br	400c1ec <__alt_data_end+0xfc0041ec>
 400c2e8:	00800604 	movi	r2,24
 400c2ec:	003f1106 	br	400bf34 <__alt_data_end+0xfc003f34>
 400c2f0:	00800604 	movi	r2,24
 400c2f4:	003f2706 	br	400bf94 <__alt_data_end+0xfc003f94>
 400c2f8:	00800604 	movi	r2,24
 400c2fc:	003ece06 	br	400be38 <__alt_data_end+0xfc003e38>
 400c300:	0007883a 	mov	r3,zero
 400c304:	00800044 	movi	r2,1
 400c308:	003f5c06 	br	400c07c <__alt_data_end+0xfc00407c>
 400c30c:	813fa12e 	bgeu	r16,r4,400c194 <__alt_data_end+0xfc004194>
 400c310:	10bfff84 	addi	r2,r2,-2
 400c314:	85e1883a 	add	r16,r16,r23
 400c318:	003f9f06 	br	400c198 <__alt_data_end+0xfc004198>
 400c31c:	1c7f8a2e 	bgeu	r3,r17,400c148 <__alt_data_end+0xfc004148>
 400c320:	31bfff84 	addi	r6,r6,-2
 400c324:	1dc7883a 	add	r3,r3,r23
 400c328:	003f8806 	br	400c14c <__alt_data_end+0xfc00414c>
 400c32c:	1805883a 	mov	r2,r3
 400c330:	003fde06 	br	400c2ac <__alt_data_end+0xfc0042ac>
 400c334:	1839883a 	mov	fp,r3
 400c338:	003fc906 	br	400c260 <__alt_data_end+0xfc004260>
 400c33c:	b5bfff84 	addi	r22,r22,-2
 400c340:	2449883a 	add	r4,r4,r17
 400c344:	003f3406 	br	400c018 <__alt_data_end+0xfc004018>
 400c348:	b5bfff84 	addi	r22,r22,-2
 400c34c:	1445883a 	add	r2,r2,r17
 400c350:	003edb06 	br	400bec0 <__alt_data_end+0xfc003ec0>

0400c354 <__umoddi3>:
 400c354:	defff404 	addi	sp,sp,-48
 400c358:	df000a15 	stw	fp,40(sp)
 400c35c:	dc400315 	stw	r17,12(sp)
 400c360:	dc000215 	stw	r16,8(sp)
 400c364:	dfc00b15 	stw	ra,44(sp)
 400c368:	ddc00915 	stw	r23,36(sp)
 400c36c:	dd800815 	stw	r22,32(sp)
 400c370:	dd400715 	stw	r21,28(sp)
 400c374:	dd000615 	stw	r20,24(sp)
 400c378:	dcc00515 	stw	r19,20(sp)
 400c37c:	dc800415 	stw	r18,16(sp)
 400c380:	2021883a 	mov	r16,r4
 400c384:	2823883a 	mov	r17,r5
 400c388:	2839883a 	mov	fp,r5
 400c38c:	38003c1e 	bne	r7,zero,400c480 <__umoddi3+0x12c>
 400c390:	3027883a 	mov	r19,r6
 400c394:	2029883a 	mov	r20,r4
 400c398:	2980512e 	bgeu	r5,r6,400c4e0 <__umoddi3+0x18c>
 400c39c:	00bfffd4 	movui	r2,65535
 400c3a0:	11809a36 	bltu	r2,r6,400c60c <__umoddi3+0x2b8>
 400c3a4:	01003fc4 	movi	r4,255
 400c3a8:	2189803a 	cmpltu	r4,r4,r6
 400c3ac:	200890fa 	slli	r4,r4,3
 400c3b0:	3104d83a 	srl	r2,r6,r4
 400c3b4:	00c20034 	movhi	r3,2048
 400c3b8:	18c06a84 	addi	r3,r3,426
 400c3bc:	1885883a 	add	r2,r3,r2
 400c3c0:	10c00003 	ldbu	r3,0(r2)
 400c3c4:	00800804 	movi	r2,32
 400c3c8:	1909883a 	add	r4,r3,r4
 400c3cc:	1125c83a 	sub	r18,r2,r4
 400c3d0:	90000526 	beq	r18,zero,400c3e8 <__umoddi3+0x94>
 400c3d4:	8ca2983a 	sll	r17,r17,r18
 400c3d8:	8108d83a 	srl	r4,r16,r4
 400c3dc:	34a6983a 	sll	r19,r6,r18
 400c3e0:	84a8983a 	sll	r20,r16,r18
 400c3e4:	2478b03a 	or	fp,r4,r17
 400c3e8:	982ed43a 	srli	r23,r19,16
 400c3ec:	e009883a 	mov	r4,fp
 400c3f0:	9dbfffcc 	andi	r22,r19,65535
 400c3f4:	b80b883a 	mov	r5,r23
 400c3f8:	40009e40 	call	40009e4 <__umodsi3>
 400c3fc:	e009883a 	mov	r4,fp
 400c400:	b80b883a 	mov	r5,r23
 400c404:	102b883a 	mov	r21,r2
 400c408:	40009800 	call	4000980 <__udivsi3>
 400c40c:	a806943a 	slli	r3,r21,16
 400c410:	a008d43a 	srli	r4,r20,16
 400c414:	b085383a 	mul	r2,r22,r2
 400c418:	20c8b03a 	or	r4,r4,r3
 400c41c:	2080032e 	bgeu	r4,r2,400c42c <__umoddi3+0xd8>
 400c420:	24c9883a 	add	r4,r4,r19
 400c424:	24c00136 	bltu	r4,r19,400c42c <__umoddi3+0xd8>
 400c428:	20811036 	bltu	r4,r2,400c86c <__umoddi3+0x518>
 400c42c:	20abc83a 	sub	r21,r4,r2
 400c430:	b80b883a 	mov	r5,r23
 400c434:	a809883a 	mov	r4,r21
 400c438:	40009e40 	call	40009e4 <__umodsi3>
 400c43c:	1023883a 	mov	r17,r2
 400c440:	b80b883a 	mov	r5,r23
 400c444:	a809883a 	mov	r4,r21
 400c448:	40009800 	call	4000980 <__udivsi3>
 400c44c:	8822943a 	slli	r17,r17,16
 400c450:	b085383a 	mul	r2,r22,r2
 400c454:	a0ffffcc 	andi	r3,r20,65535
 400c458:	1c46b03a 	or	r3,r3,r17
 400c45c:	1880042e 	bgeu	r3,r2,400c470 <__umoddi3+0x11c>
 400c460:	1cc7883a 	add	r3,r3,r19
 400c464:	1cc00236 	bltu	r3,r19,400c470 <__umoddi3+0x11c>
 400c468:	1880012e 	bgeu	r3,r2,400c470 <__umoddi3+0x11c>
 400c46c:	1cc7883a 	add	r3,r3,r19
 400c470:	1885c83a 	sub	r2,r3,r2
 400c474:	1484d83a 	srl	r2,r2,r18
 400c478:	0007883a 	mov	r3,zero
 400c47c:	00004f06 	br	400c5bc <__umoddi3+0x268>
 400c480:	29c04c36 	bltu	r5,r7,400c5b4 <__umoddi3+0x260>
 400c484:	00bfffd4 	movui	r2,65535
 400c488:	11c0582e 	bgeu	r2,r7,400c5ec <__umoddi3+0x298>
 400c48c:	00804034 	movhi	r2,256
 400c490:	10bfffc4 	addi	r2,r2,-1
 400c494:	11c0e736 	bltu	r2,r7,400c834 <__umoddi3+0x4e0>
 400c498:	01000404 	movi	r4,16
 400c49c:	3904d83a 	srl	r2,r7,r4
 400c4a0:	00c20034 	movhi	r3,2048
 400c4a4:	18c06a84 	addi	r3,r3,426
 400c4a8:	1885883a 	add	r2,r3,r2
 400c4ac:	14c00003 	ldbu	r19,0(r2)
 400c4b0:	00c00804 	movi	r3,32
 400c4b4:	9927883a 	add	r19,r19,r4
 400c4b8:	1ce9c83a 	sub	r20,r3,r19
 400c4bc:	a000581e 	bne	r20,zero,400c620 <__umoddi3+0x2cc>
 400c4c0:	3c400136 	bltu	r7,r17,400c4c8 <__umoddi3+0x174>
 400c4c4:	8180eb36 	bltu	r16,r6,400c874 <__umoddi3+0x520>
 400c4c8:	8185c83a 	sub	r2,r16,r6
 400c4cc:	89e3c83a 	sub	r17,r17,r7
 400c4d0:	8089803a 	cmpltu	r4,r16,r2
 400c4d4:	8939c83a 	sub	fp,r17,r4
 400c4d8:	e007883a 	mov	r3,fp
 400c4dc:	00003706 	br	400c5bc <__umoddi3+0x268>
 400c4e0:	3000041e 	bne	r6,zero,400c4f4 <__umoddi3+0x1a0>
 400c4e4:	000b883a 	mov	r5,zero
 400c4e8:	01000044 	movi	r4,1
 400c4ec:	40009800 	call	4000980 <__udivsi3>
 400c4f0:	1027883a 	mov	r19,r2
 400c4f4:	00bfffd4 	movui	r2,65535
 400c4f8:	14c0402e 	bgeu	r2,r19,400c5fc <__umoddi3+0x2a8>
 400c4fc:	00804034 	movhi	r2,256
 400c500:	10bfffc4 	addi	r2,r2,-1
 400c504:	14c0cd36 	bltu	r2,r19,400c83c <__umoddi3+0x4e8>
 400c508:	00800404 	movi	r2,16
 400c50c:	9886d83a 	srl	r3,r19,r2
 400c510:	01020034 	movhi	r4,2048
 400c514:	21006a84 	addi	r4,r4,426
 400c518:	20c7883a 	add	r3,r4,r3
 400c51c:	18c00003 	ldbu	r3,0(r3)
 400c520:	1887883a 	add	r3,r3,r2
 400c524:	00800804 	movi	r2,32
 400c528:	10e5c83a 	sub	r18,r2,r3
 400c52c:	9000901e 	bne	r18,zero,400c770 <__umoddi3+0x41c>
 400c530:	982cd43a 	srli	r22,r19,16
 400c534:	8ce3c83a 	sub	r17,r17,r19
 400c538:	9d7fffcc 	andi	r21,r19,65535
 400c53c:	b00b883a 	mov	r5,r22
 400c540:	8809883a 	mov	r4,r17
 400c544:	40009e40 	call	40009e4 <__umodsi3>
 400c548:	8809883a 	mov	r4,r17
 400c54c:	b00b883a 	mov	r5,r22
 400c550:	1021883a 	mov	r16,r2
 400c554:	40009800 	call	4000980 <__udivsi3>
 400c558:	8006943a 	slli	r3,r16,16
 400c55c:	a008d43a 	srli	r4,r20,16
 400c560:	1545383a 	mul	r2,r2,r21
 400c564:	20c8b03a 	or	r4,r4,r3
 400c568:	2080042e 	bgeu	r4,r2,400c57c <__umoddi3+0x228>
 400c56c:	24c9883a 	add	r4,r4,r19
 400c570:	24c00236 	bltu	r4,r19,400c57c <__umoddi3+0x228>
 400c574:	2080012e 	bgeu	r4,r2,400c57c <__umoddi3+0x228>
 400c578:	24c9883a 	add	r4,r4,r19
 400c57c:	20a1c83a 	sub	r16,r4,r2
 400c580:	b00b883a 	mov	r5,r22
 400c584:	8009883a 	mov	r4,r16
 400c588:	40009e40 	call	40009e4 <__umodsi3>
 400c58c:	1023883a 	mov	r17,r2
 400c590:	b00b883a 	mov	r5,r22
 400c594:	8009883a 	mov	r4,r16
 400c598:	40009800 	call	4000980 <__udivsi3>
 400c59c:	8822943a 	slli	r17,r17,16
 400c5a0:	1545383a 	mul	r2,r2,r21
 400c5a4:	a53fffcc 	andi	r20,r20,65535
 400c5a8:	a446b03a 	or	r3,r20,r17
 400c5ac:	18bfb02e 	bgeu	r3,r2,400c470 <__alt_data_end+0xfc004470>
 400c5b0:	003fab06 	br	400c460 <__alt_data_end+0xfc004460>
 400c5b4:	2005883a 	mov	r2,r4
 400c5b8:	2807883a 	mov	r3,r5
 400c5bc:	dfc00b17 	ldw	ra,44(sp)
 400c5c0:	df000a17 	ldw	fp,40(sp)
 400c5c4:	ddc00917 	ldw	r23,36(sp)
 400c5c8:	dd800817 	ldw	r22,32(sp)
 400c5cc:	dd400717 	ldw	r21,28(sp)
 400c5d0:	dd000617 	ldw	r20,24(sp)
 400c5d4:	dcc00517 	ldw	r19,20(sp)
 400c5d8:	dc800417 	ldw	r18,16(sp)
 400c5dc:	dc400317 	ldw	r17,12(sp)
 400c5e0:	dc000217 	ldw	r16,8(sp)
 400c5e4:	dec00c04 	addi	sp,sp,48
 400c5e8:	f800283a 	ret
 400c5ec:	04c03fc4 	movi	r19,255
 400c5f0:	99c9803a 	cmpltu	r4,r19,r7
 400c5f4:	200890fa 	slli	r4,r4,3
 400c5f8:	003fa806 	br	400c49c <__alt_data_end+0xfc00449c>
 400c5fc:	00803fc4 	movi	r2,255
 400c600:	14c5803a 	cmpltu	r2,r2,r19
 400c604:	100490fa 	slli	r2,r2,3
 400c608:	003fc006 	br	400c50c <__alt_data_end+0xfc00450c>
 400c60c:	00804034 	movhi	r2,256
 400c610:	10bfffc4 	addi	r2,r2,-1
 400c614:	11808b36 	bltu	r2,r6,400c844 <__umoddi3+0x4f0>
 400c618:	01000404 	movi	r4,16
 400c61c:	003f6406 	br	400c3b0 <__alt_data_end+0xfc0043b0>
 400c620:	34c4d83a 	srl	r2,r6,r19
 400c624:	3d0e983a 	sll	r7,r7,r20
 400c628:	8cf8d83a 	srl	fp,r17,r19
 400c62c:	8d10983a 	sll	r8,r17,r20
 400c630:	38aab03a 	or	r21,r7,r2
 400c634:	a82cd43a 	srli	r22,r21,16
 400c638:	84e2d83a 	srl	r17,r16,r19
 400c63c:	e009883a 	mov	r4,fp
 400c640:	b00b883a 	mov	r5,r22
 400c644:	8a22b03a 	or	r17,r17,r8
 400c648:	3524983a 	sll	r18,r6,r20
 400c64c:	40009e40 	call	40009e4 <__umodsi3>
 400c650:	e009883a 	mov	r4,fp
 400c654:	b00b883a 	mov	r5,r22
 400c658:	102f883a 	mov	r23,r2
 400c65c:	40009800 	call	4000980 <__udivsi3>
 400c660:	100d883a 	mov	r6,r2
 400c664:	b808943a 	slli	r4,r23,16
 400c668:	aa3fffcc 	andi	r8,r21,65535
 400c66c:	8804d43a 	srli	r2,r17,16
 400c670:	41af383a 	mul	r23,r8,r6
 400c674:	8520983a 	sll	r16,r16,r20
 400c678:	1104b03a 	or	r2,r2,r4
 400c67c:	15c0042e 	bgeu	r2,r23,400c690 <__umoddi3+0x33c>
 400c680:	1545883a 	add	r2,r2,r21
 400c684:	30ffffc4 	addi	r3,r6,-1
 400c688:	1540742e 	bgeu	r2,r21,400c85c <__umoddi3+0x508>
 400c68c:	180d883a 	mov	r6,r3
 400c690:	15efc83a 	sub	r23,r2,r23
 400c694:	b00b883a 	mov	r5,r22
 400c698:	b809883a 	mov	r4,r23
 400c69c:	d9800115 	stw	r6,4(sp)
 400c6a0:	da000015 	stw	r8,0(sp)
 400c6a4:	40009e40 	call	40009e4 <__umodsi3>
 400c6a8:	b00b883a 	mov	r5,r22
 400c6ac:	b809883a 	mov	r4,r23
 400c6b0:	1039883a 	mov	fp,r2
 400c6b4:	40009800 	call	4000980 <__udivsi3>
 400c6b8:	da000017 	ldw	r8,0(sp)
 400c6bc:	e038943a 	slli	fp,fp,16
 400c6c0:	100b883a 	mov	r5,r2
 400c6c4:	4089383a 	mul	r4,r8,r2
 400c6c8:	8a3fffcc 	andi	r8,r17,65535
 400c6cc:	4710b03a 	or	r8,r8,fp
 400c6d0:	d9800117 	ldw	r6,4(sp)
 400c6d4:	4100042e 	bgeu	r8,r4,400c6e8 <__umoddi3+0x394>
 400c6d8:	4551883a 	add	r8,r8,r21
 400c6dc:	10bfffc4 	addi	r2,r2,-1
 400c6e0:	45405a2e 	bgeu	r8,r21,400c84c <__umoddi3+0x4f8>
 400c6e4:	100b883a 	mov	r5,r2
 400c6e8:	300c943a 	slli	r6,r6,16
 400c6ec:	91ffffcc 	andi	r7,r18,65535
 400c6f0:	9004d43a 	srli	r2,r18,16
 400c6f4:	314cb03a 	or	r6,r6,r5
 400c6f8:	317fffcc 	andi	r5,r6,65535
 400c6fc:	300cd43a 	srli	r6,r6,16
 400c700:	29d3383a 	mul	r9,r5,r7
 400c704:	288b383a 	mul	r5,r5,r2
 400c708:	31cf383a 	mul	r7,r6,r7
 400c70c:	4806d43a 	srli	r3,r9,16
 400c710:	4111c83a 	sub	r8,r8,r4
 400c714:	29cb883a 	add	r5,r5,r7
 400c718:	194b883a 	add	r5,r3,r5
 400c71c:	3085383a 	mul	r2,r6,r2
 400c720:	29c0022e 	bgeu	r5,r7,400c72c <__umoddi3+0x3d8>
 400c724:	00c00074 	movhi	r3,1
 400c728:	10c5883a 	add	r2,r2,r3
 400c72c:	2808d43a 	srli	r4,r5,16
 400c730:	280a943a 	slli	r5,r5,16
 400c734:	4a7fffcc 	andi	r9,r9,65535
 400c738:	2085883a 	add	r2,r4,r2
 400c73c:	2a4b883a 	add	r5,r5,r9
 400c740:	40803636 	bltu	r8,r2,400c81c <__umoddi3+0x4c8>
 400c744:	40804d26 	beq	r8,r2,400c87c <__umoddi3+0x528>
 400c748:	4089c83a 	sub	r4,r8,r2
 400c74c:	280f883a 	mov	r7,r5
 400c750:	81cfc83a 	sub	r7,r16,r7
 400c754:	81c7803a 	cmpltu	r3,r16,r7
 400c758:	20c7c83a 	sub	r3,r4,r3
 400c75c:	1cc4983a 	sll	r2,r3,r19
 400c760:	3d0ed83a 	srl	r7,r7,r20
 400c764:	1d06d83a 	srl	r3,r3,r20
 400c768:	11c4b03a 	or	r2,r2,r7
 400c76c:	003f9306 	br	400c5bc <__alt_data_end+0xfc0045bc>
 400c770:	9ca6983a 	sll	r19,r19,r18
 400c774:	88e8d83a 	srl	r20,r17,r3
 400c778:	80c4d83a 	srl	r2,r16,r3
 400c77c:	982cd43a 	srli	r22,r19,16
 400c780:	8ca2983a 	sll	r17,r17,r18
 400c784:	a009883a 	mov	r4,r20
 400c788:	b00b883a 	mov	r5,r22
 400c78c:	1478b03a 	or	fp,r2,r17
 400c790:	40009e40 	call	40009e4 <__umodsi3>
 400c794:	a009883a 	mov	r4,r20
 400c798:	b00b883a 	mov	r5,r22
 400c79c:	1023883a 	mov	r17,r2
 400c7a0:	40009800 	call	4000980 <__udivsi3>
 400c7a4:	9d7fffcc 	andi	r21,r19,65535
 400c7a8:	880a943a 	slli	r5,r17,16
 400c7ac:	e008d43a 	srli	r4,fp,16
 400c7b0:	a885383a 	mul	r2,r21,r2
 400c7b4:	84a8983a 	sll	r20,r16,r18
 400c7b8:	2148b03a 	or	r4,r4,r5
 400c7bc:	2080042e 	bgeu	r4,r2,400c7d0 <__umoddi3+0x47c>
 400c7c0:	24c9883a 	add	r4,r4,r19
 400c7c4:	24c00236 	bltu	r4,r19,400c7d0 <__umoddi3+0x47c>
 400c7c8:	2080012e 	bgeu	r4,r2,400c7d0 <__umoddi3+0x47c>
 400c7cc:	24c9883a 	add	r4,r4,r19
 400c7d0:	20a3c83a 	sub	r17,r4,r2
 400c7d4:	b00b883a 	mov	r5,r22
 400c7d8:	8809883a 	mov	r4,r17
 400c7dc:	40009e40 	call	40009e4 <__umodsi3>
 400c7e0:	102f883a 	mov	r23,r2
 400c7e4:	8809883a 	mov	r4,r17
 400c7e8:	b00b883a 	mov	r5,r22
 400c7ec:	40009800 	call	4000980 <__udivsi3>
 400c7f0:	b82e943a 	slli	r23,r23,16
 400c7f4:	a885383a 	mul	r2,r21,r2
 400c7f8:	e13fffcc 	andi	r4,fp,65535
 400c7fc:	25c8b03a 	or	r4,r4,r23
 400c800:	2080042e 	bgeu	r4,r2,400c814 <__umoddi3+0x4c0>
 400c804:	24c9883a 	add	r4,r4,r19
 400c808:	24c00236 	bltu	r4,r19,400c814 <__umoddi3+0x4c0>
 400c80c:	2080012e 	bgeu	r4,r2,400c814 <__umoddi3+0x4c0>
 400c810:	24c9883a 	add	r4,r4,r19
 400c814:	20a3c83a 	sub	r17,r4,r2
 400c818:	003f4806 	br	400c53c <__alt_data_end+0xfc00453c>
 400c81c:	2c8fc83a 	sub	r7,r5,r18
 400c820:	1545c83a 	sub	r2,r2,r21
 400c824:	29cb803a 	cmpltu	r5,r5,r7
 400c828:	1145c83a 	sub	r2,r2,r5
 400c82c:	4089c83a 	sub	r4,r8,r2
 400c830:	003fc706 	br	400c750 <__alt_data_end+0xfc004750>
 400c834:	01000604 	movi	r4,24
 400c838:	003f1806 	br	400c49c <__alt_data_end+0xfc00449c>
 400c83c:	00800604 	movi	r2,24
 400c840:	003f3206 	br	400c50c <__alt_data_end+0xfc00450c>
 400c844:	01000604 	movi	r4,24
 400c848:	003ed906 	br	400c3b0 <__alt_data_end+0xfc0043b0>
 400c84c:	413fa52e 	bgeu	r8,r4,400c6e4 <__alt_data_end+0xfc0046e4>
 400c850:	297fff84 	addi	r5,r5,-2
 400c854:	4551883a 	add	r8,r8,r21
 400c858:	003fa306 	br	400c6e8 <__alt_data_end+0xfc0046e8>
 400c85c:	15ff8b2e 	bgeu	r2,r23,400c68c <__alt_data_end+0xfc00468c>
 400c860:	31bfff84 	addi	r6,r6,-2
 400c864:	1545883a 	add	r2,r2,r21
 400c868:	003f8906 	br	400c690 <__alt_data_end+0xfc004690>
 400c86c:	24c9883a 	add	r4,r4,r19
 400c870:	003eee06 	br	400c42c <__alt_data_end+0xfc00442c>
 400c874:	8005883a 	mov	r2,r16
 400c878:	003f1706 	br	400c4d8 <__alt_data_end+0xfc0044d8>
 400c87c:	817fe736 	bltu	r16,r5,400c81c <__alt_data_end+0xfc00481c>
 400c880:	280f883a 	mov	r7,r5
 400c884:	0009883a 	mov	r4,zero
 400c888:	003fb106 	br	400c750 <__alt_data_end+0xfc004750>

0400c88c <__adddf3>:
 400c88c:	02c00434 	movhi	r11,16
 400c890:	5affffc4 	addi	r11,r11,-1
 400c894:	2806d7fa 	srli	r3,r5,31
 400c898:	2ad4703a 	and	r10,r5,r11
 400c89c:	3ad2703a 	and	r9,r7,r11
 400c8a0:	3804d53a 	srli	r2,r7,20
 400c8a4:	3018d77a 	srli	r12,r6,29
 400c8a8:	280ad53a 	srli	r5,r5,20
 400c8ac:	501490fa 	slli	r10,r10,3
 400c8b0:	2010d77a 	srli	r8,r4,29
 400c8b4:	481290fa 	slli	r9,r9,3
 400c8b8:	380ed7fa 	srli	r7,r7,31
 400c8bc:	defffb04 	addi	sp,sp,-20
 400c8c0:	dc800215 	stw	r18,8(sp)
 400c8c4:	dc400115 	stw	r17,4(sp)
 400c8c8:	dc000015 	stw	r16,0(sp)
 400c8cc:	dfc00415 	stw	ra,16(sp)
 400c8d0:	dcc00315 	stw	r19,12(sp)
 400c8d4:	1c803fcc 	andi	r18,r3,255
 400c8d8:	2c01ffcc 	andi	r16,r5,2047
 400c8dc:	5210b03a 	or	r8,r10,r8
 400c8e0:	202290fa 	slli	r17,r4,3
 400c8e4:	1081ffcc 	andi	r2,r2,2047
 400c8e8:	4b12b03a 	or	r9,r9,r12
 400c8ec:	300c90fa 	slli	r6,r6,3
 400c8f0:	91c07526 	beq	r18,r7,400cac8 <__adddf3+0x23c>
 400c8f4:	8087c83a 	sub	r3,r16,r2
 400c8f8:	00c0ab0e 	bge	zero,r3,400cba8 <__adddf3+0x31c>
 400c8fc:	10002a1e 	bne	r2,zero,400c9a8 <__adddf3+0x11c>
 400c900:	4984b03a 	or	r2,r9,r6
 400c904:	1000961e 	bne	r2,zero,400cb60 <__adddf3+0x2d4>
 400c908:	888001cc 	andi	r2,r17,7
 400c90c:	10000726 	beq	r2,zero,400c92c <__adddf3+0xa0>
 400c910:	888003cc 	andi	r2,r17,15
 400c914:	00c00104 	movi	r3,4
 400c918:	10c00426 	beq	r2,r3,400c92c <__adddf3+0xa0>
 400c91c:	88c7883a 	add	r3,r17,r3
 400c920:	1c63803a 	cmpltu	r17,r3,r17
 400c924:	4451883a 	add	r8,r8,r17
 400c928:	1823883a 	mov	r17,r3
 400c92c:	4080202c 	andhi	r2,r8,128
 400c930:	10005926 	beq	r2,zero,400ca98 <__adddf3+0x20c>
 400c934:	84000044 	addi	r16,r16,1
 400c938:	0081ffc4 	movi	r2,2047
 400c93c:	8080ba26 	beq	r16,r2,400cc28 <__adddf3+0x39c>
 400c940:	00bfe034 	movhi	r2,65408
 400c944:	10bfffc4 	addi	r2,r2,-1
 400c948:	4090703a 	and	r8,r8,r2
 400c94c:	4004977a 	slli	r2,r8,29
 400c950:	4010927a 	slli	r8,r8,9
 400c954:	8822d0fa 	srli	r17,r17,3
 400c958:	8401ffcc 	andi	r16,r16,2047
 400c95c:	4010d33a 	srli	r8,r8,12
 400c960:	9007883a 	mov	r3,r18
 400c964:	1444b03a 	or	r2,r2,r17
 400c968:	8401ffcc 	andi	r16,r16,2047
 400c96c:	8020953a 	slli	r16,r16,20
 400c970:	18c03fcc 	andi	r3,r3,255
 400c974:	01000434 	movhi	r4,16
 400c978:	213fffc4 	addi	r4,r4,-1
 400c97c:	180697fa 	slli	r3,r3,31
 400c980:	4110703a 	and	r8,r8,r4
 400c984:	4410b03a 	or	r8,r8,r16
 400c988:	40c6b03a 	or	r3,r8,r3
 400c98c:	dfc00417 	ldw	ra,16(sp)
 400c990:	dcc00317 	ldw	r19,12(sp)
 400c994:	dc800217 	ldw	r18,8(sp)
 400c998:	dc400117 	ldw	r17,4(sp)
 400c99c:	dc000017 	ldw	r16,0(sp)
 400c9a0:	dec00504 	addi	sp,sp,20
 400c9a4:	f800283a 	ret
 400c9a8:	0081ffc4 	movi	r2,2047
 400c9ac:	80bfd626 	beq	r16,r2,400c908 <__alt_data_end+0xfc004908>
 400c9b0:	4a402034 	orhi	r9,r9,128
 400c9b4:	00800e04 	movi	r2,56
 400c9b8:	10c09f16 	blt	r2,r3,400cc38 <__adddf3+0x3ac>
 400c9bc:	008007c4 	movi	r2,31
 400c9c0:	10c0c216 	blt	r2,r3,400cccc <__adddf3+0x440>
 400c9c4:	00800804 	movi	r2,32
 400c9c8:	10c5c83a 	sub	r2,r2,r3
 400c9cc:	488a983a 	sll	r5,r9,r2
 400c9d0:	30c8d83a 	srl	r4,r6,r3
 400c9d4:	3084983a 	sll	r2,r6,r2
 400c9d8:	48c6d83a 	srl	r3,r9,r3
 400c9dc:	290cb03a 	or	r6,r5,r4
 400c9e0:	1004c03a 	cmpne	r2,r2,zero
 400c9e4:	308cb03a 	or	r6,r6,r2
 400c9e8:	898dc83a 	sub	r6,r17,r6
 400c9ec:	89a3803a 	cmpltu	r17,r17,r6
 400c9f0:	40d1c83a 	sub	r8,r8,r3
 400c9f4:	4451c83a 	sub	r8,r8,r17
 400c9f8:	3023883a 	mov	r17,r6
 400c9fc:	4080202c 	andhi	r2,r8,128
 400ca00:	10002326 	beq	r2,zero,400ca90 <__adddf3+0x204>
 400ca04:	04c02034 	movhi	r19,128
 400ca08:	9cffffc4 	addi	r19,r19,-1
 400ca0c:	44e6703a 	and	r19,r8,r19
 400ca10:	98007626 	beq	r19,zero,400cbec <__adddf3+0x360>
 400ca14:	9809883a 	mov	r4,r19
 400ca18:	400259c0 	call	400259c <__clzsi2>
 400ca1c:	10fffe04 	addi	r3,r2,-8
 400ca20:	010007c4 	movi	r4,31
 400ca24:	20c07716 	blt	r4,r3,400cc04 <__adddf3+0x378>
 400ca28:	00800804 	movi	r2,32
 400ca2c:	10c5c83a 	sub	r2,r2,r3
 400ca30:	8884d83a 	srl	r2,r17,r2
 400ca34:	98d0983a 	sll	r8,r19,r3
 400ca38:	88e2983a 	sll	r17,r17,r3
 400ca3c:	1204b03a 	or	r2,r2,r8
 400ca40:	1c007416 	blt	r3,r16,400cc14 <__adddf3+0x388>
 400ca44:	1c21c83a 	sub	r16,r3,r16
 400ca48:	82000044 	addi	r8,r16,1
 400ca4c:	00c007c4 	movi	r3,31
 400ca50:	1a009116 	blt	r3,r8,400cc98 <__adddf3+0x40c>
 400ca54:	00c00804 	movi	r3,32
 400ca58:	1a07c83a 	sub	r3,r3,r8
 400ca5c:	8a08d83a 	srl	r4,r17,r8
 400ca60:	88e2983a 	sll	r17,r17,r3
 400ca64:	10c6983a 	sll	r3,r2,r3
 400ca68:	1210d83a 	srl	r8,r2,r8
 400ca6c:	8804c03a 	cmpne	r2,r17,zero
 400ca70:	1906b03a 	or	r3,r3,r4
 400ca74:	18a2b03a 	or	r17,r3,r2
 400ca78:	0021883a 	mov	r16,zero
 400ca7c:	003fa206 	br	400c908 <__alt_data_end+0xfc004908>
 400ca80:	1890b03a 	or	r8,r3,r2
 400ca84:	40017d26 	beq	r8,zero,400d07c <__adddf3+0x7f0>
 400ca88:	1011883a 	mov	r8,r2
 400ca8c:	1823883a 	mov	r17,r3
 400ca90:	888001cc 	andi	r2,r17,7
 400ca94:	103f9e1e 	bne	r2,zero,400c910 <__alt_data_end+0xfc004910>
 400ca98:	4004977a 	slli	r2,r8,29
 400ca9c:	8822d0fa 	srli	r17,r17,3
 400caa0:	4010d0fa 	srli	r8,r8,3
 400caa4:	9007883a 	mov	r3,r18
 400caa8:	1444b03a 	or	r2,r2,r17
 400caac:	0101ffc4 	movi	r4,2047
 400cab0:	81002426 	beq	r16,r4,400cb44 <__adddf3+0x2b8>
 400cab4:	8120703a 	and	r16,r16,r4
 400cab8:	01000434 	movhi	r4,16
 400cabc:	213fffc4 	addi	r4,r4,-1
 400cac0:	4110703a 	and	r8,r8,r4
 400cac4:	003fa806 	br	400c968 <__alt_data_end+0xfc004968>
 400cac8:	8089c83a 	sub	r4,r16,r2
 400cacc:	01005e0e 	bge	zero,r4,400cc48 <__adddf3+0x3bc>
 400cad0:	10002b26 	beq	r2,zero,400cb80 <__adddf3+0x2f4>
 400cad4:	0081ffc4 	movi	r2,2047
 400cad8:	80bf8b26 	beq	r16,r2,400c908 <__alt_data_end+0xfc004908>
 400cadc:	4a402034 	orhi	r9,r9,128
 400cae0:	00800e04 	movi	r2,56
 400cae4:	1100a40e 	bge	r2,r4,400cd78 <__adddf3+0x4ec>
 400cae8:	498cb03a 	or	r6,r9,r6
 400caec:	300ac03a 	cmpne	r5,r6,zero
 400caf0:	0013883a 	mov	r9,zero
 400caf4:	2c4b883a 	add	r5,r5,r17
 400caf8:	2c63803a 	cmpltu	r17,r5,r17
 400cafc:	4a11883a 	add	r8,r9,r8
 400cb00:	8a11883a 	add	r8,r17,r8
 400cb04:	2823883a 	mov	r17,r5
 400cb08:	4080202c 	andhi	r2,r8,128
 400cb0c:	103fe026 	beq	r2,zero,400ca90 <__alt_data_end+0xfc004a90>
 400cb10:	84000044 	addi	r16,r16,1
 400cb14:	0081ffc4 	movi	r2,2047
 400cb18:	8080d226 	beq	r16,r2,400ce64 <__adddf3+0x5d8>
 400cb1c:	00bfe034 	movhi	r2,65408
 400cb20:	10bfffc4 	addi	r2,r2,-1
 400cb24:	4090703a 	and	r8,r8,r2
 400cb28:	880ad07a 	srli	r5,r17,1
 400cb2c:	400897fa 	slli	r4,r8,31
 400cb30:	88c0004c 	andi	r3,r17,1
 400cb34:	28e2b03a 	or	r17,r5,r3
 400cb38:	4010d07a 	srli	r8,r8,1
 400cb3c:	2462b03a 	or	r17,r4,r17
 400cb40:	003f7106 	br	400c908 <__alt_data_end+0xfc004908>
 400cb44:	4088b03a 	or	r4,r8,r2
 400cb48:	20014526 	beq	r4,zero,400d060 <__adddf3+0x7d4>
 400cb4c:	01000434 	movhi	r4,16
 400cb50:	42000234 	orhi	r8,r8,8
 400cb54:	213fffc4 	addi	r4,r4,-1
 400cb58:	4110703a 	and	r8,r8,r4
 400cb5c:	003f8206 	br	400c968 <__alt_data_end+0xfc004968>
 400cb60:	18ffffc4 	addi	r3,r3,-1
 400cb64:	1800491e 	bne	r3,zero,400cc8c <__adddf3+0x400>
 400cb68:	898bc83a 	sub	r5,r17,r6
 400cb6c:	8963803a 	cmpltu	r17,r17,r5
 400cb70:	4251c83a 	sub	r8,r8,r9
 400cb74:	4451c83a 	sub	r8,r8,r17
 400cb78:	2823883a 	mov	r17,r5
 400cb7c:	003f9f06 	br	400c9fc <__alt_data_end+0xfc0049fc>
 400cb80:	4984b03a 	or	r2,r9,r6
 400cb84:	103f6026 	beq	r2,zero,400c908 <__alt_data_end+0xfc004908>
 400cb88:	213fffc4 	addi	r4,r4,-1
 400cb8c:	2000931e 	bne	r4,zero,400cddc <__adddf3+0x550>
 400cb90:	898d883a 	add	r6,r17,r6
 400cb94:	3463803a 	cmpltu	r17,r6,r17
 400cb98:	4251883a 	add	r8,r8,r9
 400cb9c:	8a11883a 	add	r8,r17,r8
 400cba0:	3023883a 	mov	r17,r6
 400cba4:	003fd806 	br	400cb08 <__alt_data_end+0xfc004b08>
 400cba8:	1800541e 	bne	r3,zero,400ccfc <__adddf3+0x470>
 400cbac:	80800044 	addi	r2,r16,1
 400cbb0:	1081ffcc 	andi	r2,r2,2047
 400cbb4:	00c00044 	movi	r3,1
 400cbb8:	1880a00e 	bge	r3,r2,400ce3c <__adddf3+0x5b0>
 400cbbc:	8989c83a 	sub	r4,r17,r6
 400cbc0:	8905803a 	cmpltu	r2,r17,r4
 400cbc4:	4267c83a 	sub	r19,r8,r9
 400cbc8:	98a7c83a 	sub	r19,r19,r2
 400cbcc:	9880202c 	andhi	r2,r19,128
 400cbd0:	10006326 	beq	r2,zero,400cd60 <__adddf3+0x4d4>
 400cbd4:	3463c83a 	sub	r17,r6,r17
 400cbd8:	4a07c83a 	sub	r3,r9,r8
 400cbdc:	344d803a 	cmpltu	r6,r6,r17
 400cbe0:	19a7c83a 	sub	r19,r3,r6
 400cbe4:	3825883a 	mov	r18,r7
 400cbe8:	983f8a1e 	bne	r19,zero,400ca14 <__alt_data_end+0xfc004a14>
 400cbec:	8809883a 	mov	r4,r17
 400cbf0:	400259c0 	call	400259c <__clzsi2>
 400cbf4:	10800804 	addi	r2,r2,32
 400cbf8:	10fffe04 	addi	r3,r2,-8
 400cbfc:	010007c4 	movi	r4,31
 400cc00:	20ff890e 	bge	r4,r3,400ca28 <__alt_data_end+0xfc004a28>
 400cc04:	10bff604 	addi	r2,r2,-40
 400cc08:	8884983a 	sll	r2,r17,r2
 400cc0c:	0023883a 	mov	r17,zero
 400cc10:	1c3f8c0e 	bge	r3,r16,400ca44 <__alt_data_end+0xfc004a44>
 400cc14:	023fe034 	movhi	r8,65408
 400cc18:	423fffc4 	addi	r8,r8,-1
 400cc1c:	80e1c83a 	sub	r16,r16,r3
 400cc20:	1210703a 	and	r8,r2,r8
 400cc24:	003f3806 	br	400c908 <__alt_data_end+0xfc004908>
 400cc28:	9007883a 	mov	r3,r18
 400cc2c:	0011883a 	mov	r8,zero
 400cc30:	0005883a 	mov	r2,zero
 400cc34:	003f4c06 	br	400c968 <__alt_data_end+0xfc004968>
 400cc38:	498cb03a 	or	r6,r9,r6
 400cc3c:	300cc03a 	cmpne	r6,r6,zero
 400cc40:	0007883a 	mov	r3,zero
 400cc44:	003f6806 	br	400c9e8 <__alt_data_end+0xfc0049e8>
 400cc48:	20009c1e 	bne	r4,zero,400cebc <__adddf3+0x630>
 400cc4c:	80800044 	addi	r2,r16,1
 400cc50:	1141ffcc 	andi	r5,r2,2047
 400cc54:	01000044 	movi	r4,1
 400cc58:	2140670e 	bge	r4,r5,400cdf8 <__adddf3+0x56c>
 400cc5c:	0101ffc4 	movi	r4,2047
 400cc60:	11007f26 	beq	r2,r4,400ce60 <__adddf3+0x5d4>
 400cc64:	898d883a 	add	r6,r17,r6
 400cc68:	4247883a 	add	r3,r8,r9
 400cc6c:	3451803a 	cmpltu	r8,r6,r17
 400cc70:	40d1883a 	add	r8,r8,r3
 400cc74:	402297fa 	slli	r17,r8,31
 400cc78:	300cd07a 	srli	r6,r6,1
 400cc7c:	4010d07a 	srli	r8,r8,1
 400cc80:	1021883a 	mov	r16,r2
 400cc84:	89a2b03a 	or	r17,r17,r6
 400cc88:	003f1f06 	br	400c908 <__alt_data_end+0xfc004908>
 400cc8c:	0081ffc4 	movi	r2,2047
 400cc90:	80bf481e 	bne	r16,r2,400c9b4 <__alt_data_end+0xfc0049b4>
 400cc94:	003f1c06 	br	400c908 <__alt_data_end+0xfc004908>
 400cc98:	843ff844 	addi	r16,r16,-31
 400cc9c:	01000804 	movi	r4,32
 400cca0:	1406d83a 	srl	r3,r2,r16
 400cca4:	41005026 	beq	r8,r4,400cde8 <__adddf3+0x55c>
 400cca8:	01001004 	movi	r4,64
 400ccac:	2211c83a 	sub	r8,r4,r8
 400ccb0:	1204983a 	sll	r2,r2,r8
 400ccb4:	88a2b03a 	or	r17,r17,r2
 400ccb8:	8822c03a 	cmpne	r17,r17,zero
 400ccbc:	1c62b03a 	or	r17,r3,r17
 400ccc0:	0011883a 	mov	r8,zero
 400ccc4:	0021883a 	mov	r16,zero
 400ccc8:	003f7106 	br	400ca90 <__alt_data_end+0xfc004a90>
 400cccc:	193ff804 	addi	r4,r3,-32
 400ccd0:	00800804 	movi	r2,32
 400ccd4:	4908d83a 	srl	r4,r9,r4
 400ccd8:	18804526 	beq	r3,r2,400cdf0 <__adddf3+0x564>
 400ccdc:	00801004 	movi	r2,64
 400cce0:	10c5c83a 	sub	r2,r2,r3
 400cce4:	4886983a 	sll	r3,r9,r2
 400cce8:	198cb03a 	or	r6,r3,r6
 400ccec:	300cc03a 	cmpne	r6,r6,zero
 400ccf0:	218cb03a 	or	r6,r4,r6
 400ccf4:	0007883a 	mov	r3,zero
 400ccf8:	003f3b06 	br	400c9e8 <__alt_data_end+0xfc0049e8>
 400ccfc:	80002a26 	beq	r16,zero,400cda8 <__adddf3+0x51c>
 400cd00:	0101ffc4 	movi	r4,2047
 400cd04:	11006826 	beq	r2,r4,400cea8 <__adddf3+0x61c>
 400cd08:	00c7c83a 	sub	r3,zero,r3
 400cd0c:	42002034 	orhi	r8,r8,128
 400cd10:	01000e04 	movi	r4,56
 400cd14:	20c07c16 	blt	r4,r3,400cf08 <__adddf3+0x67c>
 400cd18:	010007c4 	movi	r4,31
 400cd1c:	20c0da16 	blt	r4,r3,400d088 <__adddf3+0x7fc>
 400cd20:	01000804 	movi	r4,32
 400cd24:	20c9c83a 	sub	r4,r4,r3
 400cd28:	4114983a 	sll	r10,r8,r4
 400cd2c:	88cad83a 	srl	r5,r17,r3
 400cd30:	8908983a 	sll	r4,r17,r4
 400cd34:	40c6d83a 	srl	r3,r8,r3
 400cd38:	5162b03a 	or	r17,r10,r5
 400cd3c:	2008c03a 	cmpne	r4,r4,zero
 400cd40:	8922b03a 	or	r17,r17,r4
 400cd44:	3463c83a 	sub	r17,r6,r17
 400cd48:	48c7c83a 	sub	r3,r9,r3
 400cd4c:	344d803a 	cmpltu	r6,r6,r17
 400cd50:	1991c83a 	sub	r8,r3,r6
 400cd54:	1021883a 	mov	r16,r2
 400cd58:	3825883a 	mov	r18,r7
 400cd5c:	003f2706 	br	400c9fc <__alt_data_end+0xfc0049fc>
 400cd60:	24d0b03a 	or	r8,r4,r19
 400cd64:	40001b1e 	bne	r8,zero,400cdd4 <__adddf3+0x548>
 400cd68:	0005883a 	mov	r2,zero
 400cd6c:	0007883a 	mov	r3,zero
 400cd70:	0021883a 	mov	r16,zero
 400cd74:	003f4d06 	br	400caac <__alt_data_end+0xfc004aac>
 400cd78:	008007c4 	movi	r2,31
 400cd7c:	11003c16 	blt	r2,r4,400ce70 <__adddf3+0x5e4>
 400cd80:	00800804 	movi	r2,32
 400cd84:	1105c83a 	sub	r2,r2,r4
 400cd88:	488e983a 	sll	r7,r9,r2
 400cd8c:	310ad83a 	srl	r5,r6,r4
 400cd90:	3084983a 	sll	r2,r6,r2
 400cd94:	4912d83a 	srl	r9,r9,r4
 400cd98:	394ab03a 	or	r5,r7,r5
 400cd9c:	1004c03a 	cmpne	r2,r2,zero
 400cda0:	288ab03a 	or	r5,r5,r2
 400cda4:	003f5306 	br	400caf4 <__alt_data_end+0xfc004af4>
 400cda8:	4448b03a 	or	r4,r8,r17
 400cdac:	20003e26 	beq	r4,zero,400cea8 <__adddf3+0x61c>
 400cdb0:	00c6303a 	nor	r3,zero,r3
 400cdb4:	18003a1e 	bne	r3,zero,400cea0 <__adddf3+0x614>
 400cdb8:	3463c83a 	sub	r17,r6,r17
 400cdbc:	4a07c83a 	sub	r3,r9,r8
 400cdc0:	344d803a 	cmpltu	r6,r6,r17
 400cdc4:	1991c83a 	sub	r8,r3,r6
 400cdc8:	1021883a 	mov	r16,r2
 400cdcc:	3825883a 	mov	r18,r7
 400cdd0:	003f0a06 	br	400c9fc <__alt_data_end+0xfc0049fc>
 400cdd4:	2023883a 	mov	r17,r4
 400cdd8:	003f0d06 	br	400ca10 <__alt_data_end+0xfc004a10>
 400cddc:	0081ffc4 	movi	r2,2047
 400cde0:	80bf3f1e 	bne	r16,r2,400cae0 <__alt_data_end+0xfc004ae0>
 400cde4:	003ec806 	br	400c908 <__alt_data_end+0xfc004908>
 400cde8:	0005883a 	mov	r2,zero
 400cdec:	003fb106 	br	400ccb4 <__alt_data_end+0xfc004cb4>
 400cdf0:	0007883a 	mov	r3,zero
 400cdf4:	003fbc06 	br	400cce8 <__alt_data_end+0xfc004ce8>
 400cdf8:	4444b03a 	or	r2,r8,r17
 400cdfc:	8000871e 	bne	r16,zero,400d01c <__adddf3+0x790>
 400ce00:	1000ba26 	beq	r2,zero,400d0ec <__adddf3+0x860>
 400ce04:	4984b03a 	or	r2,r9,r6
 400ce08:	103ebf26 	beq	r2,zero,400c908 <__alt_data_end+0xfc004908>
 400ce0c:	8985883a 	add	r2,r17,r6
 400ce10:	4247883a 	add	r3,r8,r9
 400ce14:	1451803a 	cmpltu	r8,r2,r17
 400ce18:	40d1883a 	add	r8,r8,r3
 400ce1c:	40c0202c 	andhi	r3,r8,128
 400ce20:	1023883a 	mov	r17,r2
 400ce24:	183f1a26 	beq	r3,zero,400ca90 <__alt_data_end+0xfc004a90>
 400ce28:	00bfe034 	movhi	r2,65408
 400ce2c:	10bfffc4 	addi	r2,r2,-1
 400ce30:	2021883a 	mov	r16,r4
 400ce34:	4090703a 	and	r8,r8,r2
 400ce38:	003eb306 	br	400c908 <__alt_data_end+0xfc004908>
 400ce3c:	4444b03a 	or	r2,r8,r17
 400ce40:	8000291e 	bne	r16,zero,400cee8 <__adddf3+0x65c>
 400ce44:	10004b1e 	bne	r2,zero,400cf74 <__adddf3+0x6e8>
 400ce48:	4990b03a 	or	r8,r9,r6
 400ce4c:	40008b26 	beq	r8,zero,400d07c <__adddf3+0x7f0>
 400ce50:	4811883a 	mov	r8,r9
 400ce54:	3023883a 	mov	r17,r6
 400ce58:	3825883a 	mov	r18,r7
 400ce5c:	003eaa06 	br	400c908 <__alt_data_end+0xfc004908>
 400ce60:	1021883a 	mov	r16,r2
 400ce64:	0011883a 	mov	r8,zero
 400ce68:	0005883a 	mov	r2,zero
 400ce6c:	003f0f06 	br	400caac <__alt_data_end+0xfc004aac>
 400ce70:	217ff804 	addi	r5,r4,-32
 400ce74:	00800804 	movi	r2,32
 400ce78:	494ad83a 	srl	r5,r9,r5
 400ce7c:	20807d26 	beq	r4,r2,400d074 <__adddf3+0x7e8>
 400ce80:	00801004 	movi	r2,64
 400ce84:	1109c83a 	sub	r4,r2,r4
 400ce88:	4912983a 	sll	r9,r9,r4
 400ce8c:	498cb03a 	or	r6,r9,r6
 400ce90:	300cc03a 	cmpne	r6,r6,zero
 400ce94:	298ab03a 	or	r5,r5,r6
 400ce98:	0013883a 	mov	r9,zero
 400ce9c:	003f1506 	br	400caf4 <__alt_data_end+0xfc004af4>
 400cea0:	0101ffc4 	movi	r4,2047
 400cea4:	113f9a1e 	bne	r2,r4,400cd10 <__alt_data_end+0xfc004d10>
 400cea8:	4811883a 	mov	r8,r9
 400ceac:	3023883a 	mov	r17,r6
 400ceb0:	1021883a 	mov	r16,r2
 400ceb4:	3825883a 	mov	r18,r7
 400ceb8:	003e9306 	br	400c908 <__alt_data_end+0xfc004908>
 400cebc:	8000161e 	bne	r16,zero,400cf18 <__adddf3+0x68c>
 400cec0:	444ab03a 	or	r5,r8,r17
 400cec4:	28005126 	beq	r5,zero,400d00c <__adddf3+0x780>
 400cec8:	0108303a 	nor	r4,zero,r4
 400cecc:	20004d1e 	bne	r4,zero,400d004 <__adddf3+0x778>
 400ced0:	89a3883a 	add	r17,r17,r6
 400ced4:	4253883a 	add	r9,r8,r9
 400ced8:	898d803a 	cmpltu	r6,r17,r6
 400cedc:	3251883a 	add	r8,r6,r9
 400cee0:	1021883a 	mov	r16,r2
 400cee4:	003f0806 	br	400cb08 <__alt_data_end+0xfc004b08>
 400cee8:	1000301e 	bne	r2,zero,400cfac <__adddf3+0x720>
 400ceec:	4984b03a 	or	r2,r9,r6
 400cef0:	10007126 	beq	r2,zero,400d0b8 <__adddf3+0x82c>
 400cef4:	4811883a 	mov	r8,r9
 400cef8:	3023883a 	mov	r17,r6
 400cefc:	3825883a 	mov	r18,r7
 400cf00:	0401ffc4 	movi	r16,2047
 400cf04:	003e8006 	br	400c908 <__alt_data_end+0xfc004908>
 400cf08:	4462b03a 	or	r17,r8,r17
 400cf0c:	8822c03a 	cmpne	r17,r17,zero
 400cf10:	0007883a 	mov	r3,zero
 400cf14:	003f8b06 	br	400cd44 <__alt_data_end+0xfc004d44>
 400cf18:	0141ffc4 	movi	r5,2047
 400cf1c:	11403b26 	beq	r2,r5,400d00c <__adddf3+0x780>
 400cf20:	0109c83a 	sub	r4,zero,r4
 400cf24:	42002034 	orhi	r8,r8,128
 400cf28:	01400e04 	movi	r5,56
 400cf2c:	29006716 	blt	r5,r4,400d0cc <__adddf3+0x840>
 400cf30:	014007c4 	movi	r5,31
 400cf34:	29007016 	blt	r5,r4,400d0f8 <__adddf3+0x86c>
 400cf38:	01400804 	movi	r5,32
 400cf3c:	290bc83a 	sub	r5,r5,r4
 400cf40:	4154983a 	sll	r10,r8,r5
 400cf44:	890ed83a 	srl	r7,r17,r4
 400cf48:	894a983a 	sll	r5,r17,r5
 400cf4c:	4108d83a 	srl	r4,r8,r4
 400cf50:	51e2b03a 	or	r17,r10,r7
 400cf54:	280ac03a 	cmpne	r5,r5,zero
 400cf58:	8962b03a 	or	r17,r17,r5
 400cf5c:	89a3883a 	add	r17,r17,r6
 400cf60:	2253883a 	add	r9,r4,r9
 400cf64:	898d803a 	cmpltu	r6,r17,r6
 400cf68:	3251883a 	add	r8,r6,r9
 400cf6c:	1021883a 	mov	r16,r2
 400cf70:	003ee506 	br	400cb08 <__alt_data_end+0xfc004b08>
 400cf74:	4984b03a 	or	r2,r9,r6
 400cf78:	103e6326 	beq	r2,zero,400c908 <__alt_data_end+0xfc004908>
 400cf7c:	8987c83a 	sub	r3,r17,r6
 400cf80:	88c9803a 	cmpltu	r4,r17,r3
 400cf84:	4245c83a 	sub	r2,r8,r9
 400cf88:	1105c83a 	sub	r2,r2,r4
 400cf8c:	1100202c 	andhi	r4,r2,128
 400cf90:	203ebb26 	beq	r4,zero,400ca80 <__alt_data_end+0xfc004a80>
 400cf94:	3463c83a 	sub	r17,r6,r17
 400cf98:	4a07c83a 	sub	r3,r9,r8
 400cf9c:	344d803a 	cmpltu	r6,r6,r17
 400cfa0:	1991c83a 	sub	r8,r3,r6
 400cfa4:	3825883a 	mov	r18,r7
 400cfa8:	003e5706 	br	400c908 <__alt_data_end+0xfc004908>
 400cfac:	4984b03a 	or	r2,r9,r6
 400cfb0:	10002e26 	beq	r2,zero,400d06c <__adddf3+0x7e0>
 400cfb4:	4004d0fa 	srli	r2,r8,3
 400cfb8:	8822d0fa 	srli	r17,r17,3
 400cfbc:	4010977a 	slli	r8,r8,29
 400cfc0:	10c0022c 	andhi	r3,r2,8
 400cfc4:	4462b03a 	or	r17,r8,r17
 400cfc8:	18000826 	beq	r3,zero,400cfec <__adddf3+0x760>
 400cfcc:	4808d0fa 	srli	r4,r9,3
 400cfd0:	20c0022c 	andhi	r3,r4,8
 400cfd4:	1800051e 	bne	r3,zero,400cfec <__adddf3+0x760>
 400cfd8:	300cd0fa 	srli	r6,r6,3
 400cfdc:	4806977a 	slli	r3,r9,29
 400cfe0:	2005883a 	mov	r2,r4
 400cfe4:	3825883a 	mov	r18,r7
 400cfe8:	19a2b03a 	or	r17,r3,r6
 400cfec:	8810d77a 	srli	r8,r17,29
 400cff0:	100490fa 	slli	r2,r2,3
 400cff4:	882290fa 	slli	r17,r17,3
 400cff8:	0401ffc4 	movi	r16,2047
 400cffc:	4090b03a 	or	r8,r8,r2
 400d000:	003e4106 	br	400c908 <__alt_data_end+0xfc004908>
 400d004:	0141ffc4 	movi	r5,2047
 400d008:	117fc71e 	bne	r2,r5,400cf28 <__alt_data_end+0xfc004f28>
 400d00c:	4811883a 	mov	r8,r9
 400d010:	3023883a 	mov	r17,r6
 400d014:	1021883a 	mov	r16,r2
 400d018:	003e3b06 	br	400c908 <__alt_data_end+0xfc004908>
 400d01c:	10002f26 	beq	r2,zero,400d0dc <__adddf3+0x850>
 400d020:	4984b03a 	or	r2,r9,r6
 400d024:	10001126 	beq	r2,zero,400d06c <__adddf3+0x7e0>
 400d028:	4004d0fa 	srli	r2,r8,3
 400d02c:	8822d0fa 	srli	r17,r17,3
 400d030:	4010977a 	slli	r8,r8,29
 400d034:	10c0022c 	andhi	r3,r2,8
 400d038:	4462b03a 	or	r17,r8,r17
 400d03c:	183feb26 	beq	r3,zero,400cfec <__alt_data_end+0xfc004fec>
 400d040:	4808d0fa 	srli	r4,r9,3
 400d044:	20c0022c 	andhi	r3,r4,8
 400d048:	183fe81e 	bne	r3,zero,400cfec <__alt_data_end+0xfc004fec>
 400d04c:	300cd0fa 	srli	r6,r6,3
 400d050:	4806977a 	slli	r3,r9,29
 400d054:	2005883a 	mov	r2,r4
 400d058:	19a2b03a 	or	r17,r3,r6
 400d05c:	003fe306 	br	400cfec <__alt_data_end+0xfc004fec>
 400d060:	0011883a 	mov	r8,zero
 400d064:	0005883a 	mov	r2,zero
 400d068:	003e3f06 	br	400c968 <__alt_data_end+0xfc004968>
 400d06c:	0401ffc4 	movi	r16,2047
 400d070:	003e2506 	br	400c908 <__alt_data_end+0xfc004908>
 400d074:	0013883a 	mov	r9,zero
 400d078:	003f8406 	br	400ce8c <__alt_data_end+0xfc004e8c>
 400d07c:	0005883a 	mov	r2,zero
 400d080:	0007883a 	mov	r3,zero
 400d084:	003e8906 	br	400caac <__alt_data_end+0xfc004aac>
 400d088:	197ff804 	addi	r5,r3,-32
 400d08c:	01000804 	movi	r4,32
 400d090:	414ad83a 	srl	r5,r8,r5
 400d094:	19002426 	beq	r3,r4,400d128 <__adddf3+0x89c>
 400d098:	01001004 	movi	r4,64
 400d09c:	20c7c83a 	sub	r3,r4,r3
 400d0a0:	40c6983a 	sll	r3,r8,r3
 400d0a4:	1c46b03a 	or	r3,r3,r17
 400d0a8:	1806c03a 	cmpne	r3,r3,zero
 400d0ac:	28e2b03a 	or	r17,r5,r3
 400d0b0:	0007883a 	mov	r3,zero
 400d0b4:	003f2306 	br	400cd44 <__alt_data_end+0xfc004d44>
 400d0b8:	0007883a 	mov	r3,zero
 400d0bc:	5811883a 	mov	r8,r11
 400d0c0:	00bfffc4 	movi	r2,-1
 400d0c4:	0401ffc4 	movi	r16,2047
 400d0c8:	003e7806 	br	400caac <__alt_data_end+0xfc004aac>
 400d0cc:	4462b03a 	or	r17,r8,r17
 400d0d0:	8822c03a 	cmpne	r17,r17,zero
 400d0d4:	0009883a 	mov	r4,zero
 400d0d8:	003fa006 	br	400cf5c <__alt_data_end+0xfc004f5c>
 400d0dc:	4811883a 	mov	r8,r9
 400d0e0:	3023883a 	mov	r17,r6
 400d0e4:	0401ffc4 	movi	r16,2047
 400d0e8:	003e0706 	br	400c908 <__alt_data_end+0xfc004908>
 400d0ec:	4811883a 	mov	r8,r9
 400d0f0:	3023883a 	mov	r17,r6
 400d0f4:	003e0406 	br	400c908 <__alt_data_end+0xfc004908>
 400d0f8:	21fff804 	addi	r7,r4,-32
 400d0fc:	01400804 	movi	r5,32
 400d100:	41ced83a 	srl	r7,r8,r7
 400d104:	21400a26 	beq	r4,r5,400d130 <__adddf3+0x8a4>
 400d108:	01401004 	movi	r5,64
 400d10c:	2909c83a 	sub	r4,r5,r4
 400d110:	4108983a 	sll	r4,r8,r4
 400d114:	2448b03a 	or	r4,r4,r17
 400d118:	2008c03a 	cmpne	r4,r4,zero
 400d11c:	3922b03a 	or	r17,r7,r4
 400d120:	0009883a 	mov	r4,zero
 400d124:	003f8d06 	br	400cf5c <__alt_data_end+0xfc004f5c>
 400d128:	0007883a 	mov	r3,zero
 400d12c:	003fdd06 	br	400d0a4 <__alt_data_end+0xfc0050a4>
 400d130:	0009883a 	mov	r4,zero
 400d134:	003ff706 	br	400d114 <__alt_data_end+0xfc005114>

0400d138 <__eqdf2>:
 400d138:	2804d53a 	srli	r2,r5,20
 400d13c:	3806d53a 	srli	r3,r7,20
 400d140:	02000434 	movhi	r8,16
 400d144:	423fffc4 	addi	r8,r8,-1
 400d148:	1081ffcc 	andi	r2,r2,2047
 400d14c:	0281ffc4 	movi	r10,2047
 400d150:	2a12703a 	and	r9,r5,r8
 400d154:	18c1ffcc 	andi	r3,r3,2047
 400d158:	3a10703a 	and	r8,r7,r8
 400d15c:	280ad7fa 	srli	r5,r5,31
 400d160:	380ed7fa 	srli	r7,r7,31
 400d164:	12801026 	beq	r2,r10,400d1a8 <__eqdf2+0x70>
 400d168:	0281ffc4 	movi	r10,2047
 400d16c:	1a800a26 	beq	r3,r10,400d198 <__eqdf2+0x60>
 400d170:	10c00226 	beq	r2,r3,400d17c <__eqdf2+0x44>
 400d174:	00800044 	movi	r2,1
 400d178:	f800283a 	ret
 400d17c:	4a3ffd1e 	bne	r9,r8,400d174 <__alt_data_end+0xfc005174>
 400d180:	21bffc1e 	bne	r4,r6,400d174 <__alt_data_end+0xfc005174>
 400d184:	29c00c26 	beq	r5,r7,400d1b8 <__eqdf2+0x80>
 400d188:	103ffa1e 	bne	r2,zero,400d174 <__alt_data_end+0xfc005174>
 400d18c:	2244b03a 	or	r2,r4,r9
 400d190:	1004c03a 	cmpne	r2,r2,zero
 400d194:	f800283a 	ret
 400d198:	3214b03a 	or	r10,r6,r8
 400d19c:	503ff426 	beq	r10,zero,400d170 <__alt_data_end+0xfc005170>
 400d1a0:	00800044 	movi	r2,1
 400d1a4:	f800283a 	ret
 400d1a8:	2254b03a 	or	r10,r4,r9
 400d1ac:	503fee26 	beq	r10,zero,400d168 <__alt_data_end+0xfc005168>
 400d1b0:	00800044 	movi	r2,1
 400d1b4:	f800283a 	ret
 400d1b8:	0005883a 	mov	r2,zero
 400d1bc:	f800283a 	ret

0400d1c0 <__gedf2>:
 400d1c0:	2804d53a 	srli	r2,r5,20
 400d1c4:	3806d53a 	srli	r3,r7,20
 400d1c8:	02000434 	movhi	r8,16
 400d1cc:	423fffc4 	addi	r8,r8,-1
 400d1d0:	1081ffcc 	andi	r2,r2,2047
 400d1d4:	0241ffc4 	movi	r9,2047
 400d1d8:	2a14703a 	and	r10,r5,r8
 400d1dc:	18c1ffcc 	andi	r3,r3,2047
 400d1e0:	3a10703a 	and	r8,r7,r8
 400d1e4:	280ad7fa 	srli	r5,r5,31
 400d1e8:	380ed7fa 	srli	r7,r7,31
 400d1ec:	12401d26 	beq	r2,r9,400d264 <__gedf2+0xa4>
 400d1f0:	0241ffc4 	movi	r9,2047
 400d1f4:	1a401226 	beq	r3,r9,400d240 <__gedf2+0x80>
 400d1f8:	1000081e 	bne	r2,zero,400d21c <__gedf2+0x5c>
 400d1fc:	2296b03a 	or	r11,r4,r10
 400d200:	5813003a 	cmpeq	r9,r11,zero
 400d204:	1800091e 	bne	r3,zero,400d22c <__gedf2+0x6c>
 400d208:	3218b03a 	or	r12,r6,r8
 400d20c:	6000071e 	bne	r12,zero,400d22c <__gedf2+0x6c>
 400d210:	0005883a 	mov	r2,zero
 400d214:	5800101e 	bne	r11,zero,400d258 <__gedf2+0x98>
 400d218:	f800283a 	ret
 400d21c:	18000c1e 	bne	r3,zero,400d250 <__gedf2+0x90>
 400d220:	3212b03a 	or	r9,r6,r8
 400d224:	48000c26 	beq	r9,zero,400d258 <__gedf2+0x98>
 400d228:	0013883a 	mov	r9,zero
 400d22c:	39c03fcc 	andi	r7,r7,255
 400d230:	48000826 	beq	r9,zero,400d254 <__gedf2+0x94>
 400d234:	38000926 	beq	r7,zero,400d25c <__gedf2+0x9c>
 400d238:	00800044 	movi	r2,1
 400d23c:	f800283a 	ret
 400d240:	3212b03a 	or	r9,r6,r8
 400d244:	483fec26 	beq	r9,zero,400d1f8 <__alt_data_end+0xfc0051f8>
 400d248:	00bfff84 	movi	r2,-2
 400d24c:	f800283a 	ret
 400d250:	39c03fcc 	andi	r7,r7,255
 400d254:	29c00626 	beq	r5,r7,400d270 <__gedf2+0xb0>
 400d258:	283ff726 	beq	r5,zero,400d238 <__alt_data_end+0xfc005238>
 400d25c:	00bfffc4 	movi	r2,-1
 400d260:	f800283a 	ret
 400d264:	2292b03a 	or	r9,r4,r10
 400d268:	483fe126 	beq	r9,zero,400d1f0 <__alt_data_end+0xfc0051f0>
 400d26c:	003ff606 	br	400d248 <__alt_data_end+0xfc005248>
 400d270:	18bff916 	blt	r3,r2,400d258 <__alt_data_end+0xfc005258>
 400d274:	10c00316 	blt	r2,r3,400d284 <__gedf2+0xc4>
 400d278:	42bff736 	bltu	r8,r10,400d258 <__alt_data_end+0xfc005258>
 400d27c:	52000326 	beq	r10,r8,400d28c <__gedf2+0xcc>
 400d280:	5200042e 	bgeu	r10,r8,400d294 <__gedf2+0xd4>
 400d284:	283fec1e 	bne	r5,zero,400d238 <__alt_data_end+0xfc005238>
 400d288:	003ff406 	br	400d25c <__alt_data_end+0xfc00525c>
 400d28c:	313ff236 	bltu	r6,r4,400d258 <__alt_data_end+0xfc005258>
 400d290:	21bffc36 	bltu	r4,r6,400d284 <__alt_data_end+0xfc005284>
 400d294:	0005883a 	mov	r2,zero
 400d298:	f800283a 	ret

0400d29c <__ledf2>:
 400d29c:	2804d53a 	srli	r2,r5,20
 400d2a0:	3810d53a 	srli	r8,r7,20
 400d2a4:	00c00434 	movhi	r3,16
 400d2a8:	18ffffc4 	addi	r3,r3,-1
 400d2ac:	1081ffcc 	andi	r2,r2,2047
 400d2b0:	0241ffc4 	movi	r9,2047
 400d2b4:	28d4703a 	and	r10,r5,r3
 400d2b8:	4201ffcc 	andi	r8,r8,2047
 400d2bc:	38c6703a 	and	r3,r7,r3
 400d2c0:	280ad7fa 	srli	r5,r5,31
 400d2c4:	380ed7fa 	srli	r7,r7,31
 400d2c8:	12401f26 	beq	r2,r9,400d348 <__ledf2+0xac>
 400d2cc:	0241ffc4 	movi	r9,2047
 400d2d0:	42401426 	beq	r8,r9,400d324 <__ledf2+0x88>
 400d2d4:	1000091e 	bne	r2,zero,400d2fc <__ledf2+0x60>
 400d2d8:	2296b03a 	or	r11,r4,r10
 400d2dc:	5813003a 	cmpeq	r9,r11,zero
 400d2e0:	29403fcc 	andi	r5,r5,255
 400d2e4:	40000a1e 	bne	r8,zero,400d310 <__ledf2+0x74>
 400d2e8:	30d8b03a 	or	r12,r6,r3
 400d2ec:	6000081e 	bne	r12,zero,400d310 <__ledf2+0x74>
 400d2f0:	0005883a 	mov	r2,zero
 400d2f4:	5800111e 	bne	r11,zero,400d33c <__ledf2+0xa0>
 400d2f8:	f800283a 	ret
 400d2fc:	29403fcc 	andi	r5,r5,255
 400d300:	40000c1e 	bne	r8,zero,400d334 <__ledf2+0x98>
 400d304:	30d2b03a 	or	r9,r6,r3
 400d308:	48000c26 	beq	r9,zero,400d33c <__ledf2+0xa0>
 400d30c:	0013883a 	mov	r9,zero
 400d310:	39c03fcc 	andi	r7,r7,255
 400d314:	48000826 	beq	r9,zero,400d338 <__ledf2+0x9c>
 400d318:	38001126 	beq	r7,zero,400d360 <__ledf2+0xc4>
 400d31c:	00800044 	movi	r2,1
 400d320:	f800283a 	ret
 400d324:	30d2b03a 	or	r9,r6,r3
 400d328:	483fea26 	beq	r9,zero,400d2d4 <__alt_data_end+0xfc0052d4>
 400d32c:	00800084 	movi	r2,2
 400d330:	f800283a 	ret
 400d334:	39c03fcc 	andi	r7,r7,255
 400d338:	39400726 	beq	r7,r5,400d358 <__ledf2+0xbc>
 400d33c:	2800081e 	bne	r5,zero,400d360 <__ledf2+0xc4>
 400d340:	00800044 	movi	r2,1
 400d344:	f800283a 	ret
 400d348:	2292b03a 	or	r9,r4,r10
 400d34c:	483fdf26 	beq	r9,zero,400d2cc <__alt_data_end+0xfc0052cc>
 400d350:	00800084 	movi	r2,2
 400d354:	f800283a 	ret
 400d358:	4080030e 	bge	r8,r2,400d368 <__ledf2+0xcc>
 400d35c:	383fef26 	beq	r7,zero,400d31c <__alt_data_end+0xfc00531c>
 400d360:	00bfffc4 	movi	r2,-1
 400d364:	f800283a 	ret
 400d368:	123feb16 	blt	r2,r8,400d318 <__alt_data_end+0xfc005318>
 400d36c:	1abff336 	bltu	r3,r10,400d33c <__alt_data_end+0xfc00533c>
 400d370:	50c00326 	beq	r10,r3,400d380 <__ledf2+0xe4>
 400d374:	50c0042e 	bgeu	r10,r3,400d388 <__ledf2+0xec>
 400d378:	283fe81e 	bne	r5,zero,400d31c <__alt_data_end+0xfc00531c>
 400d37c:	003ff806 	br	400d360 <__alt_data_end+0xfc005360>
 400d380:	313fee36 	bltu	r6,r4,400d33c <__alt_data_end+0xfc00533c>
 400d384:	21bffc36 	bltu	r4,r6,400d378 <__alt_data_end+0xfc005378>
 400d388:	0005883a 	mov	r2,zero
 400d38c:	f800283a 	ret

0400d390 <__subdf3>:
 400d390:	02000434 	movhi	r8,16
 400d394:	423fffc4 	addi	r8,r8,-1
 400d398:	defffb04 	addi	sp,sp,-20
 400d39c:	2a14703a 	and	r10,r5,r8
 400d3a0:	3812d53a 	srli	r9,r7,20
 400d3a4:	3a10703a 	and	r8,r7,r8
 400d3a8:	2006d77a 	srli	r3,r4,29
 400d3ac:	3004d77a 	srli	r2,r6,29
 400d3b0:	dc000015 	stw	r16,0(sp)
 400d3b4:	501490fa 	slli	r10,r10,3
 400d3b8:	2820d53a 	srli	r16,r5,20
 400d3bc:	401090fa 	slli	r8,r8,3
 400d3c0:	dc800215 	stw	r18,8(sp)
 400d3c4:	dc400115 	stw	r17,4(sp)
 400d3c8:	dfc00415 	stw	ra,16(sp)
 400d3cc:	202290fa 	slli	r17,r4,3
 400d3d0:	dcc00315 	stw	r19,12(sp)
 400d3d4:	4a41ffcc 	andi	r9,r9,2047
 400d3d8:	0101ffc4 	movi	r4,2047
 400d3dc:	2824d7fa 	srli	r18,r5,31
 400d3e0:	8401ffcc 	andi	r16,r16,2047
 400d3e4:	50c6b03a 	or	r3,r10,r3
 400d3e8:	380ed7fa 	srli	r7,r7,31
 400d3ec:	408ab03a 	or	r5,r8,r2
 400d3f0:	300c90fa 	slli	r6,r6,3
 400d3f4:	49009626 	beq	r9,r4,400d650 <__subdf3+0x2c0>
 400d3f8:	39c0005c 	xori	r7,r7,1
 400d3fc:	8245c83a 	sub	r2,r16,r9
 400d400:	3c807426 	beq	r7,r18,400d5d4 <__subdf3+0x244>
 400d404:	0080af0e 	bge	zero,r2,400d6c4 <__subdf3+0x334>
 400d408:	48002a1e 	bne	r9,zero,400d4b4 <__subdf3+0x124>
 400d40c:	2988b03a 	or	r4,r5,r6
 400d410:	20009a1e 	bne	r4,zero,400d67c <__subdf3+0x2ec>
 400d414:	888001cc 	andi	r2,r17,7
 400d418:	10000726 	beq	r2,zero,400d438 <__subdf3+0xa8>
 400d41c:	888003cc 	andi	r2,r17,15
 400d420:	01000104 	movi	r4,4
 400d424:	11000426 	beq	r2,r4,400d438 <__subdf3+0xa8>
 400d428:	890b883a 	add	r5,r17,r4
 400d42c:	2c63803a 	cmpltu	r17,r5,r17
 400d430:	1c47883a 	add	r3,r3,r17
 400d434:	2823883a 	mov	r17,r5
 400d438:	1880202c 	andhi	r2,r3,128
 400d43c:	10005926 	beq	r2,zero,400d5a4 <__subdf3+0x214>
 400d440:	84000044 	addi	r16,r16,1
 400d444:	0081ffc4 	movi	r2,2047
 400d448:	8080be26 	beq	r16,r2,400d744 <__subdf3+0x3b4>
 400d44c:	017fe034 	movhi	r5,65408
 400d450:	297fffc4 	addi	r5,r5,-1
 400d454:	1946703a 	and	r3,r3,r5
 400d458:	1804977a 	slli	r2,r3,29
 400d45c:	1806927a 	slli	r3,r3,9
 400d460:	8822d0fa 	srli	r17,r17,3
 400d464:	8401ffcc 	andi	r16,r16,2047
 400d468:	180ad33a 	srli	r5,r3,12
 400d46c:	9100004c 	andi	r4,r18,1
 400d470:	1444b03a 	or	r2,r2,r17
 400d474:	80c1ffcc 	andi	r3,r16,2047
 400d478:	1820953a 	slli	r16,r3,20
 400d47c:	20c03fcc 	andi	r3,r4,255
 400d480:	180897fa 	slli	r4,r3,31
 400d484:	00c00434 	movhi	r3,16
 400d488:	18ffffc4 	addi	r3,r3,-1
 400d48c:	28c6703a 	and	r3,r5,r3
 400d490:	1c06b03a 	or	r3,r3,r16
 400d494:	1906b03a 	or	r3,r3,r4
 400d498:	dfc00417 	ldw	ra,16(sp)
 400d49c:	dcc00317 	ldw	r19,12(sp)
 400d4a0:	dc800217 	ldw	r18,8(sp)
 400d4a4:	dc400117 	ldw	r17,4(sp)
 400d4a8:	dc000017 	ldw	r16,0(sp)
 400d4ac:	dec00504 	addi	sp,sp,20
 400d4b0:	f800283a 	ret
 400d4b4:	0101ffc4 	movi	r4,2047
 400d4b8:	813fd626 	beq	r16,r4,400d414 <__alt_data_end+0xfc005414>
 400d4bc:	29402034 	orhi	r5,r5,128
 400d4c0:	01000e04 	movi	r4,56
 400d4c4:	2080a316 	blt	r4,r2,400d754 <__subdf3+0x3c4>
 400d4c8:	010007c4 	movi	r4,31
 400d4cc:	2080c616 	blt	r4,r2,400d7e8 <__subdf3+0x458>
 400d4d0:	01000804 	movi	r4,32
 400d4d4:	2089c83a 	sub	r4,r4,r2
 400d4d8:	2910983a 	sll	r8,r5,r4
 400d4dc:	308ed83a 	srl	r7,r6,r2
 400d4e0:	3108983a 	sll	r4,r6,r4
 400d4e4:	2884d83a 	srl	r2,r5,r2
 400d4e8:	41ccb03a 	or	r6,r8,r7
 400d4ec:	2008c03a 	cmpne	r4,r4,zero
 400d4f0:	310cb03a 	or	r6,r6,r4
 400d4f4:	898dc83a 	sub	r6,r17,r6
 400d4f8:	89a3803a 	cmpltu	r17,r17,r6
 400d4fc:	1887c83a 	sub	r3,r3,r2
 400d500:	1c47c83a 	sub	r3,r3,r17
 400d504:	3023883a 	mov	r17,r6
 400d508:	1880202c 	andhi	r2,r3,128
 400d50c:	10002326 	beq	r2,zero,400d59c <__subdf3+0x20c>
 400d510:	04c02034 	movhi	r19,128
 400d514:	9cffffc4 	addi	r19,r19,-1
 400d518:	1ce6703a 	and	r19,r3,r19
 400d51c:	98007a26 	beq	r19,zero,400d708 <__subdf3+0x378>
 400d520:	9809883a 	mov	r4,r19
 400d524:	400259c0 	call	400259c <__clzsi2>
 400d528:	113ffe04 	addi	r4,r2,-8
 400d52c:	00c007c4 	movi	r3,31
 400d530:	19007b16 	blt	r3,r4,400d720 <__subdf3+0x390>
 400d534:	00800804 	movi	r2,32
 400d538:	1105c83a 	sub	r2,r2,r4
 400d53c:	8884d83a 	srl	r2,r17,r2
 400d540:	9906983a 	sll	r3,r19,r4
 400d544:	8922983a 	sll	r17,r17,r4
 400d548:	10c4b03a 	or	r2,r2,r3
 400d54c:	24007816 	blt	r4,r16,400d730 <__subdf3+0x3a0>
 400d550:	2421c83a 	sub	r16,r4,r16
 400d554:	80c00044 	addi	r3,r16,1
 400d558:	010007c4 	movi	r4,31
 400d55c:	20c09516 	blt	r4,r3,400d7b4 <__subdf3+0x424>
 400d560:	01400804 	movi	r5,32
 400d564:	28cbc83a 	sub	r5,r5,r3
 400d568:	88c8d83a 	srl	r4,r17,r3
 400d56c:	8962983a 	sll	r17,r17,r5
 400d570:	114a983a 	sll	r5,r2,r5
 400d574:	10c6d83a 	srl	r3,r2,r3
 400d578:	8804c03a 	cmpne	r2,r17,zero
 400d57c:	290ab03a 	or	r5,r5,r4
 400d580:	28a2b03a 	or	r17,r5,r2
 400d584:	0021883a 	mov	r16,zero
 400d588:	003fa206 	br	400d414 <__alt_data_end+0xfc005414>
 400d58c:	2090b03a 	or	r8,r4,r2
 400d590:	40018e26 	beq	r8,zero,400dbcc <__subdf3+0x83c>
 400d594:	1007883a 	mov	r3,r2
 400d598:	2023883a 	mov	r17,r4
 400d59c:	888001cc 	andi	r2,r17,7
 400d5a0:	103f9e1e 	bne	r2,zero,400d41c <__alt_data_end+0xfc00541c>
 400d5a4:	1804977a 	slli	r2,r3,29
 400d5a8:	8822d0fa 	srli	r17,r17,3
 400d5ac:	1810d0fa 	srli	r8,r3,3
 400d5b0:	9100004c 	andi	r4,r18,1
 400d5b4:	1444b03a 	or	r2,r2,r17
 400d5b8:	00c1ffc4 	movi	r3,2047
 400d5bc:	80c02826 	beq	r16,r3,400d660 <__subdf3+0x2d0>
 400d5c0:	01400434 	movhi	r5,16
 400d5c4:	297fffc4 	addi	r5,r5,-1
 400d5c8:	80e0703a 	and	r16,r16,r3
 400d5cc:	414a703a 	and	r5,r8,r5
 400d5d0:	003fa806 	br	400d474 <__alt_data_end+0xfc005474>
 400d5d4:	0080630e 	bge	zero,r2,400d764 <__subdf3+0x3d4>
 400d5d8:	48003026 	beq	r9,zero,400d69c <__subdf3+0x30c>
 400d5dc:	0101ffc4 	movi	r4,2047
 400d5e0:	813f8c26 	beq	r16,r4,400d414 <__alt_data_end+0xfc005414>
 400d5e4:	29402034 	orhi	r5,r5,128
 400d5e8:	01000e04 	movi	r4,56
 400d5ec:	2080a90e 	bge	r4,r2,400d894 <__subdf3+0x504>
 400d5f0:	298cb03a 	or	r6,r5,r6
 400d5f4:	3012c03a 	cmpne	r9,r6,zero
 400d5f8:	0005883a 	mov	r2,zero
 400d5fc:	4c53883a 	add	r9,r9,r17
 400d600:	4c63803a 	cmpltu	r17,r9,r17
 400d604:	10c7883a 	add	r3,r2,r3
 400d608:	88c7883a 	add	r3,r17,r3
 400d60c:	4823883a 	mov	r17,r9
 400d610:	1880202c 	andhi	r2,r3,128
 400d614:	1000d026 	beq	r2,zero,400d958 <__subdf3+0x5c8>
 400d618:	84000044 	addi	r16,r16,1
 400d61c:	0081ffc4 	movi	r2,2047
 400d620:	8080fe26 	beq	r16,r2,400da1c <__subdf3+0x68c>
 400d624:	00bfe034 	movhi	r2,65408
 400d628:	10bfffc4 	addi	r2,r2,-1
 400d62c:	1886703a 	and	r3,r3,r2
 400d630:	880ad07a 	srli	r5,r17,1
 400d634:	180497fa 	slli	r2,r3,31
 400d638:	8900004c 	andi	r4,r17,1
 400d63c:	2922b03a 	or	r17,r5,r4
 400d640:	1806d07a 	srli	r3,r3,1
 400d644:	1462b03a 	or	r17,r2,r17
 400d648:	3825883a 	mov	r18,r7
 400d64c:	003f7106 	br	400d414 <__alt_data_end+0xfc005414>
 400d650:	2984b03a 	or	r2,r5,r6
 400d654:	103f6826 	beq	r2,zero,400d3f8 <__alt_data_end+0xfc0053f8>
 400d658:	39c03fcc 	andi	r7,r7,255
 400d65c:	003f6706 	br	400d3fc <__alt_data_end+0xfc0053fc>
 400d660:	4086b03a 	or	r3,r8,r2
 400d664:	18015226 	beq	r3,zero,400dbb0 <__subdf3+0x820>
 400d668:	00c00434 	movhi	r3,16
 400d66c:	41400234 	orhi	r5,r8,8
 400d670:	18ffffc4 	addi	r3,r3,-1
 400d674:	28ca703a 	and	r5,r5,r3
 400d678:	003f7e06 	br	400d474 <__alt_data_end+0xfc005474>
 400d67c:	10bfffc4 	addi	r2,r2,-1
 400d680:	1000491e 	bne	r2,zero,400d7a8 <__subdf3+0x418>
 400d684:	898fc83a 	sub	r7,r17,r6
 400d688:	89e3803a 	cmpltu	r17,r17,r7
 400d68c:	1947c83a 	sub	r3,r3,r5
 400d690:	1c47c83a 	sub	r3,r3,r17
 400d694:	3823883a 	mov	r17,r7
 400d698:	003f9b06 	br	400d508 <__alt_data_end+0xfc005508>
 400d69c:	2988b03a 	or	r4,r5,r6
 400d6a0:	203f5c26 	beq	r4,zero,400d414 <__alt_data_end+0xfc005414>
 400d6a4:	10bfffc4 	addi	r2,r2,-1
 400d6a8:	1000931e 	bne	r2,zero,400d8f8 <__subdf3+0x568>
 400d6ac:	898d883a 	add	r6,r17,r6
 400d6b0:	3463803a 	cmpltu	r17,r6,r17
 400d6b4:	1947883a 	add	r3,r3,r5
 400d6b8:	88c7883a 	add	r3,r17,r3
 400d6bc:	3023883a 	mov	r17,r6
 400d6c0:	003fd306 	br	400d610 <__alt_data_end+0xfc005610>
 400d6c4:	1000541e 	bne	r2,zero,400d818 <__subdf3+0x488>
 400d6c8:	80800044 	addi	r2,r16,1
 400d6cc:	1081ffcc 	andi	r2,r2,2047
 400d6d0:	01000044 	movi	r4,1
 400d6d4:	2080a20e 	bge	r4,r2,400d960 <__subdf3+0x5d0>
 400d6d8:	8989c83a 	sub	r4,r17,r6
 400d6dc:	8905803a 	cmpltu	r2,r17,r4
 400d6e0:	1967c83a 	sub	r19,r3,r5
 400d6e4:	98a7c83a 	sub	r19,r19,r2
 400d6e8:	9880202c 	andhi	r2,r19,128
 400d6ec:	10006326 	beq	r2,zero,400d87c <__subdf3+0x4ec>
 400d6f0:	3463c83a 	sub	r17,r6,r17
 400d6f4:	28c7c83a 	sub	r3,r5,r3
 400d6f8:	344d803a 	cmpltu	r6,r6,r17
 400d6fc:	19a7c83a 	sub	r19,r3,r6
 400d700:	3825883a 	mov	r18,r7
 400d704:	983f861e 	bne	r19,zero,400d520 <__alt_data_end+0xfc005520>
 400d708:	8809883a 	mov	r4,r17
 400d70c:	400259c0 	call	400259c <__clzsi2>
 400d710:	10800804 	addi	r2,r2,32
 400d714:	113ffe04 	addi	r4,r2,-8
 400d718:	00c007c4 	movi	r3,31
 400d71c:	193f850e 	bge	r3,r4,400d534 <__alt_data_end+0xfc005534>
 400d720:	10bff604 	addi	r2,r2,-40
 400d724:	8884983a 	sll	r2,r17,r2
 400d728:	0023883a 	mov	r17,zero
 400d72c:	243f880e 	bge	r4,r16,400d550 <__alt_data_end+0xfc005550>
 400d730:	00ffe034 	movhi	r3,65408
 400d734:	18ffffc4 	addi	r3,r3,-1
 400d738:	8121c83a 	sub	r16,r16,r4
 400d73c:	10c6703a 	and	r3,r2,r3
 400d740:	003f3406 	br	400d414 <__alt_data_end+0xfc005414>
 400d744:	9100004c 	andi	r4,r18,1
 400d748:	000b883a 	mov	r5,zero
 400d74c:	0005883a 	mov	r2,zero
 400d750:	003f4806 	br	400d474 <__alt_data_end+0xfc005474>
 400d754:	298cb03a 	or	r6,r5,r6
 400d758:	300cc03a 	cmpne	r6,r6,zero
 400d75c:	0005883a 	mov	r2,zero
 400d760:	003f6406 	br	400d4f4 <__alt_data_end+0xfc0054f4>
 400d764:	10009a1e 	bne	r2,zero,400d9d0 <__subdf3+0x640>
 400d768:	82400044 	addi	r9,r16,1
 400d76c:	4881ffcc 	andi	r2,r9,2047
 400d770:	02800044 	movi	r10,1
 400d774:	5080670e 	bge	r10,r2,400d914 <__subdf3+0x584>
 400d778:	0081ffc4 	movi	r2,2047
 400d77c:	4880af26 	beq	r9,r2,400da3c <__subdf3+0x6ac>
 400d780:	898d883a 	add	r6,r17,r6
 400d784:	1945883a 	add	r2,r3,r5
 400d788:	3447803a 	cmpltu	r3,r6,r17
 400d78c:	1887883a 	add	r3,r3,r2
 400d790:	182297fa 	slli	r17,r3,31
 400d794:	300cd07a 	srli	r6,r6,1
 400d798:	1806d07a 	srli	r3,r3,1
 400d79c:	4821883a 	mov	r16,r9
 400d7a0:	89a2b03a 	or	r17,r17,r6
 400d7a4:	003f1b06 	br	400d414 <__alt_data_end+0xfc005414>
 400d7a8:	0101ffc4 	movi	r4,2047
 400d7ac:	813f441e 	bne	r16,r4,400d4c0 <__alt_data_end+0xfc0054c0>
 400d7b0:	003f1806 	br	400d414 <__alt_data_end+0xfc005414>
 400d7b4:	843ff844 	addi	r16,r16,-31
 400d7b8:	01400804 	movi	r5,32
 400d7bc:	1408d83a 	srl	r4,r2,r16
 400d7c0:	19405026 	beq	r3,r5,400d904 <__subdf3+0x574>
 400d7c4:	01401004 	movi	r5,64
 400d7c8:	28c7c83a 	sub	r3,r5,r3
 400d7cc:	10c4983a 	sll	r2,r2,r3
 400d7d0:	88a2b03a 	or	r17,r17,r2
 400d7d4:	8822c03a 	cmpne	r17,r17,zero
 400d7d8:	2462b03a 	or	r17,r4,r17
 400d7dc:	0007883a 	mov	r3,zero
 400d7e0:	0021883a 	mov	r16,zero
 400d7e4:	003f6d06 	br	400d59c <__alt_data_end+0xfc00559c>
 400d7e8:	11fff804 	addi	r7,r2,-32
 400d7ec:	01000804 	movi	r4,32
 400d7f0:	29ced83a 	srl	r7,r5,r7
 400d7f4:	11004526 	beq	r2,r4,400d90c <__subdf3+0x57c>
 400d7f8:	01001004 	movi	r4,64
 400d7fc:	2089c83a 	sub	r4,r4,r2
 400d800:	2904983a 	sll	r2,r5,r4
 400d804:	118cb03a 	or	r6,r2,r6
 400d808:	300cc03a 	cmpne	r6,r6,zero
 400d80c:	398cb03a 	or	r6,r7,r6
 400d810:	0005883a 	mov	r2,zero
 400d814:	003f3706 	br	400d4f4 <__alt_data_end+0xfc0054f4>
 400d818:	80002a26 	beq	r16,zero,400d8c4 <__subdf3+0x534>
 400d81c:	0101ffc4 	movi	r4,2047
 400d820:	49006626 	beq	r9,r4,400d9bc <__subdf3+0x62c>
 400d824:	0085c83a 	sub	r2,zero,r2
 400d828:	18c02034 	orhi	r3,r3,128
 400d82c:	01000e04 	movi	r4,56
 400d830:	20807e16 	blt	r4,r2,400da2c <__subdf3+0x69c>
 400d834:	010007c4 	movi	r4,31
 400d838:	2080e716 	blt	r4,r2,400dbd8 <__subdf3+0x848>
 400d83c:	01000804 	movi	r4,32
 400d840:	2089c83a 	sub	r4,r4,r2
 400d844:	1914983a 	sll	r10,r3,r4
 400d848:	8890d83a 	srl	r8,r17,r2
 400d84c:	8908983a 	sll	r4,r17,r4
 400d850:	1884d83a 	srl	r2,r3,r2
 400d854:	5222b03a 	or	r17,r10,r8
 400d858:	2006c03a 	cmpne	r3,r4,zero
 400d85c:	88e2b03a 	or	r17,r17,r3
 400d860:	3463c83a 	sub	r17,r6,r17
 400d864:	2885c83a 	sub	r2,r5,r2
 400d868:	344d803a 	cmpltu	r6,r6,r17
 400d86c:	1187c83a 	sub	r3,r2,r6
 400d870:	4821883a 	mov	r16,r9
 400d874:	3825883a 	mov	r18,r7
 400d878:	003f2306 	br	400d508 <__alt_data_end+0xfc005508>
 400d87c:	24d0b03a 	or	r8,r4,r19
 400d880:	40001b1e 	bne	r8,zero,400d8f0 <__subdf3+0x560>
 400d884:	0005883a 	mov	r2,zero
 400d888:	0009883a 	mov	r4,zero
 400d88c:	0021883a 	mov	r16,zero
 400d890:	003f4906 	br	400d5b8 <__alt_data_end+0xfc0055b8>
 400d894:	010007c4 	movi	r4,31
 400d898:	20803a16 	blt	r4,r2,400d984 <__subdf3+0x5f4>
 400d89c:	01000804 	movi	r4,32
 400d8a0:	2089c83a 	sub	r4,r4,r2
 400d8a4:	2912983a 	sll	r9,r5,r4
 400d8a8:	3090d83a 	srl	r8,r6,r2
 400d8ac:	3108983a 	sll	r4,r6,r4
 400d8b0:	2884d83a 	srl	r2,r5,r2
 400d8b4:	4a12b03a 	or	r9,r9,r8
 400d8b8:	2008c03a 	cmpne	r4,r4,zero
 400d8bc:	4912b03a 	or	r9,r9,r4
 400d8c0:	003f4e06 	br	400d5fc <__alt_data_end+0xfc0055fc>
 400d8c4:	1c48b03a 	or	r4,r3,r17
 400d8c8:	20003c26 	beq	r4,zero,400d9bc <__subdf3+0x62c>
 400d8cc:	0084303a 	nor	r2,zero,r2
 400d8d0:	1000381e 	bne	r2,zero,400d9b4 <__subdf3+0x624>
 400d8d4:	3463c83a 	sub	r17,r6,r17
 400d8d8:	28c5c83a 	sub	r2,r5,r3
 400d8dc:	344d803a 	cmpltu	r6,r6,r17
 400d8e0:	1187c83a 	sub	r3,r2,r6
 400d8e4:	4821883a 	mov	r16,r9
 400d8e8:	3825883a 	mov	r18,r7
 400d8ec:	003f0606 	br	400d508 <__alt_data_end+0xfc005508>
 400d8f0:	2023883a 	mov	r17,r4
 400d8f4:	003f0906 	br	400d51c <__alt_data_end+0xfc00551c>
 400d8f8:	0101ffc4 	movi	r4,2047
 400d8fc:	813f3a1e 	bne	r16,r4,400d5e8 <__alt_data_end+0xfc0055e8>
 400d900:	003ec406 	br	400d414 <__alt_data_end+0xfc005414>
 400d904:	0005883a 	mov	r2,zero
 400d908:	003fb106 	br	400d7d0 <__alt_data_end+0xfc0057d0>
 400d90c:	0005883a 	mov	r2,zero
 400d910:	003fbc06 	br	400d804 <__alt_data_end+0xfc005804>
 400d914:	1c44b03a 	or	r2,r3,r17
 400d918:	80008e1e 	bne	r16,zero,400db54 <__subdf3+0x7c4>
 400d91c:	1000c826 	beq	r2,zero,400dc40 <__subdf3+0x8b0>
 400d920:	2984b03a 	or	r2,r5,r6
 400d924:	103ebb26 	beq	r2,zero,400d414 <__alt_data_end+0xfc005414>
 400d928:	8989883a 	add	r4,r17,r6
 400d92c:	1945883a 	add	r2,r3,r5
 400d930:	2447803a 	cmpltu	r3,r4,r17
 400d934:	1887883a 	add	r3,r3,r2
 400d938:	1880202c 	andhi	r2,r3,128
 400d93c:	2023883a 	mov	r17,r4
 400d940:	103f1626 	beq	r2,zero,400d59c <__alt_data_end+0xfc00559c>
 400d944:	00bfe034 	movhi	r2,65408
 400d948:	10bfffc4 	addi	r2,r2,-1
 400d94c:	5021883a 	mov	r16,r10
 400d950:	1886703a 	and	r3,r3,r2
 400d954:	003eaf06 	br	400d414 <__alt_data_end+0xfc005414>
 400d958:	3825883a 	mov	r18,r7
 400d95c:	003f0f06 	br	400d59c <__alt_data_end+0xfc00559c>
 400d960:	1c44b03a 	or	r2,r3,r17
 400d964:	8000251e 	bne	r16,zero,400d9fc <__subdf3+0x66c>
 400d968:	1000661e 	bne	r2,zero,400db04 <__subdf3+0x774>
 400d96c:	2990b03a 	or	r8,r5,r6
 400d970:	40009626 	beq	r8,zero,400dbcc <__subdf3+0x83c>
 400d974:	2807883a 	mov	r3,r5
 400d978:	3023883a 	mov	r17,r6
 400d97c:	3825883a 	mov	r18,r7
 400d980:	003ea406 	br	400d414 <__alt_data_end+0xfc005414>
 400d984:	127ff804 	addi	r9,r2,-32
 400d988:	01000804 	movi	r4,32
 400d98c:	2a52d83a 	srl	r9,r5,r9
 400d990:	11008c26 	beq	r2,r4,400dbc4 <__subdf3+0x834>
 400d994:	01001004 	movi	r4,64
 400d998:	2085c83a 	sub	r2,r4,r2
 400d99c:	2884983a 	sll	r2,r5,r2
 400d9a0:	118cb03a 	or	r6,r2,r6
 400d9a4:	300cc03a 	cmpne	r6,r6,zero
 400d9a8:	4992b03a 	or	r9,r9,r6
 400d9ac:	0005883a 	mov	r2,zero
 400d9b0:	003f1206 	br	400d5fc <__alt_data_end+0xfc0055fc>
 400d9b4:	0101ffc4 	movi	r4,2047
 400d9b8:	493f9c1e 	bne	r9,r4,400d82c <__alt_data_end+0xfc00582c>
 400d9bc:	2807883a 	mov	r3,r5
 400d9c0:	3023883a 	mov	r17,r6
 400d9c4:	4821883a 	mov	r16,r9
 400d9c8:	3825883a 	mov	r18,r7
 400d9cc:	003e9106 	br	400d414 <__alt_data_end+0xfc005414>
 400d9d0:	80001f1e 	bne	r16,zero,400da50 <__subdf3+0x6c0>
 400d9d4:	1c48b03a 	or	r4,r3,r17
 400d9d8:	20005a26 	beq	r4,zero,400db44 <__subdf3+0x7b4>
 400d9dc:	0084303a 	nor	r2,zero,r2
 400d9e0:	1000561e 	bne	r2,zero,400db3c <__subdf3+0x7ac>
 400d9e4:	89a3883a 	add	r17,r17,r6
 400d9e8:	1945883a 	add	r2,r3,r5
 400d9ec:	898d803a 	cmpltu	r6,r17,r6
 400d9f0:	3087883a 	add	r3,r6,r2
 400d9f4:	4821883a 	mov	r16,r9
 400d9f8:	003f0506 	br	400d610 <__alt_data_end+0xfc005610>
 400d9fc:	10002b1e 	bne	r2,zero,400daac <__subdf3+0x71c>
 400da00:	2984b03a 	or	r2,r5,r6
 400da04:	10008026 	beq	r2,zero,400dc08 <__subdf3+0x878>
 400da08:	2807883a 	mov	r3,r5
 400da0c:	3023883a 	mov	r17,r6
 400da10:	3825883a 	mov	r18,r7
 400da14:	0401ffc4 	movi	r16,2047
 400da18:	003e7e06 	br	400d414 <__alt_data_end+0xfc005414>
 400da1c:	3809883a 	mov	r4,r7
 400da20:	0011883a 	mov	r8,zero
 400da24:	0005883a 	mov	r2,zero
 400da28:	003ee306 	br	400d5b8 <__alt_data_end+0xfc0055b8>
 400da2c:	1c62b03a 	or	r17,r3,r17
 400da30:	8822c03a 	cmpne	r17,r17,zero
 400da34:	0005883a 	mov	r2,zero
 400da38:	003f8906 	br	400d860 <__alt_data_end+0xfc005860>
 400da3c:	3809883a 	mov	r4,r7
 400da40:	4821883a 	mov	r16,r9
 400da44:	0011883a 	mov	r8,zero
 400da48:	0005883a 	mov	r2,zero
 400da4c:	003eda06 	br	400d5b8 <__alt_data_end+0xfc0055b8>
 400da50:	0101ffc4 	movi	r4,2047
 400da54:	49003b26 	beq	r9,r4,400db44 <__subdf3+0x7b4>
 400da58:	0085c83a 	sub	r2,zero,r2
 400da5c:	18c02034 	orhi	r3,r3,128
 400da60:	01000e04 	movi	r4,56
 400da64:	20806e16 	blt	r4,r2,400dc20 <__subdf3+0x890>
 400da68:	010007c4 	movi	r4,31
 400da6c:	20807716 	blt	r4,r2,400dc4c <__subdf3+0x8bc>
 400da70:	01000804 	movi	r4,32
 400da74:	2089c83a 	sub	r4,r4,r2
 400da78:	1914983a 	sll	r10,r3,r4
 400da7c:	8890d83a 	srl	r8,r17,r2
 400da80:	8908983a 	sll	r4,r17,r4
 400da84:	1884d83a 	srl	r2,r3,r2
 400da88:	5222b03a 	or	r17,r10,r8
 400da8c:	2006c03a 	cmpne	r3,r4,zero
 400da90:	88e2b03a 	or	r17,r17,r3
 400da94:	89a3883a 	add	r17,r17,r6
 400da98:	1145883a 	add	r2,r2,r5
 400da9c:	898d803a 	cmpltu	r6,r17,r6
 400daa0:	3087883a 	add	r3,r6,r2
 400daa4:	4821883a 	mov	r16,r9
 400daa8:	003ed906 	br	400d610 <__alt_data_end+0xfc005610>
 400daac:	2984b03a 	or	r2,r5,r6
 400dab0:	10004226 	beq	r2,zero,400dbbc <__subdf3+0x82c>
 400dab4:	1808d0fa 	srli	r4,r3,3
 400dab8:	8822d0fa 	srli	r17,r17,3
 400dabc:	1806977a 	slli	r3,r3,29
 400dac0:	2080022c 	andhi	r2,r4,8
 400dac4:	1c62b03a 	or	r17,r3,r17
 400dac8:	10000826 	beq	r2,zero,400daec <__subdf3+0x75c>
 400dacc:	2812d0fa 	srli	r9,r5,3
 400dad0:	4880022c 	andhi	r2,r9,8
 400dad4:	1000051e 	bne	r2,zero,400daec <__subdf3+0x75c>
 400dad8:	300cd0fa 	srli	r6,r6,3
 400dadc:	2804977a 	slli	r2,r5,29
 400dae0:	4809883a 	mov	r4,r9
 400dae4:	3825883a 	mov	r18,r7
 400dae8:	11a2b03a 	or	r17,r2,r6
 400daec:	8806d77a 	srli	r3,r17,29
 400daf0:	200890fa 	slli	r4,r4,3
 400daf4:	882290fa 	slli	r17,r17,3
 400daf8:	0401ffc4 	movi	r16,2047
 400dafc:	1906b03a 	or	r3,r3,r4
 400db00:	003e4406 	br	400d414 <__alt_data_end+0xfc005414>
 400db04:	2984b03a 	or	r2,r5,r6
 400db08:	103e4226 	beq	r2,zero,400d414 <__alt_data_end+0xfc005414>
 400db0c:	8989c83a 	sub	r4,r17,r6
 400db10:	8911803a 	cmpltu	r8,r17,r4
 400db14:	1945c83a 	sub	r2,r3,r5
 400db18:	1205c83a 	sub	r2,r2,r8
 400db1c:	1200202c 	andhi	r8,r2,128
 400db20:	403e9a26 	beq	r8,zero,400d58c <__alt_data_end+0xfc00558c>
 400db24:	3463c83a 	sub	r17,r6,r17
 400db28:	28c5c83a 	sub	r2,r5,r3
 400db2c:	344d803a 	cmpltu	r6,r6,r17
 400db30:	1187c83a 	sub	r3,r2,r6
 400db34:	3825883a 	mov	r18,r7
 400db38:	003e3606 	br	400d414 <__alt_data_end+0xfc005414>
 400db3c:	0101ffc4 	movi	r4,2047
 400db40:	493fc71e 	bne	r9,r4,400da60 <__alt_data_end+0xfc005a60>
 400db44:	2807883a 	mov	r3,r5
 400db48:	3023883a 	mov	r17,r6
 400db4c:	4821883a 	mov	r16,r9
 400db50:	003e3006 	br	400d414 <__alt_data_end+0xfc005414>
 400db54:	10003626 	beq	r2,zero,400dc30 <__subdf3+0x8a0>
 400db58:	2984b03a 	or	r2,r5,r6
 400db5c:	10001726 	beq	r2,zero,400dbbc <__subdf3+0x82c>
 400db60:	1808d0fa 	srli	r4,r3,3
 400db64:	8822d0fa 	srli	r17,r17,3
 400db68:	1806977a 	slli	r3,r3,29
 400db6c:	2080022c 	andhi	r2,r4,8
 400db70:	1c62b03a 	or	r17,r3,r17
 400db74:	10000726 	beq	r2,zero,400db94 <__subdf3+0x804>
 400db78:	2812d0fa 	srli	r9,r5,3
 400db7c:	4880022c 	andhi	r2,r9,8
 400db80:	1000041e 	bne	r2,zero,400db94 <__subdf3+0x804>
 400db84:	300cd0fa 	srli	r6,r6,3
 400db88:	2804977a 	slli	r2,r5,29
 400db8c:	4809883a 	mov	r4,r9
 400db90:	11a2b03a 	or	r17,r2,r6
 400db94:	8806d77a 	srli	r3,r17,29
 400db98:	200890fa 	slli	r4,r4,3
 400db9c:	882290fa 	slli	r17,r17,3
 400dba0:	3825883a 	mov	r18,r7
 400dba4:	1906b03a 	or	r3,r3,r4
 400dba8:	0401ffc4 	movi	r16,2047
 400dbac:	003e1906 	br	400d414 <__alt_data_end+0xfc005414>
 400dbb0:	000b883a 	mov	r5,zero
 400dbb4:	0005883a 	mov	r2,zero
 400dbb8:	003e2e06 	br	400d474 <__alt_data_end+0xfc005474>
 400dbbc:	0401ffc4 	movi	r16,2047
 400dbc0:	003e1406 	br	400d414 <__alt_data_end+0xfc005414>
 400dbc4:	0005883a 	mov	r2,zero
 400dbc8:	003f7506 	br	400d9a0 <__alt_data_end+0xfc0059a0>
 400dbcc:	0005883a 	mov	r2,zero
 400dbd0:	0009883a 	mov	r4,zero
 400dbd4:	003e7806 	br	400d5b8 <__alt_data_end+0xfc0055b8>
 400dbd8:	123ff804 	addi	r8,r2,-32
 400dbdc:	01000804 	movi	r4,32
 400dbe0:	1a10d83a 	srl	r8,r3,r8
 400dbe4:	11002526 	beq	r2,r4,400dc7c <__subdf3+0x8ec>
 400dbe8:	01001004 	movi	r4,64
 400dbec:	2085c83a 	sub	r2,r4,r2
 400dbf0:	1884983a 	sll	r2,r3,r2
 400dbf4:	1444b03a 	or	r2,r2,r17
 400dbf8:	1004c03a 	cmpne	r2,r2,zero
 400dbfc:	40a2b03a 	or	r17,r8,r2
 400dc00:	0005883a 	mov	r2,zero
 400dc04:	003f1606 	br	400d860 <__alt_data_end+0xfc005860>
 400dc08:	02000434 	movhi	r8,16
 400dc0c:	0009883a 	mov	r4,zero
 400dc10:	423fffc4 	addi	r8,r8,-1
 400dc14:	00bfffc4 	movi	r2,-1
 400dc18:	0401ffc4 	movi	r16,2047
 400dc1c:	003e6606 	br	400d5b8 <__alt_data_end+0xfc0055b8>
 400dc20:	1c62b03a 	or	r17,r3,r17
 400dc24:	8822c03a 	cmpne	r17,r17,zero
 400dc28:	0005883a 	mov	r2,zero
 400dc2c:	003f9906 	br	400da94 <__alt_data_end+0xfc005a94>
 400dc30:	2807883a 	mov	r3,r5
 400dc34:	3023883a 	mov	r17,r6
 400dc38:	0401ffc4 	movi	r16,2047
 400dc3c:	003df506 	br	400d414 <__alt_data_end+0xfc005414>
 400dc40:	2807883a 	mov	r3,r5
 400dc44:	3023883a 	mov	r17,r6
 400dc48:	003df206 	br	400d414 <__alt_data_end+0xfc005414>
 400dc4c:	123ff804 	addi	r8,r2,-32
 400dc50:	01000804 	movi	r4,32
 400dc54:	1a10d83a 	srl	r8,r3,r8
 400dc58:	11000a26 	beq	r2,r4,400dc84 <__subdf3+0x8f4>
 400dc5c:	01001004 	movi	r4,64
 400dc60:	2085c83a 	sub	r2,r4,r2
 400dc64:	1884983a 	sll	r2,r3,r2
 400dc68:	1444b03a 	or	r2,r2,r17
 400dc6c:	1004c03a 	cmpne	r2,r2,zero
 400dc70:	40a2b03a 	or	r17,r8,r2
 400dc74:	0005883a 	mov	r2,zero
 400dc78:	003f8606 	br	400da94 <__alt_data_end+0xfc005a94>
 400dc7c:	0005883a 	mov	r2,zero
 400dc80:	003fdc06 	br	400dbf4 <__alt_data_end+0xfc005bf4>
 400dc84:	0005883a 	mov	r2,zero
 400dc88:	003ff706 	br	400dc68 <__alt_data_end+0xfc005c68>

0400dc8c <__fixdfsi>:
 400dc8c:	280cd53a 	srli	r6,r5,20
 400dc90:	00c00434 	movhi	r3,16
 400dc94:	18ffffc4 	addi	r3,r3,-1
 400dc98:	3181ffcc 	andi	r6,r6,2047
 400dc9c:	01c0ff84 	movi	r7,1022
 400dca0:	28c6703a 	and	r3,r5,r3
 400dca4:	280ad7fa 	srli	r5,r5,31
 400dca8:	3980120e 	bge	r7,r6,400dcf4 <__fixdfsi+0x68>
 400dcac:	00810744 	movi	r2,1053
 400dcb0:	11800c16 	blt	r2,r6,400dce4 <__fixdfsi+0x58>
 400dcb4:	00810cc4 	movi	r2,1075
 400dcb8:	1185c83a 	sub	r2,r2,r6
 400dcbc:	01c007c4 	movi	r7,31
 400dcc0:	18c00434 	orhi	r3,r3,16
 400dcc4:	38800d16 	blt	r7,r2,400dcfc <__fixdfsi+0x70>
 400dcc8:	31befb44 	addi	r6,r6,-1043
 400dccc:	2084d83a 	srl	r2,r4,r2
 400dcd0:	1986983a 	sll	r3,r3,r6
 400dcd4:	1884b03a 	or	r2,r3,r2
 400dcd8:	28000726 	beq	r5,zero,400dcf8 <__fixdfsi+0x6c>
 400dcdc:	0085c83a 	sub	r2,zero,r2
 400dce0:	f800283a 	ret
 400dce4:	00a00034 	movhi	r2,32768
 400dce8:	10bfffc4 	addi	r2,r2,-1
 400dcec:	2885883a 	add	r2,r5,r2
 400dcf0:	f800283a 	ret
 400dcf4:	0005883a 	mov	r2,zero
 400dcf8:	f800283a 	ret
 400dcfc:	008104c4 	movi	r2,1043
 400dd00:	1185c83a 	sub	r2,r2,r6
 400dd04:	1884d83a 	srl	r2,r3,r2
 400dd08:	003ff306 	br	400dcd8 <__alt_data_end+0xfc005cd8>

0400dd0c <__floatsidf>:
 400dd0c:	defffd04 	addi	sp,sp,-12
 400dd10:	dfc00215 	stw	ra,8(sp)
 400dd14:	dc400115 	stw	r17,4(sp)
 400dd18:	dc000015 	stw	r16,0(sp)
 400dd1c:	20002b26 	beq	r4,zero,400ddcc <__floatsidf+0xc0>
 400dd20:	2023883a 	mov	r17,r4
 400dd24:	2020d7fa 	srli	r16,r4,31
 400dd28:	20002d16 	blt	r4,zero,400dde0 <__floatsidf+0xd4>
 400dd2c:	8809883a 	mov	r4,r17
 400dd30:	400259c0 	call	400259c <__clzsi2>
 400dd34:	01410784 	movi	r5,1054
 400dd38:	288bc83a 	sub	r5,r5,r2
 400dd3c:	01010cc4 	movi	r4,1075
 400dd40:	2149c83a 	sub	r4,r4,r5
 400dd44:	00c007c4 	movi	r3,31
 400dd48:	1900160e 	bge	r3,r4,400dda4 <__floatsidf+0x98>
 400dd4c:	00c104c4 	movi	r3,1043
 400dd50:	1947c83a 	sub	r3,r3,r5
 400dd54:	88c6983a 	sll	r3,r17,r3
 400dd58:	00800434 	movhi	r2,16
 400dd5c:	10bfffc4 	addi	r2,r2,-1
 400dd60:	1886703a 	and	r3,r3,r2
 400dd64:	2941ffcc 	andi	r5,r5,2047
 400dd68:	800d883a 	mov	r6,r16
 400dd6c:	0005883a 	mov	r2,zero
 400dd70:	280a953a 	slli	r5,r5,20
 400dd74:	31803fcc 	andi	r6,r6,255
 400dd78:	01000434 	movhi	r4,16
 400dd7c:	300c97fa 	slli	r6,r6,31
 400dd80:	213fffc4 	addi	r4,r4,-1
 400dd84:	1906703a 	and	r3,r3,r4
 400dd88:	1946b03a 	or	r3,r3,r5
 400dd8c:	1986b03a 	or	r3,r3,r6
 400dd90:	dfc00217 	ldw	ra,8(sp)
 400dd94:	dc400117 	ldw	r17,4(sp)
 400dd98:	dc000017 	ldw	r16,0(sp)
 400dd9c:	dec00304 	addi	sp,sp,12
 400dda0:	f800283a 	ret
 400dda4:	00c002c4 	movi	r3,11
 400dda8:	1887c83a 	sub	r3,r3,r2
 400ddac:	88c6d83a 	srl	r3,r17,r3
 400ddb0:	8904983a 	sll	r2,r17,r4
 400ddb4:	01000434 	movhi	r4,16
 400ddb8:	213fffc4 	addi	r4,r4,-1
 400ddbc:	2941ffcc 	andi	r5,r5,2047
 400ddc0:	1906703a 	and	r3,r3,r4
 400ddc4:	800d883a 	mov	r6,r16
 400ddc8:	003fe906 	br	400dd70 <__alt_data_end+0xfc005d70>
 400ddcc:	000d883a 	mov	r6,zero
 400ddd0:	000b883a 	mov	r5,zero
 400ddd4:	0007883a 	mov	r3,zero
 400ddd8:	0005883a 	mov	r2,zero
 400dddc:	003fe406 	br	400dd70 <__alt_data_end+0xfc005d70>
 400dde0:	0123c83a 	sub	r17,zero,r4
 400dde4:	003fd106 	br	400dd2c <__alt_data_end+0xfc005d2c>

0400dde8 <__floatunsidf>:
 400dde8:	defffe04 	addi	sp,sp,-8
 400ddec:	dc000015 	stw	r16,0(sp)
 400ddf0:	dfc00115 	stw	ra,4(sp)
 400ddf4:	2021883a 	mov	r16,r4
 400ddf8:	20002226 	beq	r4,zero,400de84 <__floatunsidf+0x9c>
 400ddfc:	400259c0 	call	400259c <__clzsi2>
 400de00:	01010784 	movi	r4,1054
 400de04:	2089c83a 	sub	r4,r4,r2
 400de08:	01810cc4 	movi	r6,1075
 400de0c:	310dc83a 	sub	r6,r6,r4
 400de10:	00c007c4 	movi	r3,31
 400de14:	1980120e 	bge	r3,r6,400de60 <__floatunsidf+0x78>
 400de18:	00c104c4 	movi	r3,1043
 400de1c:	1907c83a 	sub	r3,r3,r4
 400de20:	80ca983a 	sll	r5,r16,r3
 400de24:	00800434 	movhi	r2,16
 400de28:	10bfffc4 	addi	r2,r2,-1
 400de2c:	2101ffcc 	andi	r4,r4,2047
 400de30:	0021883a 	mov	r16,zero
 400de34:	288a703a 	and	r5,r5,r2
 400de38:	2008953a 	slli	r4,r4,20
 400de3c:	00c00434 	movhi	r3,16
 400de40:	18ffffc4 	addi	r3,r3,-1
 400de44:	28c6703a 	and	r3,r5,r3
 400de48:	8005883a 	mov	r2,r16
 400de4c:	1906b03a 	or	r3,r3,r4
 400de50:	dfc00117 	ldw	ra,4(sp)
 400de54:	dc000017 	ldw	r16,0(sp)
 400de58:	dec00204 	addi	sp,sp,8
 400de5c:	f800283a 	ret
 400de60:	00c002c4 	movi	r3,11
 400de64:	188bc83a 	sub	r5,r3,r2
 400de68:	814ad83a 	srl	r5,r16,r5
 400de6c:	00c00434 	movhi	r3,16
 400de70:	18ffffc4 	addi	r3,r3,-1
 400de74:	81a0983a 	sll	r16,r16,r6
 400de78:	2101ffcc 	andi	r4,r4,2047
 400de7c:	28ca703a 	and	r5,r5,r3
 400de80:	003fed06 	br	400de38 <__alt_data_end+0xfc005e38>
 400de84:	0009883a 	mov	r4,zero
 400de88:	000b883a 	mov	r5,zero
 400de8c:	003fea06 	br	400de38 <__alt_data_end+0xfc005e38>

0400de90 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400de90:	defffe04 	addi	sp,sp,-8
 400de94:	dfc00115 	stw	ra,4(sp)
 400de98:	df000015 	stw	fp,0(sp)
 400de9c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400dea0:	d0a00b17 	ldw	r2,-32724(gp)
 400dea4:	10000326 	beq	r2,zero,400deb4 <alt_get_errno+0x24>
 400dea8:	d0a00b17 	ldw	r2,-32724(gp)
 400deac:	103ee83a 	callr	r2
 400deb0:	00000106 	br	400deb8 <alt_get_errno+0x28>
 400deb4:	d0a6d504 	addi	r2,gp,-25772
}
 400deb8:	e037883a 	mov	sp,fp
 400debc:	dfc00117 	ldw	ra,4(sp)
 400dec0:	df000017 	ldw	fp,0(sp)
 400dec4:	dec00204 	addi	sp,sp,8
 400dec8:	f800283a 	ret

0400decc <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 400decc:	defffb04 	addi	sp,sp,-20
 400ded0:	dfc00415 	stw	ra,16(sp)
 400ded4:	df000315 	stw	fp,12(sp)
 400ded8:	df000304 	addi	fp,sp,12
 400dedc:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 400dee0:	e0bfff17 	ldw	r2,-4(fp)
 400dee4:	10000616 	blt	r2,zero,400df00 <close+0x34>
 400dee8:	e0bfff17 	ldw	r2,-4(fp)
 400deec:	10c00324 	muli	r3,r2,12
 400def0:	00810074 	movhi	r2,1025
 400def4:	10839b04 	addi	r2,r2,3692
 400def8:	1885883a 	add	r2,r3,r2
 400defc:	00000106 	br	400df04 <close+0x38>
 400df00:	0005883a 	mov	r2,zero
 400df04:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 400df08:	e0bffd17 	ldw	r2,-12(fp)
 400df0c:	10001926 	beq	r2,zero,400df74 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 400df10:	e0bffd17 	ldw	r2,-12(fp)
 400df14:	10800017 	ldw	r2,0(r2)
 400df18:	10800417 	ldw	r2,16(r2)
 400df1c:	10000626 	beq	r2,zero,400df38 <close+0x6c>
 400df20:	e0bffd17 	ldw	r2,-12(fp)
 400df24:	10800017 	ldw	r2,0(r2)
 400df28:	10800417 	ldw	r2,16(r2)
 400df2c:	e13ffd17 	ldw	r4,-12(fp)
 400df30:	103ee83a 	callr	r2
 400df34:	00000106 	br	400df3c <close+0x70>
 400df38:	0005883a 	mov	r2,zero
 400df3c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 400df40:	e13fff17 	ldw	r4,-4(fp)
 400df44:	400e5e00 	call	400e5e0 <alt_release_fd>
    if (rval < 0)
 400df48:	e0bffe17 	ldw	r2,-8(fp)
 400df4c:	1000070e 	bge	r2,zero,400df6c <close+0xa0>
    {
      ALT_ERRNO = -rval;
 400df50:	400de900 	call	400de90 <alt_get_errno>
 400df54:	1007883a 	mov	r3,r2
 400df58:	e0bffe17 	ldw	r2,-8(fp)
 400df5c:	0085c83a 	sub	r2,zero,r2
 400df60:	18800015 	stw	r2,0(r3)
      return -1;
 400df64:	00bfffc4 	movi	r2,-1
 400df68:	00000706 	br	400df88 <close+0xbc>
    }
    return 0;
 400df6c:	0005883a 	mov	r2,zero
 400df70:	00000506 	br	400df88 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 400df74:	400de900 	call	400de90 <alt_get_errno>
 400df78:	1007883a 	mov	r3,r2
 400df7c:	00801444 	movi	r2,81
 400df80:	18800015 	stw	r2,0(r3)
    return -1;
 400df84:	00bfffc4 	movi	r2,-1
  }
}
 400df88:	e037883a 	mov	sp,fp
 400df8c:	dfc00117 	ldw	ra,4(sp)
 400df90:	df000017 	ldw	fp,0(sp)
 400df94:	dec00204 	addi	sp,sp,8
 400df98:	f800283a 	ret

0400df9c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 400df9c:	deffff04 	addi	sp,sp,-4
 400dfa0:	df000015 	stw	fp,0(sp)
 400dfa4:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 400dfa8:	0001883a 	nop
 400dfac:	e037883a 	mov	sp,fp
 400dfb0:	df000017 	ldw	fp,0(sp)
 400dfb4:	dec00104 	addi	sp,sp,4
 400dfb8:	f800283a 	ret

0400dfbc <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 400dfbc:	defffc04 	addi	sp,sp,-16
 400dfc0:	df000315 	stw	fp,12(sp)
 400dfc4:	df000304 	addi	fp,sp,12
 400dfc8:	e13ffd15 	stw	r4,-12(fp)
 400dfcc:	e17ffe15 	stw	r5,-8(fp)
 400dfd0:	e1bfff15 	stw	r6,-4(fp)
  return len;
 400dfd4:	e0bfff17 	ldw	r2,-4(fp)
}
 400dfd8:	e037883a 	mov	sp,fp
 400dfdc:	df000017 	ldw	fp,0(sp)
 400dfe0:	dec00104 	addi	sp,sp,4
 400dfe4:	f800283a 	ret

0400dfe8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400dfe8:	defffe04 	addi	sp,sp,-8
 400dfec:	dfc00115 	stw	ra,4(sp)
 400dff0:	df000015 	stw	fp,0(sp)
 400dff4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400dff8:	d0a00b17 	ldw	r2,-32724(gp)
 400dffc:	10000326 	beq	r2,zero,400e00c <alt_get_errno+0x24>
 400e000:	d0a00b17 	ldw	r2,-32724(gp)
 400e004:	103ee83a 	callr	r2
 400e008:	00000106 	br	400e010 <alt_get_errno+0x28>
 400e00c:	d0a6d504 	addi	r2,gp,-25772
}
 400e010:	e037883a 	mov	sp,fp
 400e014:	dfc00117 	ldw	ra,4(sp)
 400e018:	df000017 	ldw	fp,0(sp)
 400e01c:	dec00204 	addi	sp,sp,8
 400e020:	f800283a 	ret

0400e024 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 400e024:	defffb04 	addi	sp,sp,-20
 400e028:	dfc00415 	stw	ra,16(sp)
 400e02c:	df000315 	stw	fp,12(sp)
 400e030:	df000304 	addi	fp,sp,12
 400e034:	e13ffe15 	stw	r4,-8(fp)
 400e038:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400e03c:	e0bffe17 	ldw	r2,-8(fp)
 400e040:	10000616 	blt	r2,zero,400e05c <fstat+0x38>
 400e044:	e0bffe17 	ldw	r2,-8(fp)
 400e048:	10c00324 	muli	r3,r2,12
 400e04c:	00810074 	movhi	r2,1025
 400e050:	10839b04 	addi	r2,r2,3692
 400e054:	1885883a 	add	r2,r3,r2
 400e058:	00000106 	br	400e060 <fstat+0x3c>
 400e05c:	0005883a 	mov	r2,zero
 400e060:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 400e064:	e0bffd17 	ldw	r2,-12(fp)
 400e068:	10001026 	beq	r2,zero,400e0ac <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 400e06c:	e0bffd17 	ldw	r2,-12(fp)
 400e070:	10800017 	ldw	r2,0(r2)
 400e074:	10800817 	ldw	r2,32(r2)
 400e078:	10000726 	beq	r2,zero,400e098 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
 400e07c:	e0bffd17 	ldw	r2,-12(fp)
 400e080:	10800017 	ldw	r2,0(r2)
 400e084:	10800817 	ldw	r2,32(r2)
 400e088:	e17fff17 	ldw	r5,-4(fp)
 400e08c:	e13ffd17 	ldw	r4,-12(fp)
 400e090:	103ee83a 	callr	r2
 400e094:	00000a06 	br	400e0c0 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 400e098:	e0bfff17 	ldw	r2,-4(fp)
 400e09c:	00c80004 	movi	r3,8192
 400e0a0:	10c00115 	stw	r3,4(r2)
      return 0;
 400e0a4:	0005883a 	mov	r2,zero
 400e0a8:	00000506 	br	400e0c0 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 400e0ac:	400dfe80 	call	400dfe8 <alt_get_errno>
 400e0b0:	1007883a 	mov	r3,r2
 400e0b4:	00801444 	movi	r2,81
 400e0b8:	18800015 	stw	r2,0(r3)
    return -1;
 400e0bc:	00bfffc4 	movi	r2,-1
  }
}
 400e0c0:	e037883a 	mov	sp,fp
 400e0c4:	dfc00117 	ldw	ra,4(sp)
 400e0c8:	df000017 	ldw	fp,0(sp)
 400e0cc:	dec00204 	addi	sp,sp,8
 400e0d0:	f800283a 	ret

0400e0d4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 400e0d4:	defffe04 	addi	sp,sp,-8
 400e0d8:	dfc00115 	stw	ra,4(sp)
 400e0dc:	df000015 	stw	fp,0(sp)
 400e0e0:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 400e0e4:	01408004 	movi	r5,512
 400e0e8:	0009883a 	mov	r4,zero
 400e0ec:	400f7440 	call	400f744 <alt_icache_flush>
#endif
}
 400e0f0:	0001883a 	nop
 400e0f4:	e037883a 	mov	sp,fp
 400e0f8:	dfc00117 	ldw	ra,4(sp)
 400e0fc:	df000017 	ldw	fp,0(sp)
 400e100:	dec00204 	addi	sp,sp,8
 400e104:	f800283a 	ret

0400e108 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400e108:	defffe04 	addi	sp,sp,-8
 400e10c:	dfc00115 	stw	ra,4(sp)
 400e110:	df000015 	stw	fp,0(sp)
 400e114:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400e118:	d0a00b17 	ldw	r2,-32724(gp)
 400e11c:	10000326 	beq	r2,zero,400e12c <alt_get_errno+0x24>
 400e120:	d0a00b17 	ldw	r2,-32724(gp)
 400e124:	103ee83a 	callr	r2
 400e128:	00000106 	br	400e130 <alt_get_errno+0x28>
 400e12c:	d0a6d504 	addi	r2,gp,-25772
}
 400e130:	e037883a 	mov	sp,fp
 400e134:	dfc00117 	ldw	ra,4(sp)
 400e138:	df000017 	ldw	fp,0(sp)
 400e13c:	dec00204 	addi	sp,sp,8
 400e140:	f800283a 	ret

0400e144 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 400e144:	deffed04 	addi	sp,sp,-76
 400e148:	dfc01215 	stw	ra,72(sp)
 400e14c:	df001115 	stw	fp,68(sp)
 400e150:	df001104 	addi	fp,sp,68
 400e154:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400e158:	e0bfff17 	ldw	r2,-4(fp)
 400e15c:	10000616 	blt	r2,zero,400e178 <isatty+0x34>
 400e160:	e0bfff17 	ldw	r2,-4(fp)
 400e164:	10c00324 	muli	r3,r2,12
 400e168:	00810074 	movhi	r2,1025
 400e16c:	10839b04 	addi	r2,r2,3692
 400e170:	1885883a 	add	r2,r3,r2
 400e174:	00000106 	br	400e17c <isatty+0x38>
 400e178:	0005883a 	mov	r2,zero
 400e17c:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 400e180:	e0bfef17 	ldw	r2,-68(fp)
 400e184:	10000e26 	beq	r2,zero,400e1c0 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 400e188:	e0bfef17 	ldw	r2,-68(fp)
 400e18c:	10800017 	ldw	r2,0(r2)
 400e190:	10800817 	ldw	r2,32(r2)
 400e194:	1000021e 	bne	r2,zero,400e1a0 <isatty+0x5c>
    {
      return 1;
 400e198:	00800044 	movi	r2,1
 400e19c:	00000d06 	br	400e1d4 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 400e1a0:	e0bff004 	addi	r2,fp,-64
 400e1a4:	100b883a 	mov	r5,r2
 400e1a8:	e13fff17 	ldw	r4,-4(fp)
 400e1ac:	400e0240 	call	400e024 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 400e1b0:	e0bff117 	ldw	r2,-60(fp)
 400e1b4:	10880020 	cmpeqi	r2,r2,8192
 400e1b8:	10803fcc 	andi	r2,r2,255
 400e1bc:	00000506 	br	400e1d4 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 400e1c0:	400e1080 	call	400e108 <alt_get_errno>
 400e1c4:	1007883a 	mov	r3,r2
 400e1c8:	00801444 	movi	r2,81
 400e1cc:	18800015 	stw	r2,0(r3)
    return 0;
 400e1d0:	0005883a 	mov	r2,zero
  }
}
 400e1d4:	e037883a 	mov	sp,fp
 400e1d8:	dfc00117 	ldw	ra,4(sp)
 400e1dc:	df000017 	ldw	fp,0(sp)
 400e1e0:	dec00204 	addi	sp,sp,8
 400e1e4:	f800283a 	ret

0400e1e8 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 400e1e8:	defffc04 	addi	sp,sp,-16
 400e1ec:	df000315 	stw	fp,12(sp)
 400e1f0:	df000304 	addi	fp,sp,12
 400e1f4:	e13ffd15 	stw	r4,-12(fp)
 400e1f8:	e17ffe15 	stw	r5,-8(fp)
 400e1fc:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 400e200:	e0fffe17 	ldw	r3,-8(fp)
 400e204:	e0bffd17 	ldw	r2,-12(fp)
 400e208:	18800c26 	beq	r3,r2,400e23c <alt_load_section+0x54>
  {
    while( to != end )
 400e20c:	00000806 	br	400e230 <alt_load_section+0x48>
    {
      *to++ = *from++;
 400e210:	e0bffe17 	ldw	r2,-8(fp)
 400e214:	10c00104 	addi	r3,r2,4
 400e218:	e0fffe15 	stw	r3,-8(fp)
 400e21c:	e0fffd17 	ldw	r3,-12(fp)
 400e220:	19000104 	addi	r4,r3,4
 400e224:	e13ffd15 	stw	r4,-12(fp)
 400e228:	18c00017 	ldw	r3,0(r3)
 400e22c:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 400e230:	e0fffe17 	ldw	r3,-8(fp)
 400e234:	e0bfff17 	ldw	r2,-4(fp)
 400e238:	18bff51e 	bne	r3,r2,400e210 <__alt_data_end+0xfc006210>
    {
      *to++ = *from++;
    }
  }
}
 400e23c:	0001883a 	nop
 400e240:	e037883a 	mov	sp,fp
 400e244:	df000017 	ldw	fp,0(sp)
 400e248:	dec00104 	addi	sp,sp,4
 400e24c:	f800283a 	ret

0400e250 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 400e250:	defffe04 	addi	sp,sp,-8
 400e254:	dfc00115 	stw	ra,4(sp)
 400e258:	df000015 	stw	fp,0(sp)
 400e25c:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 400e260:	01810074 	movhi	r6,1025
 400e264:	31882304 	addi	r6,r6,8332
 400e268:	01410074 	movhi	r5,1025
 400e26c:	29416804 	addi	r5,r5,1440
 400e270:	01010074 	movhi	r4,1025
 400e274:	21082304 	addi	r4,r4,8332
 400e278:	400e1e80 	call	400e1e8 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 400e27c:	01810034 	movhi	r6,1024
 400e280:	31807004 	addi	r6,r6,448
 400e284:	01410034 	movhi	r5,1024
 400e288:	29400804 	addi	r5,r5,32
 400e28c:	01010034 	movhi	r4,1024
 400e290:	21000804 	addi	r4,r4,32
 400e294:	400e1e80 	call	400e1e8 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 400e298:	01820034 	movhi	r6,2048
 400e29c:	31812b04 	addi	r6,r6,1196
 400e2a0:	01420034 	movhi	r5,2048
 400e2a4:	29400004 	addi	r5,r5,0
 400e2a8:	01020034 	movhi	r4,2048
 400e2ac:	21000004 	addi	r4,r4,0
 400e2b0:	400e1e80 	call	400e1e8 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 400e2b4:	400df9c0 	call	400df9c <alt_dcache_flush_all>
  alt_icache_flush_all();
 400e2b8:	400e0d40 	call	400e0d4 <alt_icache_flush_all>
}
 400e2bc:	0001883a 	nop
 400e2c0:	e037883a 	mov	sp,fp
 400e2c4:	dfc00117 	ldw	ra,4(sp)
 400e2c8:	df000017 	ldw	fp,0(sp)
 400e2cc:	dec00204 	addi	sp,sp,8
 400e2d0:	f800283a 	ret

0400e2d4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400e2d4:	defffe04 	addi	sp,sp,-8
 400e2d8:	dfc00115 	stw	ra,4(sp)
 400e2dc:	df000015 	stw	fp,0(sp)
 400e2e0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400e2e4:	d0a00b17 	ldw	r2,-32724(gp)
 400e2e8:	10000326 	beq	r2,zero,400e2f8 <alt_get_errno+0x24>
 400e2ec:	d0a00b17 	ldw	r2,-32724(gp)
 400e2f0:	103ee83a 	callr	r2
 400e2f4:	00000106 	br	400e2fc <alt_get_errno+0x28>
 400e2f8:	d0a6d504 	addi	r2,gp,-25772
}
 400e2fc:	e037883a 	mov	sp,fp
 400e300:	dfc00117 	ldw	ra,4(sp)
 400e304:	df000017 	ldw	fp,0(sp)
 400e308:	dec00204 	addi	sp,sp,8
 400e30c:	f800283a 	ret

0400e310 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 400e310:	defff904 	addi	sp,sp,-28
 400e314:	dfc00615 	stw	ra,24(sp)
 400e318:	df000515 	stw	fp,20(sp)
 400e31c:	df000504 	addi	fp,sp,20
 400e320:	e13ffd15 	stw	r4,-12(fp)
 400e324:	e17ffe15 	stw	r5,-8(fp)
 400e328:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 400e32c:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400e330:	e0bffd17 	ldw	r2,-12(fp)
 400e334:	10000616 	blt	r2,zero,400e350 <lseek+0x40>
 400e338:	e0bffd17 	ldw	r2,-12(fp)
 400e33c:	10c00324 	muli	r3,r2,12
 400e340:	00810074 	movhi	r2,1025
 400e344:	10839b04 	addi	r2,r2,3692
 400e348:	1885883a 	add	r2,r3,r2
 400e34c:	00000106 	br	400e354 <lseek+0x44>
 400e350:	0005883a 	mov	r2,zero
 400e354:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 400e358:	e0bffc17 	ldw	r2,-16(fp)
 400e35c:	10001026 	beq	r2,zero,400e3a0 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 400e360:	e0bffc17 	ldw	r2,-16(fp)
 400e364:	10800017 	ldw	r2,0(r2)
 400e368:	10800717 	ldw	r2,28(r2)
 400e36c:	10000926 	beq	r2,zero,400e394 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 400e370:	e0bffc17 	ldw	r2,-16(fp)
 400e374:	10800017 	ldw	r2,0(r2)
 400e378:	10800717 	ldw	r2,28(r2)
 400e37c:	e1bfff17 	ldw	r6,-4(fp)
 400e380:	e17ffe17 	ldw	r5,-8(fp)
 400e384:	e13ffc17 	ldw	r4,-16(fp)
 400e388:	103ee83a 	callr	r2
 400e38c:	e0bffb15 	stw	r2,-20(fp)
 400e390:	00000506 	br	400e3a8 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 400e394:	00bfde84 	movi	r2,-134
 400e398:	e0bffb15 	stw	r2,-20(fp)
 400e39c:	00000206 	br	400e3a8 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
 400e3a0:	00bfebc4 	movi	r2,-81
 400e3a4:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 400e3a8:	e0bffb17 	ldw	r2,-20(fp)
 400e3ac:	1000070e 	bge	r2,zero,400e3cc <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
 400e3b0:	400e2d40 	call	400e2d4 <alt_get_errno>
 400e3b4:	1007883a 	mov	r3,r2
 400e3b8:	e0bffb17 	ldw	r2,-20(fp)
 400e3bc:	0085c83a 	sub	r2,zero,r2
 400e3c0:	18800015 	stw	r2,0(r3)
    rc = -1;
 400e3c4:	00bfffc4 	movi	r2,-1
 400e3c8:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 400e3cc:	e0bffb17 	ldw	r2,-20(fp)
}
 400e3d0:	e037883a 	mov	sp,fp
 400e3d4:	dfc00117 	ldw	ra,4(sp)
 400e3d8:	df000017 	ldw	fp,0(sp)
 400e3dc:	dec00204 	addi	sp,sp,8
 400e3e0:	f800283a 	ret

0400e3e4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 400e3e4:	defffd04 	addi	sp,sp,-12
 400e3e8:	dfc00215 	stw	ra,8(sp)
 400e3ec:	df000115 	stw	fp,4(sp)
 400e3f0:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 400e3f4:	0009883a 	mov	r4,zero
 400e3f8:	400e85c0 	call	400e85c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 400e3fc:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 400e400:	400e8940 	call	400e894 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 400e404:	01820034 	movhi	r6,2048
 400e408:	31812104 	addi	r6,r6,1156
 400e40c:	01420034 	movhi	r5,2048
 400e410:	29412104 	addi	r5,r5,1156
 400e414:	01020034 	movhi	r4,2048
 400e418:	21012104 	addi	r4,r4,1156
 400e41c:	400fb380 	call	400fb38 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 400e420:	400f6840 	call	400f684 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 400e424:	01010074 	movhi	r4,1025
 400e428:	213db904 	addi	r4,r4,-2332
 400e42c:	401020c0 	call	401020c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 400e430:	d0a6d617 	ldw	r2,-25768(gp)
 400e434:	d0e6d717 	ldw	r3,-25764(gp)
 400e438:	d126d817 	ldw	r4,-25760(gp)
 400e43c:	200d883a 	mov	r6,r4
 400e440:	180b883a 	mov	r5,r3
 400e444:	1009883a 	mov	r4,r2
 400e448:	40002f40 	call	40002f4 <main>
 400e44c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 400e450:	01000044 	movi	r4,1
 400e454:	400decc0 	call	400decc <close>
  exit (result);
 400e458:	e13fff17 	ldw	r4,-4(fp)
 400e45c:	40102200 	call	4010220 <exit>

0400e460 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 400e460:	defffe04 	addi	sp,sp,-8
 400e464:	df000115 	stw	fp,4(sp)
 400e468:	df000104 	addi	fp,sp,4
 400e46c:	e13fff15 	stw	r4,-4(fp)
}
 400e470:	0001883a 	nop
 400e474:	e037883a 	mov	sp,fp
 400e478:	df000017 	ldw	fp,0(sp)
 400e47c:	dec00104 	addi	sp,sp,4
 400e480:	f800283a 	ret

0400e484 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 400e484:	defffe04 	addi	sp,sp,-8
 400e488:	df000115 	stw	fp,4(sp)
 400e48c:	df000104 	addi	fp,sp,4
 400e490:	e13fff15 	stw	r4,-4(fp)
}
 400e494:	0001883a 	nop
 400e498:	e037883a 	mov	sp,fp
 400e49c:	df000017 	ldw	fp,0(sp)
 400e4a0:	dec00104 	addi	sp,sp,4
 400e4a4:	f800283a 	ret

0400e4a8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400e4a8:	defffe04 	addi	sp,sp,-8
 400e4ac:	dfc00115 	stw	ra,4(sp)
 400e4b0:	df000015 	stw	fp,0(sp)
 400e4b4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400e4b8:	d0a00b17 	ldw	r2,-32724(gp)
 400e4bc:	10000326 	beq	r2,zero,400e4cc <alt_get_errno+0x24>
 400e4c0:	d0a00b17 	ldw	r2,-32724(gp)
 400e4c4:	103ee83a 	callr	r2
 400e4c8:	00000106 	br	400e4d0 <alt_get_errno+0x28>
 400e4cc:	d0a6d504 	addi	r2,gp,-25772
}
 400e4d0:	e037883a 	mov	sp,fp
 400e4d4:	dfc00117 	ldw	ra,4(sp)
 400e4d8:	df000017 	ldw	fp,0(sp)
 400e4dc:	dec00204 	addi	sp,sp,8
 400e4e0:	f800283a 	ret

0400e4e4 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 400e4e4:	defff904 	addi	sp,sp,-28
 400e4e8:	dfc00615 	stw	ra,24(sp)
 400e4ec:	df000515 	stw	fp,20(sp)
 400e4f0:	df000504 	addi	fp,sp,20
 400e4f4:	e13ffd15 	stw	r4,-12(fp)
 400e4f8:	e17ffe15 	stw	r5,-8(fp)
 400e4fc:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400e500:	e0bffd17 	ldw	r2,-12(fp)
 400e504:	10000616 	blt	r2,zero,400e520 <read+0x3c>
 400e508:	e0bffd17 	ldw	r2,-12(fp)
 400e50c:	10c00324 	muli	r3,r2,12
 400e510:	00810074 	movhi	r2,1025
 400e514:	10839b04 	addi	r2,r2,3692
 400e518:	1885883a 	add	r2,r3,r2
 400e51c:	00000106 	br	400e524 <read+0x40>
 400e520:	0005883a 	mov	r2,zero
 400e524:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 400e528:	e0bffb17 	ldw	r2,-20(fp)
 400e52c:	10002226 	beq	r2,zero,400e5b8 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 400e530:	e0bffb17 	ldw	r2,-20(fp)
 400e534:	10800217 	ldw	r2,8(r2)
 400e538:	108000cc 	andi	r2,r2,3
 400e53c:	10800060 	cmpeqi	r2,r2,1
 400e540:	1000181e 	bne	r2,zero,400e5a4 <read+0xc0>
        (fd->dev->read))
 400e544:	e0bffb17 	ldw	r2,-20(fp)
 400e548:	10800017 	ldw	r2,0(r2)
 400e54c:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 400e550:	10001426 	beq	r2,zero,400e5a4 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 400e554:	e0bffb17 	ldw	r2,-20(fp)
 400e558:	10800017 	ldw	r2,0(r2)
 400e55c:	10800517 	ldw	r2,20(r2)
 400e560:	e0ffff17 	ldw	r3,-4(fp)
 400e564:	180d883a 	mov	r6,r3
 400e568:	e17ffe17 	ldw	r5,-8(fp)
 400e56c:	e13ffb17 	ldw	r4,-20(fp)
 400e570:	103ee83a 	callr	r2
 400e574:	e0bffc15 	stw	r2,-16(fp)
 400e578:	e0bffc17 	ldw	r2,-16(fp)
 400e57c:	1000070e 	bge	r2,zero,400e59c <read+0xb8>
        {
          ALT_ERRNO = -rval;
 400e580:	400e4a80 	call	400e4a8 <alt_get_errno>
 400e584:	1007883a 	mov	r3,r2
 400e588:	e0bffc17 	ldw	r2,-16(fp)
 400e58c:	0085c83a 	sub	r2,zero,r2
 400e590:	18800015 	stw	r2,0(r3)
          return -1;
 400e594:	00bfffc4 	movi	r2,-1
 400e598:	00000c06 	br	400e5cc <read+0xe8>
        }
        return rval;
 400e59c:	e0bffc17 	ldw	r2,-16(fp)
 400e5a0:	00000a06 	br	400e5cc <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
 400e5a4:	400e4a80 	call	400e4a8 <alt_get_errno>
 400e5a8:	1007883a 	mov	r3,r2
 400e5ac:	00800344 	movi	r2,13
 400e5b0:	18800015 	stw	r2,0(r3)
 400e5b4:	00000406 	br	400e5c8 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 400e5b8:	400e4a80 	call	400e4a8 <alt_get_errno>
 400e5bc:	1007883a 	mov	r3,r2
 400e5c0:	00801444 	movi	r2,81
 400e5c4:	18800015 	stw	r2,0(r3)
  }
  return -1;
 400e5c8:	00bfffc4 	movi	r2,-1
}
 400e5cc:	e037883a 	mov	sp,fp
 400e5d0:	dfc00117 	ldw	ra,4(sp)
 400e5d4:	df000017 	ldw	fp,0(sp)
 400e5d8:	dec00204 	addi	sp,sp,8
 400e5dc:	f800283a 	ret

0400e5e0 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 400e5e0:	defffe04 	addi	sp,sp,-8
 400e5e4:	df000115 	stw	fp,4(sp)
 400e5e8:	df000104 	addi	fp,sp,4
 400e5ec:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 400e5f0:	e0bfff17 	ldw	r2,-4(fp)
 400e5f4:	108000d0 	cmplti	r2,r2,3
 400e5f8:	10000d1e 	bne	r2,zero,400e630 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
 400e5fc:	00810074 	movhi	r2,1025
 400e600:	10839b04 	addi	r2,r2,3692
 400e604:	e0ffff17 	ldw	r3,-4(fp)
 400e608:	18c00324 	muli	r3,r3,12
 400e60c:	10c5883a 	add	r2,r2,r3
 400e610:	10800204 	addi	r2,r2,8
 400e614:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 400e618:	00810074 	movhi	r2,1025
 400e61c:	10839b04 	addi	r2,r2,3692
 400e620:	e0ffff17 	ldw	r3,-4(fp)
 400e624:	18c00324 	muli	r3,r3,12
 400e628:	10c5883a 	add	r2,r2,r3
 400e62c:	10000015 	stw	zero,0(r2)
  }
}
 400e630:	0001883a 	nop
 400e634:	e037883a 	mov	sp,fp
 400e638:	df000017 	ldw	fp,0(sp)
 400e63c:	dec00104 	addi	sp,sp,4
 400e640:	f800283a 	ret

0400e644 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 400e644:	defff904 	addi	sp,sp,-28
 400e648:	df000615 	stw	fp,24(sp)
 400e64c:	df000604 	addi	fp,sp,24
 400e650:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400e654:	0005303a 	rdctl	r2,status
 400e658:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400e65c:	e0fffe17 	ldw	r3,-8(fp)
 400e660:	00bfff84 	movi	r2,-2
 400e664:	1884703a 	and	r2,r3,r2
 400e668:	1001703a 	wrctl	status,r2
  
  return context;
 400e66c:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 400e670:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 400e674:	d0a00c17 	ldw	r2,-32720(gp)
 400e678:	10c000c4 	addi	r3,r2,3
 400e67c:	00bfff04 	movi	r2,-4
 400e680:	1884703a 	and	r2,r3,r2
 400e684:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 400e688:	d0e00c17 	ldw	r3,-32720(gp)
 400e68c:	e0bfff17 	ldw	r2,-4(fp)
 400e690:	1887883a 	add	r3,r3,r2
 400e694:	00820074 	movhi	r2,2049
 400e698:	10a00004 	addi	r2,r2,-32768
 400e69c:	10c0062e 	bgeu	r2,r3,400e6b8 <sbrk+0x74>
 400e6a0:	e0bffb17 	ldw	r2,-20(fp)
 400e6a4:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400e6a8:	e0bffa17 	ldw	r2,-24(fp)
 400e6ac:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 400e6b0:	00bfffc4 	movi	r2,-1
 400e6b4:	00000b06 	br	400e6e4 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 400e6b8:	d0a00c17 	ldw	r2,-32720(gp)
 400e6bc:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 400e6c0:	d0e00c17 	ldw	r3,-32720(gp)
 400e6c4:	e0bfff17 	ldw	r2,-4(fp)
 400e6c8:	1885883a 	add	r2,r3,r2
 400e6cc:	d0a00c15 	stw	r2,-32720(gp)
 400e6d0:	e0bffb17 	ldw	r2,-20(fp)
 400e6d4:	e0bffc15 	stw	r2,-16(fp)
 400e6d8:	e0bffc17 	ldw	r2,-16(fp)
 400e6dc:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 400e6e0:	e0bffd17 	ldw	r2,-12(fp)
} 
 400e6e4:	e037883a 	mov	sp,fp
 400e6e8:	df000017 	ldw	fp,0(sp)
 400e6ec:	dec00104 	addi	sp,sp,4
 400e6f0:	f800283a 	ret

0400e6f4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400e6f4:	defffe04 	addi	sp,sp,-8
 400e6f8:	dfc00115 	stw	ra,4(sp)
 400e6fc:	df000015 	stw	fp,0(sp)
 400e700:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400e704:	d0a00b17 	ldw	r2,-32724(gp)
 400e708:	10000326 	beq	r2,zero,400e718 <alt_get_errno+0x24>
 400e70c:	d0a00b17 	ldw	r2,-32724(gp)
 400e710:	103ee83a 	callr	r2
 400e714:	00000106 	br	400e71c <alt_get_errno+0x28>
 400e718:	d0a6d504 	addi	r2,gp,-25772
}
 400e71c:	e037883a 	mov	sp,fp
 400e720:	dfc00117 	ldw	ra,4(sp)
 400e724:	df000017 	ldw	fp,0(sp)
 400e728:	dec00204 	addi	sp,sp,8
 400e72c:	f800283a 	ret

0400e730 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 400e730:	defff904 	addi	sp,sp,-28
 400e734:	dfc00615 	stw	ra,24(sp)
 400e738:	df000515 	stw	fp,20(sp)
 400e73c:	df000504 	addi	fp,sp,20
 400e740:	e13ffd15 	stw	r4,-12(fp)
 400e744:	e17ffe15 	stw	r5,-8(fp)
 400e748:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400e74c:	e0bffd17 	ldw	r2,-12(fp)
 400e750:	10000616 	blt	r2,zero,400e76c <write+0x3c>
 400e754:	e0bffd17 	ldw	r2,-12(fp)
 400e758:	10c00324 	muli	r3,r2,12
 400e75c:	00810074 	movhi	r2,1025
 400e760:	10839b04 	addi	r2,r2,3692
 400e764:	1885883a 	add	r2,r3,r2
 400e768:	00000106 	br	400e770 <write+0x40>
 400e76c:	0005883a 	mov	r2,zero
 400e770:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 400e774:	e0bffb17 	ldw	r2,-20(fp)
 400e778:	10002126 	beq	r2,zero,400e800 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 400e77c:	e0bffb17 	ldw	r2,-20(fp)
 400e780:	10800217 	ldw	r2,8(r2)
 400e784:	108000cc 	andi	r2,r2,3
 400e788:	10001826 	beq	r2,zero,400e7ec <write+0xbc>
 400e78c:	e0bffb17 	ldw	r2,-20(fp)
 400e790:	10800017 	ldw	r2,0(r2)
 400e794:	10800617 	ldw	r2,24(r2)
 400e798:	10001426 	beq	r2,zero,400e7ec <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 400e79c:	e0bffb17 	ldw	r2,-20(fp)
 400e7a0:	10800017 	ldw	r2,0(r2)
 400e7a4:	10800617 	ldw	r2,24(r2)
 400e7a8:	e0ffff17 	ldw	r3,-4(fp)
 400e7ac:	180d883a 	mov	r6,r3
 400e7b0:	e17ffe17 	ldw	r5,-8(fp)
 400e7b4:	e13ffb17 	ldw	r4,-20(fp)
 400e7b8:	103ee83a 	callr	r2
 400e7bc:	e0bffc15 	stw	r2,-16(fp)
 400e7c0:	e0bffc17 	ldw	r2,-16(fp)
 400e7c4:	1000070e 	bge	r2,zero,400e7e4 <write+0xb4>
      {
        ALT_ERRNO = -rval;
 400e7c8:	400e6f40 	call	400e6f4 <alt_get_errno>
 400e7cc:	1007883a 	mov	r3,r2
 400e7d0:	e0bffc17 	ldw	r2,-16(fp)
 400e7d4:	0085c83a 	sub	r2,zero,r2
 400e7d8:	18800015 	stw	r2,0(r3)
        return -1;
 400e7dc:	00bfffc4 	movi	r2,-1
 400e7e0:	00000c06 	br	400e814 <write+0xe4>
      }
      return rval;
 400e7e4:	e0bffc17 	ldw	r2,-16(fp)
 400e7e8:	00000a06 	br	400e814 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
 400e7ec:	400e6f40 	call	400e6f4 <alt_get_errno>
 400e7f0:	1007883a 	mov	r3,r2
 400e7f4:	00800344 	movi	r2,13
 400e7f8:	18800015 	stw	r2,0(r3)
 400e7fc:	00000406 	br	400e810 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 400e800:	400e6f40 	call	400e6f4 <alt_get_errno>
 400e804:	1007883a 	mov	r3,r2
 400e808:	00801444 	movi	r2,81
 400e80c:	18800015 	stw	r2,0(r3)
  }
  return -1;
 400e810:	00bfffc4 	movi	r2,-1
}
 400e814:	e037883a 	mov	sp,fp
 400e818:	dfc00117 	ldw	ra,4(sp)
 400e81c:	df000017 	ldw	fp,0(sp)
 400e820:	dec00204 	addi	sp,sp,8
 400e824:	f800283a 	ret

0400e828 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 400e828:	defffd04 	addi	sp,sp,-12
 400e82c:	dfc00215 	stw	ra,8(sp)
 400e830:	df000115 	stw	fp,4(sp)
 400e834:	df000104 	addi	fp,sp,4
 400e838:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 400e83c:	d1600804 	addi	r5,gp,-32736
 400e840:	e13fff17 	ldw	r4,-4(fp)
 400e844:	400f5e00 	call	400f5e0 <alt_dev_llist_insert>
}
 400e848:	e037883a 	mov	sp,fp
 400e84c:	dfc00117 	ldw	ra,4(sp)
 400e850:	df000017 	ldw	fp,0(sp)
 400e854:	dec00204 	addi	sp,sp,8
 400e858:	f800283a 	ret

0400e85c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 400e85c:	defffd04 	addi	sp,sp,-12
 400e860:	dfc00215 	stw	ra,8(sp)
 400e864:	df000115 	stw	fp,4(sp)
 400e868:	df000104 	addi	fp,sp,4
 400e86c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( NIOS2_QSYS_0, nios2_qsys_0);
 400e870:	400ffac0 	call	400ffac <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 400e874:	00800044 	movi	r2,1
 400e878:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 400e87c:	0001883a 	nop
 400e880:	e037883a 	mov	sp,fp
 400e884:	dfc00117 	ldw	ra,4(sp)
 400e888:	df000017 	ldw	fp,0(sp)
 400e88c:	dec00204 	addi	sp,sp,8
 400e890:	f800283a 	ret

0400e894 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 400e894:	defffe04 	addi	sp,sp,-8
 400e898:	dfc00115 	stw	ra,4(sp)
 400e89c:	df000015 	stw	fp,0(sp)
 400e8a0:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
 400e8a4:	00820074 	movhi	r2,2049
 400e8a8:	10a40004 	addi	r2,r2,-28672
 400e8ac:	d0a6d915 	stw	r2,-25756(gp)
 400e8b0:	0080bef4 	movhi	r2,763
 400e8b4:	10bc2004 	addi	r2,r2,-3968
 400e8b8:	d0a6da15 	stw	r2,-25752(gp)
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
 400e8bc:	000d883a 	mov	r6,zero
 400e8c0:	000b883a 	mov	r5,zero
 400e8c4:	01010074 	movhi	r4,1025
 400e8c8:	21040504 	addi	r4,r4,4116
 400e8cc:	400ea5c0 	call	400ea5c <altera_avalon_jtag_uart_init>
 400e8d0:	01010074 	movhi	r4,1025
 400e8d4:	2103fb04 	addi	r4,r4,4076
 400e8d8:	400e8280 	call	400e828 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
 400e8dc:	0001883a 	nop
}
 400e8e0:	0001883a 	nop
 400e8e4:	e037883a 	mov	sp,fp
 400e8e8:	dfc00117 	ldw	ra,4(sp)
 400e8ec:	df000017 	ldw	fp,0(sp)
 400e8f0:	dec00204 	addi	sp,sp,8
 400e8f4:	f800283a 	ret

0400e8f8 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 400e8f8:	defffa04 	addi	sp,sp,-24
 400e8fc:	dfc00515 	stw	ra,20(sp)
 400e900:	df000415 	stw	fp,16(sp)
 400e904:	df000404 	addi	fp,sp,16
 400e908:	e13ffd15 	stw	r4,-12(fp)
 400e90c:	e17ffe15 	stw	r5,-8(fp)
 400e910:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 400e914:	e0bffd17 	ldw	r2,-12(fp)
 400e918:	10800017 	ldw	r2,0(r2)
 400e91c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 400e920:	e0bffc17 	ldw	r2,-16(fp)
 400e924:	10c00a04 	addi	r3,r2,40
 400e928:	e0bffd17 	ldw	r2,-12(fp)
 400e92c:	10800217 	ldw	r2,8(r2)
 400e930:	100f883a 	mov	r7,r2
 400e934:	e1bfff17 	ldw	r6,-4(fp)
 400e938:	e17ffe17 	ldw	r5,-8(fp)
 400e93c:	1809883a 	mov	r4,r3
 400e940:	400ef200 	call	400ef20 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 400e944:	e037883a 	mov	sp,fp
 400e948:	dfc00117 	ldw	ra,4(sp)
 400e94c:	df000017 	ldw	fp,0(sp)
 400e950:	dec00204 	addi	sp,sp,8
 400e954:	f800283a 	ret

0400e958 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 400e958:	defffa04 	addi	sp,sp,-24
 400e95c:	dfc00515 	stw	ra,20(sp)
 400e960:	df000415 	stw	fp,16(sp)
 400e964:	df000404 	addi	fp,sp,16
 400e968:	e13ffd15 	stw	r4,-12(fp)
 400e96c:	e17ffe15 	stw	r5,-8(fp)
 400e970:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 400e974:	e0bffd17 	ldw	r2,-12(fp)
 400e978:	10800017 	ldw	r2,0(r2)
 400e97c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 400e980:	e0bffc17 	ldw	r2,-16(fp)
 400e984:	10c00a04 	addi	r3,r2,40
 400e988:	e0bffd17 	ldw	r2,-12(fp)
 400e98c:	10800217 	ldw	r2,8(r2)
 400e990:	100f883a 	mov	r7,r2
 400e994:	e1bfff17 	ldw	r6,-4(fp)
 400e998:	e17ffe17 	ldw	r5,-8(fp)
 400e99c:	1809883a 	mov	r4,r3
 400e9a0:	400f13c0 	call	400f13c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 400e9a4:	e037883a 	mov	sp,fp
 400e9a8:	dfc00117 	ldw	ra,4(sp)
 400e9ac:	df000017 	ldw	fp,0(sp)
 400e9b0:	dec00204 	addi	sp,sp,8
 400e9b4:	f800283a 	ret

0400e9b8 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 400e9b8:	defffc04 	addi	sp,sp,-16
 400e9bc:	dfc00315 	stw	ra,12(sp)
 400e9c0:	df000215 	stw	fp,8(sp)
 400e9c4:	df000204 	addi	fp,sp,8
 400e9c8:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 400e9cc:	e0bfff17 	ldw	r2,-4(fp)
 400e9d0:	10800017 	ldw	r2,0(r2)
 400e9d4:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 400e9d8:	e0bffe17 	ldw	r2,-8(fp)
 400e9dc:	10c00a04 	addi	r3,r2,40
 400e9e0:	e0bfff17 	ldw	r2,-4(fp)
 400e9e4:	10800217 	ldw	r2,8(r2)
 400e9e8:	100b883a 	mov	r5,r2
 400e9ec:	1809883a 	mov	r4,r3
 400e9f0:	400edc80 	call	400edc8 <altera_avalon_jtag_uart_close>
}
 400e9f4:	e037883a 	mov	sp,fp
 400e9f8:	dfc00117 	ldw	ra,4(sp)
 400e9fc:	df000017 	ldw	fp,0(sp)
 400ea00:	dec00204 	addi	sp,sp,8
 400ea04:	f800283a 	ret

0400ea08 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 400ea08:	defffa04 	addi	sp,sp,-24
 400ea0c:	dfc00515 	stw	ra,20(sp)
 400ea10:	df000415 	stw	fp,16(sp)
 400ea14:	df000404 	addi	fp,sp,16
 400ea18:	e13ffd15 	stw	r4,-12(fp)
 400ea1c:	e17ffe15 	stw	r5,-8(fp)
 400ea20:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 400ea24:	e0bffd17 	ldw	r2,-12(fp)
 400ea28:	10800017 	ldw	r2,0(r2)
 400ea2c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 400ea30:	e0bffc17 	ldw	r2,-16(fp)
 400ea34:	10800a04 	addi	r2,r2,40
 400ea38:	e1bfff17 	ldw	r6,-4(fp)
 400ea3c:	e17ffe17 	ldw	r5,-8(fp)
 400ea40:	1009883a 	mov	r4,r2
 400ea44:	400ee300 	call	400ee30 <altera_avalon_jtag_uart_ioctl>
}
 400ea48:	e037883a 	mov	sp,fp
 400ea4c:	dfc00117 	ldw	ra,4(sp)
 400ea50:	df000017 	ldw	fp,0(sp)
 400ea54:	dec00204 	addi	sp,sp,8
 400ea58:	f800283a 	ret

0400ea5c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 400ea5c:	defffa04 	addi	sp,sp,-24
 400ea60:	dfc00515 	stw	ra,20(sp)
 400ea64:	df000415 	stw	fp,16(sp)
 400ea68:	df000404 	addi	fp,sp,16
 400ea6c:	e13ffd15 	stw	r4,-12(fp)
 400ea70:	e17ffe15 	stw	r5,-8(fp)
 400ea74:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 400ea78:	e0bffd17 	ldw	r2,-12(fp)
 400ea7c:	00c00044 	movi	r3,1
 400ea80:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 400ea84:	e0bffd17 	ldw	r2,-12(fp)
 400ea88:	10800017 	ldw	r2,0(r2)
 400ea8c:	10800104 	addi	r2,r2,4
 400ea90:	1007883a 	mov	r3,r2
 400ea94:	e0bffd17 	ldw	r2,-12(fp)
 400ea98:	10800817 	ldw	r2,32(r2)
 400ea9c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 400eaa0:	e0bffe17 	ldw	r2,-8(fp)
 400eaa4:	e0ffff17 	ldw	r3,-4(fp)
 400eaa8:	d8000015 	stw	zero,0(sp)
 400eaac:	e1fffd17 	ldw	r7,-12(fp)
 400eab0:	01810074 	movhi	r6,1025
 400eab4:	31bac704 	addi	r6,r6,-5348
 400eab8:	180b883a 	mov	r5,r3
 400eabc:	1009883a 	mov	r4,r2
 400eac0:	400f7d40 	call	400f7d4 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 400eac4:	e0bffd17 	ldw	r2,-12(fp)
 400eac8:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 400eacc:	e0bffd17 	ldw	r2,-12(fp)
 400ead0:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 400ead4:	d0e6dc17 	ldw	r3,-25744(gp)
 400ead8:	e1fffd17 	ldw	r7,-12(fp)
 400eadc:	01810074 	movhi	r6,1025
 400eae0:	31bb4a04 	addi	r6,r6,-4824
 400eae4:	180b883a 	mov	r5,r3
 400eae8:	1009883a 	mov	r4,r2
 400eaec:	400f4780 	call	400f478 <alt_alarm_start>
 400eaf0:	1000040e 	bge	r2,zero,400eb04 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 400eaf4:	e0fffd17 	ldw	r3,-12(fp)
 400eaf8:	00a00034 	movhi	r2,32768
 400eafc:	10bfffc4 	addi	r2,r2,-1
 400eb00:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 400eb04:	0001883a 	nop
 400eb08:	e037883a 	mov	sp,fp
 400eb0c:	dfc00117 	ldw	ra,4(sp)
 400eb10:	df000017 	ldw	fp,0(sp)
 400eb14:	dec00204 	addi	sp,sp,8
 400eb18:	f800283a 	ret

0400eb1c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 400eb1c:	defff804 	addi	sp,sp,-32
 400eb20:	df000715 	stw	fp,28(sp)
 400eb24:	df000704 	addi	fp,sp,28
 400eb28:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 400eb2c:	e0bfff17 	ldw	r2,-4(fp)
 400eb30:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 400eb34:	e0bffb17 	ldw	r2,-20(fp)
 400eb38:	10800017 	ldw	r2,0(r2)
 400eb3c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 400eb40:	e0bffc17 	ldw	r2,-16(fp)
 400eb44:	10800104 	addi	r2,r2,4
 400eb48:	10800037 	ldwio	r2,0(r2)
 400eb4c:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 400eb50:	e0bffd17 	ldw	r2,-12(fp)
 400eb54:	1080c00c 	andi	r2,r2,768
 400eb58:	10006d26 	beq	r2,zero,400ed10 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 400eb5c:	e0bffd17 	ldw	r2,-12(fp)
 400eb60:	1080400c 	andi	r2,r2,256
 400eb64:	10003526 	beq	r2,zero,400ec3c <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 400eb68:	00800074 	movhi	r2,1
 400eb6c:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400eb70:	e0bffb17 	ldw	r2,-20(fp)
 400eb74:	10800a17 	ldw	r2,40(r2)
 400eb78:	10800044 	addi	r2,r2,1
 400eb7c:	1081ffcc 	andi	r2,r2,2047
 400eb80:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 400eb84:	e0bffb17 	ldw	r2,-20(fp)
 400eb88:	10c00b17 	ldw	r3,44(r2)
 400eb8c:	e0bffe17 	ldw	r2,-8(fp)
 400eb90:	18801526 	beq	r3,r2,400ebe8 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 400eb94:	e0bffc17 	ldw	r2,-16(fp)
 400eb98:	10800037 	ldwio	r2,0(r2)
 400eb9c:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 400eba0:	e0bff917 	ldw	r2,-28(fp)
 400eba4:	10a0000c 	andi	r2,r2,32768
 400eba8:	10001126 	beq	r2,zero,400ebf0 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 400ebac:	e0bffb17 	ldw	r2,-20(fp)
 400ebb0:	10800a17 	ldw	r2,40(r2)
 400ebb4:	e0fff917 	ldw	r3,-28(fp)
 400ebb8:	1809883a 	mov	r4,r3
 400ebbc:	e0fffb17 	ldw	r3,-20(fp)
 400ebc0:	1885883a 	add	r2,r3,r2
 400ebc4:	10800e04 	addi	r2,r2,56
 400ebc8:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400ebcc:	e0bffb17 	ldw	r2,-20(fp)
 400ebd0:	10800a17 	ldw	r2,40(r2)
 400ebd4:	10800044 	addi	r2,r2,1
 400ebd8:	10c1ffcc 	andi	r3,r2,2047
 400ebdc:	e0bffb17 	ldw	r2,-20(fp)
 400ebe0:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 400ebe4:	003fe206 	br	400eb70 <__alt_data_end+0xfc006b70>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 400ebe8:	0001883a 	nop
 400ebec:	00000106 	br	400ebf4 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 400ebf0:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 400ebf4:	e0bff917 	ldw	r2,-28(fp)
 400ebf8:	10bfffec 	andhi	r2,r2,65535
 400ebfc:	10000f26 	beq	r2,zero,400ec3c <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 400ec00:	e0bffb17 	ldw	r2,-20(fp)
 400ec04:	10c00817 	ldw	r3,32(r2)
 400ec08:	00bfff84 	movi	r2,-2
 400ec0c:	1886703a 	and	r3,r3,r2
 400ec10:	e0bffb17 	ldw	r2,-20(fp)
 400ec14:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 400ec18:	e0bffc17 	ldw	r2,-16(fp)
 400ec1c:	10800104 	addi	r2,r2,4
 400ec20:	1007883a 	mov	r3,r2
 400ec24:	e0bffb17 	ldw	r2,-20(fp)
 400ec28:	10800817 	ldw	r2,32(r2)
 400ec2c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 400ec30:	e0bffc17 	ldw	r2,-16(fp)
 400ec34:	10800104 	addi	r2,r2,4
 400ec38:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 400ec3c:	e0bffd17 	ldw	r2,-12(fp)
 400ec40:	1080800c 	andi	r2,r2,512
 400ec44:	103fbe26 	beq	r2,zero,400eb40 <__alt_data_end+0xfc006b40>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 400ec48:	e0bffd17 	ldw	r2,-12(fp)
 400ec4c:	1004d43a 	srli	r2,r2,16
 400ec50:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 400ec54:	00001406 	br	400eca8 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 400ec58:	e0bffc17 	ldw	r2,-16(fp)
 400ec5c:	e0fffb17 	ldw	r3,-20(fp)
 400ec60:	18c00d17 	ldw	r3,52(r3)
 400ec64:	e13ffb17 	ldw	r4,-20(fp)
 400ec68:	20c7883a 	add	r3,r4,r3
 400ec6c:	18c20e04 	addi	r3,r3,2104
 400ec70:	18c00003 	ldbu	r3,0(r3)
 400ec74:	18c03fcc 	andi	r3,r3,255
 400ec78:	18c0201c 	xori	r3,r3,128
 400ec7c:	18ffe004 	addi	r3,r3,-128
 400ec80:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400ec84:	e0bffb17 	ldw	r2,-20(fp)
 400ec88:	10800d17 	ldw	r2,52(r2)
 400ec8c:	10800044 	addi	r2,r2,1
 400ec90:	10c1ffcc 	andi	r3,r2,2047
 400ec94:	e0bffb17 	ldw	r2,-20(fp)
 400ec98:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 400ec9c:	e0bffa17 	ldw	r2,-24(fp)
 400eca0:	10bfffc4 	addi	r2,r2,-1
 400eca4:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 400eca8:	e0bffa17 	ldw	r2,-24(fp)
 400ecac:	10000526 	beq	r2,zero,400ecc4 <altera_avalon_jtag_uart_irq+0x1a8>
 400ecb0:	e0bffb17 	ldw	r2,-20(fp)
 400ecb4:	10c00d17 	ldw	r3,52(r2)
 400ecb8:	e0bffb17 	ldw	r2,-20(fp)
 400ecbc:	10800c17 	ldw	r2,48(r2)
 400ecc0:	18bfe51e 	bne	r3,r2,400ec58 <__alt_data_end+0xfc006c58>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 400ecc4:	e0bffa17 	ldw	r2,-24(fp)
 400ecc8:	103f9d26 	beq	r2,zero,400eb40 <__alt_data_end+0xfc006b40>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 400eccc:	e0bffb17 	ldw	r2,-20(fp)
 400ecd0:	10c00817 	ldw	r3,32(r2)
 400ecd4:	00bfff44 	movi	r2,-3
 400ecd8:	1886703a 	and	r3,r3,r2
 400ecdc:	e0bffb17 	ldw	r2,-20(fp)
 400ece0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 400ece4:	e0bffb17 	ldw	r2,-20(fp)
 400ece8:	10800017 	ldw	r2,0(r2)
 400ecec:	10800104 	addi	r2,r2,4
 400ecf0:	1007883a 	mov	r3,r2
 400ecf4:	e0bffb17 	ldw	r2,-20(fp)
 400ecf8:	10800817 	ldw	r2,32(r2)
 400ecfc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 400ed00:	e0bffc17 	ldw	r2,-16(fp)
 400ed04:	10800104 	addi	r2,r2,4
 400ed08:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 400ed0c:	003f8c06 	br	400eb40 <__alt_data_end+0xfc006b40>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 400ed10:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 400ed14:	0001883a 	nop
 400ed18:	e037883a 	mov	sp,fp
 400ed1c:	df000017 	ldw	fp,0(sp)
 400ed20:	dec00104 	addi	sp,sp,4
 400ed24:	f800283a 	ret

0400ed28 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 400ed28:	defff804 	addi	sp,sp,-32
 400ed2c:	df000715 	stw	fp,28(sp)
 400ed30:	df000704 	addi	fp,sp,28
 400ed34:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 400ed38:	e0bffb17 	ldw	r2,-20(fp)
 400ed3c:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 400ed40:	e0bff917 	ldw	r2,-28(fp)
 400ed44:	10800017 	ldw	r2,0(r2)
 400ed48:	10800104 	addi	r2,r2,4
 400ed4c:	10800037 	ldwio	r2,0(r2)
 400ed50:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 400ed54:	e0bffa17 	ldw	r2,-24(fp)
 400ed58:	1081000c 	andi	r2,r2,1024
 400ed5c:	10000b26 	beq	r2,zero,400ed8c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 400ed60:	e0bff917 	ldw	r2,-28(fp)
 400ed64:	10800017 	ldw	r2,0(r2)
 400ed68:	10800104 	addi	r2,r2,4
 400ed6c:	1007883a 	mov	r3,r2
 400ed70:	e0bff917 	ldw	r2,-28(fp)
 400ed74:	10800817 	ldw	r2,32(r2)
 400ed78:	10810014 	ori	r2,r2,1024
 400ed7c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 400ed80:	e0bff917 	ldw	r2,-28(fp)
 400ed84:	10000915 	stw	zero,36(r2)
 400ed88:	00000a06 	br	400edb4 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 400ed8c:	e0bff917 	ldw	r2,-28(fp)
 400ed90:	10c00917 	ldw	r3,36(r2)
 400ed94:	00a00034 	movhi	r2,32768
 400ed98:	10bfff04 	addi	r2,r2,-4
 400ed9c:	10c00536 	bltu	r2,r3,400edb4 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 400eda0:	e0bff917 	ldw	r2,-28(fp)
 400eda4:	10800917 	ldw	r2,36(r2)
 400eda8:	10c00044 	addi	r3,r2,1
 400edac:	e0bff917 	ldw	r2,-28(fp)
 400edb0:	10c00915 	stw	r3,36(r2)
 400edb4:	d0a6dc17 	ldw	r2,-25744(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 400edb8:	e037883a 	mov	sp,fp
 400edbc:	df000017 	ldw	fp,0(sp)
 400edc0:	dec00104 	addi	sp,sp,4
 400edc4:	f800283a 	ret

0400edc8 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 400edc8:	defffd04 	addi	sp,sp,-12
 400edcc:	df000215 	stw	fp,8(sp)
 400edd0:	df000204 	addi	fp,sp,8
 400edd4:	e13ffe15 	stw	r4,-8(fp)
 400edd8:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 400eddc:	00000506 	br	400edf4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 400ede0:	e0bfff17 	ldw	r2,-4(fp)
 400ede4:	1090000c 	andi	r2,r2,16384
 400ede8:	10000226 	beq	r2,zero,400edf4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 400edec:	00bffd44 	movi	r2,-11
 400edf0:	00000b06 	br	400ee20 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 400edf4:	e0bffe17 	ldw	r2,-8(fp)
 400edf8:	10c00d17 	ldw	r3,52(r2)
 400edfc:	e0bffe17 	ldw	r2,-8(fp)
 400ee00:	10800c17 	ldw	r2,48(r2)
 400ee04:	18800526 	beq	r3,r2,400ee1c <altera_avalon_jtag_uart_close+0x54>
 400ee08:	e0bffe17 	ldw	r2,-8(fp)
 400ee0c:	10c00917 	ldw	r3,36(r2)
 400ee10:	e0bffe17 	ldw	r2,-8(fp)
 400ee14:	10800117 	ldw	r2,4(r2)
 400ee18:	18bff136 	bltu	r3,r2,400ede0 <__alt_data_end+0xfc006de0>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 400ee1c:	0005883a 	mov	r2,zero
}
 400ee20:	e037883a 	mov	sp,fp
 400ee24:	df000017 	ldw	fp,0(sp)
 400ee28:	dec00104 	addi	sp,sp,4
 400ee2c:	f800283a 	ret

0400ee30 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 400ee30:	defffa04 	addi	sp,sp,-24
 400ee34:	df000515 	stw	fp,20(sp)
 400ee38:	df000504 	addi	fp,sp,20
 400ee3c:	e13ffd15 	stw	r4,-12(fp)
 400ee40:	e17ffe15 	stw	r5,-8(fp)
 400ee44:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 400ee48:	00bff9c4 	movi	r2,-25
 400ee4c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 400ee50:	e0bffe17 	ldw	r2,-8(fp)
 400ee54:	10da8060 	cmpeqi	r3,r2,27137
 400ee58:	1800031e 	bne	r3,zero,400ee68 <altera_avalon_jtag_uart_ioctl+0x38>
 400ee5c:	109a80a0 	cmpeqi	r2,r2,27138
 400ee60:	1000181e 	bne	r2,zero,400eec4 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 400ee64:	00002906 	br	400ef0c <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 400ee68:	e0bffd17 	ldw	r2,-12(fp)
 400ee6c:	10c00117 	ldw	r3,4(r2)
 400ee70:	00a00034 	movhi	r2,32768
 400ee74:	10bfffc4 	addi	r2,r2,-1
 400ee78:	18802126 	beq	r3,r2,400ef00 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 400ee7c:	e0bfff17 	ldw	r2,-4(fp)
 400ee80:	10800017 	ldw	r2,0(r2)
 400ee84:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 400ee88:	e0bffc17 	ldw	r2,-16(fp)
 400ee8c:	10800090 	cmplti	r2,r2,2
 400ee90:	1000061e 	bne	r2,zero,400eeac <altera_avalon_jtag_uart_ioctl+0x7c>
 400ee94:	e0fffc17 	ldw	r3,-16(fp)
 400ee98:	00a00034 	movhi	r2,32768
 400ee9c:	10bfffc4 	addi	r2,r2,-1
 400eea0:	18800226 	beq	r3,r2,400eeac <altera_avalon_jtag_uart_ioctl+0x7c>
 400eea4:	e0bffc17 	ldw	r2,-16(fp)
 400eea8:	00000206 	br	400eeb4 <altera_avalon_jtag_uart_ioctl+0x84>
 400eeac:	00a00034 	movhi	r2,32768
 400eeb0:	10bfff84 	addi	r2,r2,-2
 400eeb4:	e0fffd17 	ldw	r3,-12(fp)
 400eeb8:	18800115 	stw	r2,4(r3)
      rc = 0;
 400eebc:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 400eec0:	00000f06 	br	400ef00 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 400eec4:	e0bffd17 	ldw	r2,-12(fp)
 400eec8:	10c00117 	ldw	r3,4(r2)
 400eecc:	00a00034 	movhi	r2,32768
 400eed0:	10bfffc4 	addi	r2,r2,-1
 400eed4:	18800c26 	beq	r3,r2,400ef08 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 400eed8:	e0bffd17 	ldw	r2,-12(fp)
 400eedc:	10c00917 	ldw	r3,36(r2)
 400eee0:	e0bffd17 	ldw	r2,-12(fp)
 400eee4:	10800117 	ldw	r2,4(r2)
 400eee8:	1885803a 	cmpltu	r2,r3,r2
 400eeec:	10c03fcc 	andi	r3,r2,255
 400eef0:	e0bfff17 	ldw	r2,-4(fp)
 400eef4:	10c00015 	stw	r3,0(r2)
      rc = 0;
 400eef8:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 400eefc:	00000206 	br	400ef08 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 400ef00:	0001883a 	nop
 400ef04:	00000106 	br	400ef0c <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 400ef08:	0001883a 	nop

  default:
    break;
  }

  return rc;
 400ef0c:	e0bffb17 	ldw	r2,-20(fp)
}
 400ef10:	e037883a 	mov	sp,fp
 400ef14:	df000017 	ldw	fp,0(sp)
 400ef18:	dec00104 	addi	sp,sp,4
 400ef1c:	f800283a 	ret

0400ef20 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 400ef20:	defff304 	addi	sp,sp,-52
 400ef24:	dfc00c15 	stw	ra,48(sp)
 400ef28:	df000b15 	stw	fp,44(sp)
 400ef2c:	df000b04 	addi	fp,sp,44
 400ef30:	e13ffc15 	stw	r4,-16(fp)
 400ef34:	e17ffd15 	stw	r5,-12(fp)
 400ef38:	e1bffe15 	stw	r6,-8(fp)
 400ef3c:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 400ef40:	e0bffd17 	ldw	r2,-12(fp)
 400ef44:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 400ef48:	00004706 	br	400f068 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 400ef4c:	e0bffc17 	ldw	r2,-16(fp)
 400ef50:	10800a17 	ldw	r2,40(r2)
 400ef54:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 400ef58:	e0bffc17 	ldw	r2,-16(fp)
 400ef5c:	10800b17 	ldw	r2,44(r2)
 400ef60:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 400ef64:	e0fff717 	ldw	r3,-36(fp)
 400ef68:	e0bff817 	ldw	r2,-32(fp)
 400ef6c:	18800536 	bltu	r3,r2,400ef84 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 400ef70:	e0fff717 	ldw	r3,-36(fp)
 400ef74:	e0bff817 	ldw	r2,-32(fp)
 400ef78:	1885c83a 	sub	r2,r3,r2
 400ef7c:	e0bff615 	stw	r2,-40(fp)
 400ef80:	00000406 	br	400ef94 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 400ef84:	00c20004 	movi	r3,2048
 400ef88:	e0bff817 	ldw	r2,-32(fp)
 400ef8c:	1885c83a 	sub	r2,r3,r2
 400ef90:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 400ef94:	e0bff617 	ldw	r2,-40(fp)
 400ef98:	10001e26 	beq	r2,zero,400f014 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 400ef9c:	e0fffe17 	ldw	r3,-8(fp)
 400efa0:	e0bff617 	ldw	r2,-40(fp)
 400efa4:	1880022e 	bgeu	r3,r2,400efb0 <altera_avalon_jtag_uart_read+0x90>
        n = space;
 400efa8:	e0bffe17 	ldw	r2,-8(fp)
 400efac:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 400efb0:	e0bffc17 	ldw	r2,-16(fp)
 400efb4:	10c00e04 	addi	r3,r2,56
 400efb8:	e0bff817 	ldw	r2,-32(fp)
 400efbc:	1885883a 	add	r2,r3,r2
 400efc0:	e1bff617 	ldw	r6,-40(fp)
 400efc4:	100b883a 	mov	r5,r2
 400efc8:	e13ff517 	ldw	r4,-44(fp)
 400efcc:	40080ec0 	call	40080ec <memcpy>
      ptr   += n;
 400efd0:	e0fff517 	ldw	r3,-44(fp)
 400efd4:	e0bff617 	ldw	r2,-40(fp)
 400efd8:	1885883a 	add	r2,r3,r2
 400efdc:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 400efe0:	e0fffe17 	ldw	r3,-8(fp)
 400efe4:	e0bff617 	ldw	r2,-40(fp)
 400efe8:	1885c83a 	sub	r2,r3,r2
 400efec:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400eff0:	e0fff817 	ldw	r3,-32(fp)
 400eff4:	e0bff617 	ldw	r2,-40(fp)
 400eff8:	1885883a 	add	r2,r3,r2
 400effc:	10c1ffcc 	andi	r3,r2,2047
 400f000:	e0bffc17 	ldw	r2,-16(fp)
 400f004:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 400f008:	e0bffe17 	ldw	r2,-8(fp)
 400f00c:	00bfcf16 	blt	zero,r2,400ef4c <__alt_data_end+0xfc006f4c>
 400f010:	00000106 	br	400f018 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 400f014:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 400f018:	e0fff517 	ldw	r3,-44(fp)
 400f01c:	e0bffd17 	ldw	r2,-12(fp)
 400f020:	1880141e 	bne	r3,r2,400f074 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 400f024:	e0bfff17 	ldw	r2,-4(fp)
 400f028:	1090000c 	andi	r2,r2,16384
 400f02c:	1000131e 	bne	r2,zero,400f07c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 400f030:	0001883a 	nop
 400f034:	e0bffc17 	ldw	r2,-16(fp)
 400f038:	10c00a17 	ldw	r3,40(r2)
 400f03c:	e0bff717 	ldw	r2,-36(fp)
 400f040:	1880051e 	bne	r3,r2,400f058 <altera_avalon_jtag_uart_read+0x138>
 400f044:	e0bffc17 	ldw	r2,-16(fp)
 400f048:	10c00917 	ldw	r3,36(r2)
 400f04c:	e0bffc17 	ldw	r2,-16(fp)
 400f050:	10800117 	ldw	r2,4(r2)
 400f054:	18bff736 	bltu	r3,r2,400f034 <__alt_data_end+0xfc007034>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 400f058:	e0bffc17 	ldw	r2,-16(fp)
 400f05c:	10c00a17 	ldw	r3,40(r2)
 400f060:	e0bff717 	ldw	r2,-36(fp)
 400f064:	18800726 	beq	r3,r2,400f084 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 400f068:	e0bffe17 	ldw	r2,-8(fp)
 400f06c:	00bfb716 	blt	zero,r2,400ef4c <__alt_data_end+0xfc006f4c>
 400f070:	00000506 	br	400f088 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 400f074:	0001883a 	nop
 400f078:	00000306 	br	400f088 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 400f07c:	0001883a 	nop
 400f080:	00000106 	br	400f088 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 400f084:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 400f088:	e0fff517 	ldw	r3,-44(fp)
 400f08c:	e0bffd17 	ldw	r2,-12(fp)
 400f090:	18801826 	beq	r3,r2,400f0f4 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400f094:	0005303a 	rdctl	r2,status
 400f098:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400f09c:	e0fffb17 	ldw	r3,-20(fp)
 400f0a0:	00bfff84 	movi	r2,-2
 400f0a4:	1884703a 	and	r2,r3,r2
 400f0a8:	1001703a 	wrctl	status,r2
  
  return context;
 400f0ac:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 400f0b0:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 400f0b4:	e0bffc17 	ldw	r2,-16(fp)
 400f0b8:	10800817 	ldw	r2,32(r2)
 400f0bc:	10c00054 	ori	r3,r2,1
 400f0c0:	e0bffc17 	ldw	r2,-16(fp)
 400f0c4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 400f0c8:	e0bffc17 	ldw	r2,-16(fp)
 400f0cc:	10800017 	ldw	r2,0(r2)
 400f0d0:	10800104 	addi	r2,r2,4
 400f0d4:	1007883a 	mov	r3,r2
 400f0d8:	e0bffc17 	ldw	r2,-16(fp)
 400f0dc:	10800817 	ldw	r2,32(r2)
 400f0e0:	18800035 	stwio	r2,0(r3)
 400f0e4:	e0bffa17 	ldw	r2,-24(fp)
 400f0e8:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400f0ec:	e0bff917 	ldw	r2,-28(fp)
 400f0f0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 400f0f4:	e0fff517 	ldw	r3,-44(fp)
 400f0f8:	e0bffd17 	ldw	r2,-12(fp)
 400f0fc:	18800426 	beq	r3,r2,400f110 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 400f100:	e0fff517 	ldw	r3,-44(fp)
 400f104:	e0bffd17 	ldw	r2,-12(fp)
 400f108:	1885c83a 	sub	r2,r3,r2
 400f10c:	00000606 	br	400f128 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 400f110:	e0bfff17 	ldw	r2,-4(fp)
 400f114:	1090000c 	andi	r2,r2,16384
 400f118:	10000226 	beq	r2,zero,400f124 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 400f11c:	00bffd44 	movi	r2,-11
 400f120:	00000106 	br	400f128 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 400f124:	00bffec4 	movi	r2,-5
}
 400f128:	e037883a 	mov	sp,fp
 400f12c:	dfc00117 	ldw	ra,4(sp)
 400f130:	df000017 	ldw	fp,0(sp)
 400f134:	dec00204 	addi	sp,sp,8
 400f138:	f800283a 	ret

0400f13c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 400f13c:	defff304 	addi	sp,sp,-52
 400f140:	dfc00c15 	stw	ra,48(sp)
 400f144:	df000b15 	stw	fp,44(sp)
 400f148:	df000b04 	addi	fp,sp,44
 400f14c:	e13ffc15 	stw	r4,-16(fp)
 400f150:	e17ffd15 	stw	r5,-12(fp)
 400f154:	e1bffe15 	stw	r6,-8(fp)
 400f158:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 400f15c:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 400f160:	e0bffd17 	ldw	r2,-12(fp)
 400f164:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 400f168:	00003706 	br	400f248 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 400f16c:	e0bffc17 	ldw	r2,-16(fp)
 400f170:	10800c17 	ldw	r2,48(r2)
 400f174:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 400f178:	e0bffc17 	ldw	r2,-16(fp)
 400f17c:	10800d17 	ldw	r2,52(r2)
 400f180:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 400f184:	e0fff917 	ldw	r3,-28(fp)
 400f188:	e0bff517 	ldw	r2,-44(fp)
 400f18c:	1880062e 	bgeu	r3,r2,400f1a8 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 400f190:	e0fff517 	ldw	r3,-44(fp)
 400f194:	e0bff917 	ldw	r2,-28(fp)
 400f198:	1885c83a 	sub	r2,r3,r2
 400f19c:	10bfffc4 	addi	r2,r2,-1
 400f1a0:	e0bff615 	stw	r2,-40(fp)
 400f1a4:	00000b06 	br	400f1d4 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 400f1a8:	e0bff517 	ldw	r2,-44(fp)
 400f1ac:	10000526 	beq	r2,zero,400f1c4 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 400f1b0:	00c20004 	movi	r3,2048
 400f1b4:	e0bff917 	ldw	r2,-28(fp)
 400f1b8:	1885c83a 	sub	r2,r3,r2
 400f1bc:	e0bff615 	stw	r2,-40(fp)
 400f1c0:	00000406 	br	400f1d4 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 400f1c4:	00c1ffc4 	movi	r3,2047
 400f1c8:	e0bff917 	ldw	r2,-28(fp)
 400f1cc:	1885c83a 	sub	r2,r3,r2
 400f1d0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 400f1d4:	e0bff617 	ldw	r2,-40(fp)
 400f1d8:	10001e26 	beq	r2,zero,400f254 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 400f1dc:	e0fffe17 	ldw	r3,-8(fp)
 400f1e0:	e0bff617 	ldw	r2,-40(fp)
 400f1e4:	1880022e 	bgeu	r3,r2,400f1f0 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 400f1e8:	e0bffe17 	ldw	r2,-8(fp)
 400f1ec:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 400f1f0:	e0bffc17 	ldw	r2,-16(fp)
 400f1f4:	10c20e04 	addi	r3,r2,2104
 400f1f8:	e0bff917 	ldw	r2,-28(fp)
 400f1fc:	1885883a 	add	r2,r3,r2
 400f200:	e1bff617 	ldw	r6,-40(fp)
 400f204:	e17ffd17 	ldw	r5,-12(fp)
 400f208:	1009883a 	mov	r4,r2
 400f20c:	40080ec0 	call	40080ec <memcpy>
      ptr   += n;
 400f210:	e0fffd17 	ldw	r3,-12(fp)
 400f214:	e0bff617 	ldw	r2,-40(fp)
 400f218:	1885883a 	add	r2,r3,r2
 400f21c:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 400f220:	e0fffe17 	ldw	r3,-8(fp)
 400f224:	e0bff617 	ldw	r2,-40(fp)
 400f228:	1885c83a 	sub	r2,r3,r2
 400f22c:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400f230:	e0fff917 	ldw	r3,-28(fp)
 400f234:	e0bff617 	ldw	r2,-40(fp)
 400f238:	1885883a 	add	r2,r3,r2
 400f23c:	10c1ffcc 	andi	r3,r2,2047
 400f240:	e0bffc17 	ldw	r2,-16(fp)
 400f244:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 400f248:	e0bffe17 	ldw	r2,-8(fp)
 400f24c:	00bfc716 	blt	zero,r2,400f16c <__alt_data_end+0xfc00716c>
 400f250:	00000106 	br	400f258 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 400f254:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400f258:	0005303a 	rdctl	r2,status
 400f25c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400f260:	e0fffb17 	ldw	r3,-20(fp)
 400f264:	00bfff84 	movi	r2,-2
 400f268:	1884703a 	and	r2,r3,r2
 400f26c:	1001703a 	wrctl	status,r2
  
  return context;
 400f270:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 400f274:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 400f278:	e0bffc17 	ldw	r2,-16(fp)
 400f27c:	10800817 	ldw	r2,32(r2)
 400f280:	10c00094 	ori	r3,r2,2
 400f284:	e0bffc17 	ldw	r2,-16(fp)
 400f288:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 400f28c:	e0bffc17 	ldw	r2,-16(fp)
 400f290:	10800017 	ldw	r2,0(r2)
 400f294:	10800104 	addi	r2,r2,4
 400f298:	1007883a 	mov	r3,r2
 400f29c:	e0bffc17 	ldw	r2,-16(fp)
 400f2a0:	10800817 	ldw	r2,32(r2)
 400f2a4:	18800035 	stwio	r2,0(r3)
 400f2a8:	e0bffa17 	ldw	r2,-24(fp)
 400f2ac:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400f2b0:	e0bff817 	ldw	r2,-32(fp)
 400f2b4:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 400f2b8:	e0bffe17 	ldw	r2,-8(fp)
 400f2bc:	0080100e 	bge	zero,r2,400f300 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 400f2c0:	e0bfff17 	ldw	r2,-4(fp)
 400f2c4:	1090000c 	andi	r2,r2,16384
 400f2c8:	1000101e 	bne	r2,zero,400f30c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 400f2cc:	0001883a 	nop
 400f2d0:	e0bffc17 	ldw	r2,-16(fp)
 400f2d4:	10c00d17 	ldw	r3,52(r2)
 400f2d8:	e0bff517 	ldw	r2,-44(fp)
 400f2dc:	1880051e 	bne	r3,r2,400f2f4 <altera_avalon_jtag_uart_write+0x1b8>
 400f2e0:	e0bffc17 	ldw	r2,-16(fp)
 400f2e4:	10c00917 	ldw	r3,36(r2)
 400f2e8:	e0bffc17 	ldw	r2,-16(fp)
 400f2ec:	10800117 	ldw	r2,4(r2)
 400f2f0:	18bff736 	bltu	r3,r2,400f2d0 <__alt_data_end+0xfc0072d0>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 400f2f4:	e0bffc17 	ldw	r2,-16(fp)
 400f2f8:	10800917 	ldw	r2,36(r2)
 400f2fc:	1000051e 	bne	r2,zero,400f314 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 400f300:	e0bffe17 	ldw	r2,-8(fp)
 400f304:	00bfd016 	blt	zero,r2,400f248 <__alt_data_end+0xfc007248>
 400f308:	00000306 	br	400f318 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 400f30c:	0001883a 	nop
 400f310:	00000106 	br	400f318 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 400f314:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 400f318:	e0fffd17 	ldw	r3,-12(fp)
 400f31c:	e0bff717 	ldw	r2,-36(fp)
 400f320:	18800426 	beq	r3,r2,400f334 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 400f324:	e0fffd17 	ldw	r3,-12(fp)
 400f328:	e0bff717 	ldw	r2,-36(fp)
 400f32c:	1885c83a 	sub	r2,r3,r2
 400f330:	00000606 	br	400f34c <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 400f334:	e0bfff17 	ldw	r2,-4(fp)
 400f338:	1090000c 	andi	r2,r2,16384
 400f33c:	10000226 	beq	r2,zero,400f348 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 400f340:	00bffd44 	movi	r2,-11
 400f344:	00000106 	br	400f34c <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 400f348:	00bffec4 	movi	r2,-5
}
 400f34c:	e037883a 	mov	sp,fp
 400f350:	dfc00117 	ldw	ra,4(sp)
 400f354:	df000017 	ldw	fp,0(sp)
 400f358:	dec00204 	addi	sp,sp,8
 400f35c:	f800283a 	ret

0400f360 <alt_timestamp_start>:
 * The return value of this function is 0 upon sucess and -1 if in timestamp
 * device has not been registered. 
 */

int alt_timestamp_start(void)
{
 400f360:	defffe04 	addi	sp,sp,-8
 400f364:	df000115 	stw	fp,4(sp)
 400f368:	df000104 	addi	fp,sp,4
  void* base = altera_avalon_timer_ts_base;
 400f36c:	d0a6d917 	ldw	r2,-25756(gp)
 400f370:	e0bfff15 	stw	r2,-4(fp)

  if (!altera_avalon_timer_ts_freq)
 400f374:	d0a6da17 	ldw	r2,-25752(gp)
 400f378:	1000021e 	bne	r2,zero,400f384 <alt_timestamp_start+0x24>
  {
    return -1;
 400f37c:	00bfffc4 	movi	r2,-1
 400f380:	00001106 	br	400f3c8 <alt_timestamp_start+0x68>
        IOWR_ALTERA_AVALON_TIMER_PERIOD_1 (base, 0xFFFF);;
        IOWR_ALTERA_AVALON_TIMER_PERIOD_2 (base, 0xFFFF);
        IOWR_ALTERA_AVALON_TIMER_PERIOD_3 (base, 0xFFFF);
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base, ALTERA_AVALON_TIMER_CONTROL_START_MSK);
    } else {
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base,ALTERA_AVALON_TIMER_CONTROL_STOP_MSK);
 400f384:	e0bfff17 	ldw	r2,-4(fp)
 400f388:	10800104 	addi	r2,r2,4
 400f38c:	00c00204 	movi	r3,8
 400f390:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_PERIODL (base, 0xFFFF);
 400f394:	e0bfff17 	ldw	r2,-4(fp)
 400f398:	10800204 	addi	r2,r2,8
 400f39c:	00ffffd4 	movui	r3,65535
 400f3a0:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_PERIODH (base, 0xFFFF);
 400f3a4:	e0bfff17 	ldw	r2,-4(fp)
 400f3a8:	10800304 	addi	r2,r2,12
 400f3ac:	00ffffd4 	movui	r3,65535
 400f3b0:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base, ALTERA_AVALON_TIMER_CONTROL_START_MSK); 
 400f3b4:	e0bfff17 	ldw	r2,-4(fp)
 400f3b8:	10800104 	addi	r2,r2,4
 400f3bc:	00c00104 	movi	r3,4
 400f3c0:	10c00035 	stwio	r3,0(r2)
    } 
  }
  return 0;
 400f3c4:	0005883a 	mov	r2,zero
}
 400f3c8:	e037883a 	mov	sp,fp
 400f3cc:	df000017 	ldw	fp,0(sp)
 400f3d0:	dec00104 	addi	sp,sp,4
 400f3d4:	f800283a 	ret

0400f3d8 <alt_timestamp>:
 * The returned timestamp counts up from the last time the period register
 * was reset. 
 */

alt_timestamp_type alt_timestamp(void)
{
 400f3d8:	defffc04 	addi	sp,sp,-16
 400f3dc:	df000315 	stw	fp,12(sp)
 400f3e0:	df000304 	addi	fp,sp,12

  void* base = altera_avalon_timer_ts_base;
 400f3e4:	d0a6d917 	ldw	r2,-25756(gp)
 400f3e8:	e0bffd15 	stw	r2,-12(fp)

  if (!altera_avalon_timer_ts_freq)
 400f3ec:	d0a6da17 	ldw	r2,-25752(gp)
 400f3f0:	1000021e 	bne	r2,zero,400f3fc <alt_timestamp+0x24>
  {
#if (ALT_TIMESTAMP_COUNTER_SIZE == 64)
        return 0xFFFFFFFFFFFFFFFFULL;
#else
        return 0xFFFFFFFF;
 400f3f4:	00bfffc4 	movi	r2,-1
 400f3f8:	00001306 	br	400f448 <alt_timestamp+0x70>
        alt_timestamp_type snap_2 = IORD_ALTERA_AVALON_TIMER_SNAP_2(base) & ALTERA_AVALON_TIMER_SNAP_2_MSK;
        alt_timestamp_type snap_3 = IORD_ALTERA_AVALON_TIMER_SNAP_3(base) & ALTERA_AVALON_TIMER_SNAP_3_MSK;
        
        return (0xFFFFFFFFFFFFFFFFULL - ( (snap_3 << 48) | (snap_2 << 32) | (snap_1 << 16) | (snap_0) ));
#else
        IOWR_ALTERA_AVALON_TIMER_SNAPL (base, 0);
 400f3fc:	e0bffd17 	ldw	r2,-12(fp)
 400f400:	10800404 	addi	r2,r2,16
 400f404:	0007883a 	mov	r3,zero
 400f408:	10c00035 	stwio	r3,0(r2)
        alt_timestamp_type lower = IORD_ALTERA_AVALON_TIMER_SNAPL(base) & ALTERA_AVALON_TIMER_SNAPL_MSK;
 400f40c:	e0bffd17 	ldw	r2,-12(fp)
 400f410:	10800404 	addi	r2,r2,16
 400f414:	10800037 	ldwio	r2,0(r2)
 400f418:	10bfffcc 	andi	r2,r2,65535
 400f41c:	e0bffe15 	stw	r2,-8(fp)
        alt_timestamp_type upper = IORD_ALTERA_AVALON_TIMER_SNAPH(base) & ALTERA_AVALON_TIMER_SNAPH_MSK;
 400f420:	e0bffd17 	ldw	r2,-12(fp)
 400f424:	10800504 	addi	r2,r2,20
 400f428:	10800037 	ldwio	r2,0(r2)
 400f42c:	10bfffcc 	andi	r2,r2,65535
 400f430:	e0bfff15 	stw	r2,-4(fp)
        
        return (0xFFFFFFFF - ((upper << 16) | lower)); 
 400f434:	e0bfff17 	ldw	r2,-4(fp)
 400f438:	1006943a 	slli	r3,r2,16
 400f43c:	e0bffe17 	ldw	r2,-8(fp)
 400f440:	1884b03a 	or	r2,r3,r2
 400f444:	0084303a 	nor	r2,zero,r2
#endif
  }
}
 400f448:	e037883a 	mov	sp,fp
 400f44c:	df000017 	ldw	fp,0(sp)
 400f450:	dec00104 	addi	sp,sp,4
 400f454:	f800283a 	ret

0400f458 <alt_timestamp_freq>:
 * Return the number of timestamp ticks per second. This will be 0 if no
 * timestamp device has been registered.
 */

alt_u32 alt_timestamp_freq(void)
{
 400f458:	deffff04 	addi	sp,sp,-4
 400f45c:	df000015 	stw	fp,0(sp)
 400f460:	d839883a 	mov	fp,sp
  return altera_avalon_timer_ts_freq;
 400f464:	d0a6da17 	ldw	r2,-25752(gp)
}
 400f468:	e037883a 	mov	sp,fp
 400f46c:	df000017 	ldw	fp,0(sp)
 400f470:	dec00104 	addi	sp,sp,4
 400f474:	f800283a 	ret

0400f478 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 400f478:	defff504 	addi	sp,sp,-44
 400f47c:	df000a15 	stw	fp,40(sp)
 400f480:	df000a04 	addi	fp,sp,40
 400f484:	e13ffc15 	stw	r4,-16(fp)
 400f488:	e17ffd15 	stw	r5,-12(fp)
 400f48c:	e1bffe15 	stw	r6,-8(fp)
 400f490:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 400f494:	e03ff615 	stw	zero,-40(fp)
 400f498:	d0a6dc17 	ldw	r2,-25744(gp)
  
  if (alt_ticks_per_second ())
 400f49c:	10003c26 	beq	r2,zero,400f590 <alt_alarm_start+0x118>
  {
    if (alarm)
 400f4a0:	e0bffc17 	ldw	r2,-16(fp)
 400f4a4:	10003826 	beq	r2,zero,400f588 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
 400f4a8:	e0bffc17 	ldw	r2,-16(fp)
 400f4ac:	e0fffe17 	ldw	r3,-8(fp)
 400f4b0:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 400f4b4:	e0bffc17 	ldw	r2,-16(fp)
 400f4b8:	e0ffff17 	ldw	r3,-4(fp)
 400f4bc:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400f4c0:	0005303a 	rdctl	r2,status
 400f4c4:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400f4c8:	e0fff917 	ldw	r3,-28(fp)
 400f4cc:	00bfff84 	movi	r2,-2
 400f4d0:	1884703a 	and	r2,r3,r2
 400f4d4:	1001703a 	wrctl	status,r2
  
  return context;
 400f4d8:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 400f4dc:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 400f4e0:	d0a6dd17 	ldw	r2,-25740(gp)
      
      current_nticks = alt_nticks();
 400f4e4:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 400f4e8:	e0fffd17 	ldw	r3,-12(fp)
 400f4ec:	e0bff617 	ldw	r2,-40(fp)
 400f4f0:	1885883a 	add	r2,r3,r2
 400f4f4:	10c00044 	addi	r3,r2,1
 400f4f8:	e0bffc17 	ldw	r2,-16(fp)
 400f4fc:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 400f500:	e0bffc17 	ldw	r2,-16(fp)
 400f504:	10c00217 	ldw	r3,8(r2)
 400f508:	e0bff617 	ldw	r2,-40(fp)
 400f50c:	1880042e 	bgeu	r3,r2,400f520 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 400f510:	e0bffc17 	ldw	r2,-16(fp)
 400f514:	00c00044 	movi	r3,1
 400f518:	10c00405 	stb	r3,16(r2)
 400f51c:	00000206 	br	400f528 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 400f520:	e0bffc17 	ldw	r2,-16(fp)
 400f524:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 400f528:	e0bffc17 	ldw	r2,-16(fp)
 400f52c:	d0e00e04 	addi	r3,gp,-32712
 400f530:	e0fffa15 	stw	r3,-24(fp)
 400f534:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 400f538:	e0bffb17 	ldw	r2,-20(fp)
 400f53c:	e0fffa17 	ldw	r3,-24(fp)
 400f540:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 400f544:	e0bffa17 	ldw	r2,-24(fp)
 400f548:	10c00017 	ldw	r3,0(r2)
 400f54c:	e0bffb17 	ldw	r2,-20(fp)
 400f550:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 400f554:	e0bffa17 	ldw	r2,-24(fp)
 400f558:	10800017 	ldw	r2,0(r2)
 400f55c:	e0fffb17 	ldw	r3,-20(fp)
 400f560:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 400f564:	e0bffa17 	ldw	r2,-24(fp)
 400f568:	e0fffb17 	ldw	r3,-20(fp)
 400f56c:	10c00015 	stw	r3,0(r2)
 400f570:	e0bff817 	ldw	r2,-32(fp)
 400f574:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400f578:	e0bff717 	ldw	r2,-36(fp)
 400f57c:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 400f580:	0005883a 	mov	r2,zero
 400f584:	00000306 	br	400f594 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
 400f588:	00bffa84 	movi	r2,-22
 400f58c:	00000106 	br	400f594 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
 400f590:	00bfde84 	movi	r2,-134
  }
}
 400f594:	e037883a 	mov	sp,fp
 400f598:	df000017 	ldw	fp,0(sp)
 400f59c:	dec00104 	addi	sp,sp,4
 400f5a0:	f800283a 	ret

0400f5a4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400f5a4:	defffe04 	addi	sp,sp,-8
 400f5a8:	dfc00115 	stw	ra,4(sp)
 400f5ac:	df000015 	stw	fp,0(sp)
 400f5b0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400f5b4:	d0a00b17 	ldw	r2,-32724(gp)
 400f5b8:	10000326 	beq	r2,zero,400f5c8 <alt_get_errno+0x24>
 400f5bc:	d0a00b17 	ldw	r2,-32724(gp)
 400f5c0:	103ee83a 	callr	r2
 400f5c4:	00000106 	br	400f5cc <alt_get_errno+0x28>
 400f5c8:	d0a6d504 	addi	r2,gp,-25772
}
 400f5cc:	e037883a 	mov	sp,fp
 400f5d0:	dfc00117 	ldw	ra,4(sp)
 400f5d4:	df000017 	ldw	fp,0(sp)
 400f5d8:	dec00204 	addi	sp,sp,8
 400f5dc:	f800283a 	ret

0400f5e0 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 400f5e0:	defffa04 	addi	sp,sp,-24
 400f5e4:	dfc00515 	stw	ra,20(sp)
 400f5e8:	df000415 	stw	fp,16(sp)
 400f5ec:	df000404 	addi	fp,sp,16
 400f5f0:	e13ffe15 	stw	r4,-8(fp)
 400f5f4:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 400f5f8:	e0bffe17 	ldw	r2,-8(fp)
 400f5fc:	10000326 	beq	r2,zero,400f60c <alt_dev_llist_insert+0x2c>
 400f600:	e0bffe17 	ldw	r2,-8(fp)
 400f604:	10800217 	ldw	r2,8(r2)
 400f608:	1000061e 	bne	r2,zero,400f624 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 400f60c:	400f5a40 	call	400f5a4 <alt_get_errno>
 400f610:	1007883a 	mov	r3,r2
 400f614:	00800584 	movi	r2,22
 400f618:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 400f61c:	00bffa84 	movi	r2,-22
 400f620:	00001306 	br	400f670 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 400f624:	e0bffe17 	ldw	r2,-8(fp)
 400f628:	e0ffff17 	ldw	r3,-4(fp)
 400f62c:	e0fffc15 	stw	r3,-16(fp)
 400f630:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 400f634:	e0bffd17 	ldw	r2,-12(fp)
 400f638:	e0fffc17 	ldw	r3,-16(fp)
 400f63c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 400f640:	e0bffc17 	ldw	r2,-16(fp)
 400f644:	10c00017 	ldw	r3,0(r2)
 400f648:	e0bffd17 	ldw	r2,-12(fp)
 400f64c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 400f650:	e0bffc17 	ldw	r2,-16(fp)
 400f654:	10800017 	ldw	r2,0(r2)
 400f658:	e0fffd17 	ldw	r3,-12(fp)
 400f65c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 400f660:	e0bffc17 	ldw	r2,-16(fp)
 400f664:	e0fffd17 	ldw	r3,-12(fp)
 400f668:	10c00015 	stw	r3,0(r2)

  return 0;  
 400f66c:	0005883a 	mov	r2,zero
}
 400f670:	e037883a 	mov	sp,fp
 400f674:	dfc00117 	ldw	ra,4(sp)
 400f678:	df000017 	ldw	fp,0(sp)
 400f67c:	dec00204 	addi	sp,sp,8
 400f680:	f800283a 	ret

0400f684 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 400f684:	defffd04 	addi	sp,sp,-12
 400f688:	dfc00215 	stw	ra,8(sp)
 400f68c:	df000115 	stw	fp,4(sp)
 400f690:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 400f694:	00810074 	movhi	r2,1025
 400f698:	10816704 	addi	r2,r2,1436
 400f69c:	e0bfff15 	stw	r2,-4(fp)
 400f6a0:	00000606 	br	400f6bc <_do_ctors+0x38>
        (*ctor) (); 
 400f6a4:	e0bfff17 	ldw	r2,-4(fp)
 400f6a8:	10800017 	ldw	r2,0(r2)
 400f6ac:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 400f6b0:	e0bfff17 	ldw	r2,-4(fp)
 400f6b4:	10bfff04 	addi	r2,r2,-4
 400f6b8:	e0bfff15 	stw	r2,-4(fp)
 400f6bc:	e0ffff17 	ldw	r3,-4(fp)
 400f6c0:	00810074 	movhi	r2,1025
 400f6c4:	10816804 	addi	r2,r2,1440
 400f6c8:	18bff62e 	bgeu	r3,r2,400f6a4 <__alt_data_end+0xfc0076a4>
        (*ctor) (); 
}
 400f6cc:	0001883a 	nop
 400f6d0:	e037883a 	mov	sp,fp
 400f6d4:	dfc00117 	ldw	ra,4(sp)
 400f6d8:	df000017 	ldw	fp,0(sp)
 400f6dc:	dec00204 	addi	sp,sp,8
 400f6e0:	f800283a 	ret

0400f6e4 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 400f6e4:	defffd04 	addi	sp,sp,-12
 400f6e8:	dfc00215 	stw	ra,8(sp)
 400f6ec:	df000115 	stw	fp,4(sp)
 400f6f0:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 400f6f4:	00810074 	movhi	r2,1025
 400f6f8:	10816704 	addi	r2,r2,1436
 400f6fc:	e0bfff15 	stw	r2,-4(fp)
 400f700:	00000606 	br	400f71c <_do_dtors+0x38>
        (*dtor) (); 
 400f704:	e0bfff17 	ldw	r2,-4(fp)
 400f708:	10800017 	ldw	r2,0(r2)
 400f70c:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 400f710:	e0bfff17 	ldw	r2,-4(fp)
 400f714:	10bfff04 	addi	r2,r2,-4
 400f718:	e0bfff15 	stw	r2,-4(fp)
 400f71c:	e0ffff17 	ldw	r3,-4(fp)
 400f720:	00810074 	movhi	r2,1025
 400f724:	10816804 	addi	r2,r2,1440
 400f728:	18bff62e 	bgeu	r3,r2,400f704 <__alt_data_end+0xfc007704>
        (*dtor) (); 
}
 400f72c:	0001883a 	nop
 400f730:	e037883a 	mov	sp,fp
 400f734:	dfc00117 	ldw	ra,4(sp)
 400f738:	df000017 	ldw	fp,0(sp)
 400f73c:	dec00204 	addi	sp,sp,8
 400f740:	f800283a 	ret

0400f744 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 400f744:	defffb04 	addi	sp,sp,-20
 400f748:	df000415 	stw	fp,16(sp)
 400f74c:	df000404 	addi	fp,sp,16
 400f750:	e13ffe15 	stw	r4,-8(fp)
 400f754:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 400f758:	e0bfff17 	ldw	r2,-4(fp)
 400f75c:	10808070 	cmpltui	r2,r2,513
 400f760:	1000021e 	bne	r2,zero,400f76c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 400f764:	00808004 	movi	r2,512
 400f768:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
 400f76c:	e0fffe17 	ldw	r3,-8(fp)
 400f770:	e0bfff17 	ldw	r2,-4(fp)
 400f774:	1885883a 	add	r2,r3,r2
 400f778:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 400f77c:	e0bffe17 	ldw	r2,-8(fp)
 400f780:	e0bffc15 	stw	r2,-16(fp)
 400f784:	00000506 	br	400f79c <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 400f788:	e0bffc17 	ldw	r2,-16(fp)
 400f78c:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 400f790:	e0bffc17 	ldw	r2,-16(fp)
 400f794:	10800804 	addi	r2,r2,32
 400f798:	e0bffc15 	stw	r2,-16(fp)
 400f79c:	e0fffc17 	ldw	r3,-16(fp)
 400f7a0:	e0bffd17 	ldw	r2,-12(fp)
 400f7a4:	18bff836 	bltu	r3,r2,400f788 <__alt_data_end+0xfc007788>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 400f7a8:	e0bffe17 	ldw	r2,-8(fp)
 400f7ac:	108007cc 	andi	r2,r2,31
 400f7b0:	10000226 	beq	r2,zero,400f7bc <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 400f7b4:	e0bffc17 	ldw	r2,-16(fp)
 400f7b8:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 400f7bc:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 400f7c0:	0001883a 	nop
 400f7c4:	e037883a 	mov	sp,fp
 400f7c8:	df000017 	ldw	fp,0(sp)
 400f7cc:	dec00104 	addi	sp,sp,4
 400f7d0:	f800283a 	ret

0400f7d4 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 400f7d4:	defff904 	addi	sp,sp,-28
 400f7d8:	dfc00615 	stw	ra,24(sp)
 400f7dc:	df000515 	stw	fp,20(sp)
 400f7e0:	df000504 	addi	fp,sp,20
 400f7e4:	e13ffc15 	stw	r4,-16(fp)
 400f7e8:	e17ffd15 	stw	r5,-12(fp)
 400f7ec:	e1bffe15 	stw	r6,-8(fp)
 400f7f0:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 400f7f4:	e0800217 	ldw	r2,8(fp)
 400f7f8:	d8800015 	stw	r2,0(sp)
 400f7fc:	e1ffff17 	ldw	r7,-4(fp)
 400f800:	e1bffe17 	ldw	r6,-8(fp)
 400f804:	e17ffd17 	ldw	r5,-12(fp)
 400f808:	e13ffc17 	ldw	r4,-16(fp)
 400f80c:	400f9840 	call	400f984 <alt_iic_isr_register>
}  
 400f810:	e037883a 	mov	sp,fp
 400f814:	dfc00117 	ldw	ra,4(sp)
 400f818:	df000017 	ldw	fp,0(sp)
 400f81c:	dec00204 	addi	sp,sp,8
 400f820:	f800283a 	ret

0400f824 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 400f824:	defff904 	addi	sp,sp,-28
 400f828:	df000615 	stw	fp,24(sp)
 400f82c:	df000604 	addi	fp,sp,24
 400f830:	e13ffe15 	stw	r4,-8(fp)
 400f834:	e17fff15 	stw	r5,-4(fp)
 400f838:	e0bfff17 	ldw	r2,-4(fp)
 400f83c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400f840:	0005303a 	rdctl	r2,status
 400f844:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400f848:	e0fffb17 	ldw	r3,-20(fp)
 400f84c:	00bfff84 	movi	r2,-2
 400f850:	1884703a 	and	r2,r3,r2
 400f854:	1001703a 	wrctl	status,r2
  
  return context;
 400f858:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 400f85c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 400f860:	00c00044 	movi	r3,1
 400f864:	e0bffa17 	ldw	r2,-24(fp)
 400f868:	1884983a 	sll	r2,r3,r2
 400f86c:	1007883a 	mov	r3,r2
 400f870:	d0a6db17 	ldw	r2,-25748(gp)
 400f874:	1884b03a 	or	r2,r3,r2
 400f878:	d0a6db15 	stw	r2,-25748(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 400f87c:	d0a6db17 	ldw	r2,-25748(gp)
 400f880:	100170fa 	wrctl	ienable,r2
 400f884:	e0bffc17 	ldw	r2,-16(fp)
 400f888:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400f88c:	e0bffd17 	ldw	r2,-12(fp)
 400f890:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 400f894:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 400f898:	0001883a 	nop
}
 400f89c:	e037883a 	mov	sp,fp
 400f8a0:	df000017 	ldw	fp,0(sp)
 400f8a4:	dec00104 	addi	sp,sp,4
 400f8a8:	f800283a 	ret

0400f8ac <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 400f8ac:	defff904 	addi	sp,sp,-28
 400f8b0:	df000615 	stw	fp,24(sp)
 400f8b4:	df000604 	addi	fp,sp,24
 400f8b8:	e13ffe15 	stw	r4,-8(fp)
 400f8bc:	e17fff15 	stw	r5,-4(fp)
 400f8c0:	e0bfff17 	ldw	r2,-4(fp)
 400f8c4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400f8c8:	0005303a 	rdctl	r2,status
 400f8cc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400f8d0:	e0fffb17 	ldw	r3,-20(fp)
 400f8d4:	00bfff84 	movi	r2,-2
 400f8d8:	1884703a 	and	r2,r3,r2
 400f8dc:	1001703a 	wrctl	status,r2
  
  return context;
 400f8e0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 400f8e4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 400f8e8:	00c00044 	movi	r3,1
 400f8ec:	e0bffa17 	ldw	r2,-24(fp)
 400f8f0:	1884983a 	sll	r2,r3,r2
 400f8f4:	0084303a 	nor	r2,zero,r2
 400f8f8:	1007883a 	mov	r3,r2
 400f8fc:	d0a6db17 	ldw	r2,-25748(gp)
 400f900:	1884703a 	and	r2,r3,r2
 400f904:	d0a6db15 	stw	r2,-25748(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 400f908:	d0a6db17 	ldw	r2,-25748(gp)
 400f90c:	100170fa 	wrctl	ienable,r2
 400f910:	e0bffc17 	ldw	r2,-16(fp)
 400f914:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400f918:	e0bffd17 	ldw	r2,-12(fp)
 400f91c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 400f920:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 400f924:	0001883a 	nop
}
 400f928:	e037883a 	mov	sp,fp
 400f92c:	df000017 	ldw	fp,0(sp)
 400f930:	dec00104 	addi	sp,sp,4
 400f934:	f800283a 	ret

0400f938 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 400f938:	defffc04 	addi	sp,sp,-16
 400f93c:	df000315 	stw	fp,12(sp)
 400f940:	df000304 	addi	fp,sp,12
 400f944:	e13ffe15 	stw	r4,-8(fp)
 400f948:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 400f94c:	000530fa 	rdctl	r2,ienable
 400f950:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 400f954:	00c00044 	movi	r3,1
 400f958:	e0bfff17 	ldw	r2,-4(fp)
 400f95c:	1884983a 	sll	r2,r3,r2
 400f960:	1007883a 	mov	r3,r2
 400f964:	e0bffd17 	ldw	r2,-12(fp)
 400f968:	1884703a 	and	r2,r3,r2
 400f96c:	1004c03a 	cmpne	r2,r2,zero
 400f970:	10803fcc 	andi	r2,r2,255
}
 400f974:	e037883a 	mov	sp,fp
 400f978:	df000017 	ldw	fp,0(sp)
 400f97c:	dec00104 	addi	sp,sp,4
 400f980:	f800283a 	ret

0400f984 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 400f984:	defff504 	addi	sp,sp,-44
 400f988:	dfc00a15 	stw	ra,40(sp)
 400f98c:	df000915 	stw	fp,36(sp)
 400f990:	df000904 	addi	fp,sp,36
 400f994:	e13ffc15 	stw	r4,-16(fp)
 400f998:	e17ffd15 	stw	r5,-12(fp)
 400f99c:	e1bffe15 	stw	r6,-8(fp)
 400f9a0:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 400f9a4:	00bffa84 	movi	r2,-22
 400f9a8:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 400f9ac:	e0bffd17 	ldw	r2,-12(fp)
 400f9b0:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 400f9b4:	e0bff817 	ldw	r2,-32(fp)
 400f9b8:	10800808 	cmpgei	r2,r2,32
 400f9bc:	1000271e 	bne	r2,zero,400fa5c <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400f9c0:	0005303a 	rdctl	r2,status
 400f9c4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400f9c8:	e0fffb17 	ldw	r3,-20(fp)
 400f9cc:	00bfff84 	movi	r2,-2
 400f9d0:	1884703a 	and	r2,r3,r2
 400f9d4:	1001703a 	wrctl	status,r2
  
  return context;
 400f9d8:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 400f9dc:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
 400f9e0:	00810074 	movhi	r2,1025
 400f9e4:	10913b04 	addi	r2,r2,17644
 400f9e8:	e0fff817 	ldw	r3,-32(fp)
 400f9ec:	180690fa 	slli	r3,r3,3
 400f9f0:	10c5883a 	add	r2,r2,r3
 400f9f4:	e0fffe17 	ldw	r3,-8(fp)
 400f9f8:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 400f9fc:	00810074 	movhi	r2,1025
 400fa00:	10913b04 	addi	r2,r2,17644
 400fa04:	e0fff817 	ldw	r3,-32(fp)
 400fa08:	180690fa 	slli	r3,r3,3
 400fa0c:	10c5883a 	add	r2,r2,r3
 400fa10:	10800104 	addi	r2,r2,4
 400fa14:	e0ffff17 	ldw	r3,-4(fp)
 400fa18:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 400fa1c:	e0bffe17 	ldw	r2,-8(fp)
 400fa20:	10000526 	beq	r2,zero,400fa38 <alt_iic_isr_register+0xb4>
 400fa24:	e0bff817 	ldw	r2,-32(fp)
 400fa28:	100b883a 	mov	r5,r2
 400fa2c:	e13ffc17 	ldw	r4,-16(fp)
 400fa30:	400f8240 	call	400f824 <alt_ic_irq_enable>
 400fa34:	00000406 	br	400fa48 <alt_iic_isr_register+0xc4>
 400fa38:	e0bff817 	ldw	r2,-32(fp)
 400fa3c:	100b883a 	mov	r5,r2
 400fa40:	e13ffc17 	ldw	r4,-16(fp)
 400fa44:	400f8ac0 	call	400f8ac <alt_ic_irq_disable>
 400fa48:	e0bff715 	stw	r2,-36(fp)
 400fa4c:	e0bffa17 	ldw	r2,-24(fp)
 400fa50:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400fa54:	e0bff917 	ldw	r2,-28(fp)
 400fa58:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 400fa5c:	e0bff717 	ldw	r2,-36(fp)
}
 400fa60:	e037883a 	mov	sp,fp
 400fa64:	dfc00117 	ldw	ra,4(sp)
 400fa68:	df000017 	ldw	fp,0(sp)
 400fa6c:	dec00204 	addi	sp,sp,8
 400fa70:	f800283a 	ret

0400fa74 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 400fa74:	defff904 	addi	sp,sp,-28
 400fa78:	dfc00615 	stw	ra,24(sp)
 400fa7c:	df000515 	stw	fp,20(sp)
 400fa80:	df000504 	addi	fp,sp,20
 400fa84:	e13ffc15 	stw	r4,-16(fp)
 400fa88:	e17ffd15 	stw	r5,-12(fp)
 400fa8c:	e1bffe15 	stw	r6,-8(fp)
 400fa90:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 400fa94:	e1bfff17 	ldw	r6,-4(fp)
 400fa98:	e17ffe17 	ldw	r5,-8(fp)
 400fa9c:	e13ffd17 	ldw	r4,-12(fp)
 400faa0:	400fcb40 	call	400fcb4 <open>
 400faa4:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 400faa8:	e0bffb17 	ldw	r2,-20(fp)
 400faac:	10001c16 	blt	r2,zero,400fb20 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
 400fab0:	00810074 	movhi	r2,1025
 400fab4:	10839b04 	addi	r2,r2,3692
 400fab8:	e0fffb17 	ldw	r3,-20(fp)
 400fabc:	18c00324 	muli	r3,r3,12
 400fac0:	10c5883a 	add	r2,r2,r3
 400fac4:	10c00017 	ldw	r3,0(r2)
 400fac8:	e0bffc17 	ldw	r2,-16(fp)
 400facc:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 400fad0:	00810074 	movhi	r2,1025
 400fad4:	10839b04 	addi	r2,r2,3692
 400fad8:	e0fffb17 	ldw	r3,-20(fp)
 400fadc:	18c00324 	muli	r3,r3,12
 400fae0:	10c5883a 	add	r2,r2,r3
 400fae4:	10800104 	addi	r2,r2,4
 400fae8:	10c00017 	ldw	r3,0(r2)
 400faec:	e0bffc17 	ldw	r2,-16(fp)
 400faf0:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 400faf4:	00810074 	movhi	r2,1025
 400faf8:	10839b04 	addi	r2,r2,3692
 400fafc:	e0fffb17 	ldw	r3,-20(fp)
 400fb00:	18c00324 	muli	r3,r3,12
 400fb04:	10c5883a 	add	r2,r2,r3
 400fb08:	10800204 	addi	r2,r2,8
 400fb0c:	10c00017 	ldw	r3,0(r2)
 400fb10:	e0bffc17 	ldw	r2,-16(fp)
 400fb14:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 400fb18:	e13ffb17 	ldw	r4,-20(fp)
 400fb1c:	400e5e00 	call	400e5e0 <alt_release_fd>
  }
} 
 400fb20:	0001883a 	nop
 400fb24:	e037883a 	mov	sp,fp
 400fb28:	dfc00117 	ldw	ra,4(sp)
 400fb2c:	df000017 	ldw	fp,0(sp)
 400fb30:	dec00204 	addi	sp,sp,8
 400fb34:	f800283a 	ret

0400fb38 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 400fb38:	defffb04 	addi	sp,sp,-20
 400fb3c:	dfc00415 	stw	ra,16(sp)
 400fb40:	df000315 	stw	fp,12(sp)
 400fb44:	df000304 	addi	fp,sp,12
 400fb48:	e13ffd15 	stw	r4,-12(fp)
 400fb4c:	e17ffe15 	stw	r5,-8(fp)
 400fb50:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 400fb54:	01c07fc4 	movi	r7,511
 400fb58:	01800044 	movi	r6,1
 400fb5c:	e17ffd17 	ldw	r5,-12(fp)
 400fb60:	01010074 	movhi	r4,1025
 400fb64:	21039e04 	addi	r4,r4,3704
 400fb68:	400fa740 	call	400fa74 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 400fb6c:	01c07fc4 	movi	r7,511
 400fb70:	000d883a 	mov	r6,zero
 400fb74:	e17ffe17 	ldw	r5,-8(fp)
 400fb78:	01010074 	movhi	r4,1025
 400fb7c:	21039b04 	addi	r4,r4,3692
 400fb80:	400fa740 	call	400fa74 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 400fb84:	01c07fc4 	movi	r7,511
 400fb88:	01800044 	movi	r6,1
 400fb8c:	e17fff17 	ldw	r5,-4(fp)
 400fb90:	01010074 	movhi	r4,1025
 400fb94:	2103a104 	addi	r4,r4,3716
 400fb98:	400fa740 	call	400fa74 <alt_open_fd>
}  
 400fb9c:	0001883a 	nop
 400fba0:	e037883a 	mov	sp,fp
 400fba4:	dfc00117 	ldw	ra,4(sp)
 400fba8:	df000017 	ldw	fp,0(sp)
 400fbac:	dec00204 	addi	sp,sp,8
 400fbb0:	f800283a 	ret

0400fbb4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400fbb4:	defffe04 	addi	sp,sp,-8
 400fbb8:	dfc00115 	stw	ra,4(sp)
 400fbbc:	df000015 	stw	fp,0(sp)
 400fbc0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400fbc4:	d0a00b17 	ldw	r2,-32724(gp)
 400fbc8:	10000326 	beq	r2,zero,400fbd8 <alt_get_errno+0x24>
 400fbcc:	d0a00b17 	ldw	r2,-32724(gp)
 400fbd0:	103ee83a 	callr	r2
 400fbd4:	00000106 	br	400fbdc <alt_get_errno+0x28>
 400fbd8:	d0a6d504 	addi	r2,gp,-25772
}
 400fbdc:	e037883a 	mov	sp,fp
 400fbe0:	dfc00117 	ldw	ra,4(sp)
 400fbe4:	df000017 	ldw	fp,0(sp)
 400fbe8:	dec00204 	addi	sp,sp,8
 400fbec:	f800283a 	ret

0400fbf0 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 400fbf0:	defffd04 	addi	sp,sp,-12
 400fbf4:	df000215 	stw	fp,8(sp)
 400fbf8:	df000204 	addi	fp,sp,8
 400fbfc:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 400fc00:	e0bfff17 	ldw	r2,-4(fp)
 400fc04:	10800217 	ldw	r2,8(r2)
 400fc08:	10d00034 	orhi	r3,r2,16384
 400fc0c:	e0bfff17 	ldw	r2,-4(fp)
 400fc10:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 400fc14:	e03ffe15 	stw	zero,-8(fp)
 400fc18:	00001d06 	br	400fc90 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 400fc1c:	00810074 	movhi	r2,1025
 400fc20:	10839b04 	addi	r2,r2,3692
 400fc24:	e0fffe17 	ldw	r3,-8(fp)
 400fc28:	18c00324 	muli	r3,r3,12
 400fc2c:	10c5883a 	add	r2,r2,r3
 400fc30:	10c00017 	ldw	r3,0(r2)
 400fc34:	e0bfff17 	ldw	r2,-4(fp)
 400fc38:	10800017 	ldw	r2,0(r2)
 400fc3c:	1880111e 	bne	r3,r2,400fc84 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 400fc40:	00810074 	movhi	r2,1025
 400fc44:	10839b04 	addi	r2,r2,3692
 400fc48:	e0fffe17 	ldw	r3,-8(fp)
 400fc4c:	18c00324 	muli	r3,r3,12
 400fc50:	10c5883a 	add	r2,r2,r3
 400fc54:	10800204 	addi	r2,r2,8
 400fc58:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 400fc5c:	1000090e 	bge	r2,zero,400fc84 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 400fc60:	e0bffe17 	ldw	r2,-8(fp)
 400fc64:	10c00324 	muli	r3,r2,12
 400fc68:	00810074 	movhi	r2,1025
 400fc6c:	10839b04 	addi	r2,r2,3692
 400fc70:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 400fc74:	e0bfff17 	ldw	r2,-4(fp)
 400fc78:	18800226 	beq	r3,r2,400fc84 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 400fc7c:	00bffcc4 	movi	r2,-13
 400fc80:	00000806 	br	400fca4 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 400fc84:	e0bffe17 	ldw	r2,-8(fp)
 400fc88:	10800044 	addi	r2,r2,1
 400fc8c:	e0bffe15 	stw	r2,-8(fp)
 400fc90:	d0a00a17 	ldw	r2,-32728(gp)
 400fc94:	1007883a 	mov	r3,r2
 400fc98:	e0bffe17 	ldw	r2,-8(fp)
 400fc9c:	18bfdf2e 	bgeu	r3,r2,400fc1c <__alt_data_end+0xfc007c1c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 400fca0:	0005883a 	mov	r2,zero
}
 400fca4:	e037883a 	mov	sp,fp
 400fca8:	df000017 	ldw	fp,0(sp)
 400fcac:	dec00104 	addi	sp,sp,4
 400fcb0:	f800283a 	ret

0400fcb4 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 400fcb4:	defff604 	addi	sp,sp,-40
 400fcb8:	dfc00915 	stw	ra,36(sp)
 400fcbc:	df000815 	stw	fp,32(sp)
 400fcc0:	df000804 	addi	fp,sp,32
 400fcc4:	e13ffd15 	stw	r4,-12(fp)
 400fcc8:	e17ffe15 	stw	r5,-8(fp)
 400fccc:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 400fcd0:	00bfffc4 	movi	r2,-1
 400fcd4:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 400fcd8:	00bffb44 	movi	r2,-19
 400fcdc:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 400fce0:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 400fce4:	d1600804 	addi	r5,gp,-32736
 400fce8:	e13ffd17 	ldw	r4,-12(fp)
 400fcec:	400ffd00 	call	400ffd0 <alt_find_dev>
 400fcf0:	e0bff815 	stw	r2,-32(fp)
 400fcf4:	e0bff817 	ldw	r2,-32(fp)
 400fcf8:	1000051e 	bne	r2,zero,400fd10 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 400fcfc:	e13ffd17 	ldw	r4,-12(fp)
 400fd00:	40100600 	call	4010060 <alt_find_file>
 400fd04:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 400fd08:	00800044 	movi	r2,1
 400fd0c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 400fd10:	e0bff817 	ldw	r2,-32(fp)
 400fd14:	10002926 	beq	r2,zero,400fdbc <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
 400fd18:	e13ff817 	ldw	r4,-32(fp)
 400fd1c:	40101680 	call	4010168 <alt_get_fd>
 400fd20:	e0bff915 	stw	r2,-28(fp)
 400fd24:	e0bff917 	ldw	r2,-28(fp)
 400fd28:	1000030e 	bge	r2,zero,400fd38 <open+0x84>
    {
      status = index;
 400fd2c:	e0bff917 	ldw	r2,-28(fp)
 400fd30:	e0bffa15 	stw	r2,-24(fp)
 400fd34:	00002306 	br	400fdc4 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
 400fd38:	e0bff917 	ldw	r2,-28(fp)
 400fd3c:	10c00324 	muli	r3,r2,12
 400fd40:	00810074 	movhi	r2,1025
 400fd44:	10839b04 	addi	r2,r2,3692
 400fd48:	1885883a 	add	r2,r3,r2
 400fd4c:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 400fd50:	e0fffe17 	ldw	r3,-8(fp)
 400fd54:	00900034 	movhi	r2,16384
 400fd58:	10bfffc4 	addi	r2,r2,-1
 400fd5c:	1886703a 	and	r3,r3,r2
 400fd60:	e0bffc17 	ldw	r2,-16(fp)
 400fd64:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 400fd68:	e0bffb17 	ldw	r2,-20(fp)
 400fd6c:	1000051e 	bne	r2,zero,400fd84 <open+0xd0>
 400fd70:	e13ffc17 	ldw	r4,-16(fp)
 400fd74:	400fbf00 	call	400fbf0 <alt_file_locked>
 400fd78:	e0bffa15 	stw	r2,-24(fp)
 400fd7c:	e0bffa17 	ldw	r2,-24(fp)
 400fd80:	10001016 	blt	r2,zero,400fdc4 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 400fd84:	e0bff817 	ldw	r2,-32(fp)
 400fd88:	10800317 	ldw	r2,12(r2)
 400fd8c:	10000826 	beq	r2,zero,400fdb0 <open+0xfc>
 400fd90:	e0bff817 	ldw	r2,-32(fp)
 400fd94:	10800317 	ldw	r2,12(r2)
 400fd98:	e1ffff17 	ldw	r7,-4(fp)
 400fd9c:	e1bffe17 	ldw	r6,-8(fp)
 400fda0:	e17ffd17 	ldw	r5,-12(fp)
 400fda4:	e13ffc17 	ldw	r4,-16(fp)
 400fda8:	103ee83a 	callr	r2
 400fdac:	00000106 	br	400fdb4 <open+0x100>
 400fdb0:	0005883a 	mov	r2,zero
 400fdb4:	e0bffa15 	stw	r2,-24(fp)
 400fdb8:	00000206 	br	400fdc4 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
 400fdbc:	00bffb44 	movi	r2,-19
 400fdc0:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 400fdc4:	e0bffa17 	ldw	r2,-24(fp)
 400fdc8:	1000090e 	bge	r2,zero,400fdf0 <open+0x13c>
  {
    alt_release_fd (index);  
 400fdcc:	e13ff917 	ldw	r4,-28(fp)
 400fdd0:	400e5e00 	call	400e5e0 <alt_release_fd>
    ALT_ERRNO = -status;
 400fdd4:	400fbb40 	call	400fbb4 <alt_get_errno>
 400fdd8:	1007883a 	mov	r3,r2
 400fddc:	e0bffa17 	ldw	r2,-24(fp)
 400fde0:	0085c83a 	sub	r2,zero,r2
 400fde4:	18800015 	stw	r2,0(r3)
    return -1;
 400fde8:	00bfffc4 	movi	r2,-1
 400fdec:	00000106 	br	400fdf4 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
 400fdf0:	e0bff917 	ldw	r2,-28(fp)
}
 400fdf4:	e037883a 	mov	sp,fp
 400fdf8:	dfc00117 	ldw	ra,4(sp)
 400fdfc:	df000017 	ldw	fp,0(sp)
 400fe00:	dec00204 	addi	sp,sp,8
 400fe04:	f800283a 	ret

0400fe08 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 400fe08:	defffa04 	addi	sp,sp,-24
 400fe0c:	df000515 	stw	fp,20(sp)
 400fe10:	df000504 	addi	fp,sp,20
 400fe14:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400fe18:	0005303a 	rdctl	r2,status
 400fe1c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400fe20:	e0fffc17 	ldw	r3,-16(fp)
 400fe24:	00bfff84 	movi	r2,-2
 400fe28:	1884703a 	and	r2,r3,r2
 400fe2c:	1001703a 	wrctl	status,r2
  
  return context;
 400fe30:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 400fe34:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 400fe38:	e0bfff17 	ldw	r2,-4(fp)
 400fe3c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 400fe40:	e0bffd17 	ldw	r2,-12(fp)
 400fe44:	10800017 	ldw	r2,0(r2)
 400fe48:	e0fffd17 	ldw	r3,-12(fp)
 400fe4c:	18c00117 	ldw	r3,4(r3)
 400fe50:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 400fe54:	e0bffd17 	ldw	r2,-12(fp)
 400fe58:	10800117 	ldw	r2,4(r2)
 400fe5c:	e0fffd17 	ldw	r3,-12(fp)
 400fe60:	18c00017 	ldw	r3,0(r3)
 400fe64:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 400fe68:	e0bffd17 	ldw	r2,-12(fp)
 400fe6c:	e0fffd17 	ldw	r3,-12(fp)
 400fe70:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 400fe74:	e0bffd17 	ldw	r2,-12(fp)
 400fe78:	e0fffd17 	ldw	r3,-12(fp)
 400fe7c:	10c00015 	stw	r3,0(r2)
 400fe80:	e0bffb17 	ldw	r2,-20(fp)
 400fe84:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400fe88:	e0bffe17 	ldw	r2,-8(fp)
 400fe8c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 400fe90:	0001883a 	nop
 400fe94:	e037883a 	mov	sp,fp
 400fe98:	df000017 	ldw	fp,0(sp)
 400fe9c:	dec00104 	addi	sp,sp,4
 400fea0:	f800283a 	ret

0400fea4 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 400fea4:	defffb04 	addi	sp,sp,-20
 400fea8:	dfc00415 	stw	ra,16(sp)
 400feac:	df000315 	stw	fp,12(sp)
 400feb0:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 400feb4:	d0a00e17 	ldw	r2,-32712(gp)
 400feb8:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 400febc:	d0a6dd17 	ldw	r2,-25740(gp)
 400fec0:	10800044 	addi	r2,r2,1
 400fec4:	d0a6dd15 	stw	r2,-25740(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 400fec8:	00002e06 	br	400ff84 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 400fecc:	e0bffd17 	ldw	r2,-12(fp)
 400fed0:	10800017 	ldw	r2,0(r2)
 400fed4:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 400fed8:	e0bffd17 	ldw	r2,-12(fp)
 400fedc:	10800403 	ldbu	r2,16(r2)
 400fee0:	10803fcc 	andi	r2,r2,255
 400fee4:	10000426 	beq	r2,zero,400fef8 <alt_tick+0x54>
 400fee8:	d0a6dd17 	ldw	r2,-25740(gp)
 400feec:	1000021e 	bne	r2,zero,400fef8 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 400fef0:	e0bffd17 	ldw	r2,-12(fp)
 400fef4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 400fef8:	e0bffd17 	ldw	r2,-12(fp)
 400fefc:	10800217 	ldw	r2,8(r2)
 400ff00:	d0e6dd17 	ldw	r3,-25740(gp)
 400ff04:	18801d36 	bltu	r3,r2,400ff7c <alt_tick+0xd8>
 400ff08:	e0bffd17 	ldw	r2,-12(fp)
 400ff0c:	10800403 	ldbu	r2,16(r2)
 400ff10:	10803fcc 	andi	r2,r2,255
 400ff14:	1000191e 	bne	r2,zero,400ff7c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 400ff18:	e0bffd17 	ldw	r2,-12(fp)
 400ff1c:	10800317 	ldw	r2,12(r2)
 400ff20:	e0fffd17 	ldw	r3,-12(fp)
 400ff24:	18c00517 	ldw	r3,20(r3)
 400ff28:	1809883a 	mov	r4,r3
 400ff2c:	103ee83a 	callr	r2
 400ff30:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 400ff34:	e0bfff17 	ldw	r2,-4(fp)
 400ff38:	1000031e 	bne	r2,zero,400ff48 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 400ff3c:	e13ffd17 	ldw	r4,-12(fp)
 400ff40:	400fe080 	call	400fe08 <alt_alarm_stop>
 400ff44:	00000d06 	br	400ff7c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 400ff48:	e0bffd17 	ldw	r2,-12(fp)
 400ff4c:	10c00217 	ldw	r3,8(r2)
 400ff50:	e0bfff17 	ldw	r2,-4(fp)
 400ff54:	1887883a 	add	r3,r3,r2
 400ff58:	e0bffd17 	ldw	r2,-12(fp)
 400ff5c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 400ff60:	e0bffd17 	ldw	r2,-12(fp)
 400ff64:	10c00217 	ldw	r3,8(r2)
 400ff68:	d0a6dd17 	ldw	r2,-25740(gp)
 400ff6c:	1880032e 	bgeu	r3,r2,400ff7c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 400ff70:	e0bffd17 	ldw	r2,-12(fp)
 400ff74:	00c00044 	movi	r3,1
 400ff78:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 400ff7c:	e0bffe17 	ldw	r2,-8(fp)
 400ff80:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 400ff84:	e0fffd17 	ldw	r3,-12(fp)
 400ff88:	d0a00e04 	addi	r2,gp,-32712
 400ff8c:	18bfcf1e 	bne	r3,r2,400fecc <__alt_data_end+0xfc007ecc>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 400ff90:	0001883a 	nop
}
 400ff94:	0001883a 	nop
 400ff98:	e037883a 	mov	sp,fp
 400ff9c:	dfc00117 	ldw	ra,4(sp)
 400ffa0:	df000017 	ldw	fp,0(sp)
 400ffa4:	dec00204 	addi	sp,sp,8
 400ffa8:	f800283a 	ret

0400ffac <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
 400ffac:	deffff04 	addi	sp,sp,-4
 400ffb0:	df000015 	stw	fp,0(sp)
 400ffb4:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 400ffb8:	000170fa 	wrctl	ienable,zero
}
 400ffbc:	0001883a 	nop
 400ffc0:	e037883a 	mov	sp,fp
 400ffc4:	df000017 	ldw	fp,0(sp)
 400ffc8:	dec00104 	addi	sp,sp,4
 400ffcc:	f800283a 	ret

0400ffd0 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 400ffd0:	defffa04 	addi	sp,sp,-24
 400ffd4:	dfc00515 	stw	ra,20(sp)
 400ffd8:	df000415 	stw	fp,16(sp)
 400ffdc:	df000404 	addi	fp,sp,16
 400ffe0:	e13ffe15 	stw	r4,-8(fp)
 400ffe4:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 400ffe8:	e0bfff17 	ldw	r2,-4(fp)
 400ffec:	10800017 	ldw	r2,0(r2)
 400fff0:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 400fff4:	e13ffe17 	ldw	r4,-8(fp)
 400fff8:	40027600 	call	4002760 <strlen>
 400fffc:	10800044 	addi	r2,r2,1
 4010000:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 4010004:	00000d06 	br	401003c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 4010008:	e0bffc17 	ldw	r2,-16(fp)
 401000c:	10800217 	ldw	r2,8(r2)
 4010010:	e0fffd17 	ldw	r3,-12(fp)
 4010014:	180d883a 	mov	r6,r3
 4010018:	e17ffe17 	ldw	r5,-8(fp)
 401001c:	1009883a 	mov	r4,r2
 4010020:	40102580 	call	4010258 <memcmp>
 4010024:	1000021e 	bne	r2,zero,4010030 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 4010028:	e0bffc17 	ldw	r2,-16(fp)
 401002c:	00000706 	br	401004c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 4010030:	e0bffc17 	ldw	r2,-16(fp)
 4010034:	10800017 	ldw	r2,0(r2)
 4010038:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 401003c:	e0fffc17 	ldw	r3,-16(fp)
 4010040:	e0bfff17 	ldw	r2,-4(fp)
 4010044:	18bff01e 	bne	r3,r2,4010008 <__alt_data_end+0xfc008008>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 4010048:	0005883a 	mov	r2,zero
}
 401004c:	e037883a 	mov	sp,fp
 4010050:	dfc00117 	ldw	ra,4(sp)
 4010054:	df000017 	ldw	fp,0(sp)
 4010058:	dec00204 	addi	sp,sp,8
 401005c:	f800283a 	ret

04010060 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 4010060:	defffb04 	addi	sp,sp,-20
 4010064:	dfc00415 	stw	ra,16(sp)
 4010068:	df000315 	stw	fp,12(sp)
 401006c:	df000304 	addi	fp,sp,12
 4010070:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 4010074:	d0a00617 	ldw	r2,-32744(gp)
 4010078:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 401007c:	00003106 	br	4010144 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 4010080:	e0bffd17 	ldw	r2,-12(fp)
 4010084:	10800217 	ldw	r2,8(r2)
 4010088:	1009883a 	mov	r4,r2
 401008c:	40027600 	call	4002760 <strlen>
 4010090:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 4010094:	e0bffd17 	ldw	r2,-12(fp)
 4010098:	10c00217 	ldw	r3,8(r2)
 401009c:	e0bffe17 	ldw	r2,-8(fp)
 40100a0:	10bfffc4 	addi	r2,r2,-1
 40100a4:	1885883a 	add	r2,r3,r2
 40100a8:	10800003 	ldbu	r2,0(r2)
 40100ac:	10803fcc 	andi	r2,r2,255
 40100b0:	1080201c 	xori	r2,r2,128
 40100b4:	10bfe004 	addi	r2,r2,-128
 40100b8:	10800bd8 	cmpnei	r2,r2,47
 40100bc:	1000031e 	bne	r2,zero,40100cc <alt_find_file+0x6c>
    {
      len -= 1;
 40100c0:	e0bffe17 	ldw	r2,-8(fp)
 40100c4:	10bfffc4 	addi	r2,r2,-1
 40100c8:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 40100cc:	e0bffe17 	ldw	r2,-8(fp)
 40100d0:	e0ffff17 	ldw	r3,-4(fp)
 40100d4:	1885883a 	add	r2,r3,r2
 40100d8:	10800003 	ldbu	r2,0(r2)
 40100dc:	10803fcc 	andi	r2,r2,255
 40100e0:	1080201c 	xori	r2,r2,128
 40100e4:	10bfe004 	addi	r2,r2,-128
 40100e8:	10800be0 	cmpeqi	r2,r2,47
 40100ec:	1000081e 	bne	r2,zero,4010110 <alt_find_file+0xb0>
 40100f0:	e0bffe17 	ldw	r2,-8(fp)
 40100f4:	e0ffff17 	ldw	r3,-4(fp)
 40100f8:	1885883a 	add	r2,r3,r2
 40100fc:	10800003 	ldbu	r2,0(r2)
 4010100:	10803fcc 	andi	r2,r2,255
 4010104:	1080201c 	xori	r2,r2,128
 4010108:	10bfe004 	addi	r2,r2,-128
 401010c:	10000a1e 	bne	r2,zero,4010138 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 4010110:	e0bffd17 	ldw	r2,-12(fp)
 4010114:	10800217 	ldw	r2,8(r2)
 4010118:	e0fffe17 	ldw	r3,-8(fp)
 401011c:	180d883a 	mov	r6,r3
 4010120:	e17fff17 	ldw	r5,-4(fp)
 4010124:	1009883a 	mov	r4,r2
 4010128:	40102580 	call	4010258 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 401012c:	1000021e 	bne	r2,zero,4010138 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 4010130:	e0bffd17 	ldw	r2,-12(fp)
 4010134:	00000706 	br	4010154 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 4010138:	e0bffd17 	ldw	r2,-12(fp)
 401013c:	10800017 	ldw	r2,0(r2)
 4010140:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 4010144:	e0fffd17 	ldw	r3,-12(fp)
 4010148:	d0a00604 	addi	r2,gp,-32744
 401014c:	18bfcc1e 	bne	r3,r2,4010080 <__alt_data_end+0xfc008080>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 4010150:	0005883a 	mov	r2,zero
}
 4010154:	e037883a 	mov	sp,fp
 4010158:	dfc00117 	ldw	ra,4(sp)
 401015c:	df000017 	ldw	fp,0(sp)
 4010160:	dec00204 	addi	sp,sp,8
 4010164:	f800283a 	ret

04010168 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 4010168:	defffc04 	addi	sp,sp,-16
 401016c:	df000315 	stw	fp,12(sp)
 4010170:	df000304 	addi	fp,sp,12
 4010174:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 4010178:	00bffa04 	movi	r2,-24
 401017c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 4010180:	e03ffd15 	stw	zero,-12(fp)
 4010184:	00001906 	br	40101ec <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
 4010188:	00810074 	movhi	r2,1025
 401018c:	10839b04 	addi	r2,r2,3692
 4010190:	e0fffd17 	ldw	r3,-12(fp)
 4010194:	18c00324 	muli	r3,r3,12
 4010198:	10c5883a 	add	r2,r2,r3
 401019c:	10800017 	ldw	r2,0(r2)
 40101a0:	10000f1e 	bne	r2,zero,40101e0 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
 40101a4:	00810074 	movhi	r2,1025
 40101a8:	10839b04 	addi	r2,r2,3692
 40101ac:	e0fffd17 	ldw	r3,-12(fp)
 40101b0:	18c00324 	muli	r3,r3,12
 40101b4:	10c5883a 	add	r2,r2,r3
 40101b8:	e0ffff17 	ldw	r3,-4(fp)
 40101bc:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 40101c0:	d0e00a17 	ldw	r3,-32728(gp)
 40101c4:	e0bffd17 	ldw	r2,-12(fp)
 40101c8:	1880020e 	bge	r3,r2,40101d4 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
 40101cc:	e0bffd17 	ldw	r2,-12(fp)
 40101d0:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
 40101d4:	e0bffd17 	ldw	r2,-12(fp)
 40101d8:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 40101dc:	00000606 	br	40101f8 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 40101e0:	e0bffd17 	ldw	r2,-12(fp)
 40101e4:	10800044 	addi	r2,r2,1
 40101e8:	e0bffd15 	stw	r2,-12(fp)
 40101ec:	e0bffd17 	ldw	r2,-12(fp)
 40101f0:	10800810 	cmplti	r2,r2,32
 40101f4:	103fe41e 	bne	r2,zero,4010188 <__alt_data_end+0xfc008188>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 40101f8:	e0bffe17 	ldw	r2,-8(fp)
}
 40101fc:	e037883a 	mov	sp,fp
 4010200:	df000017 	ldw	fp,0(sp)
 4010204:	dec00104 	addi	sp,sp,4
 4010208:	f800283a 	ret

0401020c <atexit>:
 401020c:	200b883a 	mov	r5,r4
 4010210:	000f883a 	mov	r7,zero
 4010214:	000d883a 	mov	r6,zero
 4010218:	0009883a 	mov	r4,zero
 401021c:	40102d41 	jmpi	40102d4 <__register_exitproc>

04010220 <exit>:
 4010220:	defffe04 	addi	sp,sp,-8
 4010224:	000b883a 	mov	r5,zero
 4010228:	dc000015 	stw	r16,0(sp)
 401022c:	dfc00115 	stw	ra,4(sp)
 4010230:	2021883a 	mov	r16,r4
 4010234:	40103ec0 	call	40103ec <__call_exitprocs>
 4010238:	00810074 	movhi	r2,1025
 401023c:	10881304 	addi	r2,r2,8268
 4010240:	11000017 	ldw	r4,0(r2)
 4010244:	20800f17 	ldw	r2,60(r4)
 4010248:	10000126 	beq	r2,zero,4010250 <exit+0x30>
 401024c:	103ee83a 	callr	r2
 4010250:	8009883a 	mov	r4,r16
 4010254:	401056c0 	call	401056c <_exit>

04010258 <memcmp>:
 4010258:	01c000c4 	movi	r7,3
 401025c:	3980192e 	bgeu	r7,r6,40102c4 <memcmp+0x6c>
 4010260:	2144b03a 	or	r2,r4,r5
 4010264:	11c4703a 	and	r2,r2,r7
 4010268:	10000f26 	beq	r2,zero,40102a8 <memcmp+0x50>
 401026c:	20800003 	ldbu	r2,0(r4)
 4010270:	28c00003 	ldbu	r3,0(r5)
 4010274:	10c0151e 	bne	r2,r3,40102cc <memcmp+0x74>
 4010278:	31bfff84 	addi	r6,r6,-2
 401027c:	01ffffc4 	movi	r7,-1
 4010280:	00000406 	br	4010294 <memcmp+0x3c>
 4010284:	20800003 	ldbu	r2,0(r4)
 4010288:	28c00003 	ldbu	r3,0(r5)
 401028c:	31bfffc4 	addi	r6,r6,-1
 4010290:	10c00e1e 	bne	r2,r3,40102cc <memcmp+0x74>
 4010294:	21000044 	addi	r4,r4,1
 4010298:	29400044 	addi	r5,r5,1
 401029c:	31fff91e 	bne	r6,r7,4010284 <__alt_data_end+0xfc008284>
 40102a0:	0005883a 	mov	r2,zero
 40102a4:	f800283a 	ret
 40102a8:	20c00017 	ldw	r3,0(r4)
 40102ac:	28800017 	ldw	r2,0(r5)
 40102b0:	18bfee1e 	bne	r3,r2,401026c <__alt_data_end+0xfc00826c>
 40102b4:	31bfff04 	addi	r6,r6,-4
 40102b8:	21000104 	addi	r4,r4,4
 40102bc:	29400104 	addi	r5,r5,4
 40102c0:	39bff936 	bltu	r7,r6,40102a8 <__alt_data_end+0xfc0082a8>
 40102c4:	303fe91e 	bne	r6,zero,401026c <__alt_data_end+0xfc00826c>
 40102c8:	003ff506 	br	40102a0 <__alt_data_end+0xfc0082a0>
 40102cc:	10c5c83a 	sub	r2,r2,r3
 40102d0:	f800283a 	ret

040102d4 <__register_exitproc>:
 40102d4:	defffa04 	addi	sp,sp,-24
 40102d8:	dc000315 	stw	r16,12(sp)
 40102dc:	04010074 	movhi	r16,1025
 40102e0:	84081304 	addi	r16,r16,8268
 40102e4:	80c00017 	ldw	r3,0(r16)
 40102e8:	dc400415 	stw	r17,16(sp)
 40102ec:	dfc00515 	stw	ra,20(sp)
 40102f0:	18805217 	ldw	r2,328(r3)
 40102f4:	2023883a 	mov	r17,r4
 40102f8:	10003726 	beq	r2,zero,40103d8 <__register_exitproc+0x104>
 40102fc:	10c00117 	ldw	r3,4(r2)
 4010300:	010007c4 	movi	r4,31
 4010304:	20c00e16 	blt	r4,r3,4010340 <__register_exitproc+0x6c>
 4010308:	1a000044 	addi	r8,r3,1
 401030c:	8800221e 	bne	r17,zero,4010398 <__register_exitproc+0xc4>
 4010310:	18c00084 	addi	r3,r3,2
 4010314:	18c7883a 	add	r3,r3,r3
 4010318:	18c7883a 	add	r3,r3,r3
 401031c:	12000115 	stw	r8,4(r2)
 4010320:	10c7883a 	add	r3,r2,r3
 4010324:	19400015 	stw	r5,0(r3)
 4010328:	0005883a 	mov	r2,zero
 401032c:	dfc00517 	ldw	ra,20(sp)
 4010330:	dc400417 	ldw	r17,16(sp)
 4010334:	dc000317 	ldw	r16,12(sp)
 4010338:	dec00604 	addi	sp,sp,24
 401033c:	f800283a 	ret
 4010340:	00800034 	movhi	r2,0
 4010344:	10800004 	addi	r2,r2,0
 4010348:	10002626 	beq	r2,zero,40103e4 <__register_exitproc+0x110>
 401034c:	01006404 	movi	r4,400
 4010350:	d9400015 	stw	r5,0(sp)
 4010354:	d9800115 	stw	r6,4(sp)
 4010358:	d9c00215 	stw	r7,8(sp)
 401035c:	00000000 	call	0 <__alt_mem_new_sdram_controller_0-0x4000000>
 4010360:	d9400017 	ldw	r5,0(sp)
 4010364:	d9800117 	ldw	r6,4(sp)
 4010368:	d9c00217 	ldw	r7,8(sp)
 401036c:	10001d26 	beq	r2,zero,40103e4 <__register_exitproc+0x110>
 4010370:	81000017 	ldw	r4,0(r16)
 4010374:	10000115 	stw	zero,4(r2)
 4010378:	02000044 	movi	r8,1
 401037c:	22405217 	ldw	r9,328(r4)
 4010380:	0007883a 	mov	r3,zero
 4010384:	12400015 	stw	r9,0(r2)
 4010388:	20805215 	stw	r2,328(r4)
 401038c:	10006215 	stw	zero,392(r2)
 4010390:	10006315 	stw	zero,396(r2)
 4010394:	883fde26 	beq	r17,zero,4010310 <__alt_data_end+0xfc008310>
 4010398:	18c9883a 	add	r4,r3,r3
 401039c:	2109883a 	add	r4,r4,r4
 40103a0:	1109883a 	add	r4,r2,r4
 40103a4:	21802215 	stw	r6,136(r4)
 40103a8:	01800044 	movi	r6,1
 40103ac:	12406217 	ldw	r9,392(r2)
 40103b0:	30cc983a 	sll	r6,r6,r3
 40103b4:	4992b03a 	or	r9,r9,r6
 40103b8:	12406215 	stw	r9,392(r2)
 40103bc:	21c04215 	stw	r7,264(r4)
 40103c0:	01000084 	movi	r4,2
 40103c4:	893fd21e 	bne	r17,r4,4010310 <__alt_data_end+0xfc008310>
 40103c8:	11006317 	ldw	r4,396(r2)
 40103cc:	218cb03a 	or	r6,r4,r6
 40103d0:	11806315 	stw	r6,396(r2)
 40103d4:	003fce06 	br	4010310 <__alt_data_end+0xfc008310>
 40103d8:	18805304 	addi	r2,r3,332
 40103dc:	18805215 	stw	r2,328(r3)
 40103e0:	003fc606 	br	40102fc <__alt_data_end+0xfc0082fc>
 40103e4:	00bfffc4 	movi	r2,-1
 40103e8:	003fd006 	br	401032c <__alt_data_end+0xfc00832c>

040103ec <__call_exitprocs>:
 40103ec:	defff504 	addi	sp,sp,-44
 40103f0:	df000915 	stw	fp,36(sp)
 40103f4:	dd400615 	stw	r21,24(sp)
 40103f8:	dc800315 	stw	r18,12(sp)
 40103fc:	dfc00a15 	stw	ra,40(sp)
 4010400:	ddc00815 	stw	r23,32(sp)
 4010404:	dd800715 	stw	r22,28(sp)
 4010408:	dd000515 	stw	r20,20(sp)
 401040c:	dcc00415 	stw	r19,16(sp)
 4010410:	dc400215 	stw	r17,8(sp)
 4010414:	dc000115 	stw	r16,4(sp)
 4010418:	d9000015 	stw	r4,0(sp)
 401041c:	2839883a 	mov	fp,r5
 4010420:	04800044 	movi	r18,1
 4010424:	057fffc4 	movi	r21,-1
 4010428:	00810074 	movhi	r2,1025
 401042c:	10881304 	addi	r2,r2,8268
 4010430:	12000017 	ldw	r8,0(r2)
 4010434:	45005217 	ldw	r20,328(r8)
 4010438:	44c05204 	addi	r19,r8,328
 401043c:	a0001c26 	beq	r20,zero,40104b0 <__call_exitprocs+0xc4>
 4010440:	a0800117 	ldw	r2,4(r20)
 4010444:	15ffffc4 	addi	r23,r2,-1
 4010448:	b8000d16 	blt	r23,zero,4010480 <__call_exitprocs+0x94>
 401044c:	14000044 	addi	r16,r2,1
 4010450:	8421883a 	add	r16,r16,r16
 4010454:	8421883a 	add	r16,r16,r16
 4010458:	84402004 	addi	r17,r16,128
 401045c:	a463883a 	add	r17,r20,r17
 4010460:	a421883a 	add	r16,r20,r16
 4010464:	e0001e26 	beq	fp,zero,40104e0 <__call_exitprocs+0xf4>
 4010468:	80804017 	ldw	r2,256(r16)
 401046c:	e0801c26 	beq	fp,r2,40104e0 <__call_exitprocs+0xf4>
 4010470:	bdffffc4 	addi	r23,r23,-1
 4010474:	843fff04 	addi	r16,r16,-4
 4010478:	8c7fff04 	addi	r17,r17,-4
 401047c:	bd7ff91e 	bne	r23,r21,4010464 <__alt_data_end+0xfc008464>
 4010480:	00800034 	movhi	r2,0
 4010484:	10800004 	addi	r2,r2,0
 4010488:	10000926 	beq	r2,zero,40104b0 <__call_exitprocs+0xc4>
 401048c:	a0800117 	ldw	r2,4(r20)
 4010490:	1000301e 	bne	r2,zero,4010554 <__call_exitprocs+0x168>
 4010494:	a0800017 	ldw	r2,0(r20)
 4010498:	10003226 	beq	r2,zero,4010564 <__call_exitprocs+0x178>
 401049c:	a009883a 	mov	r4,r20
 40104a0:	98800015 	stw	r2,0(r19)
 40104a4:	00000000 	call	0 <__alt_mem_new_sdram_controller_0-0x4000000>
 40104a8:	9d000017 	ldw	r20,0(r19)
 40104ac:	a03fe41e 	bne	r20,zero,4010440 <__alt_data_end+0xfc008440>
 40104b0:	dfc00a17 	ldw	ra,40(sp)
 40104b4:	df000917 	ldw	fp,36(sp)
 40104b8:	ddc00817 	ldw	r23,32(sp)
 40104bc:	dd800717 	ldw	r22,28(sp)
 40104c0:	dd400617 	ldw	r21,24(sp)
 40104c4:	dd000517 	ldw	r20,20(sp)
 40104c8:	dcc00417 	ldw	r19,16(sp)
 40104cc:	dc800317 	ldw	r18,12(sp)
 40104d0:	dc400217 	ldw	r17,8(sp)
 40104d4:	dc000117 	ldw	r16,4(sp)
 40104d8:	dec00b04 	addi	sp,sp,44
 40104dc:	f800283a 	ret
 40104e0:	a0800117 	ldw	r2,4(r20)
 40104e4:	80c00017 	ldw	r3,0(r16)
 40104e8:	10bfffc4 	addi	r2,r2,-1
 40104ec:	15c01426 	beq	r2,r23,4010540 <__call_exitprocs+0x154>
 40104f0:	80000015 	stw	zero,0(r16)
 40104f4:	183fde26 	beq	r3,zero,4010470 <__alt_data_end+0xfc008470>
 40104f8:	95c8983a 	sll	r4,r18,r23
 40104fc:	a0806217 	ldw	r2,392(r20)
 4010500:	a5800117 	ldw	r22,4(r20)
 4010504:	2084703a 	and	r2,r4,r2
 4010508:	10000b26 	beq	r2,zero,4010538 <__call_exitprocs+0x14c>
 401050c:	a0806317 	ldw	r2,396(r20)
 4010510:	2088703a 	and	r4,r4,r2
 4010514:	20000c1e 	bne	r4,zero,4010548 <__call_exitprocs+0x15c>
 4010518:	89400017 	ldw	r5,0(r17)
 401051c:	d9000017 	ldw	r4,0(sp)
 4010520:	183ee83a 	callr	r3
 4010524:	a0800117 	ldw	r2,4(r20)
 4010528:	15bfbf1e 	bne	r2,r22,4010428 <__alt_data_end+0xfc008428>
 401052c:	98800017 	ldw	r2,0(r19)
 4010530:	153fcf26 	beq	r2,r20,4010470 <__alt_data_end+0xfc008470>
 4010534:	003fbc06 	br	4010428 <__alt_data_end+0xfc008428>
 4010538:	183ee83a 	callr	r3
 401053c:	003ff906 	br	4010524 <__alt_data_end+0xfc008524>
 4010540:	a5c00115 	stw	r23,4(r20)
 4010544:	003feb06 	br	40104f4 <__alt_data_end+0xfc0084f4>
 4010548:	89000017 	ldw	r4,0(r17)
 401054c:	183ee83a 	callr	r3
 4010550:	003ff406 	br	4010524 <__alt_data_end+0xfc008524>
 4010554:	a0800017 	ldw	r2,0(r20)
 4010558:	a027883a 	mov	r19,r20
 401055c:	1029883a 	mov	r20,r2
 4010560:	003fb606 	br	401043c <__alt_data_end+0xfc00843c>
 4010564:	0005883a 	mov	r2,zero
 4010568:	003ffb06 	br	4010558 <__alt_data_end+0xfc008558>

0401056c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 401056c:	defffd04 	addi	sp,sp,-12
 4010570:	df000215 	stw	fp,8(sp)
 4010574:	df000204 	addi	fp,sp,8
 4010578:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 401057c:	0001883a 	nop
 4010580:	e0bfff17 	ldw	r2,-4(fp)
 4010584:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 4010588:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 401058c:	10000226 	beq	r2,zero,4010598 <_exit+0x2c>
    ALT_SIM_FAIL();
 4010590:	002af070 	cmpltui	zero,zero,43969
 4010594:	00000106 	br	401059c <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 4010598:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 401059c:	003fff06 	br	401059c <__alt_data_end+0xfc00859c>
