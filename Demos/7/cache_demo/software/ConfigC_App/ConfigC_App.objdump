
ConfigC_App.elf:     file format elf32-littlenios2
ConfigC_App.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x040001c0

Program Header:
    LOAD off    0x00001000 vaddr 0x04000000 paddr 0x04000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x04000020 paddr 0x04000020 align 2**12
         filesz 0x00010b10 memsz 0x00010b10 flags r-x
    LOAD off    0x00011b30 vaddr 0x04010b30 paddr 0x0401261c align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00014108 vaddr 0x04014108 paddr 0x04014108 align 2**12
         filesz 0x00000000 memsz 0x00000174 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  04000000  04000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   000001a0  04000020  04000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000104cc  040001c0  040001c0  000011c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000004a4  0401068c  0401068c  0001168c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  04010b30  0401261c  00011b30  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000174  04014108  04014108  00014108  2**2
                  ALLOC, SMALL_DATA
  6 .new_sdram_controller_0 00000000  0401427c  0401427c  0001361c  2**0
                  CONTENTS
  7 .onchip_memory2_0 00000000  08000000  08000000  0001361c  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  0001361c  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000f98  00000000  00000000  00013640  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   0002528b  00000000  00000000  000145d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 000099e3  00000000  00000000  00039863  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000bd88  00000000  00000000  00043246  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  000022d4  00000000  00000000  0004efd0  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003648  00000000  00000000  000512a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00018f95  00000000  00000000  000548ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000030  00000000  00000000  0006d884  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001a80  00000000  00000000  0006d8b8  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  00072705  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  00072708  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  00072714  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  00072715  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  00072716  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  0007271a  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0007271e  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  00072722  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  0007272d  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  00072738  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000007  00000000  00000000  00072743  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000033  00000000  00000000  0007274a  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0003c1d4  00000000  00000000  0007277d  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
04000000 l    d  .entry	00000000 .entry
04000020 l    d  .exceptions	00000000 .exceptions
040001c0 l    d  .text	00000000 .text
0401068c l    d  .rodata	00000000 .rodata
04010b30 l    d  .rwdata	00000000 .rwdata
04014108 l    d  .bss	00000000 .bss
0401427c l    d  .new_sdram_controller_0	00000000 .new_sdram_controller_0
08000000 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../ConfigC_App_bsp//obj/HAL/src/crt0.o
04000208 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
04000094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 Functions2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 floatunsisf.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
04010976 l     O .rodata	00000010 zeroes.4404
04004ad0 l     F .text	000000bc __sbprintf
04010986 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
04004ce0 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
04006810 l     F .text	00000008 __fp_unlock
04006824 l     F .text	0000019c __sinit.part.1
040069c0 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
04010b30 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
04010f74 l     O .rwdata	00000020 lc_ctype_charset
04010f54 l     O .rwdata	00000020 lc_message_charset
04010f94 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
040109b8 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
04009f24 l     F .text	000000fc __sprint_r.part.0
04010aec l     O .rodata	00000010 blanks.4348
04010adc l     O .rodata	00000010 zeroes.4349
0400b4b0 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0400df54 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
0400e0a8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0400e0d4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0400e1f4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0400e2d4 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0400e3c0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0400e594 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0401260c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0400e7e0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0400e914 l     F .text	00000034 alt_dev_reg
0401157c l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0400ec08 l     F .text	0000020c altera_avalon_jtag_uart_irq
0400ee14 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_ts.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_vars.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0400f690 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0400fb60 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0400fca0 l     F .text	0000003c alt_get_errno
0400fcdc l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
04002738 g     F .text	00000018 putchar
04009400 g     F .text	00000074 _mprec_log10
040094ec g     F .text	0000008c __any_on
0400bba4 g     F .text	00000054 _isatty_r
040109c4 g     O .rodata	00000028 __mprec_tinytens
0400e4d0 g     F .text	0000007c alt_main
04002750 g     F .text	000000c0 _puts_r
0401417c g     O .bss	00000100 alt_irq
0400bbf8 g     F .text	00000060 _lseek_r
0401261c g       *ABS*	00000000 __flash_rwdata_start
0400d1fc g     F .text	00000088 .hidden __eqdf2
0401427c g       *ABS*	00000000 __alt_heap_start
040026f4 g     F .text	0000003c printf
0400bcb8 g     F .text	0000009c _wcrtomb_r
04009de4 g     F .text	0000005c __sseek
04006b60 g     F .text	00000010 __sinit
0400b56c g     F .text	00000140 __swbuf_r
04007628 g     F .text	0000007c _setlocale_r
040069c8 g     F .text	00000068 __sfmoreglue
0400e570 g     F .text	00000024 __malloc_unlock
04000b00 g     F .text	00000440 .hidden __divsf3
04014144 g     O .bss	00000004 altera_avalon_timer_ts_freq
040082f8 g     F .text	0000015c memmove
04006b48 g     F .text	00000018 _cleanup
0400857c g     F .text	000000a8 _Balloc
0400d284 g     F .text	000000dc .hidden __gtdf2
04000000 g     F .entry	0000001c __reset
04000020 g       *ABS*	00000000 __flash_exceptions_start
0400bb48 g     F .text	0000005c _fstat_r
04014130 g     O .bss	00000004 errno
04009d60 g     F .text	00000008 __seofread
0400020c g     F .text	0000007c microseconds
04014138 g     O .bss	00000004 alt_argv
0401a5dc g       *ABS*	00000000 _gp
040113fc g     O .rwdata	00000180 alt_fd_list
04002730 g     F .text	00000008 _putchar_r
040100bc g     F .text	00000090 alt_find_dev
040081b0 g     F .text	00000148 memcpy
04006818 g     F .text	0000000c _cleanup_r
0400ddd0 g     F .text	000000dc .hidden __floatsidf
0400fc24 g     F .text	0000007c alt_io_redirect
0400d360 g     F .text	000000f4 .hidden __ltdf2
0401068c g       *ABS*	00000000 __DTOR_END__
04002810 g     F .text	00000014 puts
04009c44 g     F .text	00000074 __fpclassifyd
0400935c g     F .text	000000a4 __ratio
0400b494 g     F .text	0000001c __vfiprintf_internal
0400f00c g     F .text	0000021c altera_avalon_jtag_uart_read
040026c4 g     F .text	00000030 _printf_r
08000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
04000a44 g     F .text	00000064 .hidden __udivsi3
0400e230 g     F .text	000000a4 isatty
04000288 g     F .text	00000068 initArray
04010a14 g     O .rodata	000000c8 __mprec_tens
040076a4 g     F .text	0000000c __locale_charset
0400032c g     F .text	00000040 stop_measurement
0400f830 g     F .text	00000090 alt_icache_flush
0401412c g     O .bss	00000004 __malloc_top_pad
04014108 g     O .bss	00000004 time_1
040125e4 g     O .rwdata	00000004 __mb_cur_max
040076d4 g     F .text	0000000c _localeconv_r
04008988 g     F .text	0000003c __i2b
04006fe4 g     F .text	000004bc __sfvwrite_r
04009cb8 g     F .text	00000054 _sbrk_r
0400bc58 g     F .text	00000060 _read_r
04012604 g     O .rwdata	00000004 alt_max_fd
0400b83c g     F .text	000000f0 _fclose_r
040067e0 g     F .text	00000030 fflush
04014128 g     O .bss	00000004 __malloc_max_sbrked_mem
04002550 g     F .text	00000110 .hidden __extendsfdf2
0400c950 g     F .text	000008ac .hidden __adddf3
04009104 g     F .text	0000010c __b2d
0400c418 g     F .text	00000538 .hidden __umoddi3
0400e3fc g     F .text	000000d4 lseek
040125dc g     O .rwdata	00000004 _global_impure_ptr
040096e0 g     F .text	00000564 _realloc_r
0401427c g       *ABS*	00000000 __bss_end
0400fa70 g     F .text	000000f0 alt_iic_isr_register
0400ff90 g     F .text	00000108 alt_tick
0400bea0 g     F .text	00000578 .hidden __udivdi3
0400baa4 g     F .text	00000024 _fputwc_r
040109ec g     O .rodata	00000028 __mprec_bigtens
0400876c g     F .text	00000104 __s2b
0400deac g     F .text	000000a8 .hidden __floatunsidf
04008e44 g     F .text	00000060 __mcmp
04006b80 g     F .text	00000018 __fp_lock_all
0400fa24 g     F .text	0000004c alt_ic_irq_enabled
0400fef4 g     F .text	0000009c alt_alarm_stop
04014148 g     O .bss	00000004 alt_irq_active
040000ec g     F .exceptions	000000d4 alt_irq_handler
040113d4 g     O .rwdata	00000028 alt_dev_null
0400e060 g     F .text	00000048 alt_dcache_flush_all
04008870 g     F .text	00000068 __hi0bits
0400dd50 g     F .text	00000080 .hidden __fixdfsi
0401261c g       *ABS*	00000000 __ram_rwdata_end
040125fc g     O .rwdata	00000008 alt_dev_list
0400e81c g     F .text	000000f8 write
04009578 g     F .text	000000a0 _putc_r
0400f544 g     F .text	00000020 alt_timestamp_freq
04010b30 g       *ABS*	00000000 __ram_rodata_end
0400e110 g     F .text	000000b0 fstat
0400d360 g     F .text	000000f4 .hidden __ledf2
04008bbc g     F .text	00000140 __pow5mult
0400a038 g     F .text	0000145c ___vfiprintf_internal_r
04014120 g     O .bss	00000004 __nlocale_changed
04000aa8 g     F .text	00000058 .hidden __umodsi3
0401427c g       *ABS*	00000000 end
0400eb48 g     F .text	000000c0 altera_avalon_jtag_uart_init
0401068c g       *ABS*	00000000 __CTOR_LIST__
08000000 g       *ABS*	00000000 __alt_stack_pointer
04002660 g     F .text	00000064 .hidden __clzsi2
0400f228 g     F .text	00000224 altera_avalon_jtag_uart_write
04006b70 g     F .text	00000004 __sfp_lock_acquire
040080cc g     F .text	000000e4 memchr
040028bc g     F .text	000021f8 ___vfprintf_internal_r
04006cd4 g     F .text	00000310 _free_r
040076b0 g     F .text	00000010 __locale_mb_cur_max
040104d8 g     F .text	00000180 __call_exitprocs
0401411c g     O .bss	00000004 __mlocale_changed
040125e8 g     O .rwdata	00000004 __malloc_sbrk_base
040001c0 g     F .text	0000004c _start
0401414c g     O .bss	00000004 _alt_tick_rate
04008cfc g     F .text	00000148 __lshift
04014150 g     O .bss	00000004 _alt_nticks
0400e5d0 g     F .text	000000fc read
0400e980 g     F .text	00000064 alt_sys_init
0400133c g     F .text	00000124 .hidden __floatsisf
040103c0 g     F .text	00000118 __register_exitproc
040089c4 g     F .text	000001f8 __multiply
0400eeb4 g     F .text	00000068 altera_avalon_jtag_uart_close
04010b30 g       *ABS*	00000000 __ram_rwdata_start
0401068c g       *ABS*	00000000 __ram_rodata_start
04014154 g     O .bss	00000028 __malloc_current_mallinfo
04009210 g     F .text	0000014c __d2b
0400e9e4 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
04010254 g     F .text	000000a4 alt_get_fd
0400b724 g     F .text	00000054 _close_r
04010344 g     F .text	0000007c memcmp
0400eaa4 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0401427c g       *ABS*	00000000 __alt_stack_base
0400eaf4 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
04004b8c g     F .text	00000154 __swsetup_r
04001550 g     F .text	000008e8 .hidden __divdf3
04006a30 g     F .text	00000118 __sfp
04009474 g     F .text	00000078 __copybits
04010fcc g     O .rwdata	00000408 __malloc_av_
04006b7c g     F .text	00000004 __sinit_lock_release
04001e38 g     F .text	00000718 .hidden __muldf3
04009d0c g     F .text	00000054 __sread
0401014c g     F .text	00000108 alt_find_file
0400f6cc g     F .text	000000a4 alt_dev_llist_insert
0400e54c g     F .text	00000024 __malloc_lock
0400e730 g     F .text	000000b0 sbrk
04006784 g     F .text	0000005c _fflush_r
0400b778 g     F .text	000000c4 _calloc_r
04014108 g       *ABS*	00000000 __bss_start
04008454 g     F .text	00000128 memset
0400036c g     F .text	000005e0 main
0401410c g     O .bss	00000004 timer_overhead
0401413c g     O .bss	00000004 alt_envp
04014124 g     O .bss	00000004 __malloc_max_total_mem
0400ea44 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0400b6ac g     F .text	00000018 __swbuf
04009e40 g     F .text	00000008 __sclose
08000000 g       *ABS*	00000000 __alt_heap_limit
0400b92c g     F .text	00000014 fclose
0400f44c g     F .text	00000078 alt_timestamp_start
04004ee0 g     F .text	00001688 _dtoa_r
040078c0 g     F .text	0000080c _malloc_r
0400be14 g     F .text	00000030 __ascii_wctomb
04012608 g     O .rwdata	00000004 alt_errno
040074a0 g     F .text	000000c4 _fwalk
04009618 g     F .text	000000c8 putc
0400094c g     F .text	00000084 .hidden __divsi3
04006bb0 g     F .text	00000124 _malloc_trim_r
0401068c g       *ABS*	00000000 __CTOR_END__
04000f40 g     F .text	000003fc .hidden __mulsf3
040002f0 g     F .text	0000003c start_measurement
04009e48 g     F .text	000000dc strcmp
0401068c g       *ABS*	00000000 __flash_rodata_start
0401068c g       *ABS*	00000000 __DTOR_LIST__
0400d1fc g     F .text	00000088 .hidden __nedf2
0400e948 g     F .text	00000038 alt_irq_init
0400e6cc g     F .text	00000064 alt_release_fd
0401082e g     O .rodata	00000100 .hidden __clz_tab
04014118 g     O .bss	00000004 _PathLocale
040102f8 g     F .text	00000014 atexit
0400b6c4 g     F .text	00000060 _write_r
040076e0 g     F .text	00000018 setlocale
040125e0 g     O .rwdata	00000004 _impure_ptr
04014134 g     O .bss	00000004 alt_argc
04006568 g     F .text	0000021c __sflush_r
04014140 g     O .bss	00000004 altera_avalon_timer_ts_base
0400f7d0 g     F .text	00000060 _do_dtors
04014110 g     O .bss	00000004 ticks
040076cc g     F .text	00000008 __locale_cjk_lang
04000020 g       .exceptions	00000000 alt_irq_entry
040090a0 g     F .text	00000064 __ulp
04006b98 g     F .text	00000018 __fp_unlock_all
040125f4 g     O .rwdata	00000008 alt_fs_list
04000020 g       *ABS*	00000000 __ram_exceptions_start
040076f8 g     F .text	0000000c localeconv
0400f4c4 g     F .text	00000080 alt_timestamp
04000000 g       *ABS*	00000000 __alt_mem_new_sdram_controller_0
0400f8c0 g     F .text	00000050 alt_ic_isr_register
0401261c g       *ABS*	00000000 _edata
0401427c g       *ABS*	00000000 _end
0400b940 g     F .text	00000164 __fputwc
040001c0 g       *ABS*	00000000 __ram_exceptions_end
0400ef1c g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0400f998 g     F .text	0000008c alt_ic_irq_disable
04009d68 g     F .text	0000007c __swrite
040125ec g     O .rwdata	00000004 __malloc_trim_threshold
04010098 g     F .text	00000024 altera_nios2_qsys_irq_init
040076c0 g     F .text	0000000c __locale_msgcharset
0401030c g     F .text	00000038 exit
04007564 g     F .text	000000c4 _fwalk_reent
04001460 g     F .text	000000f0 .hidden __floatunsisf
04008ea4 g     F .text	000001fc __mdiff
040009d0 g     F .text	00000074 .hidden __modsi3
08000000 g       *ABS*	00000000 __alt_data_end
04000020 g     F .exceptions	00000000 alt_exception
04006b74 g     F .text	00000004 __sfp_lock_release
04010658 g     F .text	00000034 _exit
0400f564 g     F .text	0000012c alt_alarm_start
04007704 g     F .text	000001bc __smakebuf_r
04002824 g     F .text	00000098 strlen
0400fda0 g     F .text	00000154 open
0400d284 g     F .text	000000dc .hidden __gedf2
04014114 g     O .bss	00000004 time_2
040125f0 g     O .rwdata	00000004 __wctomb
0400a020 g     F .text	00000018 __sprint_r
0400e1c0 g     F .text	00000034 alt_icache_flush_all
04012610 g     O .rwdata	00000004 alt_priority_mask
0400f910 g     F .text	00000088 alt_ic_irq_enable
04004ab4 g     F .text	0000001c __vfprintf_internal
0400be44 g     F .text	0000005c _wctomb_r
0400d454 g     F .text	000008fc .hidden __subdf3
040088d8 g     F .text	000000b0 __lo0bits
04012614 g     O .rwdata	00000008 alt_alarm_list
0400f770 g     F .text	00000060 _do_ctors
0400bd54 g     F .text	000000c0 wcrtomb
0400df90 g     F .text	000000d0 close
0400e33c g     F .text	00000084 alt_load
0400bac8 g     F .text	00000080 fputwc
04006b78 g     F .text	00000004 __sinit_lock_acquire
0400864c g     F .text	00000120 __multadd
04008624 g     F .text	00000028 _Bfree



Disassembly of section .entry:

04000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
 4000000:	00808014 	movui	r2,512
#endif

0:
    initi r2
 4000004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
 4000008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 400000c:	00bffd16 	blt	zero,r2,4000004 <__alt_data_end+0xfc000004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 4000010:	00410034 	movhi	at,1024
    ori r1, r1, %lo(_start)
 4000014:	08407014 	ori	at,at,448
    jmp r1
 4000018:	0800683a 	jmp	at
 400001c:	00000000 	call	0 <__alt_mem_new_sdram_controller_0-0x4000000>

Disassembly of section .exceptions:

04000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 4000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 4000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 4000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 400002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 4000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 4000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 4000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 400003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 4000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 4000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 4000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 400004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 4000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 4000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 4000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 400005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 4000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 4000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 4000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 400006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 4000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 4000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 4000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 400007c:	10000326 	beq	r2,zero,400008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 4000080:	20000226 	beq	r4,zero,400008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 4000084:	40000ec0 	call	40000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 4000088:	00000306 	br	4000098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
 400008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
 4000090:	e8bfff17 	ldw	r2,-4(ea)

04000094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
 4000094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 4000098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 400009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 40000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 40000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 40000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 40000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 40000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 40000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 40000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 40000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 40000c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 40000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 40000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 40000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 40000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 40000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 40000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 40000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 40000e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 40000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 40000e8:	ef80083a 	eret

040000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 40000ec:	defff904 	addi	sp,sp,-28
 40000f0:	dfc00615 	stw	ra,24(sp)
 40000f4:	df000515 	stw	fp,20(sp)
 40000f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 40000fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 4000100:	0005313a 	rdctl	r2,ipending
 4000104:	e0bffe15 	stw	r2,-8(fp)

  return active;
 4000108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 400010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 4000110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 4000114:	00800044 	movi	r2,1
 4000118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 400011c:	e0fffb17 	ldw	r3,-20(fp)
 4000120:	e0bffc17 	ldw	r2,-16(fp)
 4000124:	1884703a 	and	r2,r3,r2
 4000128:	10001426 	beq	r2,zero,400017c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 400012c:	00810074 	movhi	r2,1025
 4000130:	10905f04 	addi	r2,r2,16764
 4000134:	e0fffd17 	ldw	r3,-12(fp)
 4000138:	180690fa 	slli	r3,r3,3
 400013c:	10c5883a 	add	r2,r2,r3
 4000140:	10c00017 	ldw	r3,0(r2)
 4000144:	00810074 	movhi	r2,1025
 4000148:	10905f04 	addi	r2,r2,16764
 400014c:	e13ffd17 	ldw	r4,-12(fp)
 4000150:	200890fa 	slli	r4,r4,3
 4000154:	1105883a 	add	r2,r2,r4
 4000158:	10800104 	addi	r2,r2,4
 400015c:	10800017 	ldw	r2,0(r2)
 4000160:	1009883a 	mov	r4,r2
 4000164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 4000168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 400016c:	0005313a 	rdctl	r2,ipending
 4000170:	e0bfff15 	stw	r2,-4(fp)

  return active;
 4000174:	e0bfff17 	ldw	r2,-4(fp)
 4000178:	00000706 	br	4000198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 400017c:	e0bffc17 	ldw	r2,-16(fp)
 4000180:	1085883a 	add	r2,r2,r2
 4000184:	e0bffc15 	stw	r2,-16(fp)
      i++;
 4000188:	e0bffd17 	ldw	r2,-12(fp)
 400018c:	10800044 	addi	r2,r2,1
 4000190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 4000194:	003fe106 	br	400011c <__alt_data_end+0xfc00011c>

    active = alt_irq_pending ();
 4000198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 400019c:	e0bffb17 	ldw	r2,-20(fp)
 40001a0:	103fdb1e 	bne	r2,zero,4000110 <__alt_data_end+0xfc000110>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 40001a4:	0001883a 	nop
}
 40001a8:	0001883a 	nop
 40001ac:	e037883a 	mov	sp,fp
 40001b0:	dfc00117 	ldw	ra,4(sp)
 40001b4:	df000017 	ldw	fp,0(sp)
 40001b8:	dec00204 	addi	sp,sp,8
 40001bc:	f800283a 	ret

Disassembly of section .text:

040001c0 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
 40001c0:	00808014 	movui	r2,512
#endif

0:
    initd 0(r2)
 40001c4:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
 40001c8:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
 40001cc:	00bffd16 	blt	zero,r2,40001c4 <__alt_data_end+0xfc0001c4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 40001d0:	06c20034 	movhi	sp,2048
    ori sp, sp, %lo(__alt_stack_pointer)
 40001d4:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 40001d8:	06810074 	movhi	gp,1025
    ori gp, gp, %lo(_gp)
 40001dc:	d6a97714 	ori	gp,gp,42460
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 40001e0:	00810074 	movhi	r2,1025
    ori r2, r2, %lo(__bss_start)
 40001e4:	10904214 	ori	r2,r2,16648

    movhi r3, %hi(__bss_end)
 40001e8:	00c10074 	movhi	r3,1025
    ori r3, r3, %lo(__bss_end)
 40001ec:	18d09f14 	ori	r3,r3,17020

    beq r2, r3, 1f
 40001f0:	10c00326 	beq	r2,r3,4000200 <_start+0x40>

0:
    stw zero, (r2)
 40001f4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 40001f8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 40001fc:	10fffd36 	bltu	r2,r3,40001f4 <__alt_data_end+0xfc0001f4>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 4000200:	400e33c0 	call	400e33c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 4000204:	400e4d00 	call	400e4d0 <alt_main>

04000208 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 4000208:	003fff06 	br	4000208 <__alt_data_end+0xfc000208>

0400020c <microseconds>:
alt_u32 time_1;
alt_u32 time_2;
alt_u32 timer_overhead;

float microseconds(int ticks)
{
 400020c:	defffc04 	addi	sp,sp,-16
 4000210:	dfc00315 	stw	ra,12(sp)
 4000214:	df000215 	stw	fp,8(sp)
 4000218:	dc000115 	stw	r16,4(sp)
 400021c:	df000204 	addi	fp,sp,8
 4000220:	e13ffe15 	stw	r4,-8(fp)
  return (float) 1000000 * (float) ticks / (float) alt_timestamp_freq();
 4000224:	e13ffe17 	ldw	r4,-8(fp)
 4000228:	400133c0 	call	400133c <__floatsisf>
 400022c:	1007883a 	mov	r3,r2
 4000230:	01525d34 	movhi	r5,18804
 4000234:	29490004 	addi	r5,r5,9216
 4000238:	1809883a 	mov	r4,r3
 400023c:	4000f400 	call	4000f40 <__mulsf3>
 4000240:	1007883a 	mov	r3,r2
 4000244:	1821883a 	mov	r16,r3
 4000248:	400f5440 	call	400f544 <alt_timestamp_freq>
 400024c:	1009883a 	mov	r4,r2
 4000250:	40014600 	call	4001460 <__floatunsisf>
 4000254:	1007883a 	mov	r3,r2
 4000258:	180b883a 	mov	r5,r3
 400025c:	8009883a 	mov	r4,r16
 4000260:	4000b000 	call	4000b00 <__divsf3>
 4000264:	1009883a 	mov	r4,r2
 4000268:	2007883a 	mov	r3,r4
 400026c:	1805883a 	mov	r2,r3
}
 4000270:	e6ffff04 	addi	sp,fp,-4
 4000274:	dfc00217 	ldw	ra,8(sp)
 4000278:	df000117 	ldw	fp,4(sp)
 400027c:	dc000017 	ldw	r16,0(sp)
 4000280:	dec00304 	addi	sp,sp,12
 4000284:	f800283a 	ret

04000288 <initArray>:

void initArray(int x[], int n)
{
 4000288:	defffc04 	addi	sp,sp,-16
 400028c:	df000315 	stw	fp,12(sp)
 4000290:	df000304 	addi	fp,sp,12
 4000294:	e13ffe15 	stw	r4,-8(fp)
 4000298:	e17fff15 	stw	r5,-4(fp)
  int i;
  
  for(i = 0; i < n; i++)
 400029c:	e03ffd15 	stw	zero,-12(fp)
 40002a0:	00000b06 	br	40002d0 <initArray+0x48>
    x[i] = i;
 40002a4:	e0bffd17 	ldw	r2,-12(fp)
 40002a8:	1085883a 	add	r2,r2,r2
 40002ac:	1085883a 	add	r2,r2,r2
 40002b0:	1007883a 	mov	r3,r2
 40002b4:	e0bffe17 	ldw	r2,-8(fp)
 40002b8:	10c5883a 	add	r2,r2,r3
 40002bc:	e0fffd17 	ldw	r3,-12(fp)
 40002c0:	10c00015 	stw	r3,0(r2)

void initArray(int x[], int n)
{
  int i;
  
  for(i = 0; i < n; i++)
 40002c4:	e0bffd17 	ldw	r2,-12(fp)
 40002c8:	10800044 	addi	r2,r2,1
 40002cc:	e0bffd15 	stw	r2,-12(fp)
 40002d0:	e0fffd17 	ldw	r3,-12(fp)
 40002d4:	e0bfff17 	ldw	r2,-4(fp)
 40002d8:	18bff216 	blt	r3,r2,40002a4 <__alt_data_end+0xfc0002a4>
    x[i] = i;
}
 40002dc:	0001883a 	nop
 40002e0:	e037883a 	mov	sp,fp
 40002e4:	df000017 	ldw	fp,0(sp)
 40002e8:	dec00104 	addi	sp,sp,4
 40002ec:	f800283a 	ret

040002f0 <start_measurement>:


void start_measurement()
{
 40002f0:	defffe04 	addi	sp,sp,-8
 40002f4:	dfc00115 	stw	ra,4(sp)
 40002f8:	df000015 	stw	fp,0(sp)
 40002fc:	d839883a 	mov	fp,sp
      /* Flush caches */
      alt_dcache_flush_all();
 4000300:	400e0600 	call	400e060 <alt_dcache_flush_all>
      alt_icache_flush_all();   
 4000304:	400e1c00 	call	400e1c0 <alt_icache_flush_all>
      /* Measure */
      alt_timestamp_start();
 4000308:	400f44c0 	call	400f44c <alt_timestamp_start>
      time_1 = alt_timestamp();
 400030c:	400f4c40 	call	400f4c4 <alt_timestamp>
 4000310:	d0a6cb15 	stw	r2,-25812(gp)
}
 4000314:	0001883a 	nop
 4000318:	e037883a 	mov	sp,fp
 400031c:	dfc00117 	ldw	ra,4(sp)
 4000320:	df000017 	ldw	fp,0(sp)
 4000324:	dec00204 	addi	sp,sp,8
 4000328:	f800283a 	ret

0400032c <stop_measurement>:

void stop_measurement()
{
 400032c:	defffe04 	addi	sp,sp,-8
 4000330:	dfc00115 	stw	ra,4(sp)
 4000334:	df000015 	stw	fp,0(sp)
 4000338:	d839883a 	mov	fp,sp
      time_2 = alt_timestamp();
 400033c:	400f4c40 	call	400f4c4 <alt_timestamp>
 4000340:	d0a6ce15 	stw	r2,-25800(gp)
      ticks = time_2 - time_1;
 4000344:	d0e6ce17 	ldw	r3,-25800(gp)
 4000348:	d0a6cb17 	ldw	r2,-25812(gp)
 400034c:	1885c83a 	sub	r2,r3,r2
 4000350:	d0a6cd15 	stw	r2,-25804(gp)
}
 4000354:	0001883a 	nop
 4000358:	e037883a 	mov	sp,fp
 400035c:	dfc00117 	ldw	ra,4(sp)
 4000360:	df000017 	ldw	fp,0(sp)
 4000364:	dec00204 	addi	sp,sp,8
 4000368:	f800283a 	ret

0400036c <main>:

int main ()
{
 400036c:	defffc04 	addi	sp,sp,-16
 4000370:	dfc00315 	stw	ra,12(sp)
 4000374:	df000215 	stw	fp,8(sp)
 4000378:	dc400115 	stw	r17,4(sp)
 400037c:	dc000015 	stw	r16,0(sp)
 4000380:	df000204 	addi	fp,sp,8
 4000384:	023ffff4 	movhi	r8,65535
 4000388:	421ffd04 	addi	r8,r8,32756
 400038c:	da37883a 	add	sp,sp,r8
  int w[8192];     
  int y;
  
  printf("Cache Performance\n\n");
 4000390:	01010074 	movhi	r4,1025
 4000394:	2101a304 	addi	r4,r4,1676
 4000398:	40028100 	call	4002810 <puts>
  printf("Processor Type: %s\n", NIOS2_CPU_IMPLEMENTATION);
 400039c:	01410074 	movhi	r5,1025
 40003a0:	2941a804 	addi	r5,r5,1696
 40003a4:	01010074 	movhi	r4,1025
 40003a8:	2101aa04 	addi	r4,r4,1704
 40003ac:	40026f40 	call	40026f4 <printf>
  printf("Size Instruction Cache: %d\n", NIOS2_ICACHE_SIZE);
 40003b0:	01408004 	movi	r5,512
 40003b4:	01010074 	movhi	r4,1025
 40003b8:	2101af04 	addi	r4,r4,1724
 40003bc:	40026f40 	call	40026f4 <printf>
  printf("Line Size Instruction Cache: %d\n", NIOS2_ICACHE_LINE_SIZE);
 40003c0:	01400804 	movi	r5,32
 40003c4:	01010074 	movhi	r4,1025
 40003c8:	2101b604 	addi	r4,r4,1752
 40003cc:	40026f40 	call	40026f4 <printf>
  printf("Size Data Cache: %d\n", NIOS2_DCACHE_SIZE);
 40003d0:	01408004 	movi	r5,512
 40003d4:	01010074 	movhi	r4,1025
 40003d8:	2101bf04 	addi	r4,r4,1788
 40003dc:	40026f40 	call	40026f4 <printf>
  printf("Line Size Data Cache: %d\n\n\n", NIOS2_DCACHE_LINE_SIZE);
 40003e0:	01400804 	movi	r5,32
 40003e4:	01010074 	movhi	r4,1025
 40003e8:	2101c504 	addi	r4,r4,1812
 40003ec:	40026f40 	call	40026f4 <printf>

  /* Check if timer available */
  if (alt_timestamp_start() < 0)
 40003f0:	400f44c0 	call	400f44c <alt_timestamp_start>
 40003f4:	1000040e 	bge	r2,zero,4000408 <main+0x9c>
    printf("No timestamp device available!");
 40003f8:	01010074 	movhi	r4,1025
 40003fc:	2101cc04 	addi	r4,r4,1840
 4000400:	40026f40 	call	40026f4 <printf>
 4000404:	00014906 	br	400092c <main+0x5c0>
  else
    {

      /* Print Information about the system */
      printf("Information about the system:\n");
 4000408:	01010074 	movhi	r4,1025
 400040c:	2101d404 	addi	r4,r4,1872
 4000410:	40028100 	call	4002810 <puts>
      printf("\n");
 4000414:	01000284 	movi	r4,10
 4000418:	40027380 	call	4002738 <putchar>

      /* Print frequency and period */
      printf("Timestamp frequency: %3.1f MHz\n", (float)alt_timestamp_freq()/1000000.0);
 400041c:	400f5440 	call	400f544 <alt_timestamp_freq>
 4000420:	1009883a 	mov	r4,r2
 4000424:	40014600 	call	4001460 <__floatunsisf>
 4000428:	1007883a 	mov	r3,r2
 400042c:	1809883a 	mov	r4,r3
 4000430:	40025500 	call	4002550 <__extendsfdf2>
 4000434:	1011883a 	mov	r8,r2
 4000438:	1813883a 	mov	r9,r3
 400043c:	000d883a 	mov	r6,zero
 4000440:	01d04bf4 	movhi	r7,16687
 4000444:	39e12004 	addi	r7,r7,-31616
 4000448:	4009883a 	mov	r4,r8
 400044c:	480b883a 	mov	r5,r9
 4000450:	40015500 	call	4001550 <__divdf3>
 4000454:	1009883a 	mov	r4,r2
 4000458:	180b883a 	mov	r5,r3
 400045c:	2005883a 	mov	r2,r4
 4000460:	2807883a 	mov	r3,r5
 4000464:	100b883a 	mov	r5,r2
 4000468:	180d883a 	mov	r6,r3
 400046c:	01010074 	movhi	r4,1025
 4000470:	2101dc04 	addi	r4,r4,1904
 4000474:	40026f40 	call	40026f4 <printf>
      printf("Timestamp period:    %f ms\n\n", 1000.0/(float)alt_timestamp_freq());  
 4000478:	400f5440 	call	400f544 <alt_timestamp_freq>
 400047c:	1009883a 	mov	r4,r2
 4000480:	40014600 	call	4001460 <__floatunsisf>
 4000484:	1007883a 	mov	r3,r2
 4000488:	1809883a 	mov	r4,r3
 400048c:	40025500 	call	4002550 <__extendsfdf2>
 4000490:	1009883a 	mov	r4,r2
 4000494:	180b883a 	mov	r5,r3
 4000498:	200d883a 	mov	r6,r4
 400049c:	280f883a 	mov	r7,r5
 40004a0:	0009883a 	mov	r4,zero
 40004a4:	015023f4 	movhi	r5,16527
 40004a8:	29500004 	addi	r5,r5,16384
 40004ac:	40015500 	call	4001550 <__divdf3>
 40004b0:	1009883a 	mov	r4,r2
 40004b4:	180b883a 	mov	r5,r3
 40004b8:	2005883a 	mov	r2,r4
 40004bc:	2807883a 	mov	r3,r5
 40004c0:	100b883a 	mov	r5,r2
 40004c4:	180d883a 	mov	r6,r3
 40004c8:	01010074 	movhi	r4,1025
 40004cc:	2101e404 	addi	r4,r4,1936
 40004d0:	40026f40 	call	40026f4 <printf>


      /* Calculate Timer Overhead */
      // Average of 10 measurements */
      int i;
      timer_overhead = 0;
 40004d4:	d026cc15 	stw	zero,-25808(gp)
      for (i = 0; i < 10; i++) {      
 40004d8:	00bffff4 	movhi	r2,65535
 40004dc:	109ffc04 	addi	r2,r2,32752
 40004e0:	1705883a 	add	r2,r2,fp
 40004e4:	10000015 	stw	zero,0(r2)
 40004e8:	00001106 	br	4000530 <main+0x1c4>
        start_measurement();
 40004ec:	40002f00 	call	40002f0 <start_measurement>
        stop_measurement();
 40004f0:	400032c0 	call	400032c <stop_measurement>
        timer_overhead = timer_overhead + time_2 - time_1;
 40004f4:	d0e6cc17 	ldw	r3,-25808(gp)
 40004f8:	d0a6ce17 	ldw	r2,-25800(gp)
 40004fc:	1887883a 	add	r3,r3,r2
 4000500:	d0a6cb17 	ldw	r2,-25812(gp)
 4000504:	1885c83a 	sub	r2,r3,r2
 4000508:	d0a6cc15 	stw	r2,-25808(gp)

      /* Calculate Timer Overhead */
      // Average of 10 measurements */
      int i;
      timer_overhead = 0;
      for (i = 0; i < 10; i++) {      
 400050c:	00fffff4 	movhi	r3,65535
 4000510:	18dffc04 	addi	r3,r3,32752
 4000514:	1f07883a 	add	r3,r3,fp
 4000518:	18800017 	ldw	r2,0(r3)
 400051c:	10800044 	addi	r2,r2,1
 4000520:	013ffff4 	movhi	r4,65535
 4000524:	211ffc04 	addi	r4,r4,32752
 4000528:	2709883a 	add	r4,r4,fp
 400052c:	20800015 	stw	r2,0(r4)
 4000530:	00fffff4 	movhi	r3,65535
 4000534:	18dffc04 	addi	r3,r3,32752
 4000538:	1f07883a 	add	r3,r3,fp
 400053c:	18800017 	ldw	r2,0(r3)
 4000540:	10800290 	cmplti	r2,r2,10
 4000544:	103fe91e 	bne	r2,zero,40004ec <__alt_data_end+0xfc0004ec>
        start_measurement();
        stop_measurement();
        timer_overhead = timer_overhead + time_2 - time_1;
      }
      timer_overhead = timer_overhead / 10;
 4000548:	d0a6cc17 	ldw	r2,-25808(gp)
 400054c:	01400284 	movi	r5,10
 4000550:	1009883a 	mov	r4,r2
 4000554:	4000a440 	call	4000a44 <__udivsi3>
 4000558:	d0a6cc15 	stw	r2,-25808(gp)
        
      printf("Timer overhead in ticks: %d\n", (int) timer_overhead);
 400055c:	d0a6cc17 	ldw	r2,-25808(gp)
 4000560:	100b883a 	mov	r5,r2
 4000564:	01010074 	movhi	r4,1025
 4000568:	2101ec04 	addi	r4,r4,1968
 400056c:	40026f40 	call	40026f4 <printf>
      printf("Timer overhead in ms:    %f\n", 
	     1000.0 * (float)timer_overhead/(float)alt_timestamp_freq());
 4000570:	d0a6cc17 	ldw	r2,-25808(gp)
 4000574:	1009883a 	mov	r4,r2
 4000578:	40014600 	call	4001460 <__floatunsisf>
 400057c:	1007883a 	mov	r3,r2
 4000580:	1809883a 	mov	r4,r3
 4000584:	40025500 	call	4002550 <__extendsfdf2>
 4000588:	1011883a 	mov	r8,r2
 400058c:	1813883a 	mov	r9,r3
 4000590:	000d883a 	mov	r6,zero
 4000594:	01d023f4 	movhi	r7,16527
 4000598:	39d00004 	addi	r7,r7,16384
 400059c:	4009883a 	mov	r4,r8
 40005a0:	480b883a 	mov	r5,r9
 40005a4:	4001e380 	call	4001e38 <__muldf3>
 40005a8:	1009883a 	mov	r4,r2
 40005ac:	180b883a 	mov	r5,r3
 40005b0:	2021883a 	mov	r16,r4
 40005b4:	2823883a 	mov	r17,r5
 40005b8:	400f5440 	call	400f544 <alt_timestamp_freq>
 40005bc:	1009883a 	mov	r4,r2
 40005c0:	40014600 	call	4001460 <__floatunsisf>
 40005c4:	1007883a 	mov	r3,r2
        timer_overhead = timer_overhead + time_2 - time_1;
      }
      timer_overhead = timer_overhead / 10;
        
      printf("Timer overhead in ticks: %d\n", (int) timer_overhead);
      printf("Timer overhead in ms:    %f\n", 
 40005c8:	1809883a 	mov	r4,r3
 40005cc:	40025500 	call	4002550 <__extendsfdf2>
 40005d0:	1009883a 	mov	r4,r2
 40005d4:	180b883a 	mov	r5,r3
 40005d8:	200d883a 	mov	r6,r4
 40005dc:	280f883a 	mov	r7,r5
 40005e0:	8009883a 	mov	r4,r16
 40005e4:	880b883a 	mov	r5,r17
 40005e8:	40015500 	call	4001550 <__divdf3>
 40005ec:	1009883a 	mov	r4,r2
 40005f0:	180b883a 	mov	r5,r3
 40005f4:	2005883a 	mov	r2,r4
 40005f8:	2807883a 	mov	r3,r5
 40005fc:	100b883a 	mov	r5,r2
 4000600:	180d883a 	mov	r6,r3
 4000604:	01010074 	movhi	r4,1025
 4000608:	2101f404 	addi	r4,r4,2000
 400060c:	40026f40 	call	40026f4 <printf>
  
    // === Task 2: I and D Cache   
 
    // Function 2.7 
    int j;
    initArray(w, 8192);
 4000610:	013ffff4 	movhi	r4,65535
 4000614:	211ffe04 	addi	r4,r4,32760
 4000618:	e105883a 	add	r2,fp,r4
 400061c:	01480004 	movi	r5,8192
 4000620:	1009883a 	mov	r4,r2
 4000624:	40002880 	call	4000288 <initArray>
    printf("Function 2.7: ");
 4000628:	01010074 	movhi	r4,1025
 400062c:	2101fc04 	addi	r4,r4,2032
 4000630:	40026f40 	call	40026f4 <printf>
    start_measurement();  
 4000634:	40002f00 	call	40002f0 <start_measurement>
    y = 0;
 4000638:	00bffff4 	movhi	r2,65535
 400063c:	109ffb04 	addi	r2,r2,32748
 4000640:	1705883a 	add	r2,r2,fp
 4000644:	10000015 	stw	zero,0(r2)
    for(i = 0; i < 16; i++)
 4000648:	00fffff4 	movhi	r3,65535
 400064c:	18dffc04 	addi	r3,r3,32752
 4000650:	1f07883a 	add	r3,r3,fp
 4000654:	18000015 	stw	zero,0(r3)
 4000658:	00003206 	br	4000724 <main+0x3b8>
       for(j = 0; j < 128; j++)
 400065c:	013ffff4 	movhi	r4,65535
 4000660:	211ffd04 	addi	r4,r4,32756
 4000664:	2709883a 	add	r4,r4,fp
 4000668:	20000015 	stw	zero,0(r4)
 400066c:	00001e06 	br	40006e8 <main+0x37c>
          y += w[j];
 4000670:	00fffff4 	movhi	r3,65535
 4000674:	18dffd04 	addi	r3,r3,32756
 4000678:	1f07883a 	add	r3,r3,fp
 400067c:	18800017 	ldw	r2,0(r3)
 4000680:	1085883a 	add	r2,r2,r2
 4000684:	1085883a 	add	r2,r2,r2
 4000688:	013ffff4 	movhi	r4,65535
 400068c:	211ffb04 	addi	r4,r4,32748
 4000690:	2709883a 	add	r4,r4,fp
 4000694:	2085883a 	add	r2,r4,r2
 4000698:	10800304 	addi	r2,r2,12
 400069c:	10800017 	ldw	r2,0(r2)
 40006a0:	013ffff4 	movhi	r4,65535
 40006a4:	211ffb04 	addi	r4,r4,32748
 40006a8:	2709883a 	add	r4,r4,fp
 40006ac:	20c00017 	ldw	r3,0(r4)
 40006b0:	1885883a 	add	r2,r3,r2
 40006b4:	00fffff4 	movhi	r3,65535
 40006b8:	18dffb04 	addi	r3,r3,32748
 40006bc:	1f07883a 	add	r3,r3,fp
 40006c0:	18800015 	stw	r2,0(r3)
    initArray(w, 8192);
    printf("Function 2.7: ");
    start_measurement();  
    y = 0;
    for(i = 0; i < 16; i++)
       for(j = 0; j < 128; j++)
 40006c4:	013ffff4 	movhi	r4,65535
 40006c8:	211ffd04 	addi	r4,r4,32756
 40006cc:	2709883a 	add	r4,r4,fp
 40006d0:	20800017 	ldw	r2,0(r4)
 40006d4:	10800044 	addi	r2,r2,1
 40006d8:	00fffff4 	movhi	r3,65535
 40006dc:	18dffd04 	addi	r3,r3,32756
 40006e0:	1f07883a 	add	r3,r3,fp
 40006e4:	18800015 	stw	r2,0(r3)
 40006e8:	013ffff4 	movhi	r4,65535
 40006ec:	211ffd04 	addi	r4,r4,32756
 40006f0:	2709883a 	add	r4,r4,fp
 40006f4:	20800017 	ldw	r2,0(r4)
 40006f8:	10802010 	cmplti	r2,r2,128
 40006fc:	103fdc1e 	bne	r2,zero,4000670 <__alt_data_end+0xfc000670>
    int j;
    initArray(w, 8192);
    printf("Function 2.7: ");
    start_measurement();  
    y = 0;
    for(i = 0; i < 16; i++)
 4000700:	00fffff4 	movhi	r3,65535
 4000704:	18dffc04 	addi	r3,r3,32752
 4000708:	1f07883a 	add	r3,r3,fp
 400070c:	18800017 	ldw	r2,0(r3)
 4000710:	10800044 	addi	r2,r2,1
 4000714:	013ffff4 	movhi	r4,65535
 4000718:	211ffc04 	addi	r4,r4,32752
 400071c:	2709883a 	add	r4,r4,fp
 4000720:	20800015 	stw	r2,0(r4)
 4000724:	00fffff4 	movhi	r3,65535
 4000728:	18dffc04 	addi	r3,r3,32752
 400072c:	1f07883a 	add	r3,r3,fp
 4000730:	18800017 	ldw	r2,0(r3)
 4000734:	10800410 	cmplti	r2,r2,16
 4000738:	103fc81e 	bne	r2,zero,400065c <__alt_data_end+0xfc00065c>
       for(j = 0; j < 128; j++)
          y += w[j];
    stop_measurement();
 400073c:	400032c0 	call	400032c <stop_measurement>
    printf("%5.2f us", microseconds(ticks - timer_overhead));
 4000740:	d0e6cd17 	ldw	r3,-25804(gp)
 4000744:	d0a6cc17 	ldw	r2,-25808(gp)
 4000748:	1885c83a 	sub	r2,r3,r2
 400074c:	1009883a 	mov	r4,r2
 4000750:	400020c0 	call	400020c <microseconds>
 4000754:	1007883a 	mov	r3,r2
 4000758:	1809883a 	mov	r4,r3
 400075c:	40025500 	call	4002550 <__extendsfdf2>
 4000760:	100d883a 	mov	r6,r2
 4000764:	180f883a 	mov	r7,r3
 4000768:	300b883a 	mov	r5,r6
 400076c:	380d883a 	mov	r6,r7
 4000770:	01010074 	movhi	r4,1025
 4000774:	21020004 	addi	r4,r4,2048
 4000778:	40026f40 	call	40026f4 <printf>
    printf("(%d ticks)\n", (int) (ticks - timer_overhead));   
 400077c:	d0e6cd17 	ldw	r3,-25804(gp)
 4000780:	d0a6cc17 	ldw	r2,-25808(gp)
 4000784:	1885c83a 	sub	r2,r3,r2
 4000788:	100b883a 	mov	r5,r2
 400078c:	01010074 	movhi	r4,1025
 4000790:	21020304 	addi	r4,r4,2060
 4000794:	40026f40 	call	40026f4 <printf>
          
    // Function 2.8 
    initArray(w, 8192);    
 4000798:	013ffff4 	movhi	r4,65535
 400079c:	211ffe04 	addi	r4,r4,32760
 40007a0:	e105883a 	add	r2,fp,r4
 40007a4:	01480004 	movi	r5,8192
 40007a8:	1009883a 	mov	r4,r2
 40007ac:	40002880 	call	4000288 <initArray>
    printf("Function 2.8: ");
 40007b0:	01010074 	movhi	r4,1025
 40007b4:	21020604 	addi	r4,r4,2072
 40007b8:	40026f40 	call	40026f4 <printf>
    start_measurement();  
 40007bc:	40002f00 	call	40002f0 <start_measurement>
    y = 0;
 40007c0:	00bffff4 	movhi	r2,65535
 40007c4:	109ffb04 	addi	r2,r2,32748
 40007c8:	1705883a 	add	r2,r2,fp
 40007cc:	10000015 	stw	zero,0(r2)
    for(i = 0; i < 8; i++)
 40007d0:	00fffff4 	movhi	r3,65535
 40007d4:	18dffc04 	addi	r3,r3,32752
 40007d8:	1f07883a 	add	r3,r3,fp
 40007dc:	18000015 	stw	zero,0(r3)
 40007e0:	00003206 	br	40008ac <main+0x540>
       for(j = 0; j < 256; j++)
 40007e4:	013ffff4 	movhi	r4,65535
 40007e8:	211ffd04 	addi	r4,r4,32756
 40007ec:	2709883a 	add	r4,r4,fp
 40007f0:	20000015 	stw	zero,0(r4)
 40007f4:	00001e06 	br	4000870 <main+0x504>
          y += w[j];
 40007f8:	00fffff4 	movhi	r3,65535
 40007fc:	18dffd04 	addi	r3,r3,32756
 4000800:	1f07883a 	add	r3,r3,fp
 4000804:	18800017 	ldw	r2,0(r3)
 4000808:	1085883a 	add	r2,r2,r2
 400080c:	1085883a 	add	r2,r2,r2
 4000810:	013ffff4 	movhi	r4,65535
 4000814:	211ffb04 	addi	r4,r4,32748
 4000818:	2709883a 	add	r4,r4,fp
 400081c:	2085883a 	add	r2,r4,r2
 4000820:	10800304 	addi	r2,r2,12
 4000824:	10800017 	ldw	r2,0(r2)
 4000828:	013ffff4 	movhi	r4,65535
 400082c:	211ffb04 	addi	r4,r4,32748
 4000830:	2709883a 	add	r4,r4,fp
 4000834:	20c00017 	ldw	r3,0(r4)
 4000838:	1885883a 	add	r2,r3,r2
 400083c:	00fffff4 	movhi	r3,65535
 4000840:	18dffb04 	addi	r3,r3,32748
 4000844:	1f07883a 	add	r3,r3,fp
 4000848:	18800015 	stw	r2,0(r3)
    initArray(w, 8192);    
    printf("Function 2.8: ");
    start_measurement();  
    y = 0;
    for(i = 0; i < 8; i++)
       for(j = 0; j < 256; j++)
 400084c:	013ffff4 	movhi	r4,65535
 4000850:	211ffd04 	addi	r4,r4,32756
 4000854:	2709883a 	add	r4,r4,fp
 4000858:	20800017 	ldw	r2,0(r4)
 400085c:	10800044 	addi	r2,r2,1
 4000860:	00fffff4 	movhi	r3,65535
 4000864:	18dffd04 	addi	r3,r3,32756
 4000868:	1f07883a 	add	r3,r3,fp
 400086c:	18800015 	stw	r2,0(r3)
 4000870:	013ffff4 	movhi	r4,65535
 4000874:	211ffd04 	addi	r4,r4,32756
 4000878:	2709883a 	add	r4,r4,fp
 400087c:	20800017 	ldw	r2,0(r4)
 4000880:	10804010 	cmplti	r2,r2,256
 4000884:	103fdc1e 	bne	r2,zero,40007f8 <__alt_data_end+0xfc0007f8>
    // Function 2.8 
    initArray(w, 8192);    
    printf("Function 2.8: ");
    start_measurement();  
    y = 0;
    for(i = 0; i < 8; i++)
 4000888:	00fffff4 	movhi	r3,65535
 400088c:	18dffc04 	addi	r3,r3,32752
 4000890:	1f07883a 	add	r3,r3,fp
 4000894:	18800017 	ldw	r2,0(r3)
 4000898:	10800044 	addi	r2,r2,1
 400089c:	013ffff4 	movhi	r4,65535
 40008a0:	211ffc04 	addi	r4,r4,32752
 40008a4:	2709883a 	add	r4,r4,fp
 40008a8:	20800015 	stw	r2,0(r4)
 40008ac:	00fffff4 	movhi	r3,65535
 40008b0:	18dffc04 	addi	r3,r3,32752
 40008b4:	1f07883a 	add	r3,r3,fp
 40008b8:	18800017 	ldw	r2,0(r3)
 40008bc:	10800210 	cmplti	r2,r2,8
 40008c0:	103fc81e 	bne	r2,zero,40007e4 <__alt_data_end+0xfc0007e4>
       for(j = 0; j < 256; j++)
          y += w[j];
    stop_measurement();
 40008c4:	400032c0 	call	400032c <stop_measurement>
    printf("%5.2f us", microseconds(ticks - timer_overhead));
 40008c8:	d0e6cd17 	ldw	r3,-25804(gp)
 40008cc:	d0a6cc17 	ldw	r2,-25808(gp)
 40008d0:	1885c83a 	sub	r2,r3,r2
 40008d4:	1009883a 	mov	r4,r2
 40008d8:	400020c0 	call	400020c <microseconds>
 40008dc:	1007883a 	mov	r3,r2
 40008e0:	1809883a 	mov	r4,r3
 40008e4:	40025500 	call	4002550 <__extendsfdf2>
 40008e8:	100d883a 	mov	r6,r2
 40008ec:	180f883a 	mov	r7,r3
 40008f0:	300b883a 	mov	r5,r6
 40008f4:	380d883a 	mov	r6,r7
 40008f8:	01010074 	movhi	r4,1025
 40008fc:	21020004 	addi	r4,r4,2048
 4000900:	40026f40 	call	40026f4 <printf>
    printf("(%d ticks)\n", (int) (ticks - timer_overhead));               
 4000904:	d0e6cd17 	ldw	r3,-25804(gp)
 4000908:	d0a6cc17 	ldw	r2,-25808(gp)
 400090c:	1885c83a 	sub	r2,r3,r2
 4000910:	100b883a 	mov	r5,r2
 4000914:	01010074 	movhi	r4,1025
 4000918:	21020304 	addi	r4,r4,2060
 400091c:	40026f40 	call	40026f4 <printf>


    printf("Done!\n");
 4000920:	01010074 	movhi	r4,1025
 4000924:	21020a04 	addi	r4,r4,2088
 4000928:	40028100 	call	4002810 <puts>
  }    
  return 0;
 400092c:	0005883a 	mov	r2,zero
}
 4000930:	e6fffe04 	addi	sp,fp,-8
 4000934:	dfc00317 	ldw	ra,12(sp)
 4000938:	df000217 	ldw	fp,8(sp)
 400093c:	dc400117 	ldw	r17,4(sp)
 4000940:	dc000017 	ldw	r16,0(sp)
 4000944:	dec00404 	addi	sp,sp,16
 4000948:	f800283a 	ret

0400094c <__divsi3>:
 400094c:	20001b16 	blt	r4,zero,40009bc <__divsi3+0x70>
 4000950:	000f883a 	mov	r7,zero
 4000954:	28001616 	blt	r5,zero,40009b0 <__divsi3+0x64>
 4000958:	200d883a 	mov	r6,r4
 400095c:	29001a2e 	bgeu	r5,r4,40009c8 <__divsi3+0x7c>
 4000960:	00800804 	movi	r2,32
 4000964:	00c00044 	movi	r3,1
 4000968:	00000106 	br	4000970 <__divsi3+0x24>
 400096c:	10000d26 	beq	r2,zero,40009a4 <__divsi3+0x58>
 4000970:	294b883a 	add	r5,r5,r5
 4000974:	10bfffc4 	addi	r2,r2,-1
 4000978:	18c7883a 	add	r3,r3,r3
 400097c:	293ffb36 	bltu	r5,r4,400096c <__alt_data_end+0xfc00096c>
 4000980:	0005883a 	mov	r2,zero
 4000984:	18000726 	beq	r3,zero,40009a4 <__divsi3+0x58>
 4000988:	0005883a 	mov	r2,zero
 400098c:	31400236 	bltu	r6,r5,4000998 <__divsi3+0x4c>
 4000990:	314dc83a 	sub	r6,r6,r5
 4000994:	10c4b03a 	or	r2,r2,r3
 4000998:	1806d07a 	srli	r3,r3,1
 400099c:	280ad07a 	srli	r5,r5,1
 40009a0:	183ffa1e 	bne	r3,zero,400098c <__alt_data_end+0xfc00098c>
 40009a4:	38000126 	beq	r7,zero,40009ac <__divsi3+0x60>
 40009a8:	0085c83a 	sub	r2,zero,r2
 40009ac:	f800283a 	ret
 40009b0:	014bc83a 	sub	r5,zero,r5
 40009b4:	39c0005c 	xori	r7,r7,1
 40009b8:	003fe706 	br	4000958 <__alt_data_end+0xfc000958>
 40009bc:	0109c83a 	sub	r4,zero,r4
 40009c0:	01c00044 	movi	r7,1
 40009c4:	003fe306 	br	4000954 <__alt_data_end+0xfc000954>
 40009c8:	00c00044 	movi	r3,1
 40009cc:	003fee06 	br	4000988 <__alt_data_end+0xfc000988>

040009d0 <__modsi3>:
 40009d0:	20001716 	blt	r4,zero,4000a30 <__modsi3+0x60>
 40009d4:	000f883a 	mov	r7,zero
 40009d8:	2005883a 	mov	r2,r4
 40009dc:	28001216 	blt	r5,zero,4000a28 <__modsi3+0x58>
 40009e0:	2900162e 	bgeu	r5,r4,4000a3c <__modsi3+0x6c>
 40009e4:	01800804 	movi	r6,32
 40009e8:	00c00044 	movi	r3,1
 40009ec:	00000106 	br	40009f4 <__modsi3+0x24>
 40009f0:	30000a26 	beq	r6,zero,4000a1c <__modsi3+0x4c>
 40009f4:	294b883a 	add	r5,r5,r5
 40009f8:	31bfffc4 	addi	r6,r6,-1
 40009fc:	18c7883a 	add	r3,r3,r3
 4000a00:	293ffb36 	bltu	r5,r4,40009f0 <__alt_data_end+0xfc0009f0>
 4000a04:	18000526 	beq	r3,zero,4000a1c <__modsi3+0x4c>
 4000a08:	1806d07a 	srli	r3,r3,1
 4000a0c:	11400136 	bltu	r2,r5,4000a14 <__modsi3+0x44>
 4000a10:	1145c83a 	sub	r2,r2,r5
 4000a14:	280ad07a 	srli	r5,r5,1
 4000a18:	183ffb1e 	bne	r3,zero,4000a08 <__alt_data_end+0xfc000a08>
 4000a1c:	38000126 	beq	r7,zero,4000a24 <__modsi3+0x54>
 4000a20:	0085c83a 	sub	r2,zero,r2
 4000a24:	f800283a 	ret
 4000a28:	014bc83a 	sub	r5,zero,r5
 4000a2c:	003fec06 	br	40009e0 <__alt_data_end+0xfc0009e0>
 4000a30:	0109c83a 	sub	r4,zero,r4
 4000a34:	01c00044 	movi	r7,1
 4000a38:	003fe706 	br	40009d8 <__alt_data_end+0xfc0009d8>
 4000a3c:	00c00044 	movi	r3,1
 4000a40:	003ff106 	br	4000a08 <__alt_data_end+0xfc000a08>

04000a44 <__udivsi3>:
 4000a44:	200d883a 	mov	r6,r4
 4000a48:	2900152e 	bgeu	r5,r4,4000aa0 <__udivsi3+0x5c>
 4000a4c:	28001416 	blt	r5,zero,4000aa0 <__udivsi3+0x5c>
 4000a50:	00800804 	movi	r2,32
 4000a54:	00c00044 	movi	r3,1
 4000a58:	00000206 	br	4000a64 <__udivsi3+0x20>
 4000a5c:	10000e26 	beq	r2,zero,4000a98 <__udivsi3+0x54>
 4000a60:	28000516 	blt	r5,zero,4000a78 <__udivsi3+0x34>
 4000a64:	294b883a 	add	r5,r5,r5
 4000a68:	10bfffc4 	addi	r2,r2,-1
 4000a6c:	18c7883a 	add	r3,r3,r3
 4000a70:	293ffa36 	bltu	r5,r4,4000a5c <__alt_data_end+0xfc000a5c>
 4000a74:	18000826 	beq	r3,zero,4000a98 <__udivsi3+0x54>
 4000a78:	0005883a 	mov	r2,zero
 4000a7c:	31400236 	bltu	r6,r5,4000a88 <__udivsi3+0x44>
 4000a80:	314dc83a 	sub	r6,r6,r5
 4000a84:	10c4b03a 	or	r2,r2,r3
 4000a88:	1806d07a 	srli	r3,r3,1
 4000a8c:	280ad07a 	srli	r5,r5,1
 4000a90:	183ffa1e 	bne	r3,zero,4000a7c <__alt_data_end+0xfc000a7c>
 4000a94:	f800283a 	ret
 4000a98:	0005883a 	mov	r2,zero
 4000a9c:	f800283a 	ret
 4000aa0:	00c00044 	movi	r3,1
 4000aa4:	003ff406 	br	4000a78 <__alt_data_end+0xfc000a78>

04000aa8 <__umodsi3>:
 4000aa8:	2005883a 	mov	r2,r4
 4000aac:	2900122e 	bgeu	r5,r4,4000af8 <__umodsi3+0x50>
 4000ab0:	28001116 	blt	r5,zero,4000af8 <__umodsi3+0x50>
 4000ab4:	01800804 	movi	r6,32
 4000ab8:	00c00044 	movi	r3,1
 4000abc:	00000206 	br	4000ac8 <__umodsi3+0x20>
 4000ac0:	30000c26 	beq	r6,zero,4000af4 <__umodsi3+0x4c>
 4000ac4:	28000516 	blt	r5,zero,4000adc <__umodsi3+0x34>
 4000ac8:	294b883a 	add	r5,r5,r5
 4000acc:	31bfffc4 	addi	r6,r6,-1
 4000ad0:	18c7883a 	add	r3,r3,r3
 4000ad4:	293ffa36 	bltu	r5,r4,4000ac0 <__alt_data_end+0xfc000ac0>
 4000ad8:	18000626 	beq	r3,zero,4000af4 <__umodsi3+0x4c>
 4000adc:	1806d07a 	srli	r3,r3,1
 4000ae0:	11400136 	bltu	r2,r5,4000ae8 <__umodsi3+0x40>
 4000ae4:	1145c83a 	sub	r2,r2,r5
 4000ae8:	280ad07a 	srli	r5,r5,1
 4000aec:	183ffb1e 	bne	r3,zero,4000adc <__alt_data_end+0xfc000adc>
 4000af0:	f800283a 	ret
 4000af4:	f800283a 	ret
 4000af8:	00c00044 	movi	r3,1
 4000afc:	003ff706 	br	4000adc <__alt_data_end+0xfc000adc>

04000b00 <__divsf3>:
 4000b00:	defff504 	addi	sp,sp,-44
 4000b04:	200cd5fa 	srli	r6,r4,23
 4000b08:	dcc00415 	stw	r19,16(sp)
 4000b0c:	2026d7fa 	srli	r19,r4,31
 4000b10:	00c02034 	movhi	r3,128
 4000b14:	dd800715 	stw	r22,28(sp)
 4000b18:	dd000515 	stw	r20,20(sp)
 4000b1c:	dc800315 	stw	r18,12(sp)
 4000b20:	18ffffc4 	addi	r3,r3,-1
 4000b24:	dfc00a15 	stw	ra,40(sp)
 4000b28:	df000915 	stw	fp,36(sp)
 4000b2c:	ddc00815 	stw	r23,32(sp)
 4000b30:	dd400615 	stw	r21,24(sp)
 4000b34:	dc400215 	stw	r17,8(sp)
 4000b38:	dc000115 	stw	r16,4(sp)
 4000b3c:	35003fcc 	andi	r20,r6,255
 4000b40:	1924703a 	and	r18,r3,r4
 4000b44:	9d803fcc 	andi	r22,r19,255
 4000b48:	a0005226 	beq	r20,zero,4000c94 <__divsf3+0x194>
 4000b4c:	00803fc4 	movi	r2,255
 4000b50:	a0802e26 	beq	r20,r2,4000c0c <__divsf3+0x10c>
 4000b54:	91002034 	orhi	r4,r18,128
 4000b58:	202490fa 	slli	r18,r4,3
 4000b5c:	a53fe044 	addi	r20,r20,-127
 4000b60:	0021883a 	mov	r16,zero
 4000b64:	002f883a 	mov	r23,zero
 4000b68:	280cd5fa 	srli	r6,r5,23
 4000b6c:	282ad7fa 	srli	r21,r5,31
 4000b70:	00c02034 	movhi	r3,128
 4000b74:	18ffffc4 	addi	r3,r3,-1
 4000b78:	31803fcc 	andi	r6,r6,255
 4000b7c:	1962703a 	and	r17,r3,r5
 4000b80:	af003fcc 	andi	fp,r21,255
 4000b84:	30004a26 	beq	r6,zero,4000cb0 <__divsf3+0x1b0>
 4000b88:	00803fc4 	movi	r2,255
 4000b8c:	30804526 	beq	r6,r2,4000ca4 <__divsf3+0x1a4>
 4000b90:	89402034 	orhi	r5,r17,128
 4000b94:	282290fa 	slli	r17,r5,3
 4000b98:	31bfe044 	addi	r6,r6,-127
 4000b9c:	000b883a 	mov	r5,zero
 4000ba0:	2c20b03a 	or	r16,r5,r16
 4000ba4:	802090ba 	slli	r16,r16,2
 4000ba8:	00810034 	movhi	r2,1024
 4000bac:	1082f304 	addi	r2,r2,3020
 4000bb0:	80a1883a 	add	r16,r16,r2
 4000bb4:	81000017 	ldw	r4,0(r16)
 4000bb8:	9d46f03a 	xor	r3,r19,r21
 4000bbc:	180f883a 	mov	r7,r3
 4000bc0:	18803fcc 	andi	r2,r3,255
 4000bc4:	a18dc83a 	sub	r6,r20,r6
 4000bc8:	2000683a 	jmp	r4
 4000bcc:	04000db0 	cmpltui	r16,zero,54
 4000bd0:	04000c34 	movhi	r16,48
 4000bd4:	04000da4 	muli	r16,zero,54
 4000bd8:	04000c20 	cmpeqi	r16,zero,48
 4000bdc:	04000da4 	muli	r16,zero,54
 4000be0:	04000d7c 	xorhi	r16,zero,53
 4000be4:	04000da4 	muli	r16,zero,54
 4000be8:	04000c20 	cmpeqi	r16,zero,48
 4000bec:	04000c34 	movhi	r16,48
 4000bf0:	04000c34 	movhi	r16,48
 4000bf4:	04000d7c 	xorhi	r16,zero,53
 4000bf8:	04000c20 	cmpeqi	r16,zero,48
 4000bfc:	04000e90 	cmplti	r16,zero,58
 4000c00:	04000e90 	cmplti	r16,zero,58
 4000c04:	04000e90 	cmplti	r16,zero,58
 4000c08:	04000e44 	movi	r16,57
 4000c0c:	9000581e 	bne	r18,zero,4000d70 <__divsf3+0x270>
 4000c10:	04000204 	movi	r16,8
 4000c14:	05c00084 	movi	r23,2
 4000c18:	003fd306 	br	4000b68 <__alt_data_end+0xfc000b68>
 4000c1c:	0023883a 	mov	r17,zero
 4000c20:	e02d883a 	mov	r22,fp
 4000c24:	282f883a 	mov	r23,r5
 4000c28:	00800084 	movi	r2,2
 4000c2c:	b8808f1e 	bne	r23,r2,4000e6c <__divsf3+0x36c>
 4000c30:	b005883a 	mov	r2,r22
 4000c34:	11c0004c 	andi	r7,r2,1
 4000c38:	013fffc4 	movi	r4,-1
 4000c3c:	000d883a 	mov	r6,zero
 4000c40:	21003fcc 	andi	r4,r4,255
 4000c44:	200895fa 	slli	r4,r4,23
 4000c48:	38803fcc 	andi	r2,r7,255
 4000c4c:	00c02034 	movhi	r3,128
 4000c50:	100497fa 	slli	r2,r2,31
 4000c54:	18ffffc4 	addi	r3,r3,-1
 4000c58:	30c6703a 	and	r3,r6,r3
 4000c5c:	1906b03a 	or	r3,r3,r4
 4000c60:	1884b03a 	or	r2,r3,r2
 4000c64:	dfc00a17 	ldw	ra,40(sp)
 4000c68:	df000917 	ldw	fp,36(sp)
 4000c6c:	ddc00817 	ldw	r23,32(sp)
 4000c70:	dd800717 	ldw	r22,28(sp)
 4000c74:	dd400617 	ldw	r21,24(sp)
 4000c78:	dd000517 	ldw	r20,20(sp)
 4000c7c:	dcc00417 	ldw	r19,16(sp)
 4000c80:	dc800317 	ldw	r18,12(sp)
 4000c84:	dc400217 	ldw	r17,8(sp)
 4000c88:	dc000117 	ldw	r16,4(sp)
 4000c8c:	dec00b04 	addi	sp,sp,44
 4000c90:	f800283a 	ret
 4000c94:	90002b1e 	bne	r18,zero,4000d44 <__divsf3+0x244>
 4000c98:	04000104 	movi	r16,4
 4000c9c:	05c00044 	movi	r23,1
 4000ca0:	003fb106 	br	4000b68 <__alt_data_end+0xfc000b68>
 4000ca4:	8800251e 	bne	r17,zero,4000d3c <__divsf3+0x23c>
 4000ca8:	01400084 	movi	r5,2
 4000cac:	00000206 	br	4000cb8 <__divsf3+0x1b8>
 4000cb0:	88001a1e 	bne	r17,zero,4000d1c <__divsf3+0x21c>
 4000cb4:	01400044 	movi	r5,1
 4000cb8:	8160b03a 	or	r16,r16,r5
 4000cbc:	802090ba 	slli	r16,r16,2
 4000cc0:	00c10034 	movhi	r3,1024
 4000cc4:	18c33704 	addi	r3,r3,3292
 4000cc8:	80e1883a 	add	r16,r16,r3
 4000ccc:	80c00017 	ldw	r3,0(r16)
 4000cd0:	9d44f03a 	xor	r2,r19,r21
 4000cd4:	a18dc83a 	sub	r6,r20,r6
 4000cd8:	1800683a 	jmp	r3
 4000cdc:	04000c34 	movhi	r16,48
 4000ce0:	04000c34 	movhi	r16,48
 4000ce4:	04000e80 	call	4000e8 <__alt_mem_new_sdram_controller_0-0x3bfff18>
 4000ce8:	04000c1c 	xori	r16,zero,48
 4000cec:	04000e80 	call	4000e8 <__alt_mem_new_sdram_controller_0-0x3bfff18>
 4000cf0:	04000d7c 	xorhi	r16,zero,53
 4000cf4:	04000e80 	call	4000e8 <__alt_mem_new_sdram_controller_0-0x3bfff18>
 4000cf8:	04000c1c 	xori	r16,zero,48
 4000cfc:	04000c34 	movhi	r16,48
 4000d00:	04000c34 	movhi	r16,48
 4000d04:	04000d7c 	xorhi	r16,zero,53
 4000d08:	04000c1c 	xori	r16,zero,48
 4000d0c:	04000e90 	cmplti	r16,zero,58
 4000d10:	04000e90 	cmplti	r16,zero,58
 4000d14:	04000e90 	cmplti	r16,zero,58
 4000d18:	04000ea8 	cmpgeui	r16,zero,58
 4000d1c:	8809883a 	mov	r4,r17
 4000d20:	40026600 	call	4002660 <__clzsi2>
 4000d24:	10fffec4 	addi	r3,r2,-5
 4000d28:	10801d84 	addi	r2,r2,118
 4000d2c:	88e2983a 	sll	r17,r17,r3
 4000d30:	008dc83a 	sub	r6,zero,r2
 4000d34:	000b883a 	mov	r5,zero
 4000d38:	003f9906 	br	4000ba0 <__alt_data_end+0xfc000ba0>
 4000d3c:	014000c4 	movi	r5,3
 4000d40:	003f9706 	br	4000ba0 <__alt_data_end+0xfc000ba0>
 4000d44:	9009883a 	mov	r4,r18
 4000d48:	d9400015 	stw	r5,0(sp)
 4000d4c:	40026600 	call	4002660 <__clzsi2>
 4000d50:	10fffec4 	addi	r3,r2,-5
 4000d54:	11801d84 	addi	r6,r2,118
 4000d58:	90e4983a 	sll	r18,r18,r3
 4000d5c:	01a9c83a 	sub	r20,zero,r6
 4000d60:	0021883a 	mov	r16,zero
 4000d64:	002f883a 	mov	r23,zero
 4000d68:	d9400017 	ldw	r5,0(sp)
 4000d6c:	003f7e06 	br	4000b68 <__alt_data_end+0xfc000b68>
 4000d70:	04000304 	movi	r16,12
 4000d74:	05c000c4 	movi	r23,3
 4000d78:	003f7b06 	br	4000b68 <__alt_data_end+0xfc000b68>
 4000d7c:	01802034 	movhi	r6,128
 4000d80:	000f883a 	mov	r7,zero
 4000d84:	31bfffc4 	addi	r6,r6,-1
 4000d88:	013fffc4 	movi	r4,-1
 4000d8c:	003fac06 	br	4000c40 <__alt_data_end+0xfc000c40>
 4000d90:	01400044 	movi	r5,1
 4000d94:	2909c83a 	sub	r4,r5,r4
 4000d98:	00c006c4 	movi	r3,27
 4000d9c:	19004b0e 	bge	r3,r4,4000ecc <__divsf3+0x3cc>
 4000da0:	114e703a 	and	r7,r2,r5
 4000da4:	0009883a 	mov	r4,zero
 4000da8:	000d883a 	mov	r6,zero
 4000dac:	003fa406 	br	4000c40 <__alt_data_end+0xfc000c40>
 4000db0:	9006917a 	slli	r3,r18,5
 4000db4:	8822917a 	slli	r17,r17,5
 4000db8:	1c40372e 	bgeu	r3,r17,4000e98 <__divsf3+0x398>
 4000dbc:	31bfffc4 	addi	r6,r6,-1
 4000dc0:	010006c4 	movi	r4,27
 4000dc4:	000b883a 	mov	r5,zero
 4000dc8:	180f883a 	mov	r7,r3
 4000dcc:	294b883a 	add	r5,r5,r5
 4000dd0:	18c7883a 	add	r3,r3,r3
 4000dd4:	38000116 	blt	r7,zero,4000ddc <__divsf3+0x2dc>
 4000dd8:	1c400236 	bltu	r3,r17,4000de4 <__divsf3+0x2e4>
 4000ddc:	1c47c83a 	sub	r3,r3,r17
 4000de0:	29400054 	ori	r5,r5,1
 4000de4:	213fffc4 	addi	r4,r4,-1
 4000de8:	203ff71e 	bne	r4,zero,4000dc8 <__alt_data_end+0xfc000dc8>
 4000dec:	1806c03a 	cmpne	r3,r3,zero
 4000df0:	1962b03a 	or	r17,r3,r5
 4000df4:	31001fc4 	addi	r4,r6,127
 4000df8:	013fe50e 	bge	zero,r4,4000d90 <__alt_data_end+0xfc000d90>
 4000dfc:	88c001cc 	andi	r3,r17,7
 4000e00:	18000426 	beq	r3,zero,4000e14 <__divsf3+0x314>
 4000e04:	88c003cc 	andi	r3,r17,15
 4000e08:	01400104 	movi	r5,4
 4000e0c:	19400126 	beq	r3,r5,4000e14 <__divsf3+0x314>
 4000e10:	8963883a 	add	r17,r17,r5
 4000e14:	88c2002c 	andhi	r3,r17,2048
 4000e18:	18000426 	beq	r3,zero,4000e2c <__divsf3+0x32c>
 4000e1c:	00fe0034 	movhi	r3,63488
 4000e20:	18ffffc4 	addi	r3,r3,-1
 4000e24:	31002004 	addi	r4,r6,128
 4000e28:	88e2703a 	and	r17,r17,r3
 4000e2c:	00c03f84 	movi	r3,254
 4000e30:	193f8016 	blt	r3,r4,4000c34 <__alt_data_end+0xfc000c34>
 4000e34:	880c91ba 	slli	r6,r17,6
 4000e38:	11c0004c 	andi	r7,r2,1
 4000e3c:	300cd27a 	srli	r6,r6,9
 4000e40:	003f7f06 	br	4000c40 <__alt_data_end+0xfc000c40>
 4000e44:	9080102c 	andhi	r2,r18,64
 4000e48:	10000226 	beq	r2,zero,4000e54 <__divsf3+0x354>
 4000e4c:	8880102c 	andhi	r2,r17,64
 4000e50:	10001826 	beq	r2,zero,4000eb4 <__divsf3+0x3b4>
 4000e54:	00802034 	movhi	r2,128
 4000e58:	91801034 	orhi	r6,r18,64
 4000e5c:	10bfffc4 	addi	r2,r2,-1
 4000e60:	980f883a 	mov	r7,r19
 4000e64:	308c703a 	and	r6,r6,r2
 4000e68:	003fc706 	br	4000d88 <__alt_data_end+0xfc000d88>
 4000e6c:	008000c4 	movi	r2,3
 4000e70:	b8802d26 	beq	r23,r2,4000f28 <__divsf3+0x428>
 4000e74:	00c00044 	movi	r3,1
 4000e78:	b005883a 	mov	r2,r22
 4000e7c:	b8ffdd1e 	bne	r23,r3,4000df4 <__alt_data_end+0xfc000df4>
 4000e80:	11c0004c 	andi	r7,r2,1
 4000e84:	0009883a 	mov	r4,zero
 4000e88:	000d883a 	mov	r6,zero
 4000e8c:	003f6c06 	br	4000c40 <__alt_data_end+0xfc000c40>
 4000e90:	9023883a 	mov	r17,r18
 4000e94:	003f6406 	br	4000c28 <__alt_data_end+0xfc000c28>
 4000e98:	1c47c83a 	sub	r3,r3,r17
 4000e9c:	01000684 	movi	r4,26
 4000ea0:	01400044 	movi	r5,1
 4000ea4:	003fc806 	br	4000dc8 <__alt_data_end+0xfc000dc8>
 4000ea8:	9080102c 	andhi	r2,r18,64
 4000eac:	103fe926 	beq	r2,zero,4000e54 <__alt_data_end+0xfc000e54>
 4000eb0:	0023883a 	mov	r17,zero
 4000eb4:	00802034 	movhi	r2,128
 4000eb8:	89801034 	orhi	r6,r17,64
 4000ebc:	10bfffc4 	addi	r2,r2,-1
 4000ec0:	a80f883a 	mov	r7,r21
 4000ec4:	308c703a 	and	r6,r6,r2
 4000ec8:	003faf06 	br	4000d88 <__alt_data_end+0xfc000d88>
 4000ecc:	01c00804 	movi	r7,32
 4000ed0:	390fc83a 	sub	r7,r7,r4
 4000ed4:	89ce983a 	sll	r7,r17,r7
 4000ed8:	890ad83a 	srl	r5,r17,r4
 4000edc:	380ec03a 	cmpne	r7,r7,zero
 4000ee0:	29cab03a 	or	r5,r5,r7
 4000ee4:	28c001cc 	andi	r3,r5,7
 4000ee8:	18000426 	beq	r3,zero,4000efc <__divsf3+0x3fc>
 4000eec:	28c003cc 	andi	r3,r5,15
 4000ef0:	01000104 	movi	r4,4
 4000ef4:	19000126 	beq	r3,r4,4000efc <__divsf3+0x3fc>
 4000ef8:	290b883a 	add	r5,r5,r4
 4000efc:	28c1002c 	andhi	r3,r5,1024
 4000f00:	18000426 	beq	r3,zero,4000f14 <__divsf3+0x414>
 4000f04:	11c0004c 	andi	r7,r2,1
 4000f08:	01000044 	movi	r4,1
 4000f0c:	000d883a 	mov	r6,zero
 4000f10:	003f4b06 	br	4000c40 <__alt_data_end+0xfc000c40>
 4000f14:	280a91ba 	slli	r5,r5,6
 4000f18:	11c0004c 	andi	r7,r2,1
 4000f1c:	0009883a 	mov	r4,zero
 4000f20:	280cd27a 	srli	r6,r5,9
 4000f24:	003f4606 	br	4000c40 <__alt_data_end+0xfc000c40>
 4000f28:	00802034 	movhi	r2,128
 4000f2c:	89801034 	orhi	r6,r17,64
 4000f30:	10bfffc4 	addi	r2,r2,-1
 4000f34:	b00f883a 	mov	r7,r22
 4000f38:	308c703a 	and	r6,r6,r2
 4000f3c:	003f9206 	br	4000d88 <__alt_data_end+0xfc000d88>

04000f40 <__mulsf3>:
 4000f40:	defff504 	addi	sp,sp,-44
 4000f44:	dc000115 	stw	r16,4(sp)
 4000f48:	2020d5fa 	srli	r16,r4,23
 4000f4c:	dd400615 	stw	r21,24(sp)
 4000f50:	202ad7fa 	srli	r21,r4,31
 4000f54:	dc800315 	stw	r18,12(sp)
 4000f58:	04802034 	movhi	r18,128
 4000f5c:	df000915 	stw	fp,36(sp)
 4000f60:	dd000515 	stw	r20,20(sp)
 4000f64:	94bfffc4 	addi	r18,r18,-1
 4000f68:	dfc00a15 	stw	ra,40(sp)
 4000f6c:	ddc00815 	stw	r23,32(sp)
 4000f70:	dd800715 	stw	r22,28(sp)
 4000f74:	dcc00415 	stw	r19,16(sp)
 4000f78:	dc400215 	stw	r17,8(sp)
 4000f7c:	84003fcc 	andi	r16,r16,255
 4000f80:	9124703a 	and	r18,r18,r4
 4000f84:	a829883a 	mov	r20,r21
 4000f88:	af003fcc 	andi	fp,r21,255
 4000f8c:	80005426 	beq	r16,zero,40010e0 <__mulsf3+0x1a0>
 4000f90:	00803fc4 	movi	r2,255
 4000f94:	80802f26 	beq	r16,r2,4001054 <__mulsf3+0x114>
 4000f98:	91002034 	orhi	r4,r18,128
 4000f9c:	202490fa 	slli	r18,r4,3
 4000fa0:	843fe044 	addi	r16,r16,-127
 4000fa4:	0023883a 	mov	r17,zero
 4000fa8:	002f883a 	mov	r23,zero
 4000fac:	2804d5fa 	srli	r2,r5,23
 4000fb0:	282cd7fa 	srli	r22,r5,31
 4000fb4:	01002034 	movhi	r4,128
 4000fb8:	213fffc4 	addi	r4,r4,-1
 4000fbc:	10803fcc 	andi	r2,r2,255
 4000fc0:	2166703a 	and	r19,r4,r5
 4000fc4:	b1803fcc 	andi	r6,r22,255
 4000fc8:	10004c26 	beq	r2,zero,40010fc <__mulsf3+0x1bc>
 4000fcc:	00c03fc4 	movi	r3,255
 4000fd0:	10c04726 	beq	r2,r3,40010f0 <__mulsf3+0x1b0>
 4000fd4:	99002034 	orhi	r4,r19,128
 4000fd8:	202690fa 	slli	r19,r4,3
 4000fdc:	10bfe044 	addi	r2,r2,-127
 4000fe0:	0007883a 	mov	r3,zero
 4000fe4:	80a1883a 	add	r16,r16,r2
 4000fe8:	010003c4 	movi	r4,15
 4000fec:	1c44b03a 	or	r2,r3,r17
 4000ff0:	b56af03a 	xor	r21,r22,r21
 4000ff4:	81c00044 	addi	r7,r16,1
 4000ff8:	20806b36 	bltu	r4,r2,40011a8 <__mulsf3+0x268>
 4000ffc:	100490ba 	slli	r2,r2,2
 4001000:	01010034 	movhi	r4,1024
 4001004:	21040504 	addi	r4,r4,4116
 4001008:	1105883a 	add	r2,r2,r4
 400100c:	10800017 	ldw	r2,0(r2)
 4001010:	1000683a 	jmp	r2
 4001014:	040011a8 	cmpgeui	r16,zero,70
 4001018:	04001068 	cmpgeui	r16,zero,65
 400101c:	04001068 	cmpgeui	r16,zero,65
 4001020:	04001064 	muli	r16,zero,65
 4001024:	0400118c 	andi	r16,zero,70
 4001028:	0400118c 	andi	r16,zero,70
 400102c:	04001178 	rdprs	r16,zero,69
 4001030:	04001064 	muli	r16,zero,65
 4001034:	0400118c 	andi	r16,zero,70
 4001038:	04001178 	rdprs	r16,zero,69
 400103c:	0400118c 	andi	r16,zero,70
 4001040:	04001064 	muli	r16,zero,65
 4001044:	04001198 	cmpnei	r16,zero,70
 4001048:	04001198 	cmpnei	r16,zero,70
 400104c:	04001198 	cmpnei	r16,zero,70
 4001050:	04001274 	movhi	r16,73
 4001054:	90003b1e 	bne	r18,zero,4001144 <__mulsf3+0x204>
 4001058:	04400204 	movi	r17,8
 400105c:	05c00084 	movi	r23,2
 4001060:	003fd206 	br	4000fac <__alt_data_end+0xfc000fac>
 4001064:	302b883a 	mov	r21,r6
 4001068:	00800084 	movi	r2,2
 400106c:	18802626 	beq	r3,r2,4001108 <__mulsf3+0x1c8>
 4001070:	008000c4 	movi	r2,3
 4001074:	1880ab26 	beq	r3,r2,4001324 <__mulsf3+0x3e4>
 4001078:	00800044 	movi	r2,1
 400107c:	1880a21e 	bne	r3,r2,4001308 <__mulsf3+0x3c8>
 4001080:	a829883a 	mov	r20,r21
 4001084:	0007883a 	mov	r3,zero
 4001088:	0009883a 	mov	r4,zero
 400108c:	18803fcc 	andi	r2,r3,255
 4001090:	100695fa 	slli	r3,r2,23
 4001094:	a0803fcc 	andi	r2,r20,255
 4001098:	100a97fa 	slli	r5,r2,31
 400109c:	00802034 	movhi	r2,128
 40010a0:	10bfffc4 	addi	r2,r2,-1
 40010a4:	2084703a 	and	r2,r4,r2
 40010a8:	10c4b03a 	or	r2,r2,r3
 40010ac:	1144b03a 	or	r2,r2,r5
 40010b0:	dfc00a17 	ldw	ra,40(sp)
 40010b4:	df000917 	ldw	fp,36(sp)
 40010b8:	ddc00817 	ldw	r23,32(sp)
 40010bc:	dd800717 	ldw	r22,28(sp)
 40010c0:	dd400617 	ldw	r21,24(sp)
 40010c4:	dd000517 	ldw	r20,20(sp)
 40010c8:	dcc00417 	ldw	r19,16(sp)
 40010cc:	dc800317 	ldw	r18,12(sp)
 40010d0:	dc400217 	ldw	r17,8(sp)
 40010d4:	dc000117 	ldw	r16,4(sp)
 40010d8:	dec00b04 	addi	sp,sp,44
 40010dc:	f800283a 	ret
 40010e0:	90000d1e 	bne	r18,zero,4001118 <__mulsf3+0x1d8>
 40010e4:	04400104 	movi	r17,4
 40010e8:	05c00044 	movi	r23,1
 40010ec:	003faf06 	br	4000fac <__alt_data_end+0xfc000fac>
 40010f0:	9806c03a 	cmpne	r3,r19,zero
 40010f4:	18c00084 	addi	r3,r3,2
 40010f8:	003fba06 	br	4000fe4 <__alt_data_end+0xfc000fe4>
 40010fc:	9800141e 	bne	r19,zero,4001150 <__mulsf3+0x210>
 4001100:	00c00044 	movi	r3,1
 4001104:	003fb706 	br	4000fe4 <__alt_data_end+0xfc000fe4>
 4001108:	a829883a 	mov	r20,r21
 400110c:	00ffffc4 	movi	r3,-1
 4001110:	0009883a 	mov	r4,zero
 4001114:	003fdd06 	br	400108c <__alt_data_end+0xfc00108c>
 4001118:	9009883a 	mov	r4,r18
 400111c:	d9400015 	stw	r5,0(sp)
 4001120:	40026600 	call	4002660 <__clzsi2>
 4001124:	10fffec4 	addi	r3,r2,-5
 4001128:	10801d84 	addi	r2,r2,118
 400112c:	90e4983a 	sll	r18,r18,r3
 4001130:	00a1c83a 	sub	r16,zero,r2
 4001134:	0023883a 	mov	r17,zero
 4001138:	002f883a 	mov	r23,zero
 400113c:	d9400017 	ldw	r5,0(sp)
 4001140:	003f9a06 	br	4000fac <__alt_data_end+0xfc000fac>
 4001144:	04400304 	movi	r17,12
 4001148:	05c000c4 	movi	r23,3
 400114c:	003f9706 	br	4000fac <__alt_data_end+0xfc000fac>
 4001150:	9809883a 	mov	r4,r19
 4001154:	d9800015 	stw	r6,0(sp)
 4001158:	40026600 	call	4002660 <__clzsi2>
 400115c:	10fffec4 	addi	r3,r2,-5
 4001160:	10801d84 	addi	r2,r2,118
 4001164:	98e6983a 	sll	r19,r19,r3
 4001168:	0085c83a 	sub	r2,zero,r2
 400116c:	0007883a 	mov	r3,zero
 4001170:	d9800017 	ldw	r6,0(sp)
 4001174:	003f9b06 	br	4000fe4 <__alt_data_end+0xfc000fe4>
 4001178:	01002034 	movhi	r4,128
 400117c:	0029883a 	mov	r20,zero
 4001180:	213fffc4 	addi	r4,r4,-1
 4001184:	00ffffc4 	movi	r3,-1
 4001188:	003fc006 	br	400108c <__alt_data_end+0xfc00108c>
 400118c:	9027883a 	mov	r19,r18
 4001190:	b807883a 	mov	r3,r23
 4001194:	003fb406 	br	4001068 <__alt_data_end+0xfc001068>
 4001198:	9027883a 	mov	r19,r18
 400119c:	e02b883a 	mov	r21,fp
 40011a0:	b807883a 	mov	r3,r23
 40011a4:	003fb006 	br	4001068 <__alt_data_end+0xfc001068>
 40011a8:	9004d43a 	srli	r2,r18,16
 40011ac:	9810d43a 	srli	r8,r19,16
 40011b0:	94bfffcc 	andi	r18,r18,65535
 40011b4:	993fffcc 	andi	r4,r19,65535
 40011b8:	910d383a 	mul	r6,r18,r4
 40011bc:	20a7383a 	mul	r19,r4,r2
 40011c0:	9225383a 	mul	r18,r18,r8
 40011c4:	3006d43a 	srli	r3,r6,16
 40011c8:	1211383a 	mul	r8,r2,r8
 40011cc:	94e5883a 	add	r18,r18,r19
 40011d0:	1c87883a 	add	r3,r3,r18
 40011d4:	1cc0022e 	bgeu	r3,r19,40011e0 <__mulsf3+0x2a0>
 40011d8:	00800074 	movhi	r2,1
 40011dc:	4091883a 	add	r8,r8,r2
 40011e0:	1804943a 	slli	r2,r3,16
 40011e4:	31bfffcc 	andi	r6,r6,65535
 40011e8:	1806d43a 	srli	r3,r3,16
 40011ec:	1185883a 	add	r2,r2,r6
 40011f0:	102691ba 	slli	r19,r2,6
 40011f4:	1a07883a 	add	r3,r3,r8
 40011f8:	1004d6ba 	srli	r2,r2,26
 40011fc:	180891ba 	slli	r4,r3,6
 4001200:	9826c03a 	cmpne	r19,r19,zero
 4001204:	9884b03a 	or	r2,r19,r2
 4001208:	1126b03a 	or	r19,r2,r4
 400120c:	9882002c 	andhi	r2,r19,2048
 4001210:	10000426 	beq	r2,zero,4001224 <__mulsf3+0x2e4>
 4001214:	9804d07a 	srli	r2,r19,1
 4001218:	9900004c 	andi	r4,r19,1
 400121c:	3821883a 	mov	r16,r7
 4001220:	1126b03a 	or	r19,r2,r4
 4001224:	80c01fc4 	addi	r3,r16,127
 4001228:	00c0210e 	bge	zero,r3,40012b0 <__mulsf3+0x370>
 400122c:	988001cc 	andi	r2,r19,7
 4001230:	10000426 	beq	r2,zero,4001244 <__mulsf3+0x304>
 4001234:	988003cc 	andi	r2,r19,15
 4001238:	01000104 	movi	r4,4
 400123c:	11000126 	beq	r2,r4,4001244 <__mulsf3+0x304>
 4001240:	9927883a 	add	r19,r19,r4
 4001244:	9882002c 	andhi	r2,r19,2048
 4001248:	10000426 	beq	r2,zero,400125c <__mulsf3+0x31c>
 400124c:	00be0034 	movhi	r2,63488
 4001250:	10bfffc4 	addi	r2,r2,-1
 4001254:	80c02004 	addi	r3,r16,128
 4001258:	98a6703a 	and	r19,r19,r2
 400125c:	00803f84 	movi	r2,254
 4001260:	10ffa916 	blt	r2,r3,4001108 <__alt_data_end+0xfc001108>
 4001264:	980891ba 	slli	r4,r19,6
 4001268:	a829883a 	mov	r20,r21
 400126c:	2008d27a 	srli	r4,r4,9
 4001270:	003f8606 	br	400108c <__alt_data_end+0xfc00108c>
 4001274:	9080102c 	andhi	r2,r18,64
 4001278:	10000826 	beq	r2,zero,400129c <__mulsf3+0x35c>
 400127c:	9880102c 	andhi	r2,r19,64
 4001280:	1000061e 	bne	r2,zero,400129c <__mulsf3+0x35c>
 4001284:	00802034 	movhi	r2,128
 4001288:	99001034 	orhi	r4,r19,64
 400128c:	10bfffc4 	addi	r2,r2,-1
 4001290:	b029883a 	mov	r20,r22
 4001294:	2088703a 	and	r4,r4,r2
 4001298:	003fba06 	br	4001184 <__alt_data_end+0xfc001184>
 400129c:	00802034 	movhi	r2,128
 40012a0:	91001034 	orhi	r4,r18,64
 40012a4:	10bfffc4 	addi	r2,r2,-1
 40012a8:	2088703a 	and	r4,r4,r2
 40012ac:	003fb506 	br	4001184 <__alt_data_end+0xfc001184>
 40012b0:	00800044 	movi	r2,1
 40012b4:	10c7c83a 	sub	r3,r2,r3
 40012b8:	008006c4 	movi	r2,27
 40012bc:	10ff7016 	blt	r2,r3,4001080 <__alt_data_end+0xfc001080>
 40012c0:	00800804 	movi	r2,32
 40012c4:	10c5c83a 	sub	r2,r2,r3
 40012c8:	9884983a 	sll	r2,r19,r2
 40012cc:	98c6d83a 	srl	r3,r19,r3
 40012d0:	1004c03a 	cmpne	r2,r2,zero
 40012d4:	1884b03a 	or	r2,r3,r2
 40012d8:	10c001cc 	andi	r3,r2,7
 40012dc:	18000426 	beq	r3,zero,40012f0 <__mulsf3+0x3b0>
 40012e0:	10c003cc 	andi	r3,r2,15
 40012e4:	01000104 	movi	r4,4
 40012e8:	19000126 	beq	r3,r4,40012f0 <__mulsf3+0x3b0>
 40012ec:	1105883a 	add	r2,r2,r4
 40012f0:	10c1002c 	andhi	r3,r2,1024
 40012f4:	18000626 	beq	r3,zero,4001310 <__mulsf3+0x3d0>
 40012f8:	a829883a 	mov	r20,r21
 40012fc:	00c00044 	movi	r3,1
 4001300:	0009883a 	mov	r4,zero
 4001304:	003f6106 	br	400108c <__alt_data_end+0xfc00108c>
 4001308:	3821883a 	mov	r16,r7
 400130c:	003fc506 	br	4001224 <__alt_data_end+0xfc001224>
 4001310:	100491ba 	slli	r2,r2,6
 4001314:	a829883a 	mov	r20,r21
 4001318:	0007883a 	mov	r3,zero
 400131c:	1008d27a 	srli	r4,r2,9
 4001320:	003f5a06 	br	400108c <__alt_data_end+0xfc00108c>
 4001324:	00802034 	movhi	r2,128
 4001328:	99001034 	orhi	r4,r19,64
 400132c:	10bfffc4 	addi	r2,r2,-1
 4001330:	a829883a 	mov	r20,r21
 4001334:	2088703a 	and	r4,r4,r2
 4001338:	003f9206 	br	4001184 <__alt_data_end+0xfc001184>

0400133c <__floatsisf>:
 400133c:	defffd04 	addi	sp,sp,-12
 4001340:	dfc00215 	stw	ra,8(sp)
 4001344:	dc400115 	stw	r17,4(sp)
 4001348:	dc000015 	stw	r16,0(sp)
 400134c:	20003526 	beq	r4,zero,4001424 <__floatsisf+0xe8>
 4001350:	2021883a 	mov	r16,r4
 4001354:	2022d7fa 	srli	r17,r4,31
 4001358:	20003616 	blt	r4,zero,4001434 <__floatsisf+0xf8>
 400135c:	8009883a 	mov	r4,r16
 4001360:	40026600 	call	4002660 <__clzsi2>
 4001364:	00c02784 	movi	r3,158
 4001368:	1887c83a 	sub	r3,r3,r2
 400136c:	01002584 	movi	r4,150
 4001370:	20c01416 	blt	r4,r3,40013c4 <__floatsisf+0x88>
 4001374:	20c9c83a 	sub	r4,r4,r3
 4001378:	8120983a 	sll	r16,r16,r4
 400137c:	00802034 	movhi	r2,128
 4001380:	10bfffc4 	addi	r2,r2,-1
 4001384:	8809883a 	mov	r4,r17
 4001388:	80a0703a 	and	r16,r16,r2
 400138c:	18803fcc 	andi	r2,r3,255
 4001390:	100695fa 	slli	r3,r2,23
 4001394:	20803fcc 	andi	r2,r4,255
 4001398:	100897fa 	slli	r4,r2,31
 400139c:	00802034 	movhi	r2,128
 40013a0:	10bfffc4 	addi	r2,r2,-1
 40013a4:	8084703a 	and	r2,r16,r2
 40013a8:	10c4b03a 	or	r2,r2,r3
 40013ac:	1104b03a 	or	r2,r2,r4
 40013b0:	dfc00217 	ldw	ra,8(sp)
 40013b4:	dc400117 	ldw	r17,4(sp)
 40013b8:	dc000017 	ldw	r16,0(sp)
 40013bc:	dec00304 	addi	sp,sp,12
 40013c0:	f800283a 	ret
 40013c4:	01002644 	movi	r4,153
 40013c8:	20c01c16 	blt	r4,r3,400143c <__floatsisf+0x100>
 40013cc:	20c9c83a 	sub	r4,r4,r3
 40013d0:	8120983a 	sll	r16,r16,r4
 40013d4:	013f0034 	movhi	r4,64512
 40013d8:	213fffc4 	addi	r4,r4,-1
 40013dc:	814001cc 	andi	r5,r16,7
 40013e0:	8108703a 	and	r4,r16,r4
 40013e4:	28000426 	beq	r5,zero,40013f8 <__floatsisf+0xbc>
 40013e8:	840003cc 	andi	r16,r16,15
 40013ec:	01400104 	movi	r5,4
 40013f0:	81400126 	beq	r16,r5,40013f8 <__floatsisf+0xbc>
 40013f4:	2149883a 	add	r4,r4,r5
 40013f8:	2141002c 	andhi	r5,r4,1024
 40013fc:	28000526 	beq	r5,zero,4001414 <__floatsisf+0xd8>
 4001400:	00c027c4 	movi	r3,159
 4001404:	1887c83a 	sub	r3,r3,r2
 4001408:	00bf0034 	movhi	r2,64512
 400140c:	10bfffc4 	addi	r2,r2,-1
 4001410:	2088703a 	and	r4,r4,r2
 4001414:	202091ba 	slli	r16,r4,6
 4001418:	8809883a 	mov	r4,r17
 400141c:	8020d27a 	srli	r16,r16,9
 4001420:	003fda06 	br	400138c <__alt_data_end+0xfc00138c>
 4001424:	0009883a 	mov	r4,zero
 4001428:	0007883a 	mov	r3,zero
 400142c:	0021883a 	mov	r16,zero
 4001430:	003fd606 	br	400138c <__alt_data_end+0xfc00138c>
 4001434:	0121c83a 	sub	r16,zero,r4
 4001438:	003fc806 	br	400135c <__alt_data_end+0xfc00135c>
 400143c:	01002e44 	movi	r4,185
 4001440:	20c9c83a 	sub	r4,r4,r3
 4001444:	01400144 	movi	r5,5
 4001448:	8108983a 	sll	r4,r16,r4
 400144c:	288bc83a 	sub	r5,r5,r2
 4001450:	8160d83a 	srl	r16,r16,r5
 4001454:	2008c03a 	cmpne	r4,r4,zero
 4001458:	8120b03a 	or	r16,r16,r4
 400145c:	003fdd06 	br	40013d4 <__alt_data_end+0xfc0013d4>

04001460 <__floatunsisf>:
 4001460:	defffe04 	addi	sp,sp,-8
 4001464:	dfc00115 	stw	ra,4(sp)
 4001468:	dc000015 	stw	r16,0(sp)
 400146c:	20002c26 	beq	r4,zero,4001520 <__floatunsisf+0xc0>
 4001470:	2021883a 	mov	r16,r4
 4001474:	40026600 	call	4002660 <__clzsi2>
 4001478:	00c02784 	movi	r3,158
 400147c:	1887c83a 	sub	r3,r3,r2
 4001480:	01002584 	movi	r4,150
 4001484:	20c00f16 	blt	r4,r3,40014c4 <__floatunsisf+0x64>
 4001488:	20c9c83a 	sub	r4,r4,r3
 400148c:	8108983a 	sll	r4,r16,r4
 4001490:	00802034 	movhi	r2,128
 4001494:	10bfffc4 	addi	r2,r2,-1
 4001498:	2088703a 	and	r4,r4,r2
 400149c:	18803fcc 	andi	r2,r3,255
 40014a0:	100695fa 	slli	r3,r2,23
 40014a4:	00802034 	movhi	r2,128
 40014a8:	10bfffc4 	addi	r2,r2,-1
 40014ac:	2084703a 	and	r2,r4,r2
 40014b0:	10c4b03a 	or	r2,r2,r3
 40014b4:	dfc00117 	ldw	ra,4(sp)
 40014b8:	dc000017 	ldw	r16,0(sp)
 40014bc:	dec00204 	addi	sp,sp,8
 40014c0:	f800283a 	ret
 40014c4:	01002644 	movi	r4,153
 40014c8:	20c01816 	blt	r4,r3,400152c <__floatunsisf+0xcc>
 40014cc:	20c9c83a 	sub	r4,r4,r3
 40014d0:	8108983a 	sll	r4,r16,r4
 40014d4:	017f0034 	movhi	r5,64512
 40014d8:	297fffc4 	addi	r5,r5,-1
 40014dc:	218001cc 	andi	r6,r4,7
 40014e0:	214a703a 	and	r5,r4,r5
 40014e4:	30000426 	beq	r6,zero,40014f8 <__floatunsisf+0x98>
 40014e8:	210003cc 	andi	r4,r4,15
 40014ec:	01800104 	movi	r6,4
 40014f0:	21800126 	beq	r4,r6,40014f8 <__floatunsisf+0x98>
 40014f4:	298b883a 	add	r5,r5,r6
 40014f8:	2901002c 	andhi	r4,r5,1024
 40014fc:	20000526 	beq	r4,zero,4001514 <__floatunsisf+0xb4>
 4001500:	00c027c4 	movi	r3,159
 4001504:	1887c83a 	sub	r3,r3,r2
 4001508:	00bf0034 	movhi	r2,64512
 400150c:	10bfffc4 	addi	r2,r2,-1
 4001510:	288a703a 	and	r5,r5,r2
 4001514:	280891ba 	slli	r4,r5,6
 4001518:	2008d27a 	srli	r4,r4,9
 400151c:	003fdf06 	br	400149c <__alt_data_end+0xfc00149c>
 4001520:	0007883a 	mov	r3,zero
 4001524:	0009883a 	mov	r4,zero
 4001528:	003fdc06 	br	400149c <__alt_data_end+0xfc00149c>
 400152c:	01402e44 	movi	r5,185
 4001530:	28cbc83a 	sub	r5,r5,r3
 4001534:	01000144 	movi	r4,5
 4001538:	2089c83a 	sub	r4,r4,r2
 400153c:	814a983a 	sll	r5,r16,r5
 4001540:	8108d83a 	srl	r4,r16,r4
 4001544:	2820c03a 	cmpne	r16,r5,zero
 4001548:	2408b03a 	or	r4,r4,r16
 400154c:	003fe106 	br	40014d4 <__alt_data_end+0xfc0014d4>

04001550 <__divdf3>:
 4001550:	defff204 	addi	sp,sp,-56
 4001554:	dd400915 	stw	r21,36(sp)
 4001558:	282ad53a 	srli	r21,r5,20
 400155c:	dd000815 	stw	r20,32(sp)
 4001560:	2828d7fa 	srli	r20,r5,31
 4001564:	dc000415 	stw	r16,16(sp)
 4001568:	04000434 	movhi	r16,16
 400156c:	df000c15 	stw	fp,48(sp)
 4001570:	843fffc4 	addi	r16,r16,-1
 4001574:	dfc00d15 	stw	ra,52(sp)
 4001578:	ddc00b15 	stw	r23,44(sp)
 400157c:	dd800a15 	stw	r22,40(sp)
 4001580:	dcc00715 	stw	r19,28(sp)
 4001584:	dc800615 	stw	r18,24(sp)
 4001588:	dc400515 	stw	r17,20(sp)
 400158c:	ad41ffcc 	andi	r21,r21,2047
 4001590:	2c20703a 	and	r16,r5,r16
 4001594:	a7003fcc 	andi	fp,r20,255
 4001598:	a8006126 	beq	r21,zero,4001720 <__divdf3+0x1d0>
 400159c:	0081ffc4 	movi	r2,2047
 40015a0:	2025883a 	mov	r18,r4
 40015a4:	a8803726 	beq	r21,r2,4001684 <__divdf3+0x134>
 40015a8:	80800434 	orhi	r2,r16,16
 40015ac:	100490fa 	slli	r2,r2,3
 40015b0:	2020d77a 	srli	r16,r4,29
 40015b4:	202490fa 	slli	r18,r4,3
 40015b8:	ad7f0044 	addi	r21,r21,-1023
 40015bc:	80a0b03a 	or	r16,r16,r2
 40015c0:	0027883a 	mov	r19,zero
 40015c4:	0013883a 	mov	r9,zero
 40015c8:	3804d53a 	srli	r2,r7,20
 40015cc:	382cd7fa 	srli	r22,r7,31
 40015d0:	04400434 	movhi	r17,16
 40015d4:	8c7fffc4 	addi	r17,r17,-1
 40015d8:	1081ffcc 	andi	r2,r2,2047
 40015dc:	3011883a 	mov	r8,r6
 40015e0:	3c62703a 	and	r17,r7,r17
 40015e4:	b5c03fcc 	andi	r23,r22,255
 40015e8:	10006c26 	beq	r2,zero,400179c <__divdf3+0x24c>
 40015ec:	00c1ffc4 	movi	r3,2047
 40015f0:	10c06426 	beq	r2,r3,4001784 <__divdf3+0x234>
 40015f4:	88c00434 	orhi	r3,r17,16
 40015f8:	180690fa 	slli	r3,r3,3
 40015fc:	3022d77a 	srli	r17,r6,29
 4001600:	301090fa 	slli	r8,r6,3
 4001604:	10bf0044 	addi	r2,r2,-1023
 4001608:	88e2b03a 	or	r17,r17,r3
 400160c:	000f883a 	mov	r7,zero
 4001610:	a58cf03a 	xor	r6,r20,r22
 4001614:	3cc8b03a 	or	r4,r7,r19
 4001618:	a8abc83a 	sub	r21,r21,r2
 400161c:	008003c4 	movi	r2,15
 4001620:	3007883a 	mov	r3,r6
 4001624:	34c03fcc 	andi	r19,r6,255
 4001628:	11009036 	bltu	r2,r4,400186c <__divdf3+0x31c>
 400162c:	200890ba 	slli	r4,r4,2
 4001630:	00810034 	movhi	r2,1024
 4001634:	10859104 	addi	r2,r2,5700
 4001638:	2089883a 	add	r4,r4,r2
 400163c:	20800017 	ldw	r2,0(r4)
 4001640:	1000683a 	jmp	r2
 4001644:	0400186c 	andhi	r16,zero,97
 4001648:	040016bc 	xorhi	r16,zero,90
 400164c:	0400185c 	xori	r16,zero,97
 4001650:	040016b0 	cmpltui	r16,zero,90
 4001654:	0400185c 	xori	r16,zero,97
 4001658:	04001830 	cmpltui	r16,zero,96
 400165c:	0400185c 	xori	r16,zero,97
 4001660:	040016b0 	cmpltui	r16,zero,90
 4001664:	040016bc 	xorhi	r16,zero,90
 4001668:	040016bc 	xorhi	r16,zero,90
 400166c:	04001830 	cmpltui	r16,zero,96
 4001670:	040016b0 	cmpltui	r16,zero,90
 4001674:	040016a0 	cmpeqi	r16,zero,90
 4001678:	040016a0 	cmpeqi	r16,zero,90
 400167c:	040016a0 	cmpeqi	r16,zero,90
 4001680:	04001b50 	cmplti	r16,zero,109
 4001684:	2404b03a 	or	r2,r4,r16
 4001688:	1000661e 	bne	r2,zero,4001824 <__divdf3+0x2d4>
 400168c:	04c00204 	movi	r19,8
 4001690:	0021883a 	mov	r16,zero
 4001694:	0025883a 	mov	r18,zero
 4001698:	02400084 	movi	r9,2
 400169c:	003fca06 	br	40015c8 <__alt_data_end+0xfc0015c8>
 40016a0:	8023883a 	mov	r17,r16
 40016a4:	9011883a 	mov	r8,r18
 40016a8:	e02f883a 	mov	r23,fp
 40016ac:	480f883a 	mov	r7,r9
 40016b0:	00800084 	movi	r2,2
 40016b4:	3881311e 	bne	r7,r2,4001b7c <__divdf3+0x62c>
 40016b8:	b827883a 	mov	r19,r23
 40016bc:	98c0004c 	andi	r3,r19,1
 40016c0:	0081ffc4 	movi	r2,2047
 40016c4:	000b883a 	mov	r5,zero
 40016c8:	0025883a 	mov	r18,zero
 40016cc:	1004953a 	slli	r2,r2,20
 40016d0:	18c03fcc 	andi	r3,r3,255
 40016d4:	04400434 	movhi	r17,16
 40016d8:	8c7fffc4 	addi	r17,r17,-1
 40016dc:	180697fa 	slli	r3,r3,31
 40016e0:	2c4a703a 	and	r5,r5,r17
 40016e4:	288ab03a 	or	r5,r5,r2
 40016e8:	28c6b03a 	or	r3,r5,r3
 40016ec:	9005883a 	mov	r2,r18
 40016f0:	dfc00d17 	ldw	ra,52(sp)
 40016f4:	df000c17 	ldw	fp,48(sp)
 40016f8:	ddc00b17 	ldw	r23,44(sp)
 40016fc:	dd800a17 	ldw	r22,40(sp)
 4001700:	dd400917 	ldw	r21,36(sp)
 4001704:	dd000817 	ldw	r20,32(sp)
 4001708:	dcc00717 	ldw	r19,28(sp)
 400170c:	dc800617 	ldw	r18,24(sp)
 4001710:	dc400517 	ldw	r17,20(sp)
 4001714:	dc000417 	ldw	r16,16(sp)
 4001718:	dec00e04 	addi	sp,sp,56
 400171c:	f800283a 	ret
 4001720:	2404b03a 	or	r2,r4,r16
 4001724:	2027883a 	mov	r19,r4
 4001728:	10003926 	beq	r2,zero,4001810 <__divdf3+0x2c0>
 400172c:	80012e26 	beq	r16,zero,4001be8 <__divdf3+0x698>
 4001730:	8009883a 	mov	r4,r16
 4001734:	d9800315 	stw	r6,12(sp)
 4001738:	d9c00215 	stw	r7,8(sp)
 400173c:	40026600 	call	4002660 <__clzsi2>
 4001740:	d9800317 	ldw	r6,12(sp)
 4001744:	d9c00217 	ldw	r7,8(sp)
 4001748:	113ffd44 	addi	r4,r2,-11
 400174c:	00c00704 	movi	r3,28
 4001750:	19012116 	blt	r3,r4,4001bd8 <__divdf3+0x688>
 4001754:	00c00744 	movi	r3,29
 4001758:	147ffe04 	addi	r17,r2,-8
 400175c:	1907c83a 	sub	r3,r3,r4
 4001760:	8460983a 	sll	r16,r16,r17
 4001764:	98c6d83a 	srl	r3,r19,r3
 4001768:	9c64983a 	sll	r18,r19,r17
 400176c:	1c20b03a 	or	r16,r3,r16
 4001770:	1080fcc4 	addi	r2,r2,1011
 4001774:	00abc83a 	sub	r21,zero,r2
 4001778:	0027883a 	mov	r19,zero
 400177c:	0013883a 	mov	r9,zero
 4001780:	003f9106 	br	40015c8 <__alt_data_end+0xfc0015c8>
 4001784:	3446b03a 	or	r3,r6,r17
 4001788:	18001f1e 	bne	r3,zero,4001808 <__divdf3+0x2b8>
 400178c:	0023883a 	mov	r17,zero
 4001790:	0011883a 	mov	r8,zero
 4001794:	01c00084 	movi	r7,2
 4001798:	003f9d06 	br	4001610 <__alt_data_end+0xfc001610>
 400179c:	3446b03a 	or	r3,r6,r17
 40017a0:	18001526 	beq	r3,zero,40017f8 <__divdf3+0x2a8>
 40017a4:	88011b26 	beq	r17,zero,4001c14 <__divdf3+0x6c4>
 40017a8:	8809883a 	mov	r4,r17
 40017ac:	d9800315 	stw	r6,12(sp)
 40017b0:	da400115 	stw	r9,4(sp)
 40017b4:	40026600 	call	4002660 <__clzsi2>
 40017b8:	d9800317 	ldw	r6,12(sp)
 40017bc:	da400117 	ldw	r9,4(sp)
 40017c0:	113ffd44 	addi	r4,r2,-11
 40017c4:	00c00704 	movi	r3,28
 40017c8:	19010e16 	blt	r3,r4,4001c04 <__divdf3+0x6b4>
 40017cc:	00c00744 	movi	r3,29
 40017d0:	123ffe04 	addi	r8,r2,-8
 40017d4:	1907c83a 	sub	r3,r3,r4
 40017d8:	8a22983a 	sll	r17,r17,r8
 40017dc:	30c6d83a 	srl	r3,r6,r3
 40017e0:	3210983a 	sll	r8,r6,r8
 40017e4:	1c62b03a 	or	r17,r3,r17
 40017e8:	1080fcc4 	addi	r2,r2,1011
 40017ec:	0085c83a 	sub	r2,zero,r2
 40017f0:	000f883a 	mov	r7,zero
 40017f4:	003f8606 	br	4001610 <__alt_data_end+0xfc001610>
 40017f8:	0023883a 	mov	r17,zero
 40017fc:	0011883a 	mov	r8,zero
 4001800:	01c00044 	movi	r7,1
 4001804:	003f8206 	br	4001610 <__alt_data_end+0xfc001610>
 4001808:	01c000c4 	movi	r7,3
 400180c:	003f8006 	br	4001610 <__alt_data_end+0xfc001610>
 4001810:	04c00104 	movi	r19,4
 4001814:	0021883a 	mov	r16,zero
 4001818:	0025883a 	mov	r18,zero
 400181c:	02400044 	movi	r9,1
 4001820:	003f6906 	br	40015c8 <__alt_data_end+0xfc0015c8>
 4001824:	04c00304 	movi	r19,12
 4001828:	024000c4 	movi	r9,3
 400182c:	003f6606 	br	40015c8 <__alt_data_end+0xfc0015c8>
 4001830:	01400434 	movhi	r5,16
 4001834:	0007883a 	mov	r3,zero
 4001838:	297fffc4 	addi	r5,r5,-1
 400183c:	04bfffc4 	movi	r18,-1
 4001840:	0081ffc4 	movi	r2,2047
 4001844:	003fa106 	br	40016cc <__alt_data_end+0xfc0016cc>
 4001848:	00c00044 	movi	r3,1
 400184c:	1887c83a 	sub	r3,r3,r2
 4001850:	01000e04 	movi	r4,56
 4001854:	20c1210e 	bge	r4,r3,4001cdc <__divdf3+0x78c>
 4001858:	98c0004c 	andi	r3,r19,1
 400185c:	0005883a 	mov	r2,zero
 4001860:	000b883a 	mov	r5,zero
 4001864:	0025883a 	mov	r18,zero
 4001868:	003f9806 	br	40016cc <__alt_data_end+0xfc0016cc>
 400186c:	8c00fd36 	bltu	r17,r16,4001c64 <__divdf3+0x714>
 4001870:	8440fb26 	beq	r16,r17,4001c60 <__divdf3+0x710>
 4001874:	8007883a 	mov	r3,r16
 4001878:	ad7fffc4 	addi	r21,r21,-1
 400187c:	0021883a 	mov	r16,zero
 4001880:	4004d63a 	srli	r2,r8,24
 4001884:	8822923a 	slli	r17,r17,8
 4001888:	1809883a 	mov	r4,r3
 400188c:	402c923a 	slli	r22,r8,8
 4001890:	88b8b03a 	or	fp,r17,r2
 4001894:	e028d43a 	srli	r20,fp,16
 4001898:	d8c00015 	stw	r3,0(sp)
 400189c:	e5ffffcc 	andi	r23,fp,65535
 40018a0:	a00b883a 	mov	r5,r20
 40018a4:	4000a440 	call	4000a44 <__udivsi3>
 40018a8:	d8c00017 	ldw	r3,0(sp)
 40018ac:	a00b883a 	mov	r5,r20
 40018b0:	d8800315 	stw	r2,12(sp)
 40018b4:	1809883a 	mov	r4,r3
 40018b8:	4000aa80 	call	4000aa8 <__umodsi3>
 40018bc:	d9800317 	ldw	r6,12(sp)
 40018c0:	1006943a 	slli	r3,r2,16
 40018c4:	9004d43a 	srli	r2,r18,16
 40018c8:	b9a3383a 	mul	r17,r23,r6
 40018cc:	10c4b03a 	or	r2,r2,r3
 40018d0:	1440062e 	bgeu	r2,r17,40018ec <__divdf3+0x39c>
 40018d4:	1705883a 	add	r2,r2,fp
 40018d8:	30ffffc4 	addi	r3,r6,-1
 40018dc:	1700ee36 	bltu	r2,fp,4001c98 <__divdf3+0x748>
 40018e0:	1440ed2e 	bgeu	r2,r17,4001c98 <__divdf3+0x748>
 40018e4:	31bfff84 	addi	r6,r6,-2
 40018e8:	1705883a 	add	r2,r2,fp
 40018ec:	1463c83a 	sub	r17,r2,r17
 40018f0:	a00b883a 	mov	r5,r20
 40018f4:	8809883a 	mov	r4,r17
 40018f8:	d9800315 	stw	r6,12(sp)
 40018fc:	4000a440 	call	4000a44 <__udivsi3>
 4001900:	a00b883a 	mov	r5,r20
 4001904:	8809883a 	mov	r4,r17
 4001908:	d8800215 	stw	r2,8(sp)
 400190c:	4000aa80 	call	4000aa8 <__umodsi3>
 4001910:	d9c00217 	ldw	r7,8(sp)
 4001914:	1004943a 	slli	r2,r2,16
 4001918:	94bfffcc 	andi	r18,r18,65535
 400191c:	b9d1383a 	mul	r8,r23,r7
 4001920:	90a4b03a 	or	r18,r18,r2
 4001924:	d9800317 	ldw	r6,12(sp)
 4001928:	9200062e 	bgeu	r18,r8,4001944 <__divdf3+0x3f4>
 400192c:	9725883a 	add	r18,r18,fp
 4001930:	38bfffc4 	addi	r2,r7,-1
 4001934:	9700d636 	bltu	r18,fp,4001c90 <__divdf3+0x740>
 4001938:	9200d52e 	bgeu	r18,r8,4001c90 <__divdf3+0x740>
 400193c:	39ffff84 	addi	r7,r7,-2
 4001940:	9725883a 	add	r18,r18,fp
 4001944:	3004943a 	slli	r2,r6,16
 4001948:	b012d43a 	srli	r9,r22,16
 400194c:	b1bfffcc 	andi	r6,r22,65535
 4001950:	11e2b03a 	or	r17,r2,r7
 4001954:	8806d43a 	srli	r3,r17,16
 4001958:	893fffcc 	andi	r4,r17,65535
 400195c:	218b383a 	mul	r5,r4,r6
 4001960:	30c5383a 	mul	r2,r6,r3
 4001964:	2249383a 	mul	r4,r4,r9
 4001968:	280ed43a 	srli	r7,r5,16
 400196c:	9225c83a 	sub	r18,r18,r8
 4001970:	2089883a 	add	r4,r4,r2
 4001974:	3909883a 	add	r4,r7,r4
 4001978:	1a47383a 	mul	r3,r3,r9
 400197c:	2080022e 	bgeu	r4,r2,4001988 <__divdf3+0x438>
 4001980:	00800074 	movhi	r2,1
 4001984:	1887883a 	add	r3,r3,r2
 4001988:	2004d43a 	srli	r2,r4,16
 400198c:	2008943a 	slli	r4,r4,16
 4001990:	297fffcc 	andi	r5,r5,65535
 4001994:	10c7883a 	add	r3,r2,r3
 4001998:	2149883a 	add	r4,r4,r5
 400199c:	90c0a536 	bltu	r18,r3,4001c34 <__divdf3+0x6e4>
 40019a0:	90c0bf26 	beq	r18,r3,4001ca0 <__divdf3+0x750>
 40019a4:	90c7c83a 	sub	r3,r18,r3
 40019a8:	810fc83a 	sub	r7,r16,r4
 40019ac:	81e5803a 	cmpltu	r18,r16,r7
 40019b0:	1ca5c83a 	sub	r18,r3,r18
 40019b4:	e480c126 	beq	fp,r18,4001cbc <__divdf3+0x76c>
 40019b8:	a00b883a 	mov	r5,r20
 40019bc:	9009883a 	mov	r4,r18
 40019c0:	d9800315 	stw	r6,12(sp)
 40019c4:	d9c00215 	stw	r7,8(sp)
 40019c8:	da400115 	stw	r9,4(sp)
 40019cc:	4000a440 	call	4000a44 <__udivsi3>
 40019d0:	a00b883a 	mov	r5,r20
 40019d4:	9009883a 	mov	r4,r18
 40019d8:	d8800015 	stw	r2,0(sp)
 40019dc:	4000aa80 	call	4000aa8 <__umodsi3>
 40019e0:	d9c00217 	ldw	r7,8(sp)
 40019e4:	da000017 	ldw	r8,0(sp)
 40019e8:	1006943a 	slli	r3,r2,16
 40019ec:	3804d43a 	srli	r2,r7,16
 40019f0:	ba21383a 	mul	r16,r23,r8
 40019f4:	d9800317 	ldw	r6,12(sp)
 40019f8:	10c4b03a 	or	r2,r2,r3
 40019fc:	da400117 	ldw	r9,4(sp)
 4001a00:	1400062e 	bgeu	r2,r16,4001a1c <__divdf3+0x4cc>
 4001a04:	1705883a 	add	r2,r2,fp
 4001a08:	40ffffc4 	addi	r3,r8,-1
 4001a0c:	1700ad36 	bltu	r2,fp,4001cc4 <__divdf3+0x774>
 4001a10:	1400ac2e 	bgeu	r2,r16,4001cc4 <__divdf3+0x774>
 4001a14:	423fff84 	addi	r8,r8,-2
 4001a18:	1705883a 	add	r2,r2,fp
 4001a1c:	1421c83a 	sub	r16,r2,r16
 4001a20:	a00b883a 	mov	r5,r20
 4001a24:	8009883a 	mov	r4,r16
 4001a28:	d9800315 	stw	r6,12(sp)
 4001a2c:	d9c00215 	stw	r7,8(sp)
 4001a30:	da000015 	stw	r8,0(sp)
 4001a34:	da400115 	stw	r9,4(sp)
 4001a38:	4000a440 	call	4000a44 <__udivsi3>
 4001a3c:	8009883a 	mov	r4,r16
 4001a40:	a00b883a 	mov	r5,r20
 4001a44:	1025883a 	mov	r18,r2
 4001a48:	4000aa80 	call	4000aa8 <__umodsi3>
 4001a4c:	d9c00217 	ldw	r7,8(sp)
 4001a50:	1004943a 	slli	r2,r2,16
 4001a54:	bcaf383a 	mul	r23,r23,r18
 4001a58:	393fffcc 	andi	r4,r7,65535
 4001a5c:	2088b03a 	or	r4,r4,r2
 4001a60:	d9800317 	ldw	r6,12(sp)
 4001a64:	da000017 	ldw	r8,0(sp)
 4001a68:	da400117 	ldw	r9,4(sp)
 4001a6c:	25c0062e 	bgeu	r4,r23,4001a88 <__divdf3+0x538>
 4001a70:	2709883a 	add	r4,r4,fp
 4001a74:	90bfffc4 	addi	r2,r18,-1
 4001a78:	27009436 	bltu	r4,fp,4001ccc <__divdf3+0x77c>
 4001a7c:	25c0932e 	bgeu	r4,r23,4001ccc <__divdf3+0x77c>
 4001a80:	94bfff84 	addi	r18,r18,-2
 4001a84:	2709883a 	add	r4,r4,fp
 4001a88:	4004943a 	slli	r2,r8,16
 4001a8c:	25efc83a 	sub	r23,r4,r23
 4001a90:	1490b03a 	or	r8,r2,r18
 4001a94:	4008d43a 	srli	r4,r8,16
 4001a98:	40ffffcc 	andi	r3,r8,65535
 4001a9c:	30c5383a 	mul	r2,r6,r3
 4001aa0:	1a47383a 	mul	r3,r3,r9
 4001aa4:	310d383a 	mul	r6,r6,r4
 4001aa8:	100ad43a 	srli	r5,r2,16
 4001aac:	4913383a 	mul	r9,r9,r4
 4001ab0:	1987883a 	add	r3,r3,r6
 4001ab4:	28c7883a 	add	r3,r5,r3
 4001ab8:	1980022e 	bgeu	r3,r6,4001ac4 <__divdf3+0x574>
 4001abc:	01000074 	movhi	r4,1
 4001ac0:	4913883a 	add	r9,r9,r4
 4001ac4:	1808d43a 	srli	r4,r3,16
 4001ac8:	1806943a 	slli	r3,r3,16
 4001acc:	10bfffcc 	andi	r2,r2,65535
 4001ad0:	2253883a 	add	r9,r4,r9
 4001ad4:	1887883a 	add	r3,r3,r2
 4001ad8:	ba403836 	bltu	r23,r9,4001bbc <__divdf3+0x66c>
 4001adc:	ba403626 	beq	r23,r9,4001bb8 <__divdf3+0x668>
 4001ae0:	42000054 	ori	r8,r8,1
 4001ae4:	a880ffc4 	addi	r2,r21,1023
 4001ae8:	00bf570e 	bge	zero,r2,4001848 <__alt_data_end+0xfc001848>
 4001aec:	40c001cc 	andi	r3,r8,7
 4001af0:	18000726 	beq	r3,zero,4001b10 <__divdf3+0x5c0>
 4001af4:	40c003cc 	andi	r3,r8,15
 4001af8:	01000104 	movi	r4,4
 4001afc:	19000426 	beq	r3,r4,4001b10 <__divdf3+0x5c0>
 4001b00:	4107883a 	add	r3,r8,r4
 4001b04:	1a11803a 	cmpltu	r8,r3,r8
 4001b08:	8a23883a 	add	r17,r17,r8
 4001b0c:	1811883a 	mov	r8,r3
 4001b10:	88c0402c 	andhi	r3,r17,256
 4001b14:	18000426 	beq	r3,zero,4001b28 <__divdf3+0x5d8>
 4001b18:	00ffc034 	movhi	r3,65280
 4001b1c:	18ffffc4 	addi	r3,r3,-1
 4001b20:	a8810004 	addi	r2,r21,1024
 4001b24:	88e2703a 	and	r17,r17,r3
 4001b28:	00c1ff84 	movi	r3,2046
 4001b2c:	18bee316 	blt	r3,r2,40016bc <__alt_data_end+0xfc0016bc>
 4001b30:	8824977a 	slli	r18,r17,29
 4001b34:	4010d0fa 	srli	r8,r8,3
 4001b38:	8822927a 	slli	r17,r17,9
 4001b3c:	1081ffcc 	andi	r2,r2,2047
 4001b40:	9224b03a 	or	r18,r18,r8
 4001b44:	880ad33a 	srli	r5,r17,12
 4001b48:	98c0004c 	andi	r3,r19,1
 4001b4c:	003edf06 	br	40016cc <__alt_data_end+0xfc0016cc>
 4001b50:	8080022c 	andhi	r2,r16,8
 4001b54:	10001226 	beq	r2,zero,4001ba0 <__divdf3+0x650>
 4001b58:	8880022c 	andhi	r2,r17,8
 4001b5c:	1000101e 	bne	r2,zero,4001ba0 <__divdf3+0x650>
 4001b60:	00800434 	movhi	r2,16
 4001b64:	89400234 	orhi	r5,r17,8
 4001b68:	10bfffc4 	addi	r2,r2,-1
 4001b6c:	b007883a 	mov	r3,r22
 4001b70:	288a703a 	and	r5,r5,r2
 4001b74:	4025883a 	mov	r18,r8
 4001b78:	003f3106 	br	4001840 <__alt_data_end+0xfc001840>
 4001b7c:	008000c4 	movi	r2,3
 4001b80:	3880a626 	beq	r7,r2,4001e1c <__divdf3+0x8cc>
 4001b84:	00800044 	movi	r2,1
 4001b88:	3880521e 	bne	r7,r2,4001cd4 <__divdf3+0x784>
 4001b8c:	b807883a 	mov	r3,r23
 4001b90:	0005883a 	mov	r2,zero
 4001b94:	000b883a 	mov	r5,zero
 4001b98:	0025883a 	mov	r18,zero
 4001b9c:	003ecb06 	br	40016cc <__alt_data_end+0xfc0016cc>
 4001ba0:	00800434 	movhi	r2,16
 4001ba4:	81400234 	orhi	r5,r16,8
 4001ba8:	10bfffc4 	addi	r2,r2,-1
 4001bac:	a007883a 	mov	r3,r20
 4001bb0:	288a703a 	and	r5,r5,r2
 4001bb4:	003f2206 	br	4001840 <__alt_data_end+0xfc001840>
 4001bb8:	183fca26 	beq	r3,zero,4001ae4 <__alt_data_end+0xfc001ae4>
 4001bbc:	e5ef883a 	add	r23,fp,r23
 4001bc0:	40bfffc4 	addi	r2,r8,-1
 4001bc4:	bf00392e 	bgeu	r23,fp,4001cac <__divdf3+0x75c>
 4001bc8:	1011883a 	mov	r8,r2
 4001bcc:	ba7fc41e 	bne	r23,r9,4001ae0 <__alt_data_end+0xfc001ae0>
 4001bd0:	b0ffc31e 	bne	r22,r3,4001ae0 <__alt_data_end+0xfc001ae0>
 4001bd4:	003fc306 	br	4001ae4 <__alt_data_end+0xfc001ae4>
 4001bd8:	143ff604 	addi	r16,r2,-40
 4001bdc:	9c20983a 	sll	r16,r19,r16
 4001be0:	0025883a 	mov	r18,zero
 4001be4:	003ee206 	br	4001770 <__alt_data_end+0xfc001770>
 4001be8:	d9800315 	stw	r6,12(sp)
 4001bec:	d9c00215 	stw	r7,8(sp)
 4001bf0:	40026600 	call	4002660 <__clzsi2>
 4001bf4:	10800804 	addi	r2,r2,32
 4001bf8:	d9c00217 	ldw	r7,8(sp)
 4001bfc:	d9800317 	ldw	r6,12(sp)
 4001c00:	003ed106 	br	4001748 <__alt_data_end+0xfc001748>
 4001c04:	147ff604 	addi	r17,r2,-40
 4001c08:	3462983a 	sll	r17,r6,r17
 4001c0c:	0011883a 	mov	r8,zero
 4001c10:	003ef506 	br	40017e8 <__alt_data_end+0xfc0017e8>
 4001c14:	3009883a 	mov	r4,r6
 4001c18:	d9800315 	stw	r6,12(sp)
 4001c1c:	da400115 	stw	r9,4(sp)
 4001c20:	40026600 	call	4002660 <__clzsi2>
 4001c24:	10800804 	addi	r2,r2,32
 4001c28:	da400117 	ldw	r9,4(sp)
 4001c2c:	d9800317 	ldw	r6,12(sp)
 4001c30:	003ee306 	br	40017c0 <__alt_data_end+0xfc0017c0>
 4001c34:	85a1883a 	add	r16,r16,r22
 4001c38:	8585803a 	cmpltu	r2,r16,r22
 4001c3c:	1705883a 	add	r2,r2,fp
 4001c40:	14a5883a 	add	r18,r2,r18
 4001c44:	88bfffc4 	addi	r2,r17,-1
 4001c48:	e4800c2e 	bgeu	fp,r18,4001c7c <__divdf3+0x72c>
 4001c4c:	90c03e36 	bltu	r18,r3,4001d48 <__divdf3+0x7f8>
 4001c50:	1c806926 	beq	r3,r18,4001df8 <__divdf3+0x8a8>
 4001c54:	90c7c83a 	sub	r3,r18,r3
 4001c58:	1023883a 	mov	r17,r2
 4001c5c:	003f5206 	br	40019a8 <__alt_data_end+0xfc0019a8>
 4001c60:	923f0436 	bltu	r18,r8,4001874 <__alt_data_end+0xfc001874>
 4001c64:	800897fa 	slli	r4,r16,31
 4001c68:	9004d07a 	srli	r2,r18,1
 4001c6c:	8006d07a 	srli	r3,r16,1
 4001c70:	902097fa 	slli	r16,r18,31
 4001c74:	20a4b03a 	or	r18,r4,r2
 4001c78:	003f0106 	br	4001880 <__alt_data_end+0xfc001880>
 4001c7c:	e4bff51e 	bne	fp,r18,4001c54 <__alt_data_end+0xfc001c54>
 4001c80:	85bff22e 	bgeu	r16,r22,4001c4c <__alt_data_end+0xfc001c4c>
 4001c84:	e0c7c83a 	sub	r3,fp,r3
 4001c88:	1023883a 	mov	r17,r2
 4001c8c:	003f4606 	br	40019a8 <__alt_data_end+0xfc0019a8>
 4001c90:	100f883a 	mov	r7,r2
 4001c94:	003f2b06 	br	4001944 <__alt_data_end+0xfc001944>
 4001c98:	180d883a 	mov	r6,r3
 4001c9c:	003f1306 	br	40018ec <__alt_data_end+0xfc0018ec>
 4001ca0:	813fe436 	bltu	r16,r4,4001c34 <__alt_data_end+0xfc001c34>
 4001ca4:	0007883a 	mov	r3,zero
 4001ca8:	003f3f06 	br	40019a8 <__alt_data_end+0xfc0019a8>
 4001cac:	ba402c36 	bltu	r23,r9,4001d60 <__divdf3+0x810>
 4001cb0:	4dc05426 	beq	r9,r23,4001e04 <__divdf3+0x8b4>
 4001cb4:	1011883a 	mov	r8,r2
 4001cb8:	003f8906 	br	4001ae0 <__alt_data_end+0xfc001ae0>
 4001cbc:	023fffc4 	movi	r8,-1
 4001cc0:	003f8806 	br	4001ae4 <__alt_data_end+0xfc001ae4>
 4001cc4:	1811883a 	mov	r8,r3
 4001cc8:	003f5406 	br	4001a1c <__alt_data_end+0xfc001a1c>
 4001ccc:	1025883a 	mov	r18,r2
 4001cd0:	003f6d06 	br	4001a88 <__alt_data_end+0xfc001a88>
 4001cd4:	b827883a 	mov	r19,r23
 4001cd8:	003f8206 	br	4001ae4 <__alt_data_end+0xfc001ae4>
 4001cdc:	010007c4 	movi	r4,31
 4001ce0:	20c02616 	blt	r4,r3,4001d7c <__divdf3+0x82c>
 4001ce4:	00800804 	movi	r2,32
 4001ce8:	10c5c83a 	sub	r2,r2,r3
 4001cec:	888a983a 	sll	r5,r17,r2
 4001cf0:	40c8d83a 	srl	r4,r8,r3
 4001cf4:	4084983a 	sll	r2,r8,r2
 4001cf8:	88e2d83a 	srl	r17,r17,r3
 4001cfc:	2906b03a 	or	r3,r5,r4
 4001d00:	1004c03a 	cmpne	r2,r2,zero
 4001d04:	1886b03a 	or	r3,r3,r2
 4001d08:	188001cc 	andi	r2,r3,7
 4001d0c:	10000726 	beq	r2,zero,4001d2c <__divdf3+0x7dc>
 4001d10:	188003cc 	andi	r2,r3,15
 4001d14:	01000104 	movi	r4,4
 4001d18:	11000426 	beq	r2,r4,4001d2c <__divdf3+0x7dc>
 4001d1c:	1805883a 	mov	r2,r3
 4001d20:	10c00104 	addi	r3,r2,4
 4001d24:	1885803a 	cmpltu	r2,r3,r2
 4001d28:	88a3883a 	add	r17,r17,r2
 4001d2c:	8880202c 	andhi	r2,r17,128
 4001d30:	10002726 	beq	r2,zero,4001dd0 <__divdf3+0x880>
 4001d34:	98c0004c 	andi	r3,r19,1
 4001d38:	00800044 	movi	r2,1
 4001d3c:	000b883a 	mov	r5,zero
 4001d40:	0025883a 	mov	r18,zero
 4001d44:	003e6106 	br	40016cc <__alt_data_end+0xfc0016cc>
 4001d48:	85a1883a 	add	r16,r16,r22
 4001d4c:	8585803a 	cmpltu	r2,r16,r22
 4001d50:	1705883a 	add	r2,r2,fp
 4001d54:	14a5883a 	add	r18,r2,r18
 4001d58:	8c7fff84 	addi	r17,r17,-2
 4001d5c:	003f1106 	br	40019a4 <__alt_data_end+0xfc0019a4>
 4001d60:	b589883a 	add	r4,r22,r22
 4001d64:	25ad803a 	cmpltu	r22,r4,r22
 4001d68:	b739883a 	add	fp,r22,fp
 4001d6c:	40bfff84 	addi	r2,r8,-2
 4001d70:	bf2f883a 	add	r23,r23,fp
 4001d74:	202d883a 	mov	r22,r4
 4001d78:	003f9306 	br	4001bc8 <__alt_data_end+0xfc001bc8>
 4001d7c:	013ff844 	movi	r4,-31
 4001d80:	2085c83a 	sub	r2,r4,r2
 4001d84:	8888d83a 	srl	r4,r17,r2
 4001d88:	00800804 	movi	r2,32
 4001d8c:	18802126 	beq	r3,r2,4001e14 <__divdf3+0x8c4>
 4001d90:	00801004 	movi	r2,64
 4001d94:	10c5c83a 	sub	r2,r2,r3
 4001d98:	8884983a 	sll	r2,r17,r2
 4001d9c:	1204b03a 	or	r2,r2,r8
 4001da0:	1004c03a 	cmpne	r2,r2,zero
 4001da4:	2084b03a 	or	r2,r4,r2
 4001da8:	144001cc 	andi	r17,r2,7
 4001dac:	88000d1e 	bne	r17,zero,4001de4 <__divdf3+0x894>
 4001db0:	000b883a 	mov	r5,zero
 4001db4:	1024d0fa 	srli	r18,r2,3
 4001db8:	98c0004c 	andi	r3,r19,1
 4001dbc:	0005883a 	mov	r2,zero
 4001dc0:	9464b03a 	or	r18,r18,r17
 4001dc4:	003e4106 	br	40016cc <__alt_data_end+0xfc0016cc>
 4001dc8:	1007883a 	mov	r3,r2
 4001dcc:	0023883a 	mov	r17,zero
 4001dd0:	880a927a 	slli	r5,r17,9
 4001dd4:	1805883a 	mov	r2,r3
 4001dd8:	8822977a 	slli	r17,r17,29
 4001ddc:	280ad33a 	srli	r5,r5,12
 4001de0:	003ff406 	br	4001db4 <__alt_data_end+0xfc001db4>
 4001de4:	10c003cc 	andi	r3,r2,15
 4001de8:	01000104 	movi	r4,4
 4001dec:	193ff626 	beq	r3,r4,4001dc8 <__alt_data_end+0xfc001dc8>
 4001df0:	0023883a 	mov	r17,zero
 4001df4:	003fca06 	br	4001d20 <__alt_data_end+0xfc001d20>
 4001df8:	813fd336 	bltu	r16,r4,4001d48 <__alt_data_end+0xfc001d48>
 4001dfc:	1023883a 	mov	r17,r2
 4001e00:	003fa806 	br	4001ca4 <__alt_data_end+0xfc001ca4>
 4001e04:	b0ffd636 	bltu	r22,r3,4001d60 <__alt_data_end+0xfc001d60>
 4001e08:	1011883a 	mov	r8,r2
 4001e0c:	b0ff341e 	bne	r22,r3,4001ae0 <__alt_data_end+0xfc001ae0>
 4001e10:	003f3406 	br	4001ae4 <__alt_data_end+0xfc001ae4>
 4001e14:	0005883a 	mov	r2,zero
 4001e18:	003fe006 	br	4001d9c <__alt_data_end+0xfc001d9c>
 4001e1c:	00800434 	movhi	r2,16
 4001e20:	89400234 	orhi	r5,r17,8
 4001e24:	10bfffc4 	addi	r2,r2,-1
 4001e28:	b807883a 	mov	r3,r23
 4001e2c:	288a703a 	and	r5,r5,r2
 4001e30:	4025883a 	mov	r18,r8
 4001e34:	003e8206 	br	4001840 <__alt_data_end+0xfc001840>

04001e38 <__muldf3>:
 4001e38:	defff304 	addi	sp,sp,-52
 4001e3c:	2804d53a 	srli	r2,r5,20
 4001e40:	dd800915 	stw	r22,36(sp)
 4001e44:	282cd7fa 	srli	r22,r5,31
 4001e48:	dc000315 	stw	r16,12(sp)
 4001e4c:	04000434 	movhi	r16,16
 4001e50:	dd400815 	stw	r21,32(sp)
 4001e54:	dc800515 	stw	r18,20(sp)
 4001e58:	843fffc4 	addi	r16,r16,-1
 4001e5c:	dfc00c15 	stw	ra,48(sp)
 4001e60:	df000b15 	stw	fp,44(sp)
 4001e64:	ddc00a15 	stw	r23,40(sp)
 4001e68:	dd000715 	stw	r20,28(sp)
 4001e6c:	dcc00615 	stw	r19,24(sp)
 4001e70:	dc400415 	stw	r17,16(sp)
 4001e74:	1481ffcc 	andi	r18,r2,2047
 4001e78:	2c20703a 	and	r16,r5,r16
 4001e7c:	b02b883a 	mov	r21,r22
 4001e80:	b2403fcc 	andi	r9,r22,255
 4001e84:	90006026 	beq	r18,zero,4002008 <__muldf3+0x1d0>
 4001e88:	0081ffc4 	movi	r2,2047
 4001e8c:	2029883a 	mov	r20,r4
 4001e90:	90803626 	beq	r18,r2,4001f6c <__muldf3+0x134>
 4001e94:	80800434 	orhi	r2,r16,16
 4001e98:	100490fa 	slli	r2,r2,3
 4001e9c:	2020d77a 	srli	r16,r4,29
 4001ea0:	202890fa 	slli	r20,r4,3
 4001ea4:	94bf0044 	addi	r18,r18,-1023
 4001ea8:	80a0b03a 	or	r16,r16,r2
 4001eac:	0027883a 	mov	r19,zero
 4001eb0:	0039883a 	mov	fp,zero
 4001eb4:	3804d53a 	srli	r2,r7,20
 4001eb8:	382ed7fa 	srli	r23,r7,31
 4001ebc:	04400434 	movhi	r17,16
 4001ec0:	8c7fffc4 	addi	r17,r17,-1
 4001ec4:	1081ffcc 	andi	r2,r2,2047
 4001ec8:	3011883a 	mov	r8,r6
 4001ecc:	3c62703a 	and	r17,r7,r17
 4001ed0:	ba803fcc 	andi	r10,r23,255
 4001ed4:	10006d26 	beq	r2,zero,400208c <__muldf3+0x254>
 4001ed8:	00c1ffc4 	movi	r3,2047
 4001edc:	10c06526 	beq	r2,r3,4002074 <__muldf3+0x23c>
 4001ee0:	88c00434 	orhi	r3,r17,16
 4001ee4:	180690fa 	slli	r3,r3,3
 4001ee8:	3022d77a 	srli	r17,r6,29
 4001eec:	301090fa 	slli	r8,r6,3
 4001ef0:	10bf0044 	addi	r2,r2,-1023
 4001ef4:	88e2b03a 	or	r17,r17,r3
 4001ef8:	000b883a 	mov	r5,zero
 4001efc:	9085883a 	add	r2,r18,r2
 4001f00:	2cc8b03a 	or	r4,r5,r19
 4001f04:	00c003c4 	movi	r3,15
 4001f08:	bdacf03a 	xor	r22,r23,r22
 4001f0c:	12c00044 	addi	r11,r2,1
 4001f10:	19009936 	bltu	r3,r4,4002178 <__muldf3+0x340>
 4001f14:	200890ba 	slli	r4,r4,2
 4001f18:	00c10034 	movhi	r3,1024
 4001f1c:	18c7cb04 	addi	r3,r3,7980
 4001f20:	20c9883a 	add	r4,r4,r3
 4001f24:	20c00017 	ldw	r3,0(r4)
 4001f28:	1800683a 	jmp	r3
 4001f2c:	04002178 	rdprs	r16,zero,133
 4001f30:	04001f8c 	andi	r16,zero,126
 4001f34:	04001f8c 	andi	r16,zero,126
 4001f38:	04001f88 	cmpgei	r16,zero,126
 4001f3c:	04002154 	movui	r16,133
 4001f40:	04002154 	movui	r16,133
 4001f44:	0400213c 	xorhi	r16,zero,132
 4001f48:	04001f88 	cmpgei	r16,zero,126
 4001f4c:	04002154 	movui	r16,133
 4001f50:	0400213c 	xorhi	r16,zero,132
 4001f54:	04002154 	movui	r16,133
 4001f58:	04001f88 	cmpgei	r16,zero,126
 4001f5c:	04002164 	muli	r16,zero,133
 4001f60:	04002164 	muli	r16,zero,133
 4001f64:	04002164 	muli	r16,zero,133
 4001f68:	04002380 	call	400238 <__alt_mem_new_sdram_controller_0-0x3bffdc8>
 4001f6c:	2404b03a 	or	r2,r4,r16
 4001f70:	10006f1e 	bne	r2,zero,4002130 <__muldf3+0x2f8>
 4001f74:	04c00204 	movi	r19,8
 4001f78:	0021883a 	mov	r16,zero
 4001f7c:	0029883a 	mov	r20,zero
 4001f80:	07000084 	movi	fp,2
 4001f84:	003fcb06 	br	4001eb4 <__alt_data_end+0xfc001eb4>
 4001f88:	502d883a 	mov	r22,r10
 4001f8c:	00800084 	movi	r2,2
 4001f90:	28805726 	beq	r5,r2,40020f0 <__muldf3+0x2b8>
 4001f94:	008000c4 	movi	r2,3
 4001f98:	28816626 	beq	r5,r2,4002534 <__muldf3+0x6fc>
 4001f9c:	00800044 	movi	r2,1
 4001fa0:	2881411e 	bne	r5,r2,40024a8 <__muldf3+0x670>
 4001fa4:	b02b883a 	mov	r21,r22
 4001fa8:	0005883a 	mov	r2,zero
 4001fac:	000b883a 	mov	r5,zero
 4001fb0:	0029883a 	mov	r20,zero
 4001fb4:	1004953a 	slli	r2,r2,20
 4001fb8:	a8c03fcc 	andi	r3,r21,255
 4001fbc:	04400434 	movhi	r17,16
 4001fc0:	8c7fffc4 	addi	r17,r17,-1
 4001fc4:	180697fa 	slli	r3,r3,31
 4001fc8:	2c4a703a 	and	r5,r5,r17
 4001fcc:	288ab03a 	or	r5,r5,r2
 4001fd0:	28c6b03a 	or	r3,r5,r3
 4001fd4:	a005883a 	mov	r2,r20
 4001fd8:	dfc00c17 	ldw	ra,48(sp)
 4001fdc:	df000b17 	ldw	fp,44(sp)
 4001fe0:	ddc00a17 	ldw	r23,40(sp)
 4001fe4:	dd800917 	ldw	r22,36(sp)
 4001fe8:	dd400817 	ldw	r21,32(sp)
 4001fec:	dd000717 	ldw	r20,28(sp)
 4001ff0:	dcc00617 	ldw	r19,24(sp)
 4001ff4:	dc800517 	ldw	r18,20(sp)
 4001ff8:	dc400417 	ldw	r17,16(sp)
 4001ffc:	dc000317 	ldw	r16,12(sp)
 4002000:	dec00d04 	addi	sp,sp,52
 4002004:	f800283a 	ret
 4002008:	2404b03a 	or	r2,r4,r16
 400200c:	2027883a 	mov	r19,r4
 4002010:	10004226 	beq	r2,zero,400211c <__muldf3+0x2e4>
 4002014:	8000fc26 	beq	r16,zero,4002408 <__muldf3+0x5d0>
 4002018:	8009883a 	mov	r4,r16
 400201c:	d9800215 	stw	r6,8(sp)
 4002020:	d9c00015 	stw	r7,0(sp)
 4002024:	da400115 	stw	r9,4(sp)
 4002028:	40026600 	call	4002660 <__clzsi2>
 400202c:	d9800217 	ldw	r6,8(sp)
 4002030:	d9c00017 	ldw	r7,0(sp)
 4002034:	da400117 	ldw	r9,4(sp)
 4002038:	113ffd44 	addi	r4,r2,-11
 400203c:	00c00704 	movi	r3,28
 4002040:	1900ed16 	blt	r3,r4,40023f8 <__muldf3+0x5c0>
 4002044:	00c00744 	movi	r3,29
 4002048:	147ffe04 	addi	r17,r2,-8
 400204c:	1907c83a 	sub	r3,r3,r4
 4002050:	8460983a 	sll	r16,r16,r17
 4002054:	98c6d83a 	srl	r3,r19,r3
 4002058:	9c68983a 	sll	r20,r19,r17
 400205c:	1c20b03a 	or	r16,r3,r16
 4002060:	1080fcc4 	addi	r2,r2,1011
 4002064:	00a5c83a 	sub	r18,zero,r2
 4002068:	0027883a 	mov	r19,zero
 400206c:	0039883a 	mov	fp,zero
 4002070:	003f9006 	br	4001eb4 <__alt_data_end+0xfc001eb4>
 4002074:	3446b03a 	or	r3,r6,r17
 4002078:	1800261e 	bne	r3,zero,4002114 <__muldf3+0x2dc>
 400207c:	0023883a 	mov	r17,zero
 4002080:	0011883a 	mov	r8,zero
 4002084:	01400084 	movi	r5,2
 4002088:	003f9c06 	br	4001efc <__alt_data_end+0xfc001efc>
 400208c:	3446b03a 	or	r3,r6,r17
 4002090:	18001c26 	beq	r3,zero,4002104 <__muldf3+0x2cc>
 4002094:	8800ce26 	beq	r17,zero,40023d0 <__muldf3+0x598>
 4002098:	8809883a 	mov	r4,r17
 400209c:	d9800215 	stw	r6,8(sp)
 40020a0:	da400115 	stw	r9,4(sp)
 40020a4:	da800015 	stw	r10,0(sp)
 40020a8:	40026600 	call	4002660 <__clzsi2>
 40020ac:	d9800217 	ldw	r6,8(sp)
 40020b0:	da400117 	ldw	r9,4(sp)
 40020b4:	da800017 	ldw	r10,0(sp)
 40020b8:	113ffd44 	addi	r4,r2,-11
 40020bc:	00c00704 	movi	r3,28
 40020c0:	1900bf16 	blt	r3,r4,40023c0 <__muldf3+0x588>
 40020c4:	00c00744 	movi	r3,29
 40020c8:	123ffe04 	addi	r8,r2,-8
 40020cc:	1907c83a 	sub	r3,r3,r4
 40020d0:	8a22983a 	sll	r17,r17,r8
 40020d4:	30c6d83a 	srl	r3,r6,r3
 40020d8:	3210983a 	sll	r8,r6,r8
 40020dc:	1c62b03a 	or	r17,r3,r17
 40020e0:	1080fcc4 	addi	r2,r2,1011
 40020e4:	0085c83a 	sub	r2,zero,r2
 40020e8:	000b883a 	mov	r5,zero
 40020ec:	003f8306 	br	4001efc <__alt_data_end+0xfc001efc>
 40020f0:	b02b883a 	mov	r21,r22
 40020f4:	0081ffc4 	movi	r2,2047
 40020f8:	000b883a 	mov	r5,zero
 40020fc:	0029883a 	mov	r20,zero
 4002100:	003fac06 	br	4001fb4 <__alt_data_end+0xfc001fb4>
 4002104:	0023883a 	mov	r17,zero
 4002108:	0011883a 	mov	r8,zero
 400210c:	01400044 	movi	r5,1
 4002110:	003f7a06 	br	4001efc <__alt_data_end+0xfc001efc>
 4002114:	014000c4 	movi	r5,3
 4002118:	003f7806 	br	4001efc <__alt_data_end+0xfc001efc>
 400211c:	04c00104 	movi	r19,4
 4002120:	0021883a 	mov	r16,zero
 4002124:	0029883a 	mov	r20,zero
 4002128:	07000044 	movi	fp,1
 400212c:	003f6106 	br	4001eb4 <__alt_data_end+0xfc001eb4>
 4002130:	04c00304 	movi	r19,12
 4002134:	070000c4 	movi	fp,3
 4002138:	003f5e06 	br	4001eb4 <__alt_data_end+0xfc001eb4>
 400213c:	01400434 	movhi	r5,16
 4002140:	002b883a 	mov	r21,zero
 4002144:	297fffc4 	addi	r5,r5,-1
 4002148:	053fffc4 	movi	r20,-1
 400214c:	0081ffc4 	movi	r2,2047
 4002150:	003f9806 	br	4001fb4 <__alt_data_end+0xfc001fb4>
 4002154:	8023883a 	mov	r17,r16
 4002158:	a011883a 	mov	r8,r20
 400215c:	e00b883a 	mov	r5,fp
 4002160:	003f8a06 	br	4001f8c <__alt_data_end+0xfc001f8c>
 4002164:	8023883a 	mov	r17,r16
 4002168:	a011883a 	mov	r8,r20
 400216c:	482d883a 	mov	r22,r9
 4002170:	e00b883a 	mov	r5,fp
 4002174:	003f8506 	br	4001f8c <__alt_data_end+0xfc001f8c>
 4002178:	a00ad43a 	srli	r5,r20,16
 400217c:	401ad43a 	srli	r13,r8,16
 4002180:	a53fffcc 	andi	r20,r20,65535
 4002184:	423fffcc 	andi	r8,r8,65535
 4002188:	4519383a 	mul	r12,r8,r20
 400218c:	4147383a 	mul	r3,r8,r5
 4002190:	6d09383a 	mul	r4,r13,r20
 4002194:	600cd43a 	srli	r6,r12,16
 4002198:	2b5d383a 	mul	r14,r5,r13
 400219c:	20c9883a 	add	r4,r4,r3
 40021a0:	310d883a 	add	r6,r6,r4
 40021a4:	30c0022e 	bgeu	r6,r3,40021b0 <__muldf3+0x378>
 40021a8:	00c00074 	movhi	r3,1
 40021ac:	70dd883a 	add	r14,r14,r3
 40021b0:	8826d43a 	srli	r19,r17,16
 40021b4:	8bffffcc 	andi	r15,r17,65535
 40021b8:	7d23383a 	mul	r17,r15,r20
 40021bc:	7949383a 	mul	r4,r15,r5
 40021c0:	9d29383a 	mul	r20,r19,r20
 40021c4:	8814d43a 	srli	r10,r17,16
 40021c8:	3012943a 	slli	r9,r6,16
 40021cc:	a129883a 	add	r20,r20,r4
 40021d0:	633fffcc 	andi	r12,r12,65535
 40021d4:	5515883a 	add	r10,r10,r20
 40021d8:	3006d43a 	srli	r3,r6,16
 40021dc:	4b13883a 	add	r9,r9,r12
 40021e0:	2ccb383a 	mul	r5,r5,r19
 40021e4:	5100022e 	bgeu	r10,r4,40021f0 <__muldf3+0x3b8>
 40021e8:	01000074 	movhi	r4,1
 40021ec:	290b883a 	add	r5,r5,r4
 40021f0:	802ad43a 	srli	r21,r16,16
 40021f4:	843fffcc 	andi	r16,r16,65535
 40021f8:	440d383a 	mul	r6,r8,r16
 40021fc:	4565383a 	mul	r18,r8,r21
 4002200:	8349383a 	mul	r4,r16,r13
 4002204:	500e943a 	slli	r7,r10,16
 4002208:	3010d43a 	srli	r8,r6,16
 400220c:	5028d43a 	srli	r20,r10,16
 4002210:	2489883a 	add	r4,r4,r18
 4002214:	8abfffcc 	andi	r10,r17,65535
 4002218:	3a95883a 	add	r10,r7,r10
 400221c:	4119883a 	add	r12,r8,r4
 4002220:	a169883a 	add	r20,r20,r5
 4002224:	1a87883a 	add	r3,r3,r10
 4002228:	6d5b383a 	mul	r13,r13,r21
 400222c:	6480022e 	bgeu	r12,r18,4002238 <__muldf3+0x400>
 4002230:	01000074 	movhi	r4,1
 4002234:	691b883a 	add	r13,r13,r4
 4002238:	7c25383a 	mul	r18,r15,r16
 400223c:	7d4b383a 	mul	r5,r15,r21
 4002240:	84cf383a 	mul	r7,r16,r19
 4002244:	901ed43a 	srli	r15,r18,16
 4002248:	6008d43a 	srli	r4,r12,16
 400224c:	6010943a 	slli	r8,r12,16
 4002250:	394f883a 	add	r7,r7,r5
 4002254:	333fffcc 	andi	r12,r6,65535
 4002258:	79df883a 	add	r15,r15,r7
 400225c:	235b883a 	add	r13,r4,r13
 4002260:	9d63383a 	mul	r17,r19,r21
 4002264:	4309883a 	add	r4,r8,r12
 4002268:	7940022e 	bgeu	r15,r5,4002274 <__muldf3+0x43c>
 400226c:	01400074 	movhi	r5,1
 4002270:	8963883a 	add	r17,r17,r5
 4002274:	780a943a 	slli	r5,r15,16
 4002278:	91bfffcc 	andi	r6,r18,65535
 400227c:	70c7883a 	add	r3,r14,r3
 4002280:	298d883a 	add	r6,r5,r6
 4002284:	1a8f803a 	cmpltu	r7,r3,r10
 4002288:	350b883a 	add	r5,r6,r20
 400228c:	20c7883a 	add	r3,r4,r3
 4002290:	3955883a 	add	r10,r7,r5
 4002294:	1909803a 	cmpltu	r4,r3,r4
 4002298:	6a91883a 	add	r8,r13,r10
 400229c:	780cd43a 	srli	r6,r15,16
 40022a0:	2219883a 	add	r12,r4,r8
 40022a4:	2d0b803a 	cmpltu	r5,r5,r20
 40022a8:	51cf803a 	cmpltu	r7,r10,r7
 40022ac:	29ceb03a 	or	r7,r5,r7
 40022b0:	4351803a 	cmpltu	r8,r8,r13
 40022b4:	610b803a 	cmpltu	r5,r12,r4
 40022b8:	4148b03a 	or	r4,r8,r5
 40022bc:	398f883a 	add	r7,r7,r6
 40022c0:	3909883a 	add	r4,r7,r4
 40022c4:	1810927a 	slli	r8,r3,9
 40022c8:	2449883a 	add	r4,r4,r17
 40022cc:	2008927a 	slli	r4,r4,9
 40022d0:	6022d5fa 	srli	r17,r12,23
 40022d4:	1806d5fa 	srli	r3,r3,23
 40022d8:	4252b03a 	or	r9,r8,r9
 40022dc:	600a927a 	slli	r5,r12,9
 40022e0:	4810c03a 	cmpne	r8,r9,zero
 40022e4:	2462b03a 	or	r17,r4,r17
 40022e8:	40c6b03a 	or	r3,r8,r3
 40022ec:	8900402c 	andhi	r4,r17,256
 40022f0:	1950b03a 	or	r8,r3,r5
 40022f4:	20000726 	beq	r4,zero,4002314 <__muldf3+0x4dc>
 40022f8:	4006d07a 	srli	r3,r8,1
 40022fc:	880497fa 	slli	r2,r17,31
 4002300:	4200004c 	andi	r8,r8,1
 4002304:	8822d07a 	srli	r17,r17,1
 4002308:	1a10b03a 	or	r8,r3,r8
 400230c:	1210b03a 	or	r8,r2,r8
 4002310:	5805883a 	mov	r2,r11
 4002314:	1140ffc4 	addi	r5,r2,1023
 4002318:	0140440e 	bge	zero,r5,400242c <__muldf3+0x5f4>
 400231c:	40c001cc 	andi	r3,r8,7
 4002320:	18000726 	beq	r3,zero,4002340 <__muldf3+0x508>
 4002324:	40c003cc 	andi	r3,r8,15
 4002328:	01000104 	movi	r4,4
 400232c:	19000426 	beq	r3,r4,4002340 <__muldf3+0x508>
 4002330:	4107883a 	add	r3,r8,r4
 4002334:	1a11803a 	cmpltu	r8,r3,r8
 4002338:	8a23883a 	add	r17,r17,r8
 400233c:	1811883a 	mov	r8,r3
 4002340:	88c0402c 	andhi	r3,r17,256
 4002344:	18000426 	beq	r3,zero,4002358 <__muldf3+0x520>
 4002348:	11410004 	addi	r5,r2,1024
 400234c:	00bfc034 	movhi	r2,65280
 4002350:	10bfffc4 	addi	r2,r2,-1
 4002354:	88a2703a 	and	r17,r17,r2
 4002358:	0081ff84 	movi	r2,2046
 400235c:	117f6416 	blt	r2,r5,40020f0 <__alt_data_end+0xfc0020f0>
 4002360:	8828977a 	slli	r20,r17,29
 4002364:	4010d0fa 	srli	r8,r8,3
 4002368:	8822927a 	slli	r17,r17,9
 400236c:	2881ffcc 	andi	r2,r5,2047
 4002370:	a228b03a 	or	r20,r20,r8
 4002374:	880ad33a 	srli	r5,r17,12
 4002378:	b02b883a 	mov	r21,r22
 400237c:	003f0d06 	br	4001fb4 <__alt_data_end+0xfc001fb4>
 4002380:	8080022c 	andhi	r2,r16,8
 4002384:	10000926 	beq	r2,zero,40023ac <__muldf3+0x574>
 4002388:	8880022c 	andhi	r2,r17,8
 400238c:	1000071e 	bne	r2,zero,40023ac <__muldf3+0x574>
 4002390:	00800434 	movhi	r2,16
 4002394:	89400234 	orhi	r5,r17,8
 4002398:	10bfffc4 	addi	r2,r2,-1
 400239c:	b82b883a 	mov	r21,r23
 40023a0:	288a703a 	and	r5,r5,r2
 40023a4:	4029883a 	mov	r20,r8
 40023a8:	003f6806 	br	400214c <__alt_data_end+0xfc00214c>
 40023ac:	00800434 	movhi	r2,16
 40023b0:	81400234 	orhi	r5,r16,8
 40023b4:	10bfffc4 	addi	r2,r2,-1
 40023b8:	288a703a 	and	r5,r5,r2
 40023bc:	003f6306 	br	400214c <__alt_data_end+0xfc00214c>
 40023c0:	147ff604 	addi	r17,r2,-40
 40023c4:	3462983a 	sll	r17,r6,r17
 40023c8:	0011883a 	mov	r8,zero
 40023cc:	003f4406 	br	40020e0 <__alt_data_end+0xfc0020e0>
 40023d0:	3009883a 	mov	r4,r6
 40023d4:	d9800215 	stw	r6,8(sp)
 40023d8:	da400115 	stw	r9,4(sp)
 40023dc:	da800015 	stw	r10,0(sp)
 40023e0:	40026600 	call	4002660 <__clzsi2>
 40023e4:	10800804 	addi	r2,r2,32
 40023e8:	da800017 	ldw	r10,0(sp)
 40023ec:	da400117 	ldw	r9,4(sp)
 40023f0:	d9800217 	ldw	r6,8(sp)
 40023f4:	003f3006 	br	40020b8 <__alt_data_end+0xfc0020b8>
 40023f8:	143ff604 	addi	r16,r2,-40
 40023fc:	9c20983a 	sll	r16,r19,r16
 4002400:	0029883a 	mov	r20,zero
 4002404:	003f1606 	br	4002060 <__alt_data_end+0xfc002060>
 4002408:	d9800215 	stw	r6,8(sp)
 400240c:	d9c00015 	stw	r7,0(sp)
 4002410:	da400115 	stw	r9,4(sp)
 4002414:	40026600 	call	4002660 <__clzsi2>
 4002418:	10800804 	addi	r2,r2,32
 400241c:	da400117 	ldw	r9,4(sp)
 4002420:	d9c00017 	ldw	r7,0(sp)
 4002424:	d9800217 	ldw	r6,8(sp)
 4002428:	003f0306 	br	4002038 <__alt_data_end+0xfc002038>
 400242c:	00c00044 	movi	r3,1
 4002430:	1947c83a 	sub	r3,r3,r5
 4002434:	00800e04 	movi	r2,56
 4002438:	10feda16 	blt	r2,r3,4001fa4 <__alt_data_end+0xfc001fa4>
 400243c:	008007c4 	movi	r2,31
 4002440:	10c01b16 	blt	r2,r3,40024b0 <__muldf3+0x678>
 4002444:	00800804 	movi	r2,32
 4002448:	10c5c83a 	sub	r2,r2,r3
 400244c:	888a983a 	sll	r5,r17,r2
 4002450:	40c8d83a 	srl	r4,r8,r3
 4002454:	4084983a 	sll	r2,r8,r2
 4002458:	88e2d83a 	srl	r17,r17,r3
 400245c:	2906b03a 	or	r3,r5,r4
 4002460:	1004c03a 	cmpne	r2,r2,zero
 4002464:	1886b03a 	or	r3,r3,r2
 4002468:	188001cc 	andi	r2,r3,7
 400246c:	10000726 	beq	r2,zero,400248c <__muldf3+0x654>
 4002470:	188003cc 	andi	r2,r3,15
 4002474:	01000104 	movi	r4,4
 4002478:	11000426 	beq	r2,r4,400248c <__muldf3+0x654>
 400247c:	1805883a 	mov	r2,r3
 4002480:	10c00104 	addi	r3,r2,4
 4002484:	1885803a 	cmpltu	r2,r3,r2
 4002488:	88a3883a 	add	r17,r17,r2
 400248c:	8880202c 	andhi	r2,r17,128
 4002490:	10001c26 	beq	r2,zero,4002504 <__muldf3+0x6cc>
 4002494:	b02b883a 	mov	r21,r22
 4002498:	00800044 	movi	r2,1
 400249c:	000b883a 	mov	r5,zero
 40024a0:	0029883a 	mov	r20,zero
 40024a4:	003ec306 	br	4001fb4 <__alt_data_end+0xfc001fb4>
 40024a8:	5805883a 	mov	r2,r11
 40024ac:	003f9906 	br	4002314 <__alt_data_end+0xfc002314>
 40024b0:	00bff844 	movi	r2,-31
 40024b4:	1145c83a 	sub	r2,r2,r5
 40024b8:	8888d83a 	srl	r4,r17,r2
 40024bc:	00800804 	movi	r2,32
 40024c0:	18801a26 	beq	r3,r2,400252c <__muldf3+0x6f4>
 40024c4:	00801004 	movi	r2,64
 40024c8:	10c5c83a 	sub	r2,r2,r3
 40024cc:	8884983a 	sll	r2,r17,r2
 40024d0:	1204b03a 	or	r2,r2,r8
 40024d4:	1004c03a 	cmpne	r2,r2,zero
 40024d8:	2084b03a 	or	r2,r4,r2
 40024dc:	144001cc 	andi	r17,r2,7
 40024e0:	88000d1e 	bne	r17,zero,4002518 <__muldf3+0x6e0>
 40024e4:	000b883a 	mov	r5,zero
 40024e8:	1028d0fa 	srli	r20,r2,3
 40024ec:	b02b883a 	mov	r21,r22
 40024f0:	0005883a 	mov	r2,zero
 40024f4:	a468b03a 	or	r20,r20,r17
 40024f8:	003eae06 	br	4001fb4 <__alt_data_end+0xfc001fb4>
 40024fc:	1007883a 	mov	r3,r2
 4002500:	0023883a 	mov	r17,zero
 4002504:	880a927a 	slli	r5,r17,9
 4002508:	1805883a 	mov	r2,r3
 400250c:	8822977a 	slli	r17,r17,29
 4002510:	280ad33a 	srli	r5,r5,12
 4002514:	003ff406 	br	40024e8 <__alt_data_end+0xfc0024e8>
 4002518:	10c003cc 	andi	r3,r2,15
 400251c:	01000104 	movi	r4,4
 4002520:	193ff626 	beq	r3,r4,40024fc <__alt_data_end+0xfc0024fc>
 4002524:	0023883a 	mov	r17,zero
 4002528:	003fd506 	br	4002480 <__alt_data_end+0xfc002480>
 400252c:	0005883a 	mov	r2,zero
 4002530:	003fe706 	br	40024d0 <__alt_data_end+0xfc0024d0>
 4002534:	00800434 	movhi	r2,16
 4002538:	89400234 	orhi	r5,r17,8
 400253c:	10bfffc4 	addi	r2,r2,-1
 4002540:	b02b883a 	mov	r21,r22
 4002544:	288a703a 	and	r5,r5,r2
 4002548:	4029883a 	mov	r20,r8
 400254c:	003eff06 	br	400214c <__alt_data_end+0xfc00214c>

04002550 <__extendsfdf2>:
 4002550:	200ad5fa 	srli	r5,r4,23
 4002554:	defffd04 	addi	sp,sp,-12
 4002558:	dc400115 	stw	r17,4(sp)
 400255c:	29403fcc 	andi	r5,r5,255
 4002560:	29800044 	addi	r6,r5,1
 4002564:	04402034 	movhi	r17,128
 4002568:	dc000015 	stw	r16,0(sp)
 400256c:	8c7fffc4 	addi	r17,r17,-1
 4002570:	dfc00215 	stw	ra,8(sp)
 4002574:	31803fcc 	andi	r6,r6,255
 4002578:	00800044 	movi	r2,1
 400257c:	8922703a 	and	r17,r17,r4
 4002580:	2020d7fa 	srli	r16,r4,31
 4002584:	1180110e 	bge	r2,r6,40025cc <__extendsfdf2+0x7c>
 4002588:	880cd0fa 	srli	r6,r17,3
 400258c:	8822977a 	slli	r17,r17,29
 4002590:	2940e004 	addi	r5,r5,896
 4002594:	2941ffcc 	andi	r5,r5,2047
 4002598:	2804953a 	slli	r2,r5,20
 400259c:	01400434 	movhi	r5,16
 40025a0:	800697fa 	slli	r3,r16,31
 40025a4:	297fffc4 	addi	r5,r5,-1
 40025a8:	314a703a 	and	r5,r6,r5
 40025ac:	288ab03a 	or	r5,r5,r2
 40025b0:	28c6b03a 	or	r3,r5,r3
 40025b4:	8805883a 	mov	r2,r17
 40025b8:	dfc00217 	ldw	ra,8(sp)
 40025bc:	dc400117 	ldw	r17,4(sp)
 40025c0:	dc000017 	ldw	r16,0(sp)
 40025c4:	dec00304 	addi	sp,sp,12
 40025c8:	f800283a 	ret
 40025cc:	2800111e 	bne	r5,zero,4002614 <__extendsfdf2+0xc4>
 40025d0:	88001c26 	beq	r17,zero,4002644 <__extendsfdf2+0xf4>
 40025d4:	8809883a 	mov	r4,r17
 40025d8:	40026600 	call	4002660 <__clzsi2>
 40025dc:	00c00284 	movi	r3,10
 40025e0:	18801b16 	blt	r3,r2,4002650 <__extendsfdf2+0x100>
 40025e4:	018002c4 	movi	r6,11
 40025e8:	308dc83a 	sub	r6,r6,r2
 40025ec:	11000544 	addi	r4,r2,21
 40025f0:	8986d83a 	srl	r3,r17,r6
 40025f4:	8922983a 	sll	r17,r17,r4
 40025f8:	0180e244 	movi	r6,905
 40025fc:	01400434 	movhi	r5,16
 4002600:	3085c83a 	sub	r2,r6,r2
 4002604:	297fffc4 	addi	r5,r5,-1
 4002608:	194c703a 	and	r6,r3,r5
 400260c:	1141ffcc 	andi	r5,r2,2047
 4002610:	003fe006 	br	4002594 <__alt_data_end+0xfc002594>
 4002614:	88000826 	beq	r17,zero,4002638 <__extendsfdf2+0xe8>
 4002618:	880cd0fa 	srli	r6,r17,3
 400261c:	00800434 	movhi	r2,16
 4002620:	10bfffc4 	addi	r2,r2,-1
 4002624:	31800234 	orhi	r6,r6,8
 4002628:	8822977a 	slli	r17,r17,29
 400262c:	308c703a 	and	r6,r6,r2
 4002630:	0141ffc4 	movi	r5,2047
 4002634:	003fd706 	br	4002594 <__alt_data_end+0xfc002594>
 4002638:	0141ffc4 	movi	r5,2047
 400263c:	000d883a 	mov	r6,zero
 4002640:	003fd406 	br	4002594 <__alt_data_end+0xfc002594>
 4002644:	000b883a 	mov	r5,zero
 4002648:	000d883a 	mov	r6,zero
 400264c:	003fd106 	br	4002594 <__alt_data_end+0xfc002594>
 4002650:	11bffd44 	addi	r6,r2,-11
 4002654:	8986983a 	sll	r3,r17,r6
 4002658:	0023883a 	mov	r17,zero
 400265c:	003fe606 	br	40025f8 <__alt_data_end+0xfc0025f8>

04002660 <__clzsi2>:
 4002660:	00bfffd4 	movui	r2,65535
 4002664:	11000536 	bltu	r2,r4,400267c <__clzsi2+0x1c>
 4002668:	00803fc4 	movi	r2,255
 400266c:	11000f36 	bltu	r2,r4,40026ac <__clzsi2+0x4c>
 4002670:	00800804 	movi	r2,32
 4002674:	0007883a 	mov	r3,zero
 4002678:	00000506 	br	4002690 <__clzsi2+0x30>
 400267c:	00804034 	movhi	r2,256
 4002680:	10bfffc4 	addi	r2,r2,-1
 4002684:	11000c2e 	bgeu	r2,r4,40026b8 <__clzsi2+0x58>
 4002688:	00800204 	movi	r2,8
 400268c:	00c00604 	movi	r3,24
 4002690:	20c8d83a 	srl	r4,r4,r3
 4002694:	00c10074 	movhi	r3,1025
 4002698:	18c20b84 	addi	r3,r3,2094
 400269c:	1909883a 	add	r4,r3,r4
 40026a0:	20c00003 	ldbu	r3,0(r4)
 40026a4:	10c5c83a 	sub	r2,r2,r3
 40026a8:	f800283a 	ret
 40026ac:	00800604 	movi	r2,24
 40026b0:	00c00204 	movi	r3,8
 40026b4:	003ff606 	br	4002690 <__alt_data_end+0xfc002690>
 40026b8:	00800404 	movi	r2,16
 40026bc:	1007883a 	mov	r3,r2
 40026c0:	003ff306 	br	4002690 <__alt_data_end+0xfc002690>

040026c4 <_printf_r>:
 40026c4:	defffd04 	addi	sp,sp,-12
 40026c8:	2805883a 	mov	r2,r5
 40026cc:	dfc00015 	stw	ra,0(sp)
 40026d0:	d9800115 	stw	r6,4(sp)
 40026d4:	d9c00215 	stw	r7,8(sp)
 40026d8:	21400217 	ldw	r5,8(r4)
 40026dc:	d9c00104 	addi	r7,sp,4
 40026e0:	100d883a 	mov	r6,r2
 40026e4:	40028bc0 	call	40028bc <___vfprintf_internal_r>
 40026e8:	dfc00017 	ldw	ra,0(sp)
 40026ec:	dec00304 	addi	sp,sp,12
 40026f0:	f800283a 	ret

040026f4 <printf>:
 40026f4:	defffc04 	addi	sp,sp,-16
 40026f8:	dfc00015 	stw	ra,0(sp)
 40026fc:	d9400115 	stw	r5,4(sp)
 4002700:	d9800215 	stw	r6,8(sp)
 4002704:	d9c00315 	stw	r7,12(sp)
 4002708:	00810074 	movhi	r2,1025
 400270c:	10897804 	addi	r2,r2,9696
 4002710:	10800017 	ldw	r2,0(r2)
 4002714:	200b883a 	mov	r5,r4
 4002718:	d9800104 	addi	r6,sp,4
 400271c:	11000217 	ldw	r4,8(r2)
 4002720:	4004ab40 	call	4004ab4 <__vfprintf_internal>
 4002724:	dfc00017 	ldw	ra,0(sp)
 4002728:	dec00404 	addi	sp,sp,16
 400272c:	f800283a 	ret

04002730 <_putchar_r>:
 4002730:	21800217 	ldw	r6,8(r4)
 4002734:	40095781 	jmpi	4009578 <_putc_r>

04002738 <putchar>:
 4002738:	00810074 	movhi	r2,1025
 400273c:	10897804 	addi	r2,r2,9696
 4002740:	200b883a 	mov	r5,r4
 4002744:	11000017 	ldw	r4,0(r2)
 4002748:	21800217 	ldw	r6,8(r4)
 400274c:	40095781 	jmpi	4009578 <_putc_r>

04002750 <_puts_r>:
 4002750:	defff604 	addi	sp,sp,-40
 4002754:	dc000715 	stw	r16,28(sp)
 4002758:	2021883a 	mov	r16,r4
 400275c:	2809883a 	mov	r4,r5
 4002760:	dc400815 	stw	r17,32(sp)
 4002764:	dfc00915 	stw	ra,36(sp)
 4002768:	2823883a 	mov	r17,r5
 400276c:	40028240 	call	4002824 <strlen>
 4002770:	10c00044 	addi	r3,r2,1
 4002774:	d8800115 	stw	r2,4(sp)
 4002778:	00810074 	movhi	r2,1025
 400277c:	10824c04 	addi	r2,r2,2352
 4002780:	d8800215 	stw	r2,8(sp)
 4002784:	00800044 	movi	r2,1
 4002788:	d8800315 	stw	r2,12(sp)
 400278c:	00800084 	movi	r2,2
 4002790:	dc400015 	stw	r17,0(sp)
 4002794:	d8c00615 	stw	r3,24(sp)
 4002798:	dec00415 	stw	sp,16(sp)
 400279c:	d8800515 	stw	r2,20(sp)
 40027a0:	80000226 	beq	r16,zero,40027ac <_puts_r+0x5c>
 40027a4:	80800e17 	ldw	r2,56(r16)
 40027a8:	10001426 	beq	r2,zero,40027fc <_puts_r+0xac>
 40027ac:	81400217 	ldw	r5,8(r16)
 40027b0:	2880030b 	ldhu	r2,12(r5)
 40027b4:	10c8000c 	andi	r3,r2,8192
 40027b8:	1800061e 	bne	r3,zero,40027d4 <_puts_r+0x84>
 40027bc:	29001917 	ldw	r4,100(r5)
 40027c0:	00f7ffc4 	movi	r3,-8193
 40027c4:	10880014 	ori	r2,r2,8192
 40027c8:	20c6703a 	and	r3,r4,r3
 40027cc:	2880030d 	sth	r2,12(r5)
 40027d0:	28c01915 	stw	r3,100(r5)
 40027d4:	d9800404 	addi	r6,sp,16
 40027d8:	8009883a 	mov	r4,r16
 40027dc:	4006fe40 	call	4006fe4 <__sfvwrite_r>
 40027e0:	1000091e 	bne	r2,zero,4002808 <_puts_r+0xb8>
 40027e4:	00800284 	movi	r2,10
 40027e8:	dfc00917 	ldw	ra,36(sp)
 40027ec:	dc400817 	ldw	r17,32(sp)
 40027f0:	dc000717 	ldw	r16,28(sp)
 40027f4:	dec00a04 	addi	sp,sp,40
 40027f8:	f800283a 	ret
 40027fc:	8009883a 	mov	r4,r16
 4002800:	4006b600 	call	4006b60 <__sinit>
 4002804:	003fe906 	br	40027ac <__alt_data_end+0xfc0027ac>
 4002808:	00bfffc4 	movi	r2,-1
 400280c:	003ff606 	br	40027e8 <__alt_data_end+0xfc0027e8>

04002810 <puts>:
 4002810:	00810074 	movhi	r2,1025
 4002814:	10897804 	addi	r2,r2,9696
 4002818:	200b883a 	mov	r5,r4
 400281c:	11000017 	ldw	r4,0(r2)
 4002820:	40027501 	jmpi	4002750 <_puts_r>

04002824 <strlen>:
 4002824:	208000cc 	andi	r2,r4,3
 4002828:	10002026 	beq	r2,zero,40028ac <strlen+0x88>
 400282c:	20800007 	ldb	r2,0(r4)
 4002830:	10002026 	beq	r2,zero,40028b4 <strlen+0x90>
 4002834:	2005883a 	mov	r2,r4
 4002838:	00000206 	br	4002844 <strlen+0x20>
 400283c:	10c00007 	ldb	r3,0(r2)
 4002840:	18001826 	beq	r3,zero,40028a4 <strlen+0x80>
 4002844:	10800044 	addi	r2,r2,1
 4002848:	10c000cc 	andi	r3,r2,3
 400284c:	183ffb1e 	bne	r3,zero,400283c <__alt_data_end+0xfc00283c>
 4002850:	10c00017 	ldw	r3,0(r2)
 4002854:	01ffbff4 	movhi	r7,65279
 4002858:	39ffbfc4 	addi	r7,r7,-257
 400285c:	00ca303a 	nor	r5,zero,r3
 4002860:	01a02074 	movhi	r6,32897
 4002864:	19c7883a 	add	r3,r3,r7
 4002868:	31a02004 	addi	r6,r6,-32640
 400286c:	1946703a 	and	r3,r3,r5
 4002870:	1986703a 	and	r3,r3,r6
 4002874:	1800091e 	bne	r3,zero,400289c <strlen+0x78>
 4002878:	10800104 	addi	r2,r2,4
 400287c:	10c00017 	ldw	r3,0(r2)
 4002880:	19cb883a 	add	r5,r3,r7
 4002884:	00c6303a 	nor	r3,zero,r3
 4002888:	28c6703a 	and	r3,r5,r3
 400288c:	1986703a 	and	r3,r3,r6
 4002890:	183ff926 	beq	r3,zero,4002878 <__alt_data_end+0xfc002878>
 4002894:	00000106 	br	400289c <strlen+0x78>
 4002898:	10800044 	addi	r2,r2,1
 400289c:	10c00007 	ldb	r3,0(r2)
 40028a0:	183ffd1e 	bne	r3,zero,4002898 <__alt_data_end+0xfc002898>
 40028a4:	1105c83a 	sub	r2,r2,r4
 40028a8:	f800283a 	ret
 40028ac:	2005883a 	mov	r2,r4
 40028b0:	003fe706 	br	4002850 <__alt_data_end+0xfc002850>
 40028b4:	0005883a 	mov	r2,zero
 40028b8:	f800283a 	ret

040028bc <___vfprintf_internal_r>:
 40028bc:	deffb804 	addi	sp,sp,-288
 40028c0:	dfc04715 	stw	ra,284(sp)
 40028c4:	ddc04515 	stw	r23,276(sp)
 40028c8:	dd404315 	stw	r21,268(sp)
 40028cc:	d9002c15 	stw	r4,176(sp)
 40028d0:	282f883a 	mov	r23,r5
 40028d4:	302b883a 	mov	r21,r6
 40028d8:	d9c02d15 	stw	r7,180(sp)
 40028dc:	df004615 	stw	fp,280(sp)
 40028e0:	dd804415 	stw	r22,272(sp)
 40028e4:	dd004215 	stw	r20,264(sp)
 40028e8:	dcc04115 	stw	r19,260(sp)
 40028ec:	dc804015 	stw	r18,256(sp)
 40028f0:	dc403f15 	stw	r17,252(sp)
 40028f4:	dc003e15 	stw	r16,248(sp)
 40028f8:	40076d40 	call	40076d4 <_localeconv_r>
 40028fc:	10800017 	ldw	r2,0(r2)
 4002900:	1009883a 	mov	r4,r2
 4002904:	d8803415 	stw	r2,208(sp)
 4002908:	40028240 	call	4002824 <strlen>
 400290c:	d8803715 	stw	r2,220(sp)
 4002910:	d8802c17 	ldw	r2,176(sp)
 4002914:	10000226 	beq	r2,zero,4002920 <___vfprintf_internal_r+0x64>
 4002918:	10800e17 	ldw	r2,56(r2)
 400291c:	1000f926 	beq	r2,zero,4002d04 <___vfprintf_internal_r+0x448>
 4002920:	b880030b 	ldhu	r2,12(r23)
 4002924:	10c8000c 	andi	r3,r2,8192
 4002928:	1800061e 	bne	r3,zero,4002944 <___vfprintf_internal_r+0x88>
 400292c:	b9001917 	ldw	r4,100(r23)
 4002930:	00f7ffc4 	movi	r3,-8193
 4002934:	10880014 	ori	r2,r2,8192
 4002938:	20c6703a 	and	r3,r4,r3
 400293c:	b880030d 	sth	r2,12(r23)
 4002940:	b8c01915 	stw	r3,100(r23)
 4002944:	10c0020c 	andi	r3,r2,8
 4002948:	1800c126 	beq	r3,zero,4002c50 <___vfprintf_internal_r+0x394>
 400294c:	b8c00417 	ldw	r3,16(r23)
 4002950:	1800bf26 	beq	r3,zero,4002c50 <___vfprintf_internal_r+0x394>
 4002954:	1080068c 	andi	r2,r2,26
 4002958:	00c00284 	movi	r3,10
 400295c:	10c0c426 	beq	r2,r3,4002c70 <___vfprintf_internal_r+0x3b4>
 4002960:	d8c00404 	addi	r3,sp,16
 4002964:	05010074 	movhi	r20,1025
 4002968:	d9001e04 	addi	r4,sp,120
 400296c:	a5025d84 	addi	r20,r20,2422
 4002970:	d8c01e15 	stw	r3,120(sp)
 4002974:	d8002015 	stw	zero,128(sp)
 4002978:	d8001f15 	stw	zero,124(sp)
 400297c:	d8003315 	stw	zero,204(sp)
 4002980:	d8003615 	stw	zero,216(sp)
 4002984:	d8003815 	stw	zero,224(sp)
 4002988:	1811883a 	mov	r8,r3
 400298c:	d8003915 	stw	zero,228(sp)
 4002990:	d8003a15 	stw	zero,232(sp)
 4002994:	d8002f15 	stw	zero,188(sp)
 4002998:	d9002815 	stw	r4,160(sp)
 400299c:	a8800007 	ldb	r2,0(r21)
 40029a0:	10027b26 	beq	r2,zero,4003390 <___vfprintf_internal_r+0xad4>
 40029a4:	00c00944 	movi	r3,37
 40029a8:	a821883a 	mov	r16,r21
 40029ac:	10c0021e 	bne	r2,r3,40029b8 <___vfprintf_internal_r+0xfc>
 40029b0:	00001406 	br	4002a04 <___vfprintf_internal_r+0x148>
 40029b4:	10c00326 	beq	r2,r3,40029c4 <___vfprintf_internal_r+0x108>
 40029b8:	84000044 	addi	r16,r16,1
 40029bc:	80800007 	ldb	r2,0(r16)
 40029c0:	103ffc1e 	bne	r2,zero,40029b4 <__alt_data_end+0xfc0029b4>
 40029c4:	8563c83a 	sub	r17,r16,r21
 40029c8:	88000e26 	beq	r17,zero,4002a04 <___vfprintf_internal_r+0x148>
 40029cc:	d8c02017 	ldw	r3,128(sp)
 40029d0:	d8801f17 	ldw	r2,124(sp)
 40029d4:	45400015 	stw	r21,0(r8)
 40029d8:	1c47883a 	add	r3,r3,r17
 40029dc:	10800044 	addi	r2,r2,1
 40029e0:	d8c02015 	stw	r3,128(sp)
 40029e4:	44400115 	stw	r17,4(r8)
 40029e8:	d8801f15 	stw	r2,124(sp)
 40029ec:	00c001c4 	movi	r3,7
 40029f0:	1880a716 	blt	r3,r2,4002c90 <___vfprintf_internal_r+0x3d4>
 40029f4:	42000204 	addi	r8,r8,8
 40029f8:	d9402f17 	ldw	r5,188(sp)
 40029fc:	2c4b883a 	add	r5,r5,r17
 4002a00:	d9402f15 	stw	r5,188(sp)
 4002a04:	80800007 	ldb	r2,0(r16)
 4002a08:	1000a826 	beq	r2,zero,4002cac <___vfprintf_internal_r+0x3f0>
 4002a0c:	84400047 	ldb	r17,1(r16)
 4002a10:	00bfffc4 	movi	r2,-1
 4002a14:	85400044 	addi	r21,r16,1
 4002a18:	d8002785 	stb	zero,158(sp)
 4002a1c:	0007883a 	mov	r3,zero
 4002a20:	000f883a 	mov	r7,zero
 4002a24:	d8802915 	stw	r2,164(sp)
 4002a28:	d8003115 	stw	zero,196(sp)
 4002a2c:	0025883a 	mov	r18,zero
 4002a30:	01401604 	movi	r5,88
 4002a34:	01800244 	movi	r6,9
 4002a38:	02800a84 	movi	r10,42
 4002a3c:	02401b04 	movi	r9,108
 4002a40:	ad400044 	addi	r21,r21,1
 4002a44:	88bff804 	addi	r2,r17,-32
 4002a48:	28830436 	bltu	r5,r2,400365c <___vfprintf_internal_r+0xda0>
 4002a4c:	100490ba 	slli	r2,r2,2
 4002a50:	01010034 	movhi	r4,1024
 4002a54:	210a9904 	addi	r4,r4,10852
 4002a58:	1105883a 	add	r2,r2,r4
 4002a5c:	10800017 	ldw	r2,0(r2)
 4002a60:	1000683a 	jmp	r2
 4002a64:	0400357c 	xorhi	r16,zero,213
 4002a68:	0400365c 	xori	r16,zero,217
 4002a6c:	0400365c 	xori	r16,zero,217
 4002a70:	0400359c 	xori	r16,zero,214
 4002a74:	0400365c 	xori	r16,zero,217
 4002a78:	0400365c 	xori	r16,zero,217
 4002a7c:	0400365c 	xori	r16,zero,217
 4002a80:	0400365c 	xori	r16,zero,217
 4002a84:	0400365c 	xori	r16,zero,217
 4002a88:	0400365c 	xori	r16,zero,217
 4002a8c:	04002d10 	cmplti	r16,zero,180
 4002a90:	040034b8 	rdprs	r16,zero,210
 4002a94:	0400365c 	xori	r16,zero,217
 4002a98:	04002bd8 	cmpnei	r16,zero,175
 4002a9c:	04002d38 	rdprs	r16,zero,180
 4002aa0:	0400365c 	xori	r16,zero,217
 4002aa4:	04002d78 	rdprs	r16,zero,181
 4002aa8:	04002d84 	movi	r16,182
 4002aac:	04002d84 	movi	r16,182
 4002ab0:	04002d84 	movi	r16,182
 4002ab4:	04002d84 	movi	r16,182
 4002ab8:	04002d84 	movi	r16,182
 4002abc:	04002d84 	movi	r16,182
 4002ac0:	04002d84 	movi	r16,182
 4002ac4:	04002d84 	movi	r16,182
 4002ac8:	04002d84 	movi	r16,182
 4002acc:	0400365c 	xori	r16,zero,217
 4002ad0:	0400365c 	xori	r16,zero,217
 4002ad4:	0400365c 	xori	r16,zero,217
 4002ad8:	0400365c 	xori	r16,zero,217
 4002adc:	0400365c 	xori	r16,zero,217
 4002ae0:	0400365c 	xori	r16,zero,217
 4002ae4:	0400365c 	xori	r16,zero,217
 4002ae8:	0400365c 	xori	r16,zero,217
 4002aec:	0400365c 	xori	r16,zero,217
 4002af0:	0400365c 	xori	r16,zero,217
 4002af4:	04002db8 	rdprs	r16,zero,182
 4002af8:	04002e74 	movhi	r16,185
 4002afc:	0400365c 	xori	r16,zero,217
 4002b00:	04002e74 	movhi	r16,185
 4002b04:	0400365c 	xori	r16,zero,217
 4002b08:	0400365c 	xori	r16,zero,217
 4002b0c:	0400365c 	xori	r16,zero,217
 4002b10:	0400365c 	xori	r16,zero,217
 4002b14:	04002f14 	movui	r16,188
 4002b18:	0400365c 	xori	r16,zero,217
 4002b1c:	0400365c 	xori	r16,zero,217
 4002b20:	04002f20 	cmpeqi	r16,zero,188
 4002b24:	0400365c 	xori	r16,zero,217
 4002b28:	0400365c 	xori	r16,zero,217
 4002b2c:	0400365c 	xori	r16,zero,217
 4002b30:	0400365c 	xori	r16,zero,217
 4002b34:	0400365c 	xori	r16,zero,217
 4002b38:	04003398 	cmpnei	r16,zero,206
 4002b3c:	0400365c 	xori	r16,zero,217
 4002b40:	0400365c 	xori	r16,zero,217
 4002b44:	040033f8 	rdprs	r16,zero,207
 4002b48:	0400365c 	xori	r16,zero,217
 4002b4c:	0400365c 	xori	r16,zero,217
 4002b50:	0400365c 	xori	r16,zero,217
 4002b54:	0400365c 	xori	r16,zero,217
 4002b58:	0400365c 	xori	r16,zero,217
 4002b5c:	0400365c 	xori	r16,zero,217
 4002b60:	0400365c 	xori	r16,zero,217
 4002b64:	0400365c 	xori	r16,zero,217
 4002b68:	0400365c 	xori	r16,zero,217
 4002b6c:	0400365c 	xori	r16,zero,217
 4002b70:	04003608 	cmpgei	r16,zero,216
 4002b74:	040035a8 	cmpgeui	r16,zero,214
 4002b78:	04002e74 	movhi	r16,185
 4002b7c:	04002e74 	movhi	r16,185
 4002b80:	04002e74 	movhi	r16,185
 4002b84:	040035b8 	rdprs	r16,zero,214
 4002b88:	040035a8 	cmpgeui	r16,zero,214
 4002b8c:	0400365c 	xori	r16,zero,217
 4002b90:	0400365c 	xori	r16,zero,217
 4002b94:	040035c4 	movi	r16,215
 4002b98:	0400365c 	xori	r16,zero,217
 4002b9c:	040035d4 	movui	r16,215
 4002ba0:	040034a8 	cmpgeui	r16,zero,210
 4002ba4:	04002be4 	muli	r16,zero,175
 4002ba8:	040034c8 	cmpgei	r16,zero,211
 4002bac:	0400365c 	xori	r16,zero,217
 4002bb0:	040034d4 	movui	r16,211
 4002bb4:	0400365c 	xori	r16,zero,217
 4002bb8:	04003530 	cmpltui	r16,zero,212
 4002bbc:	0400365c 	xori	r16,zero,217
 4002bc0:	0400365c 	xori	r16,zero,217
 4002bc4:	04003540 	call	400354 <__alt_mem_new_sdram_controller_0-0x3bffcac>
 4002bc8:	d9003117 	ldw	r4,196(sp)
 4002bcc:	d8802d15 	stw	r2,180(sp)
 4002bd0:	0109c83a 	sub	r4,zero,r4
 4002bd4:	d9003115 	stw	r4,196(sp)
 4002bd8:	94800114 	ori	r18,r18,4
 4002bdc:	ac400007 	ldb	r17,0(r21)
 4002be0:	003f9706 	br	4002a40 <__alt_data_end+0xfc002a40>
 4002be4:	00800c04 	movi	r2,48
 4002be8:	d9002d17 	ldw	r4,180(sp)
 4002bec:	d9402917 	ldw	r5,164(sp)
 4002bf0:	d8802705 	stb	r2,156(sp)
 4002bf4:	00801e04 	movi	r2,120
 4002bf8:	d8802745 	stb	r2,157(sp)
 4002bfc:	d8002785 	stb	zero,158(sp)
 4002c00:	20c00104 	addi	r3,r4,4
 4002c04:	24c00017 	ldw	r19,0(r4)
 4002c08:	002d883a 	mov	r22,zero
 4002c0c:	90800094 	ori	r2,r18,2
 4002c10:	28029a16 	blt	r5,zero,400367c <___vfprintf_internal_r+0xdc0>
 4002c14:	00bfdfc4 	movi	r2,-129
 4002c18:	90a4703a 	and	r18,r18,r2
 4002c1c:	d8c02d15 	stw	r3,180(sp)
 4002c20:	94800094 	ori	r18,r18,2
 4002c24:	9802871e 	bne	r19,zero,4003644 <___vfprintf_internal_r+0xd88>
 4002c28:	00810074 	movhi	r2,1025
 4002c2c:	10825604 	addi	r2,r2,2392
 4002c30:	d8803915 	stw	r2,228(sp)
 4002c34:	04401e04 	movi	r17,120
 4002c38:	d8802917 	ldw	r2,164(sp)
 4002c3c:	0039883a 	mov	fp,zero
 4002c40:	1001e926 	beq	r2,zero,40033e8 <___vfprintf_internal_r+0xb2c>
 4002c44:	0027883a 	mov	r19,zero
 4002c48:	002d883a 	mov	r22,zero
 4002c4c:	00020506 	br	4003464 <___vfprintf_internal_r+0xba8>
 4002c50:	d9002c17 	ldw	r4,176(sp)
 4002c54:	b80b883a 	mov	r5,r23
 4002c58:	4004b8c0 	call	4004b8c <__swsetup_r>
 4002c5c:	1005ac1e 	bne	r2,zero,4004310 <___vfprintf_internal_r+0x1a54>
 4002c60:	b880030b 	ldhu	r2,12(r23)
 4002c64:	00c00284 	movi	r3,10
 4002c68:	1080068c 	andi	r2,r2,26
 4002c6c:	10ff3c1e 	bne	r2,r3,4002960 <__alt_data_end+0xfc002960>
 4002c70:	b880038f 	ldh	r2,14(r23)
 4002c74:	103f3a16 	blt	r2,zero,4002960 <__alt_data_end+0xfc002960>
 4002c78:	d9c02d17 	ldw	r7,180(sp)
 4002c7c:	d9002c17 	ldw	r4,176(sp)
 4002c80:	a80d883a 	mov	r6,r21
 4002c84:	b80b883a 	mov	r5,r23
 4002c88:	4004ad00 	call	4004ad0 <__sbprintf>
 4002c8c:	00001106 	br	4002cd4 <___vfprintf_internal_r+0x418>
 4002c90:	d9002c17 	ldw	r4,176(sp)
 4002c94:	d9801e04 	addi	r6,sp,120
 4002c98:	b80b883a 	mov	r5,r23
 4002c9c:	400a0200 	call	400a020 <__sprint_r>
 4002ca0:	1000081e 	bne	r2,zero,4002cc4 <___vfprintf_internal_r+0x408>
 4002ca4:	da000404 	addi	r8,sp,16
 4002ca8:	003f5306 	br	40029f8 <__alt_data_end+0xfc0029f8>
 4002cac:	d8802017 	ldw	r2,128(sp)
 4002cb0:	10000426 	beq	r2,zero,4002cc4 <___vfprintf_internal_r+0x408>
 4002cb4:	d9002c17 	ldw	r4,176(sp)
 4002cb8:	d9801e04 	addi	r6,sp,120
 4002cbc:	b80b883a 	mov	r5,r23
 4002cc0:	400a0200 	call	400a020 <__sprint_r>
 4002cc4:	b880030b 	ldhu	r2,12(r23)
 4002cc8:	1080100c 	andi	r2,r2,64
 4002ccc:	1005901e 	bne	r2,zero,4004310 <___vfprintf_internal_r+0x1a54>
 4002cd0:	d8802f17 	ldw	r2,188(sp)
 4002cd4:	dfc04717 	ldw	ra,284(sp)
 4002cd8:	df004617 	ldw	fp,280(sp)
 4002cdc:	ddc04517 	ldw	r23,276(sp)
 4002ce0:	dd804417 	ldw	r22,272(sp)
 4002ce4:	dd404317 	ldw	r21,268(sp)
 4002ce8:	dd004217 	ldw	r20,264(sp)
 4002cec:	dcc04117 	ldw	r19,260(sp)
 4002cf0:	dc804017 	ldw	r18,256(sp)
 4002cf4:	dc403f17 	ldw	r17,252(sp)
 4002cf8:	dc003e17 	ldw	r16,248(sp)
 4002cfc:	dec04804 	addi	sp,sp,288
 4002d00:	f800283a 	ret
 4002d04:	d9002c17 	ldw	r4,176(sp)
 4002d08:	4006b600 	call	4006b60 <__sinit>
 4002d0c:	003f0406 	br	4002920 <__alt_data_end+0xfc002920>
 4002d10:	d8802d17 	ldw	r2,180(sp)
 4002d14:	d9002d17 	ldw	r4,180(sp)
 4002d18:	10800017 	ldw	r2,0(r2)
 4002d1c:	d8803115 	stw	r2,196(sp)
 4002d20:	20800104 	addi	r2,r4,4
 4002d24:	d9003117 	ldw	r4,196(sp)
 4002d28:	203fa716 	blt	r4,zero,4002bc8 <__alt_data_end+0xfc002bc8>
 4002d2c:	d8802d15 	stw	r2,180(sp)
 4002d30:	ac400007 	ldb	r17,0(r21)
 4002d34:	003f4206 	br	4002a40 <__alt_data_end+0xfc002a40>
 4002d38:	ac400007 	ldb	r17,0(r21)
 4002d3c:	aac00044 	addi	r11,r21,1
 4002d40:	8a872826 	beq	r17,r10,40049e4 <___vfprintf_internal_r+0x2128>
 4002d44:	88bff404 	addi	r2,r17,-48
 4002d48:	0009883a 	mov	r4,zero
 4002d4c:	30867d36 	bltu	r6,r2,4004744 <___vfprintf_internal_r+0x1e88>
 4002d50:	5c400007 	ldb	r17,0(r11)
 4002d54:	210002a4 	muli	r4,r4,10
 4002d58:	5d400044 	addi	r21,r11,1
 4002d5c:	a817883a 	mov	r11,r21
 4002d60:	2089883a 	add	r4,r4,r2
 4002d64:	88bff404 	addi	r2,r17,-48
 4002d68:	30bff92e 	bgeu	r6,r2,4002d50 <__alt_data_end+0xfc002d50>
 4002d6c:	2005c916 	blt	r4,zero,4004494 <___vfprintf_internal_r+0x1bd8>
 4002d70:	d9002915 	stw	r4,164(sp)
 4002d74:	003f3306 	br	4002a44 <__alt_data_end+0xfc002a44>
 4002d78:	94802014 	ori	r18,r18,128
 4002d7c:	ac400007 	ldb	r17,0(r21)
 4002d80:	003f2f06 	br	4002a40 <__alt_data_end+0xfc002a40>
 4002d84:	a809883a 	mov	r4,r21
 4002d88:	d8003115 	stw	zero,196(sp)
 4002d8c:	88bff404 	addi	r2,r17,-48
 4002d90:	0017883a 	mov	r11,zero
 4002d94:	24400007 	ldb	r17,0(r4)
 4002d98:	5ac002a4 	muli	r11,r11,10
 4002d9c:	ad400044 	addi	r21,r21,1
 4002da0:	a809883a 	mov	r4,r21
 4002da4:	12d7883a 	add	r11,r2,r11
 4002da8:	88bff404 	addi	r2,r17,-48
 4002dac:	30bff92e 	bgeu	r6,r2,4002d94 <__alt_data_end+0xfc002d94>
 4002db0:	dac03115 	stw	r11,196(sp)
 4002db4:	003f2306 	br	4002a44 <__alt_data_end+0xfc002a44>
 4002db8:	18c03fcc 	andi	r3,r3,255
 4002dbc:	18072b1e 	bne	r3,zero,4004a6c <___vfprintf_internal_r+0x21b0>
 4002dc0:	94800414 	ori	r18,r18,16
 4002dc4:	9080080c 	andi	r2,r18,32
 4002dc8:	10037b26 	beq	r2,zero,4003bb8 <___vfprintf_internal_r+0x12fc>
 4002dcc:	d9402d17 	ldw	r5,180(sp)
 4002dd0:	28800117 	ldw	r2,4(r5)
 4002dd4:	2cc00017 	ldw	r19,0(r5)
 4002dd8:	29400204 	addi	r5,r5,8
 4002ddc:	d9402d15 	stw	r5,180(sp)
 4002de0:	102d883a 	mov	r22,r2
 4002de4:	10044b16 	blt	r2,zero,4003f14 <___vfprintf_internal_r+0x1658>
 4002de8:	d9402917 	ldw	r5,164(sp)
 4002dec:	df002783 	ldbu	fp,158(sp)
 4002df0:	2803bc16 	blt	r5,zero,4003ce4 <___vfprintf_internal_r+0x1428>
 4002df4:	00ffdfc4 	movi	r3,-129
 4002df8:	9d84b03a 	or	r2,r19,r22
 4002dfc:	90e4703a 	and	r18,r18,r3
 4002e00:	10017726 	beq	r2,zero,40033e0 <___vfprintf_internal_r+0xb24>
 4002e04:	b0038326 	beq	r22,zero,4003c14 <___vfprintf_internal_r+0x1358>
 4002e08:	dc402a15 	stw	r17,168(sp)
 4002e0c:	dc001e04 	addi	r16,sp,120
 4002e10:	b023883a 	mov	r17,r22
 4002e14:	402d883a 	mov	r22,r8
 4002e18:	9809883a 	mov	r4,r19
 4002e1c:	880b883a 	mov	r5,r17
 4002e20:	01800284 	movi	r6,10
 4002e24:	000f883a 	mov	r7,zero
 4002e28:	400c4180 	call	400c418 <__umoddi3>
 4002e2c:	10800c04 	addi	r2,r2,48
 4002e30:	843fffc4 	addi	r16,r16,-1
 4002e34:	9809883a 	mov	r4,r19
 4002e38:	880b883a 	mov	r5,r17
 4002e3c:	80800005 	stb	r2,0(r16)
 4002e40:	01800284 	movi	r6,10
 4002e44:	000f883a 	mov	r7,zero
 4002e48:	400bea00 	call	400bea0 <__udivdi3>
 4002e4c:	1027883a 	mov	r19,r2
 4002e50:	10c4b03a 	or	r2,r2,r3
 4002e54:	1823883a 	mov	r17,r3
 4002e58:	103fef1e 	bne	r2,zero,4002e18 <__alt_data_end+0xfc002e18>
 4002e5c:	d8c02817 	ldw	r3,160(sp)
 4002e60:	dc402a17 	ldw	r17,168(sp)
 4002e64:	b011883a 	mov	r8,r22
 4002e68:	1c07c83a 	sub	r3,r3,r16
 4002e6c:	d8c02e15 	stw	r3,184(sp)
 4002e70:	00005906 	br	4002fd8 <___vfprintf_internal_r+0x71c>
 4002e74:	18c03fcc 	andi	r3,r3,255
 4002e78:	1806fa1e 	bne	r3,zero,4004a64 <___vfprintf_internal_r+0x21a8>
 4002e7c:	9080020c 	andi	r2,r18,8
 4002e80:	10048a26 	beq	r2,zero,40040ac <___vfprintf_internal_r+0x17f0>
 4002e84:	d8c02d17 	ldw	r3,180(sp)
 4002e88:	d9002d17 	ldw	r4,180(sp)
 4002e8c:	d9402d17 	ldw	r5,180(sp)
 4002e90:	18c00017 	ldw	r3,0(r3)
 4002e94:	21000117 	ldw	r4,4(r4)
 4002e98:	29400204 	addi	r5,r5,8
 4002e9c:	d8c03615 	stw	r3,216(sp)
 4002ea0:	d9003815 	stw	r4,224(sp)
 4002ea4:	d9402d15 	stw	r5,180(sp)
 4002ea8:	d9003617 	ldw	r4,216(sp)
 4002eac:	d9403817 	ldw	r5,224(sp)
 4002eb0:	da003d15 	stw	r8,244(sp)
 4002eb4:	04000044 	movi	r16,1
 4002eb8:	4009c440 	call	4009c44 <__fpclassifyd>
 4002ebc:	da003d17 	ldw	r8,244(sp)
 4002ec0:	14041f1e 	bne	r2,r16,4003f40 <___vfprintf_internal_r+0x1684>
 4002ec4:	d9003617 	ldw	r4,216(sp)
 4002ec8:	d9403817 	ldw	r5,224(sp)
 4002ecc:	000d883a 	mov	r6,zero
 4002ed0:	000f883a 	mov	r7,zero
 4002ed4:	400d3600 	call	400d360 <__ledf2>
 4002ed8:	da003d17 	ldw	r8,244(sp)
 4002edc:	1005be16 	blt	r2,zero,40045d8 <___vfprintf_internal_r+0x1d1c>
 4002ee0:	df002783 	ldbu	fp,158(sp)
 4002ee4:	008011c4 	movi	r2,71
 4002ee8:	1445330e 	bge	r2,r17,40043b8 <___vfprintf_internal_r+0x1afc>
 4002eec:	04010074 	movhi	r16,1025
 4002ef0:	84024e04 	addi	r16,r16,2360
 4002ef4:	00c000c4 	movi	r3,3
 4002ef8:	00bfdfc4 	movi	r2,-129
 4002efc:	d8c02a15 	stw	r3,168(sp)
 4002f00:	90a4703a 	and	r18,r18,r2
 4002f04:	d8c02e15 	stw	r3,184(sp)
 4002f08:	d8002915 	stw	zero,164(sp)
 4002f0c:	d8003215 	stw	zero,200(sp)
 4002f10:	00003706 	br	4002ff0 <___vfprintf_internal_r+0x734>
 4002f14:	94800214 	ori	r18,r18,8
 4002f18:	ac400007 	ldb	r17,0(r21)
 4002f1c:	003ec806 	br	4002a40 <__alt_data_end+0xfc002a40>
 4002f20:	18c03fcc 	andi	r3,r3,255
 4002f24:	1806db1e 	bne	r3,zero,4004a94 <___vfprintf_internal_r+0x21d8>
 4002f28:	94800414 	ori	r18,r18,16
 4002f2c:	9080080c 	andi	r2,r18,32
 4002f30:	1002d826 	beq	r2,zero,4003a94 <___vfprintf_internal_r+0x11d8>
 4002f34:	d9402d17 	ldw	r5,180(sp)
 4002f38:	d8c02917 	ldw	r3,164(sp)
 4002f3c:	d8002785 	stb	zero,158(sp)
 4002f40:	28800204 	addi	r2,r5,8
 4002f44:	2cc00017 	ldw	r19,0(r5)
 4002f48:	2d800117 	ldw	r22,4(r5)
 4002f4c:	18048f16 	blt	r3,zero,400418c <___vfprintf_internal_r+0x18d0>
 4002f50:	013fdfc4 	movi	r4,-129
 4002f54:	9d86b03a 	or	r3,r19,r22
 4002f58:	d8802d15 	stw	r2,180(sp)
 4002f5c:	9124703a 	and	r18,r18,r4
 4002f60:	1802d91e 	bne	r3,zero,4003ac8 <___vfprintf_internal_r+0x120c>
 4002f64:	d8c02917 	ldw	r3,164(sp)
 4002f68:	0039883a 	mov	fp,zero
 4002f6c:	1805c326 	beq	r3,zero,400467c <___vfprintf_internal_r+0x1dc0>
 4002f70:	0027883a 	mov	r19,zero
 4002f74:	002d883a 	mov	r22,zero
 4002f78:	dc001e04 	addi	r16,sp,120
 4002f7c:	9806d0fa 	srli	r3,r19,3
 4002f80:	b008977a 	slli	r4,r22,29
 4002f84:	b02cd0fa 	srli	r22,r22,3
 4002f88:	9cc001cc 	andi	r19,r19,7
 4002f8c:	98800c04 	addi	r2,r19,48
 4002f90:	843fffc4 	addi	r16,r16,-1
 4002f94:	20e6b03a 	or	r19,r4,r3
 4002f98:	80800005 	stb	r2,0(r16)
 4002f9c:	9d86b03a 	or	r3,r19,r22
 4002fa0:	183ff61e 	bne	r3,zero,4002f7c <__alt_data_end+0xfc002f7c>
 4002fa4:	90c0004c 	andi	r3,r18,1
 4002fa8:	18013b26 	beq	r3,zero,4003498 <___vfprintf_internal_r+0xbdc>
 4002fac:	10803fcc 	andi	r2,r2,255
 4002fb0:	1080201c 	xori	r2,r2,128
 4002fb4:	10bfe004 	addi	r2,r2,-128
 4002fb8:	00c00c04 	movi	r3,48
 4002fbc:	10c13626 	beq	r2,r3,4003498 <___vfprintf_internal_r+0xbdc>
 4002fc0:	80ffffc5 	stb	r3,-1(r16)
 4002fc4:	d8c02817 	ldw	r3,160(sp)
 4002fc8:	80bfffc4 	addi	r2,r16,-1
 4002fcc:	1021883a 	mov	r16,r2
 4002fd0:	1887c83a 	sub	r3,r3,r2
 4002fd4:	d8c02e15 	stw	r3,184(sp)
 4002fd8:	d8802e17 	ldw	r2,184(sp)
 4002fdc:	d9002917 	ldw	r4,164(sp)
 4002fe0:	1100010e 	bge	r2,r4,4002fe8 <___vfprintf_internal_r+0x72c>
 4002fe4:	2005883a 	mov	r2,r4
 4002fe8:	d8802a15 	stw	r2,168(sp)
 4002fec:	d8003215 	stw	zero,200(sp)
 4002ff0:	e7003fcc 	andi	fp,fp,255
 4002ff4:	e700201c 	xori	fp,fp,128
 4002ff8:	e73fe004 	addi	fp,fp,-128
 4002ffc:	e0000326 	beq	fp,zero,400300c <___vfprintf_internal_r+0x750>
 4003000:	d8c02a17 	ldw	r3,168(sp)
 4003004:	18c00044 	addi	r3,r3,1
 4003008:	d8c02a15 	stw	r3,168(sp)
 400300c:	90c0008c 	andi	r3,r18,2
 4003010:	d8c02b15 	stw	r3,172(sp)
 4003014:	18000326 	beq	r3,zero,4003024 <___vfprintf_internal_r+0x768>
 4003018:	d8c02a17 	ldw	r3,168(sp)
 400301c:	18c00084 	addi	r3,r3,2
 4003020:	d8c02a15 	stw	r3,168(sp)
 4003024:	90c0210c 	andi	r3,r18,132
 4003028:	d8c03015 	stw	r3,192(sp)
 400302c:	1801a31e 	bne	r3,zero,40036bc <___vfprintf_internal_r+0xe00>
 4003030:	d9003117 	ldw	r4,196(sp)
 4003034:	d8c02a17 	ldw	r3,168(sp)
 4003038:	20e7c83a 	sub	r19,r4,r3
 400303c:	04c19f0e 	bge	zero,r19,40036bc <___vfprintf_internal_r+0xe00>
 4003040:	02400404 	movi	r9,16
 4003044:	d8c02017 	ldw	r3,128(sp)
 4003048:	d8801f17 	ldw	r2,124(sp)
 400304c:	4cc50d0e 	bge	r9,r19,4004484 <___vfprintf_internal_r+0x1bc8>
 4003050:	01410074 	movhi	r5,1025
 4003054:	29426184 	addi	r5,r5,2438
 4003058:	dc403b15 	stw	r17,236(sp)
 400305c:	d9403515 	stw	r5,212(sp)
 4003060:	9823883a 	mov	r17,r19
 4003064:	482d883a 	mov	r22,r9
 4003068:	9027883a 	mov	r19,r18
 400306c:	070001c4 	movi	fp,7
 4003070:	8025883a 	mov	r18,r16
 4003074:	dc002c17 	ldw	r16,176(sp)
 4003078:	00000306 	br	4003088 <___vfprintf_internal_r+0x7cc>
 400307c:	8c7ffc04 	addi	r17,r17,-16
 4003080:	42000204 	addi	r8,r8,8
 4003084:	b440130e 	bge	r22,r17,40030d4 <___vfprintf_internal_r+0x818>
 4003088:	01010074 	movhi	r4,1025
 400308c:	18c00404 	addi	r3,r3,16
 4003090:	10800044 	addi	r2,r2,1
 4003094:	21026184 	addi	r4,r4,2438
 4003098:	41000015 	stw	r4,0(r8)
 400309c:	45800115 	stw	r22,4(r8)
 40030a0:	d8c02015 	stw	r3,128(sp)
 40030a4:	d8801f15 	stw	r2,124(sp)
 40030a8:	e0bff40e 	bge	fp,r2,400307c <__alt_data_end+0xfc00307c>
 40030ac:	d9801e04 	addi	r6,sp,120
 40030b0:	b80b883a 	mov	r5,r23
 40030b4:	8009883a 	mov	r4,r16
 40030b8:	400a0200 	call	400a020 <__sprint_r>
 40030bc:	103f011e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 40030c0:	8c7ffc04 	addi	r17,r17,-16
 40030c4:	d8c02017 	ldw	r3,128(sp)
 40030c8:	d8801f17 	ldw	r2,124(sp)
 40030cc:	da000404 	addi	r8,sp,16
 40030d0:	b47fed16 	blt	r22,r17,4003088 <__alt_data_end+0xfc003088>
 40030d4:	9021883a 	mov	r16,r18
 40030d8:	9825883a 	mov	r18,r19
 40030dc:	8827883a 	mov	r19,r17
 40030e0:	dc403b17 	ldw	r17,236(sp)
 40030e4:	d9403517 	ldw	r5,212(sp)
 40030e8:	98c7883a 	add	r3,r19,r3
 40030ec:	10800044 	addi	r2,r2,1
 40030f0:	41400015 	stw	r5,0(r8)
 40030f4:	44c00115 	stw	r19,4(r8)
 40030f8:	d8c02015 	stw	r3,128(sp)
 40030fc:	d8801f15 	stw	r2,124(sp)
 4003100:	010001c4 	movi	r4,7
 4003104:	2082a316 	blt	r4,r2,4003b94 <___vfprintf_internal_r+0x12d8>
 4003108:	df002787 	ldb	fp,158(sp)
 400310c:	42000204 	addi	r8,r8,8
 4003110:	e0000c26 	beq	fp,zero,4003144 <___vfprintf_internal_r+0x888>
 4003114:	d8801f17 	ldw	r2,124(sp)
 4003118:	d9002784 	addi	r4,sp,158
 400311c:	18c00044 	addi	r3,r3,1
 4003120:	10800044 	addi	r2,r2,1
 4003124:	41000015 	stw	r4,0(r8)
 4003128:	01000044 	movi	r4,1
 400312c:	41000115 	stw	r4,4(r8)
 4003130:	d8c02015 	stw	r3,128(sp)
 4003134:	d8801f15 	stw	r2,124(sp)
 4003138:	010001c4 	movi	r4,7
 400313c:	20823c16 	blt	r4,r2,4003a30 <___vfprintf_internal_r+0x1174>
 4003140:	42000204 	addi	r8,r8,8
 4003144:	d8802b17 	ldw	r2,172(sp)
 4003148:	10000c26 	beq	r2,zero,400317c <___vfprintf_internal_r+0x8c0>
 400314c:	d8801f17 	ldw	r2,124(sp)
 4003150:	d9002704 	addi	r4,sp,156
 4003154:	18c00084 	addi	r3,r3,2
 4003158:	10800044 	addi	r2,r2,1
 400315c:	41000015 	stw	r4,0(r8)
 4003160:	01000084 	movi	r4,2
 4003164:	41000115 	stw	r4,4(r8)
 4003168:	d8c02015 	stw	r3,128(sp)
 400316c:	d8801f15 	stw	r2,124(sp)
 4003170:	010001c4 	movi	r4,7
 4003174:	20823616 	blt	r4,r2,4003a50 <___vfprintf_internal_r+0x1194>
 4003178:	42000204 	addi	r8,r8,8
 400317c:	d9003017 	ldw	r4,192(sp)
 4003180:	00802004 	movi	r2,128
 4003184:	20819926 	beq	r4,r2,40037ec <___vfprintf_internal_r+0xf30>
 4003188:	d9402917 	ldw	r5,164(sp)
 400318c:	d8802e17 	ldw	r2,184(sp)
 4003190:	28adc83a 	sub	r22,r5,r2
 4003194:	0580310e 	bge	zero,r22,400325c <___vfprintf_internal_r+0x9a0>
 4003198:	07000404 	movi	fp,16
 400319c:	d8801f17 	ldw	r2,124(sp)
 40031a0:	e584140e 	bge	fp,r22,40041f4 <___vfprintf_internal_r+0x1938>
 40031a4:	01410074 	movhi	r5,1025
 40031a8:	29425d84 	addi	r5,r5,2422
 40031ac:	dc402915 	stw	r17,164(sp)
 40031b0:	d9402b15 	stw	r5,172(sp)
 40031b4:	b023883a 	mov	r17,r22
 40031b8:	04c001c4 	movi	r19,7
 40031bc:	a82d883a 	mov	r22,r21
 40031c0:	902b883a 	mov	r21,r18
 40031c4:	8025883a 	mov	r18,r16
 40031c8:	dc002c17 	ldw	r16,176(sp)
 40031cc:	00000306 	br	40031dc <___vfprintf_internal_r+0x920>
 40031d0:	8c7ffc04 	addi	r17,r17,-16
 40031d4:	42000204 	addi	r8,r8,8
 40031d8:	e440110e 	bge	fp,r17,4003220 <___vfprintf_internal_r+0x964>
 40031dc:	18c00404 	addi	r3,r3,16
 40031e0:	10800044 	addi	r2,r2,1
 40031e4:	45000015 	stw	r20,0(r8)
 40031e8:	47000115 	stw	fp,4(r8)
 40031ec:	d8c02015 	stw	r3,128(sp)
 40031f0:	d8801f15 	stw	r2,124(sp)
 40031f4:	98bff60e 	bge	r19,r2,40031d0 <__alt_data_end+0xfc0031d0>
 40031f8:	d9801e04 	addi	r6,sp,120
 40031fc:	b80b883a 	mov	r5,r23
 4003200:	8009883a 	mov	r4,r16
 4003204:	400a0200 	call	400a020 <__sprint_r>
 4003208:	103eae1e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 400320c:	8c7ffc04 	addi	r17,r17,-16
 4003210:	d8c02017 	ldw	r3,128(sp)
 4003214:	d8801f17 	ldw	r2,124(sp)
 4003218:	da000404 	addi	r8,sp,16
 400321c:	e47fef16 	blt	fp,r17,40031dc <__alt_data_end+0xfc0031dc>
 4003220:	9021883a 	mov	r16,r18
 4003224:	a825883a 	mov	r18,r21
 4003228:	b02b883a 	mov	r21,r22
 400322c:	882d883a 	mov	r22,r17
 4003230:	dc402917 	ldw	r17,164(sp)
 4003234:	d9002b17 	ldw	r4,172(sp)
 4003238:	1d87883a 	add	r3,r3,r22
 400323c:	10800044 	addi	r2,r2,1
 4003240:	41000015 	stw	r4,0(r8)
 4003244:	45800115 	stw	r22,4(r8)
 4003248:	d8c02015 	stw	r3,128(sp)
 400324c:	d8801f15 	stw	r2,124(sp)
 4003250:	010001c4 	movi	r4,7
 4003254:	2081ee16 	blt	r4,r2,4003a10 <___vfprintf_internal_r+0x1154>
 4003258:	42000204 	addi	r8,r8,8
 400325c:	9080400c 	andi	r2,r18,256
 4003260:	1001181e 	bne	r2,zero,40036c4 <___vfprintf_internal_r+0xe08>
 4003264:	d9402e17 	ldw	r5,184(sp)
 4003268:	d8801f17 	ldw	r2,124(sp)
 400326c:	44000015 	stw	r16,0(r8)
 4003270:	1947883a 	add	r3,r3,r5
 4003274:	10800044 	addi	r2,r2,1
 4003278:	41400115 	stw	r5,4(r8)
 400327c:	d8c02015 	stw	r3,128(sp)
 4003280:	d8801f15 	stw	r2,124(sp)
 4003284:	010001c4 	movi	r4,7
 4003288:	2081d316 	blt	r4,r2,40039d8 <___vfprintf_internal_r+0x111c>
 400328c:	42000204 	addi	r8,r8,8
 4003290:	9480010c 	andi	r18,r18,4
 4003294:	90003226 	beq	r18,zero,4003360 <___vfprintf_internal_r+0xaa4>
 4003298:	d9403117 	ldw	r5,196(sp)
 400329c:	d8802a17 	ldw	r2,168(sp)
 40032a0:	28a1c83a 	sub	r16,r5,r2
 40032a4:	04002e0e 	bge	zero,r16,4003360 <___vfprintf_internal_r+0xaa4>
 40032a8:	04400404 	movi	r17,16
 40032ac:	d8801f17 	ldw	r2,124(sp)
 40032b0:	8c04a20e 	bge	r17,r16,400453c <___vfprintf_internal_r+0x1c80>
 40032b4:	01410074 	movhi	r5,1025
 40032b8:	29426184 	addi	r5,r5,2438
 40032bc:	d9403515 	stw	r5,212(sp)
 40032c0:	048001c4 	movi	r18,7
 40032c4:	dcc02c17 	ldw	r19,176(sp)
 40032c8:	00000306 	br	40032d8 <___vfprintf_internal_r+0xa1c>
 40032cc:	843ffc04 	addi	r16,r16,-16
 40032d0:	42000204 	addi	r8,r8,8
 40032d4:	8c00130e 	bge	r17,r16,4003324 <___vfprintf_internal_r+0xa68>
 40032d8:	01010074 	movhi	r4,1025
 40032dc:	18c00404 	addi	r3,r3,16
 40032e0:	10800044 	addi	r2,r2,1
 40032e4:	21026184 	addi	r4,r4,2438
 40032e8:	41000015 	stw	r4,0(r8)
 40032ec:	44400115 	stw	r17,4(r8)
 40032f0:	d8c02015 	stw	r3,128(sp)
 40032f4:	d8801f15 	stw	r2,124(sp)
 40032f8:	90bff40e 	bge	r18,r2,40032cc <__alt_data_end+0xfc0032cc>
 40032fc:	d9801e04 	addi	r6,sp,120
 4003300:	b80b883a 	mov	r5,r23
 4003304:	9809883a 	mov	r4,r19
 4003308:	400a0200 	call	400a020 <__sprint_r>
 400330c:	103e6d1e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 4003310:	843ffc04 	addi	r16,r16,-16
 4003314:	d8c02017 	ldw	r3,128(sp)
 4003318:	d8801f17 	ldw	r2,124(sp)
 400331c:	da000404 	addi	r8,sp,16
 4003320:	8c3fed16 	blt	r17,r16,40032d8 <__alt_data_end+0xfc0032d8>
 4003324:	d9403517 	ldw	r5,212(sp)
 4003328:	1c07883a 	add	r3,r3,r16
 400332c:	10800044 	addi	r2,r2,1
 4003330:	41400015 	stw	r5,0(r8)
 4003334:	44000115 	stw	r16,4(r8)
 4003338:	d8c02015 	stw	r3,128(sp)
 400333c:	d8801f15 	stw	r2,124(sp)
 4003340:	010001c4 	movi	r4,7
 4003344:	2080060e 	bge	r4,r2,4003360 <___vfprintf_internal_r+0xaa4>
 4003348:	d9002c17 	ldw	r4,176(sp)
 400334c:	d9801e04 	addi	r6,sp,120
 4003350:	b80b883a 	mov	r5,r23
 4003354:	400a0200 	call	400a020 <__sprint_r>
 4003358:	103e5a1e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 400335c:	d8c02017 	ldw	r3,128(sp)
 4003360:	d8803117 	ldw	r2,196(sp)
 4003364:	d9002a17 	ldw	r4,168(sp)
 4003368:	1100010e 	bge	r2,r4,4003370 <___vfprintf_internal_r+0xab4>
 400336c:	2005883a 	mov	r2,r4
 4003370:	d9402f17 	ldw	r5,188(sp)
 4003374:	288b883a 	add	r5,r5,r2
 4003378:	d9402f15 	stw	r5,188(sp)
 400337c:	18019e1e 	bne	r3,zero,40039f8 <___vfprintf_internal_r+0x113c>
 4003380:	a8800007 	ldb	r2,0(r21)
 4003384:	d8001f15 	stw	zero,124(sp)
 4003388:	da000404 	addi	r8,sp,16
 400338c:	103d851e 	bne	r2,zero,40029a4 <__alt_data_end+0xfc0029a4>
 4003390:	a821883a 	mov	r16,r21
 4003394:	003d9b06 	br	4002a04 <__alt_data_end+0xfc002a04>
 4003398:	18c03fcc 	andi	r3,r3,255
 400339c:	1805c11e 	bne	r3,zero,4004aa4 <___vfprintf_internal_r+0x21e8>
 40033a0:	94800414 	ori	r18,r18,16
 40033a4:	9080080c 	andi	r2,r18,32
 40033a8:	10020c26 	beq	r2,zero,4003bdc <___vfprintf_internal_r+0x1320>
 40033ac:	d8802d17 	ldw	r2,180(sp)
 40033b0:	d9002917 	ldw	r4,164(sp)
 40033b4:	d8002785 	stb	zero,158(sp)
 40033b8:	10c00204 	addi	r3,r2,8
 40033bc:	14c00017 	ldw	r19,0(r2)
 40033c0:	15800117 	ldw	r22,4(r2)
 40033c4:	20040f16 	blt	r4,zero,4004404 <___vfprintf_internal_r+0x1b48>
 40033c8:	013fdfc4 	movi	r4,-129
 40033cc:	9d84b03a 	or	r2,r19,r22
 40033d0:	d8c02d15 	stw	r3,180(sp)
 40033d4:	9124703a 	and	r18,r18,r4
 40033d8:	0039883a 	mov	fp,zero
 40033dc:	103e891e 	bne	r2,zero,4002e04 <__alt_data_end+0xfc002e04>
 40033e0:	d9002917 	ldw	r4,164(sp)
 40033e4:	2002c11e 	bne	r4,zero,4003eec <___vfprintf_internal_r+0x1630>
 40033e8:	d8002915 	stw	zero,164(sp)
 40033ec:	d8002e15 	stw	zero,184(sp)
 40033f0:	dc001e04 	addi	r16,sp,120
 40033f4:	003ef806 	br	4002fd8 <__alt_data_end+0xfc002fd8>
 40033f8:	18c03fcc 	andi	r3,r3,255
 40033fc:	18059d1e 	bne	r3,zero,4004a74 <___vfprintf_internal_r+0x21b8>
 4003400:	01410074 	movhi	r5,1025
 4003404:	29425104 	addi	r5,r5,2372
 4003408:	d9403915 	stw	r5,228(sp)
 400340c:	9080080c 	andi	r2,r18,32
 4003410:	10005226 	beq	r2,zero,400355c <___vfprintf_internal_r+0xca0>
 4003414:	d8802d17 	ldw	r2,180(sp)
 4003418:	14c00017 	ldw	r19,0(r2)
 400341c:	15800117 	ldw	r22,4(r2)
 4003420:	10800204 	addi	r2,r2,8
 4003424:	d8802d15 	stw	r2,180(sp)
 4003428:	9080004c 	andi	r2,r18,1
 400342c:	10019026 	beq	r2,zero,4003a70 <___vfprintf_internal_r+0x11b4>
 4003430:	9d84b03a 	or	r2,r19,r22
 4003434:	10036926 	beq	r2,zero,40041dc <___vfprintf_internal_r+0x1920>
 4003438:	d8c02917 	ldw	r3,164(sp)
 400343c:	00800c04 	movi	r2,48
 4003440:	d8802705 	stb	r2,156(sp)
 4003444:	dc402745 	stb	r17,157(sp)
 4003448:	d8002785 	stb	zero,158(sp)
 400344c:	90800094 	ori	r2,r18,2
 4003450:	18045d16 	blt	r3,zero,40045c8 <___vfprintf_internal_r+0x1d0c>
 4003454:	00bfdfc4 	movi	r2,-129
 4003458:	90a4703a 	and	r18,r18,r2
 400345c:	94800094 	ori	r18,r18,2
 4003460:	0039883a 	mov	fp,zero
 4003464:	d9003917 	ldw	r4,228(sp)
 4003468:	dc001e04 	addi	r16,sp,120
 400346c:	988003cc 	andi	r2,r19,15
 4003470:	b006973a 	slli	r3,r22,28
 4003474:	2085883a 	add	r2,r4,r2
 4003478:	9826d13a 	srli	r19,r19,4
 400347c:	10800003 	ldbu	r2,0(r2)
 4003480:	b02cd13a 	srli	r22,r22,4
 4003484:	843fffc4 	addi	r16,r16,-1
 4003488:	1ce6b03a 	or	r19,r3,r19
 400348c:	80800005 	stb	r2,0(r16)
 4003490:	9d84b03a 	or	r2,r19,r22
 4003494:	103ff51e 	bne	r2,zero,400346c <__alt_data_end+0xfc00346c>
 4003498:	d8c02817 	ldw	r3,160(sp)
 400349c:	1c07c83a 	sub	r3,r3,r16
 40034a0:	d8c02e15 	stw	r3,184(sp)
 40034a4:	003ecc06 	br	4002fd8 <__alt_data_end+0xfc002fd8>
 40034a8:	18c03fcc 	andi	r3,r3,255
 40034ac:	183e9f26 	beq	r3,zero,4002f2c <__alt_data_end+0xfc002f2c>
 40034b0:	d9c02785 	stb	r7,158(sp)
 40034b4:	003e9d06 	br	4002f2c <__alt_data_end+0xfc002f2c>
 40034b8:	00c00044 	movi	r3,1
 40034bc:	01c00ac4 	movi	r7,43
 40034c0:	ac400007 	ldb	r17,0(r21)
 40034c4:	003d5e06 	br	4002a40 <__alt_data_end+0xfc002a40>
 40034c8:	94800814 	ori	r18,r18,32
 40034cc:	ac400007 	ldb	r17,0(r21)
 40034d0:	003d5b06 	br	4002a40 <__alt_data_end+0xfc002a40>
 40034d4:	d8c02d17 	ldw	r3,180(sp)
 40034d8:	d8002785 	stb	zero,158(sp)
 40034dc:	1c000017 	ldw	r16,0(r3)
 40034e0:	1cc00104 	addi	r19,r3,4
 40034e4:	80041926 	beq	r16,zero,400454c <___vfprintf_internal_r+0x1c90>
 40034e8:	d9002917 	ldw	r4,164(sp)
 40034ec:	2003d016 	blt	r4,zero,4004430 <___vfprintf_internal_r+0x1b74>
 40034f0:	200d883a 	mov	r6,r4
 40034f4:	000b883a 	mov	r5,zero
 40034f8:	8009883a 	mov	r4,r16
 40034fc:	da003d15 	stw	r8,244(sp)
 4003500:	40080cc0 	call	40080cc <memchr>
 4003504:	da003d17 	ldw	r8,244(sp)
 4003508:	10045426 	beq	r2,zero,400465c <___vfprintf_internal_r+0x1da0>
 400350c:	1405c83a 	sub	r2,r2,r16
 4003510:	d8802e15 	stw	r2,184(sp)
 4003514:	1003cc16 	blt	r2,zero,4004448 <___vfprintf_internal_r+0x1b8c>
 4003518:	df002783 	ldbu	fp,158(sp)
 400351c:	d8802a15 	stw	r2,168(sp)
 4003520:	dcc02d15 	stw	r19,180(sp)
 4003524:	d8002915 	stw	zero,164(sp)
 4003528:	d8003215 	stw	zero,200(sp)
 400352c:	003eb006 	br	4002ff0 <__alt_data_end+0xfc002ff0>
 4003530:	18c03fcc 	andi	r3,r3,255
 4003534:	183f9b26 	beq	r3,zero,40033a4 <__alt_data_end+0xfc0033a4>
 4003538:	d9c02785 	stb	r7,158(sp)
 400353c:	003f9906 	br	40033a4 <__alt_data_end+0xfc0033a4>
 4003540:	18c03fcc 	andi	r3,r3,255
 4003544:	1805551e 	bne	r3,zero,4004a9c <___vfprintf_internal_r+0x21e0>
 4003548:	01410074 	movhi	r5,1025
 400354c:	29425604 	addi	r5,r5,2392
 4003550:	d9403915 	stw	r5,228(sp)
 4003554:	9080080c 	andi	r2,r18,32
 4003558:	103fae1e 	bne	r2,zero,4003414 <__alt_data_end+0xfc003414>
 400355c:	9080040c 	andi	r2,r18,16
 4003560:	1002de26 	beq	r2,zero,40040dc <___vfprintf_internal_r+0x1820>
 4003564:	d8c02d17 	ldw	r3,180(sp)
 4003568:	002d883a 	mov	r22,zero
 400356c:	1cc00017 	ldw	r19,0(r3)
 4003570:	18c00104 	addi	r3,r3,4
 4003574:	d8c02d15 	stw	r3,180(sp)
 4003578:	003fab06 	br	4003428 <__alt_data_end+0xfc003428>
 400357c:	38803fcc 	andi	r2,r7,255
 4003580:	1080201c 	xori	r2,r2,128
 4003584:	10bfe004 	addi	r2,r2,-128
 4003588:	1002d21e 	bne	r2,zero,40040d4 <___vfprintf_internal_r+0x1818>
 400358c:	00c00044 	movi	r3,1
 4003590:	01c00804 	movi	r7,32
 4003594:	ac400007 	ldb	r17,0(r21)
 4003598:	003d2906 	br	4002a40 <__alt_data_end+0xfc002a40>
 400359c:	94800054 	ori	r18,r18,1
 40035a0:	ac400007 	ldb	r17,0(r21)
 40035a4:	003d2606 	br	4002a40 <__alt_data_end+0xfc002a40>
 40035a8:	18c03fcc 	andi	r3,r3,255
 40035ac:	183e0526 	beq	r3,zero,4002dc4 <__alt_data_end+0xfc002dc4>
 40035b0:	d9c02785 	stb	r7,158(sp)
 40035b4:	003e0306 	br	4002dc4 <__alt_data_end+0xfc002dc4>
 40035b8:	94801014 	ori	r18,r18,64
 40035bc:	ac400007 	ldb	r17,0(r21)
 40035c0:	003d1f06 	br	4002a40 <__alt_data_end+0xfc002a40>
 40035c4:	ac400007 	ldb	r17,0(r21)
 40035c8:	8a438726 	beq	r17,r9,40043e8 <___vfprintf_internal_r+0x1b2c>
 40035cc:	94800414 	ori	r18,r18,16
 40035d0:	003d1b06 	br	4002a40 <__alt_data_end+0xfc002a40>
 40035d4:	18c03fcc 	andi	r3,r3,255
 40035d8:	1805341e 	bne	r3,zero,4004aac <___vfprintf_internal_r+0x21f0>
 40035dc:	9080080c 	andi	r2,r18,32
 40035e0:	1002cd26 	beq	r2,zero,4004118 <___vfprintf_internal_r+0x185c>
 40035e4:	d9402d17 	ldw	r5,180(sp)
 40035e8:	d9002f17 	ldw	r4,188(sp)
 40035ec:	28800017 	ldw	r2,0(r5)
 40035f0:	2007d7fa 	srai	r3,r4,31
 40035f4:	29400104 	addi	r5,r5,4
 40035f8:	d9402d15 	stw	r5,180(sp)
 40035fc:	11000015 	stw	r4,0(r2)
 4003600:	10c00115 	stw	r3,4(r2)
 4003604:	003ce506 	br	400299c <__alt_data_end+0xfc00299c>
 4003608:	d8c02d17 	ldw	r3,180(sp)
 400360c:	d9002d17 	ldw	r4,180(sp)
 4003610:	d8002785 	stb	zero,158(sp)
 4003614:	18800017 	ldw	r2,0(r3)
 4003618:	21000104 	addi	r4,r4,4
 400361c:	00c00044 	movi	r3,1
 4003620:	d8c02a15 	stw	r3,168(sp)
 4003624:	d8801405 	stb	r2,80(sp)
 4003628:	d9002d15 	stw	r4,180(sp)
 400362c:	d8c02e15 	stw	r3,184(sp)
 4003630:	d8002915 	stw	zero,164(sp)
 4003634:	d8003215 	stw	zero,200(sp)
 4003638:	dc001404 	addi	r16,sp,80
 400363c:	0039883a 	mov	fp,zero
 4003640:	003e7206 	br	400300c <__alt_data_end+0xfc00300c>
 4003644:	01010074 	movhi	r4,1025
 4003648:	21025604 	addi	r4,r4,2392
 400364c:	0039883a 	mov	fp,zero
 4003650:	d9003915 	stw	r4,228(sp)
 4003654:	04401e04 	movi	r17,120
 4003658:	003f8206 	br	4003464 <__alt_data_end+0xfc003464>
 400365c:	18c03fcc 	andi	r3,r3,255
 4003660:	1805061e 	bne	r3,zero,4004a7c <___vfprintf_internal_r+0x21c0>
 4003664:	883d9126 	beq	r17,zero,4002cac <__alt_data_end+0xfc002cac>
 4003668:	00c00044 	movi	r3,1
 400366c:	d8c02a15 	stw	r3,168(sp)
 4003670:	dc401405 	stb	r17,80(sp)
 4003674:	d8002785 	stb	zero,158(sp)
 4003678:	003fec06 	br	400362c <__alt_data_end+0xfc00362c>
 400367c:	01410074 	movhi	r5,1025
 4003680:	29425604 	addi	r5,r5,2392
 4003684:	d9403915 	stw	r5,228(sp)
 4003688:	d8c02d15 	stw	r3,180(sp)
 400368c:	1025883a 	mov	r18,r2
 4003690:	04401e04 	movi	r17,120
 4003694:	9d84b03a 	or	r2,r19,r22
 4003698:	1000fc1e 	bne	r2,zero,4003a8c <___vfprintf_internal_r+0x11d0>
 400369c:	0039883a 	mov	fp,zero
 40036a0:	00800084 	movi	r2,2
 40036a4:	10803fcc 	andi	r2,r2,255
 40036a8:	00c00044 	movi	r3,1
 40036ac:	10c20f26 	beq	r2,r3,4003eec <___vfprintf_internal_r+0x1630>
 40036b0:	00c00084 	movi	r3,2
 40036b4:	10fd6326 	beq	r2,r3,4002c44 <__alt_data_end+0xfc002c44>
 40036b8:	003e2d06 	br	4002f70 <__alt_data_end+0xfc002f70>
 40036bc:	d8c02017 	ldw	r3,128(sp)
 40036c0:	003e9306 	br	4003110 <__alt_data_end+0xfc003110>
 40036c4:	00801944 	movi	r2,101
 40036c8:	14407e0e 	bge	r2,r17,40038c4 <___vfprintf_internal_r+0x1008>
 40036cc:	d9003617 	ldw	r4,216(sp)
 40036d0:	d9403817 	ldw	r5,224(sp)
 40036d4:	000d883a 	mov	r6,zero
 40036d8:	000f883a 	mov	r7,zero
 40036dc:	d8c03c15 	stw	r3,240(sp)
 40036e0:	da003d15 	stw	r8,244(sp)
 40036e4:	400d1fc0 	call	400d1fc <__eqdf2>
 40036e8:	d8c03c17 	ldw	r3,240(sp)
 40036ec:	da003d17 	ldw	r8,244(sp)
 40036f0:	1000f71e 	bne	r2,zero,4003ad0 <___vfprintf_internal_r+0x1214>
 40036f4:	d8801f17 	ldw	r2,124(sp)
 40036f8:	01010074 	movhi	r4,1025
 40036fc:	21025d04 	addi	r4,r4,2420
 4003700:	18c00044 	addi	r3,r3,1
 4003704:	10800044 	addi	r2,r2,1
 4003708:	41000015 	stw	r4,0(r8)
 400370c:	01000044 	movi	r4,1
 4003710:	41000115 	stw	r4,4(r8)
 4003714:	d8c02015 	stw	r3,128(sp)
 4003718:	d8801f15 	stw	r2,124(sp)
 400371c:	010001c4 	movi	r4,7
 4003720:	2082b816 	blt	r4,r2,4004204 <___vfprintf_internal_r+0x1948>
 4003724:	42000204 	addi	r8,r8,8
 4003728:	d8802617 	ldw	r2,152(sp)
 400372c:	d9403317 	ldw	r5,204(sp)
 4003730:	11400216 	blt	r2,r5,400373c <___vfprintf_internal_r+0xe80>
 4003734:	9080004c 	andi	r2,r18,1
 4003738:	103ed526 	beq	r2,zero,4003290 <__alt_data_end+0xfc003290>
 400373c:	d8803717 	ldw	r2,220(sp)
 4003740:	d9003417 	ldw	r4,208(sp)
 4003744:	d9403717 	ldw	r5,220(sp)
 4003748:	1887883a 	add	r3,r3,r2
 400374c:	d8801f17 	ldw	r2,124(sp)
 4003750:	41000015 	stw	r4,0(r8)
 4003754:	41400115 	stw	r5,4(r8)
 4003758:	10800044 	addi	r2,r2,1
 400375c:	d8c02015 	stw	r3,128(sp)
 4003760:	d8801f15 	stw	r2,124(sp)
 4003764:	010001c4 	movi	r4,7
 4003768:	20832916 	blt	r4,r2,4004410 <___vfprintf_internal_r+0x1b54>
 400376c:	42000204 	addi	r8,r8,8
 4003770:	d8803317 	ldw	r2,204(sp)
 4003774:	143fffc4 	addi	r16,r2,-1
 4003778:	043ec50e 	bge	zero,r16,4003290 <__alt_data_end+0xfc003290>
 400377c:	04400404 	movi	r17,16
 4003780:	d8801f17 	ldw	r2,124(sp)
 4003784:	8c00880e 	bge	r17,r16,40039a8 <___vfprintf_internal_r+0x10ec>
 4003788:	01410074 	movhi	r5,1025
 400378c:	29425d84 	addi	r5,r5,2422
 4003790:	d9402b15 	stw	r5,172(sp)
 4003794:	058001c4 	movi	r22,7
 4003798:	dcc02c17 	ldw	r19,176(sp)
 400379c:	00000306 	br	40037ac <___vfprintf_internal_r+0xef0>
 40037a0:	42000204 	addi	r8,r8,8
 40037a4:	843ffc04 	addi	r16,r16,-16
 40037a8:	8c00820e 	bge	r17,r16,40039b4 <___vfprintf_internal_r+0x10f8>
 40037ac:	18c00404 	addi	r3,r3,16
 40037b0:	10800044 	addi	r2,r2,1
 40037b4:	45000015 	stw	r20,0(r8)
 40037b8:	44400115 	stw	r17,4(r8)
 40037bc:	d8c02015 	stw	r3,128(sp)
 40037c0:	d8801f15 	stw	r2,124(sp)
 40037c4:	b0bff60e 	bge	r22,r2,40037a0 <__alt_data_end+0xfc0037a0>
 40037c8:	d9801e04 	addi	r6,sp,120
 40037cc:	b80b883a 	mov	r5,r23
 40037d0:	9809883a 	mov	r4,r19
 40037d4:	400a0200 	call	400a020 <__sprint_r>
 40037d8:	103d3a1e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 40037dc:	d8c02017 	ldw	r3,128(sp)
 40037e0:	d8801f17 	ldw	r2,124(sp)
 40037e4:	da000404 	addi	r8,sp,16
 40037e8:	003fee06 	br	40037a4 <__alt_data_end+0xfc0037a4>
 40037ec:	d9403117 	ldw	r5,196(sp)
 40037f0:	d8802a17 	ldw	r2,168(sp)
 40037f4:	28adc83a 	sub	r22,r5,r2
 40037f8:	05be630e 	bge	zero,r22,4003188 <__alt_data_end+0xfc003188>
 40037fc:	07000404 	movi	fp,16
 4003800:	d8801f17 	ldw	r2,124(sp)
 4003804:	e5838f0e 	bge	fp,r22,4004644 <___vfprintf_internal_r+0x1d88>
 4003808:	01410074 	movhi	r5,1025
 400380c:	29425d84 	addi	r5,r5,2422
 4003810:	dc403015 	stw	r17,192(sp)
 4003814:	d9402b15 	stw	r5,172(sp)
 4003818:	b023883a 	mov	r17,r22
 400381c:	04c001c4 	movi	r19,7
 4003820:	a82d883a 	mov	r22,r21
 4003824:	902b883a 	mov	r21,r18
 4003828:	8025883a 	mov	r18,r16
 400382c:	dc002c17 	ldw	r16,176(sp)
 4003830:	00000306 	br	4003840 <___vfprintf_internal_r+0xf84>
 4003834:	8c7ffc04 	addi	r17,r17,-16
 4003838:	42000204 	addi	r8,r8,8
 400383c:	e440110e 	bge	fp,r17,4003884 <___vfprintf_internal_r+0xfc8>
 4003840:	18c00404 	addi	r3,r3,16
 4003844:	10800044 	addi	r2,r2,1
 4003848:	45000015 	stw	r20,0(r8)
 400384c:	47000115 	stw	fp,4(r8)
 4003850:	d8c02015 	stw	r3,128(sp)
 4003854:	d8801f15 	stw	r2,124(sp)
 4003858:	98bff60e 	bge	r19,r2,4003834 <__alt_data_end+0xfc003834>
 400385c:	d9801e04 	addi	r6,sp,120
 4003860:	b80b883a 	mov	r5,r23
 4003864:	8009883a 	mov	r4,r16
 4003868:	400a0200 	call	400a020 <__sprint_r>
 400386c:	103d151e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 4003870:	8c7ffc04 	addi	r17,r17,-16
 4003874:	d8c02017 	ldw	r3,128(sp)
 4003878:	d8801f17 	ldw	r2,124(sp)
 400387c:	da000404 	addi	r8,sp,16
 4003880:	e47fef16 	blt	fp,r17,4003840 <__alt_data_end+0xfc003840>
 4003884:	9021883a 	mov	r16,r18
 4003888:	a825883a 	mov	r18,r21
 400388c:	b02b883a 	mov	r21,r22
 4003890:	882d883a 	mov	r22,r17
 4003894:	dc403017 	ldw	r17,192(sp)
 4003898:	d9002b17 	ldw	r4,172(sp)
 400389c:	1d87883a 	add	r3,r3,r22
 40038a0:	10800044 	addi	r2,r2,1
 40038a4:	41000015 	stw	r4,0(r8)
 40038a8:	45800115 	stw	r22,4(r8)
 40038ac:	d8c02015 	stw	r3,128(sp)
 40038b0:	d8801f15 	stw	r2,124(sp)
 40038b4:	010001c4 	movi	r4,7
 40038b8:	20818e16 	blt	r4,r2,4003ef4 <___vfprintf_internal_r+0x1638>
 40038bc:	42000204 	addi	r8,r8,8
 40038c0:	003e3106 	br	4003188 <__alt_data_end+0xfc003188>
 40038c4:	d9403317 	ldw	r5,204(sp)
 40038c8:	00800044 	movi	r2,1
 40038cc:	18c00044 	addi	r3,r3,1
 40038d0:	1141530e 	bge	r2,r5,4003e20 <___vfprintf_internal_r+0x1564>
 40038d4:	dc401f17 	ldw	r17,124(sp)
 40038d8:	00800044 	movi	r2,1
 40038dc:	40800115 	stw	r2,4(r8)
 40038e0:	8c400044 	addi	r17,r17,1
 40038e4:	44000015 	stw	r16,0(r8)
 40038e8:	d8c02015 	stw	r3,128(sp)
 40038ec:	dc401f15 	stw	r17,124(sp)
 40038f0:	008001c4 	movi	r2,7
 40038f4:	14416b16 	blt	r2,r17,4003ea4 <___vfprintf_internal_r+0x15e8>
 40038f8:	42000204 	addi	r8,r8,8
 40038fc:	d8803717 	ldw	r2,220(sp)
 4003900:	d9003417 	ldw	r4,208(sp)
 4003904:	8c400044 	addi	r17,r17,1
 4003908:	10c7883a 	add	r3,r2,r3
 400390c:	40800115 	stw	r2,4(r8)
 4003910:	41000015 	stw	r4,0(r8)
 4003914:	d8c02015 	stw	r3,128(sp)
 4003918:	dc401f15 	stw	r17,124(sp)
 400391c:	008001c4 	movi	r2,7
 4003920:	14416916 	blt	r2,r17,4003ec8 <___vfprintf_internal_r+0x160c>
 4003924:	45800204 	addi	r22,r8,8
 4003928:	d9003617 	ldw	r4,216(sp)
 400392c:	d9403817 	ldw	r5,224(sp)
 4003930:	000d883a 	mov	r6,zero
 4003934:	000f883a 	mov	r7,zero
 4003938:	d8c03c15 	stw	r3,240(sp)
 400393c:	400d1fc0 	call	400d1fc <__eqdf2>
 4003940:	d8c03c17 	ldw	r3,240(sp)
 4003944:	1000bc26 	beq	r2,zero,4003c38 <___vfprintf_internal_r+0x137c>
 4003948:	d9403317 	ldw	r5,204(sp)
 400394c:	84000044 	addi	r16,r16,1
 4003950:	8c400044 	addi	r17,r17,1
 4003954:	28bfffc4 	addi	r2,r5,-1
 4003958:	1887883a 	add	r3,r3,r2
 400395c:	b0800115 	stw	r2,4(r22)
 4003960:	b4000015 	stw	r16,0(r22)
 4003964:	d8c02015 	stw	r3,128(sp)
 4003968:	dc401f15 	stw	r17,124(sp)
 400396c:	008001c4 	movi	r2,7
 4003970:	14414316 	blt	r2,r17,4003e80 <___vfprintf_internal_r+0x15c4>
 4003974:	b5800204 	addi	r22,r22,8
 4003978:	d9003a17 	ldw	r4,232(sp)
 400397c:	df0022c4 	addi	fp,sp,139
 4003980:	8c400044 	addi	r17,r17,1
 4003984:	20c7883a 	add	r3,r4,r3
 4003988:	b7000015 	stw	fp,0(r22)
 400398c:	b1000115 	stw	r4,4(r22)
 4003990:	d8c02015 	stw	r3,128(sp)
 4003994:	dc401f15 	stw	r17,124(sp)
 4003998:	008001c4 	movi	r2,7
 400399c:	14400e16 	blt	r2,r17,40039d8 <___vfprintf_internal_r+0x111c>
 40039a0:	b2000204 	addi	r8,r22,8
 40039a4:	003e3a06 	br	4003290 <__alt_data_end+0xfc003290>
 40039a8:	01010074 	movhi	r4,1025
 40039ac:	21025d84 	addi	r4,r4,2422
 40039b0:	d9002b15 	stw	r4,172(sp)
 40039b4:	d9002b17 	ldw	r4,172(sp)
 40039b8:	1c07883a 	add	r3,r3,r16
 40039bc:	44000115 	stw	r16,4(r8)
 40039c0:	41000015 	stw	r4,0(r8)
 40039c4:	10800044 	addi	r2,r2,1
 40039c8:	d8c02015 	stw	r3,128(sp)
 40039cc:	d8801f15 	stw	r2,124(sp)
 40039d0:	010001c4 	movi	r4,7
 40039d4:	20be2d0e 	bge	r4,r2,400328c <__alt_data_end+0xfc00328c>
 40039d8:	d9002c17 	ldw	r4,176(sp)
 40039dc:	d9801e04 	addi	r6,sp,120
 40039e0:	b80b883a 	mov	r5,r23
 40039e4:	400a0200 	call	400a020 <__sprint_r>
 40039e8:	103cb61e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 40039ec:	d8c02017 	ldw	r3,128(sp)
 40039f0:	da000404 	addi	r8,sp,16
 40039f4:	003e2606 	br	4003290 <__alt_data_end+0xfc003290>
 40039f8:	d9002c17 	ldw	r4,176(sp)
 40039fc:	d9801e04 	addi	r6,sp,120
 4003a00:	b80b883a 	mov	r5,r23
 4003a04:	400a0200 	call	400a020 <__sprint_r>
 4003a08:	103e5d26 	beq	r2,zero,4003380 <__alt_data_end+0xfc003380>
 4003a0c:	003cad06 	br	4002cc4 <__alt_data_end+0xfc002cc4>
 4003a10:	d9002c17 	ldw	r4,176(sp)
 4003a14:	d9801e04 	addi	r6,sp,120
 4003a18:	b80b883a 	mov	r5,r23
 4003a1c:	400a0200 	call	400a020 <__sprint_r>
 4003a20:	103ca81e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 4003a24:	d8c02017 	ldw	r3,128(sp)
 4003a28:	da000404 	addi	r8,sp,16
 4003a2c:	003e0b06 	br	400325c <__alt_data_end+0xfc00325c>
 4003a30:	d9002c17 	ldw	r4,176(sp)
 4003a34:	d9801e04 	addi	r6,sp,120
 4003a38:	b80b883a 	mov	r5,r23
 4003a3c:	400a0200 	call	400a020 <__sprint_r>
 4003a40:	103ca01e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 4003a44:	d8c02017 	ldw	r3,128(sp)
 4003a48:	da000404 	addi	r8,sp,16
 4003a4c:	003dbd06 	br	4003144 <__alt_data_end+0xfc003144>
 4003a50:	d9002c17 	ldw	r4,176(sp)
 4003a54:	d9801e04 	addi	r6,sp,120
 4003a58:	b80b883a 	mov	r5,r23
 4003a5c:	400a0200 	call	400a020 <__sprint_r>
 4003a60:	103c981e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 4003a64:	d8c02017 	ldw	r3,128(sp)
 4003a68:	da000404 	addi	r8,sp,16
 4003a6c:	003dc306 	br	400317c <__alt_data_end+0xfc00317c>
 4003a70:	d8802917 	ldw	r2,164(sp)
 4003a74:	d8002785 	stb	zero,158(sp)
 4003a78:	103f0616 	blt	r2,zero,4003694 <__alt_data_end+0xfc003694>
 4003a7c:	00ffdfc4 	movi	r3,-129
 4003a80:	9d84b03a 	or	r2,r19,r22
 4003a84:	90e4703a 	and	r18,r18,r3
 4003a88:	103c6b26 	beq	r2,zero,4002c38 <__alt_data_end+0xfc002c38>
 4003a8c:	0039883a 	mov	fp,zero
 4003a90:	003e7406 	br	4003464 <__alt_data_end+0xfc003464>
 4003a94:	9080040c 	andi	r2,r18,16
 4003a98:	1001b326 	beq	r2,zero,4004168 <___vfprintf_internal_r+0x18ac>
 4003a9c:	d9002d17 	ldw	r4,180(sp)
 4003aa0:	d9402917 	ldw	r5,164(sp)
 4003aa4:	d8002785 	stb	zero,158(sp)
 4003aa8:	20800104 	addi	r2,r4,4
 4003aac:	24c00017 	ldw	r19,0(r4)
 4003ab0:	002d883a 	mov	r22,zero
 4003ab4:	2801b516 	blt	r5,zero,400418c <___vfprintf_internal_r+0x18d0>
 4003ab8:	00ffdfc4 	movi	r3,-129
 4003abc:	d8802d15 	stw	r2,180(sp)
 4003ac0:	90e4703a 	and	r18,r18,r3
 4003ac4:	983d2726 	beq	r19,zero,4002f64 <__alt_data_end+0xfc002f64>
 4003ac8:	0039883a 	mov	fp,zero
 4003acc:	003d2a06 	br	4002f78 <__alt_data_end+0xfc002f78>
 4003ad0:	dc402617 	ldw	r17,152(sp)
 4003ad4:	0441d30e 	bge	zero,r17,4004224 <___vfprintf_internal_r+0x1968>
 4003ad8:	dc403217 	ldw	r17,200(sp)
 4003adc:	d8803317 	ldw	r2,204(sp)
 4003ae0:	1440010e 	bge	r2,r17,4003ae8 <___vfprintf_internal_r+0x122c>
 4003ae4:	1023883a 	mov	r17,r2
 4003ae8:	04400a0e 	bge	zero,r17,4003b14 <___vfprintf_internal_r+0x1258>
 4003aec:	d8801f17 	ldw	r2,124(sp)
 4003af0:	1c47883a 	add	r3,r3,r17
 4003af4:	44000015 	stw	r16,0(r8)
 4003af8:	10800044 	addi	r2,r2,1
 4003afc:	44400115 	stw	r17,4(r8)
 4003b00:	d8c02015 	stw	r3,128(sp)
 4003b04:	d8801f15 	stw	r2,124(sp)
 4003b08:	010001c4 	movi	r4,7
 4003b0c:	20826516 	blt	r4,r2,40044a4 <___vfprintf_internal_r+0x1be8>
 4003b10:	42000204 	addi	r8,r8,8
 4003b14:	88026116 	blt	r17,zero,400449c <___vfprintf_internal_r+0x1be0>
 4003b18:	d9003217 	ldw	r4,200(sp)
 4003b1c:	2463c83a 	sub	r17,r4,r17
 4003b20:	04407b0e 	bge	zero,r17,4003d10 <___vfprintf_internal_r+0x1454>
 4003b24:	05800404 	movi	r22,16
 4003b28:	d8801f17 	ldw	r2,124(sp)
 4003b2c:	b4419d0e 	bge	r22,r17,40041a4 <___vfprintf_internal_r+0x18e8>
 4003b30:	01010074 	movhi	r4,1025
 4003b34:	21025d84 	addi	r4,r4,2422
 4003b38:	d9002b15 	stw	r4,172(sp)
 4003b3c:	070001c4 	movi	fp,7
 4003b40:	dcc02c17 	ldw	r19,176(sp)
 4003b44:	00000306 	br	4003b54 <___vfprintf_internal_r+0x1298>
 4003b48:	42000204 	addi	r8,r8,8
 4003b4c:	8c7ffc04 	addi	r17,r17,-16
 4003b50:	b441970e 	bge	r22,r17,40041b0 <___vfprintf_internal_r+0x18f4>
 4003b54:	18c00404 	addi	r3,r3,16
 4003b58:	10800044 	addi	r2,r2,1
 4003b5c:	45000015 	stw	r20,0(r8)
 4003b60:	45800115 	stw	r22,4(r8)
 4003b64:	d8c02015 	stw	r3,128(sp)
 4003b68:	d8801f15 	stw	r2,124(sp)
 4003b6c:	e0bff60e 	bge	fp,r2,4003b48 <__alt_data_end+0xfc003b48>
 4003b70:	d9801e04 	addi	r6,sp,120
 4003b74:	b80b883a 	mov	r5,r23
 4003b78:	9809883a 	mov	r4,r19
 4003b7c:	400a0200 	call	400a020 <__sprint_r>
 4003b80:	103c501e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 4003b84:	d8c02017 	ldw	r3,128(sp)
 4003b88:	d8801f17 	ldw	r2,124(sp)
 4003b8c:	da000404 	addi	r8,sp,16
 4003b90:	003fee06 	br	4003b4c <__alt_data_end+0xfc003b4c>
 4003b94:	d9002c17 	ldw	r4,176(sp)
 4003b98:	d9801e04 	addi	r6,sp,120
 4003b9c:	b80b883a 	mov	r5,r23
 4003ba0:	400a0200 	call	400a020 <__sprint_r>
 4003ba4:	103c471e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 4003ba8:	d8c02017 	ldw	r3,128(sp)
 4003bac:	df002787 	ldb	fp,158(sp)
 4003bb0:	da000404 	addi	r8,sp,16
 4003bb4:	003d5606 	br	4003110 <__alt_data_end+0xfc003110>
 4003bb8:	9080040c 	andi	r2,r18,16
 4003bbc:	10016126 	beq	r2,zero,4004144 <___vfprintf_internal_r+0x1888>
 4003bc0:	d8802d17 	ldw	r2,180(sp)
 4003bc4:	14c00017 	ldw	r19,0(r2)
 4003bc8:	10800104 	addi	r2,r2,4
 4003bcc:	d8802d15 	stw	r2,180(sp)
 4003bd0:	982dd7fa 	srai	r22,r19,31
 4003bd4:	b005883a 	mov	r2,r22
 4003bd8:	003c8206 	br	4002de4 <__alt_data_end+0xfc002de4>
 4003bdc:	9080040c 	andi	r2,r18,16
 4003be0:	10003526 	beq	r2,zero,4003cb8 <___vfprintf_internal_r+0x13fc>
 4003be4:	d9402d17 	ldw	r5,180(sp)
 4003be8:	d8c02917 	ldw	r3,164(sp)
 4003bec:	d8002785 	stb	zero,158(sp)
 4003bf0:	28800104 	addi	r2,r5,4
 4003bf4:	2cc00017 	ldw	r19,0(r5)
 4003bf8:	002d883a 	mov	r22,zero
 4003bfc:	18003716 	blt	r3,zero,4003cdc <___vfprintf_internal_r+0x1420>
 4003c00:	00ffdfc4 	movi	r3,-129
 4003c04:	d8802d15 	stw	r2,180(sp)
 4003c08:	90e4703a 	and	r18,r18,r3
 4003c0c:	0039883a 	mov	fp,zero
 4003c10:	983df326 	beq	r19,zero,40033e0 <__alt_data_end+0xfc0033e0>
 4003c14:	00800244 	movi	r2,9
 4003c18:	14fc7b36 	bltu	r2,r19,4002e08 <__alt_data_end+0xfc002e08>
 4003c1c:	d8c02817 	ldw	r3,160(sp)
 4003c20:	dc001dc4 	addi	r16,sp,119
 4003c24:	9cc00c04 	addi	r19,r19,48
 4003c28:	1c07c83a 	sub	r3,r3,r16
 4003c2c:	dcc01dc5 	stb	r19,119(sp)
 4003c30:	d8c02e15 	stw	r3,184(sp)
 4003c34:	003ce806 	br	4002fd8 <__alt_data_end+0xfc002fd8>
 4003c38:	d8803317 	ldw	r2,204(sp)
 4003c3c:	143fffc4 	addi	r16,r2,-1
 4003c40:	043f4d0e 	bge	zero,r16,4003978 <__alt_data_end+0xfc003978>
 4003c44:	07000404 	movi	fp,16
 4003c48:	e400810e 	bge	fp,r16,4003e50 <___vfprintf_internal_r+0x1594>
 4003c4c:	01410074 	movhi	r5,1025
 4003c50:	29425d84 	addi	r5,r5,2422
 4003c54:	d9402b15 	stw	r5,172(sp)
 4003c58:	01c001c4 	movi	r7,7
 4003c5c:	dcc02c17 	ldw	r19,176(sp)
 4003c60:	00000306 	br	4003c70 <___vfprintf_internal_r+0x13b4>
 4003c64:	b5800204 	addi	r22,r22,8
 4003c68:	843ffc04 	addi	r16,r16,-16
 4003c6c:	e4007b0e 	bge	fp,r16,4003e5c <___vfprintf_internal_r+0x15a0>
 4003c70:	18c00404 	addi	r3,r3,16
 4003c74:	8c400044 	addi	r17,r17,1
 4003c78:	b5000015 	stw	r20,0(r22)
 4003c7c:	b7000115 	stw	fp,4(r22)
 4003c80:	d8c02015 	stw	r3,128(sp)
 4003c84:	dc401f15 	stw	r17,124(sp)
 4003c88:	3c7ff60e 	bge	r7,r17,4003c64 <__alt_data_end+0xfc003c64>
 4003c8c:	d9801e04 	addi	r6,sp,120
 4003c90:	b80b883a 	mov	r5,r23
 4003c94:	9809883a 	mov	r4,r19
 4003c98:	d9c03c15 	stw	r7,240(sp)
 4003c9c:	400a0200 	call	400a020 <__sprint_r>
 4003ca0:	d9c03c17 	ldw	r7,240(sp)
 4003ca4:	103c071e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 4003ca8:	d8c02017 	ldw	r3,128(sp)
 4003cac:	dc401f17 	ldw	r17,124(sp)
 4003cb0:	dd800404 	addi	r22,sp,16
 4003cb4:	003fec06 	br	4003c68 <__alt_data_end+0xfc003c68>
 4003cb8:	9080100c 	andi	r2,r18,64
 4003cbc:	d8002785 	stb	zero,158(sp)
 4003cc0:	10010e26 	beq	r2,zero,40040fc <___vfprintf_internal_r+0x1840>
 4003cc4:	d9002d17 	ldw	r4,180(sp)
 4003cc8:	d9402917 	ldw	r5,164(sp)
 4003ccc:	002d883a 	mov	r22,zero
 4003cd0:	20800104 	addi	r2,r4,4
 4003cd4:	24c0000b 	ldhu	r19,0(r4)
 4003cd8:	283fc90e 	bge	r5,zero,4003c00 <__alt_data_end+0xfc003c00>
 4003cdc:	d8802d15 	stw	r2,180(sp)
 4003ce0:	0039883a 	mov	fp,zero
 4003ce4:	9d84b03a 	or	r2,r19,r22
 4003ce8:	103c461e 	bne	r2,zero,4002e04 <__alt_data_end+0xfc002e04>
 4003cec:	00800044 	movi	r2,1
 4003cf0:	003e6c06 	br	40036a4 <__alt_data_end+0xfc0036a4>
 4003cf4:	d9002c17 	ldw	r4,176(sp)
 4003cf8:	d9801e04 	addi	r6,sp,120
 4003cfc:	b80b883a 	mov	r5,r23
 4003d00:	400a0200 	call	400a020 <__sprint_r>
 4003d04:	103bef1e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 4003d08:	d8c02017 	ldw	r3,128(sp)
 4003d0c:	da000404 	addi	r8,sp,16
 4003d10:	d9003217 	ldw	r4,200(sp)
 4003d14:	d8802617 	ldw	r2,152(sp)
 4003d18:	d9403317 	ldw	r5,204(sp)
 4003d1c:	8123883a 	add	r17,r16,r4
 4003d20:	11400216 	blt	r2,r5,4003d2c <___vfprintf_internal_r+0x1470>
 4003d24:	9100004c 	andi	r4,r18,1
 4003d28:	20000d26 	beq	r4,zero,4003d60 <___vfprintf_internal_r+0x14a4>
 4003d2c:	d9003717 	ldw	r4,220(sp)
 4003d30:	d9403417 	ldw	r5,208(sp)
 4003d34:	1907883a 	add	r3,r3,r4
 4003d38:	d9001f17 	ldw	r4,124(sp)
 4003d3c:	41400015 	stw	r5,0(r8)
 4003d40:	d9403717 	ldw	r5,220(sp)
 4003d44:	21000044 	addi	r4,r4,1
 4003d48:	d8c02015 	stw	r3,128(sp)
 4003d4c:	41400115 	stw	r5,4(r8)
 4003d50:	d9001f15 	stw	r4,124(sp)
 4003d54:	014001c4 	movi	r5,7
 4003d58:	2901e816 	blt	r5,r4,40044fc <___vfprintf_internal_r+0x1c40>
 4003d5c:	42000204 	addi	r8,r8,8
 4003d60:	d9003317 	ldw	r4,204(sp)
 4003d64:	8121883a 	add	r16,r16,r4
 4003d68:	2085c83a 	sub	r2,r4,r2
 4003d6c:	8461c83a 	sub	r16,r16,r17
 4003d70:	1400010e 	bge	r2,r16,4003d78 <___vfprintf_internal_r+0x14bc>
 4003d74:	1021883a 	mov	r16,r2
 4003d78:	04000a0e 	bge	zero,r16,4003da4 <___vfprintf_internal_r+0x14e8>
 4003d7c:	d9001f17 	ldw	r4,124(sp)
 4003d80:	1c07883a 	add	r3,r3,r16
 4003d84:	44400015 	stw	r17,0(r8)
 4003d88:	21000044 	addi	r4,r4,1
 4003d8c:	44000115 	stw	r16,4(r8)
 4003d90:	d8c02015 	stw	r3,128(sp)
 4003d94:	d9001f15 	stw	r4,124(sp)
 4003d98:	014001c4 	movi	r5,7
 4003d9c:	2901fb16 	blt	r5,r4,400458c <___vfprintf_internal_r+0x1cd0>
 4003da0:	42000204 	addi	r8,r8,8
 4003da4:	8001f716 	blt	r16,zero,4004584 <___vfprintf_internal_r+0x1cc8>
 4003da8:	1421c83a 	sub	r16,r2,r16
 4003dac:	043d380e 	bge	zero,r16,4003290 <__alt_data_end+0xfc003290>
 4003db0:	04400404 	movi	r17,16
 4003db4:	d8801f17 	ldw	r2,124(sp)
 4003db8:	8c3efb0e 	bge	r17,r16,40039a8 <__alt_data_end+0xfc0039a8>
 4003dbc:	01410074 	movhi	r5,1025
 4003dc0:	29425d84 	addi	r5,r5,2422
 4003dc4:	d9402b15 	stw	r5,172(sp)
 4003dc8:	058001c4 	movi	r22,7
 4003dcc:	dcc02c17 	ldw	r19,176(sp)
 4003dd0:	00000306 	br	4003de0 <___vfprintf_internal_r+0x1524>
 4003dd4:	42000204 	addi	r8,r8,8
 4003dd8:	843ffc04 	addi	r16,r16,-16
 4003ddc:	8c3ef50e 	bge	r17,r16,40039b4 <__alt_data_end+0xfc0039b4>
 4003de0:	18c00404 	addi	r3,r3,16
 4003de4:	10800044 	addi	r2,r2,1
 4003de8:	45000015 	stw	r20,0(r8)
 4003dec:	44400115 	stw	r17,4(r8)
 4003df0:	d8c02015 	stw	r3,128(sp)
 4003df4:	d8801f15 	stw	r2,124(sp)
 4003df8:	b0bff60e 	bge	r22,r2,4003dd4 <__alt_data_end+0xfc003dd4>
 4003dfc:	d9801e04 	addi	r6,sp,120
 4003e00:	b80b883a 	mov	r5,r23
 4003e04:	9809883a 	mov	r4,r19
 4003e08:	400a0200 	call	400a020 <__sprint_r>
 4003e0c:	103bad1e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 4003e10:	d8c02017 	ldw	r3,128(sp)
 4003e14:	d8801f17 	ldw	r2,124(sp)
 4003e18:	da000404 	addi	r8,sp,16
 4003e1c:	003fee06 	br	4003dd8 <__alt_data_end+0xfc003dd8>
 4003e20:	9088703a 	and	r4,r18,r2
 4003e24:	203eab1e 	bne	r4,zero,40038d4 <__alt_data_end+0xfc0038d4>
 4003e28:	dc401f17 	ldw	r17,124(sp)
 4003e2c:	40800115 	stw	r2,4(r8)
 4003e30:	44000015 	stw	r16,0(r8)
 4003e34:	8c400044 	addi	r17,r17,1
 4003e38:	d8c02015 	stw	r3,128(sp)
 4003e3c:	dc401f15 	stw	r17,124(sp)
 4003e40:	008001c4 	movi	r2,7
 4003e44:	14400e16 	blt	r2,r17,4003e80 <___vfprintf_internal_r+0x15c4>
 4003e48:	45800204 	addi	r22,r8,8
 4003e4c:	003eca06 	br	4003978 <__alt_data_end+0xfc003978>
 4003e50:	01010074 	movhi	r4,1025
 4003e54:	21025d84 	addi	r4,r4,2422
 4003e58:	d9002b15 	stw	r4,172(sp)
 4003e5c:	d8802b17 	ldw	r2,172(sp)
 4003e60:	1c07883a 	add	r3,r3,r16
 4003e64:	8c400044 	addi	r17,r17,1
 4003e68:	b0800015 	stw	r2,0(r22)
 4003e6c:	b4000115 	stw	r16,4(r22)
 4003e70:	d8c02015 	stw	r3,128(sp)
 4003e74:	dc401f15 	stw	r17,124(sp)
 4003e78:	008001c4 	movi	r2,7
 4003e7c:	147ebd0e 	bge	r2,r17,4003974 <__alt_data_end+0xfc003974>
 4003e80:	d9002c17 	ldw	r4,176(sp)
 4003e84:	d9801e04 	addi	r6,sp,120
 4003e88:	b80b883a 	mov	r5,r23
 4003e8c:	400a0200 	call	400a020 <__sprint_r>
 4003e90:	103b8c1e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 4003e94:	d8c02017 	ldw	r3,128(sp)
 4003e98:	dc401f17 	ldw	r17,124(sp)
 4003e9c:	dd800404 	addi	r22,sp,16
 4003ea0:	003eb506 	br	4003978 <__alt_data_end+0xfc003978>
 4003ea4:	d9002c17 	ldw	r4,176(sp)
 4003ea8:	d9801e04 	addi	r6,sp,120
 4003eac:	b80b883a 	mov	r5,r23
 4003eb0:	400a0200 	call	400a020 <__sprint_r>
 4003eb4:	103b831e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 4003eb8:	d8c02017 	ldw	r3,128(sp)
 4003ebc:	dc401f17 	ldw	r17,124(sp)
 4003ec0:	da000404 	addi	r8,sp,16
 4003ec4:	003e8d06 	br	40038fc <__alt_data_end+0xfc0038fc>
 4003ec8:	d9002c17 	ldw	r4,176(sp)
 4003ecc:	d9801e04 	addi	r6,sp,120
 4003ed0:	b80b883a 	mov	r5,r23
 4003ed4:	400a0200 	call	400a020 <__sprint_r>
 4003ed8:	103b7a1e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 4003edc:	d8c02017 	ldw	r3,128(sp)
 4003ee0:	dc401f17 	ldw	r17,124(sp)
 4003ee4:	dd800404 	addi	r22,sp,16
 4003ee8:	003e8f06 	br	4003928 <__alt_data_end+0xfc003928>
 4003eec:	0027883a 	mov	r19,zero
 4003ef0:	003f4a06 	br	4003c1c <__alt_data_end+0xfc003c1c>
 4003ef4:	d9002c17 	ldw	r4,176(sp)
 4003ef8:	d9801e04 	addi	r6,sp,120
 4003efc:	b80b883a 	mov	r5,r23
 4003f00:	400a0200 	call	400a020 <__sprint_r>
 4003f04:	103b6f1e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 4003f08:	d8c02017 	ldw	r3,128(sp)
 4003f0c:	da000404 	addi	r8,sp,16
 4003f10:	003c9d06 	br	4003188 <__alt_data_end+0xfc003188>
 4003f14:	04e7c83a 	sub	r19,zero,r19
 4003f18:	9804c03a 	cmpne	r2,r19,zero
 4003f1c:	05adc83a 	sub	r22,zero,r22
 4003f20:	b0adc83a 	sub	r22,r22,r2
 4003f24:	d8802917 	ldw	r2,164(sp)
 4003f28:	07000b44 	movi	fp,45
 4003f2c:	df002785 	stb	fp,158(sp)
 4003f30:	10017b16 	blt	r2,zero,4004520 <___vfprintf_internal_r+0x1c64>
 4003f34:	00bfdfc4 	movi	r2,-129
 4003f38:	90a4703a 	and	r18,r18,r2
 4003f3c:	003bb106 	br	4002e04 <__alt_data_end+0xfc002e04>
 4003f40:	d9003617 	ldw	r4,216(sp)
 4003f44:	d9403817 	ldw	r5,224(sp)
 4003f48:	da003d15 	stw	r8,244(sp)
 4003f4c:	4009c440 	call	4009c44 <__fpclassifyd>
 4003f50:	da003d17 	ldw	r8,244(sp)
 4003f54:	1000f026 	beq	r2,zero,4004318 <___vfprintf_internal_r+0x1a5c>
 4003f58:	d9002917 	ldw	r4,164(sp)
 4003f5c:	05bff7c4 	movi	r22,-33
 4003f60:	00bfffc4 	movi	r2,-1
 4003f64:	8dac703a 	and	r22,r17,r22
 4003f68:	20820026 	beq	r4,r2,400476c <___vfprintf_internal_r+0x1eb0>
 4003f6c:	008011c4 	movi	r2,71
 4003f70:	b081f726 	beq	r22,r2,4004750 <___vfprintf_internal_r+0x1e94>
 4003f74:	d9003817 	ldw	r4,224(sp)
 4003f78:	90c04014 	ori	r3,r18,256
 4003f7c:	d8c02b15 	stw	r3,172(sp)
 4003f80:	20021516 	blt	r4,zero,40047d8 <___vfprintf_internal_r+0x1f1c>
 4003f84:	dcc03817 	ldw	r19,224(sp)
 4003f88:	d8002a05 	stb	zero,168(sp)
 4003f8c:	00801984 	movi	r2,102
 4003f90:	8881f926 	beq	r17,r2,4004778 <___vfprintf_internal_r+0x1ebc>
 4003f94:	00801184 	movi	r2,70
 4003f98:	88821c26 	beq	r17,r2,400480c <___vfprintf_internal_r+0x1f50>
 4003f9c:	00801144 	movi	r2,69
 4003fa0:	b081ef26 	beq	r22,r2,4004760 <___vfprintf_internal_r+0x1ea4>
 4003fa4:	d8c02917 	ldw	r3,164(sp)
 4003fa8:	d8802104 	addi	r2,sp,132
 4003fac:	d8800315 	stw	r2,12(sp)
 4003fb0:	d9403617 	ldw	r5,216(sp)
 4003fb4:	d8802504 	addi	r2,sp,148
 4003fb8:	d9002c17 	ldw	r4,176(sp)
 4003fbc:	d8800215 	stw	r2,8(sp)
 4003fc0:	d8802604 	addi	r2,sp,152
 4003fc4:	d8c00015 	stw	r3,0(sp)
 4003fc8:	d8800115 	stw	r2,4(sp)
 4003fcc:	01c00084 	movi	r7,2
 4003fd0:	980d883a 	mov	r6,r19
 4003fd4:	d8c03c15 	stw	r3,240(sp)
 4003fd8:	da003d15 	stw	r8,244(sp)
 4003fdc:	4004ee00 	call	4004ee0 <_dtoa_r>
 4003fe0:	1021883a 	mov	r16,r2
 4003fe4:	008019c4 	movi	r2,103
 4003fe8:	d8c03c17 	ldw	r3,240(sp)
 4003fec:	da003d17 	ldw	r8,244(sp)
 4003ff0:	88817126 	beq	r17,r2,40045b8 <___vfprintf_internal_r+0x1cfc>
 4003ff4:	008011c4 	movi	r2,71
 4003ff8:	88829226 	beq	r17,r2,4004a44 <___vfprintf_internal_r+0x2188>
 4003ffc:	80f9883a 	add	fp,r16,r3
 4004000:	d9003617 	ldw	r4,216(sp)
 4004004:	000d883a 	mov	r6,zero
 4004008:	000f883a 	mov	r7,zero
 400400c:	980b883a 	mov	r5,r19
 4004010:	da003d15 	stw	r8,244(sp)
 4004014:	400d1fc0 	call	400d1fc <__eqdf2>
 4004018:	da003d17 	ldw	r8,244(sp)
 400401c:	10018d26 	beq	r2,zero,4004654 <___vfprintf_internal_r+0x1d98>
 4004020:	d8802117 	ldw	r2,132(sp)
 4004024:	1700062e 	bgeu	r2,fp,4004040 <___vfprintf_internal_r+0x1784>
 4004028:	01000c04 	movi	r4,48
 400402c:	10c00044 	addi	r3,r2,1
 4004030:	d8c02115 	stw	r3,132(sp)
 4004034:	11000005 	stb	r4,0(r2)
 4004038:	d8802117 	ldw	r2,132(sp)
 400403c:	173ffb36 	bltu	r2,fp,400402c <__alt_data_end+0xfc00402c>
 4004040:	1405c83a 	sub	r2,r2,r16
 4004044:	d8803315 	stw	r2,204(sp)
 4004048:	008011c4 	movi	r2,71
 400404c:	b0817626 	beq	r22,r2,4004628 <___vfprintf_internal_r+0x1d6c>
 4004050:	00801944 	movi	r2,101
 4004054:	1442810e 	bge	r2,r17,4004a5c <___vfprintf_internal_r+0x21a0>
 4004058:	d8c02617 	ldw	r3,152(sp)
 400405c:	00801984 	movi	r2,102
 4004060:	d8c03215 	stw	r3,200(sp)
 4004064:	8881fe26 	beq	r17,r2,4004860 <___vfprintf_internal_r+0x1fa4>
 4004068:	d8c03217 	ldw	r3,200(sp)
 400406c:	d9003317 	ldw	r4,204(sp)
 4004070:	1901dd16 	blt	r3,r4,40047e8 <___vfprintf_internal_r+0x1f2c>
 4004074:	9480004c 	andi	r18,r18,1
 4004078:	90022b1e 	bne	r18,zero,4004928 <___vfprintf_internal_r+0x206c>
 400407c:	1805883a 	mov	r2,r3
 4004080:	18028016 	blt	r3,zero,4004a84 <___vfprintf_internal_r+0x21c8>
 4004084:	d8c03217 	ldw	r3,200(sp)
 4004088:	044019c4 	movi	r17,103
 400408c:	d8c02e15 	stw	r3,184(sp)
 4004090:	df002a07 	ldb	fp,168(sp)
 4004094:	e001531e 	bne	fp,zero,40045e4 <___vfprintf_internal_r+0x1d28>
 4004098:	df002783 	ldbu	fp,158(sp)
 400409c:	d8802a15 	stw	r2,168(sp)
 40040a0:	dc802b17 	ldw	r18,172(sp)
 40040a4:	d8002915 	stw	zero,164(sp)
 40040a8:	003bd106 	br	4002ff0 <__alt_data_end+0xfc002ff0>
 40040ac:	d8802d17 	ldw	r2,180(sp)
 40040b0:	d8c02d17 	ldw	r3,180(sp)
 40040b4:	d9002d17 	ldw	r4,180(sp)
 40040b8:	10800017 	ldw	r2,0(r2)
 40040bc:	18c00117 	ldw	r3,4(r3)
 40040c0:	21000204 	addi	r4,r4,8
 40040c4:	d8803615 	stw	r2,216(sp)
 40040c8:	d8c03815 	stw	r3,224(sp)
 40040cc:	d9002d15 	stw	r4,180(sp)
 40040d0:	003b7506 	br	4002ea8 <__alt_data_end+0xfc002ea8>
 40040d4:	ac400007 	ldb	r17,0(r21)
 40040d8:	003a5906 	br	4002a40 <__alt_data_end+0xfc002a40>
 40040dc:	9080100c 	andi	r2,r18,64
 40040e0:	1000a826 	beq	r2,zero,4004384 <___vfprintf_internal_r+0x1ac8>
 40040e4:	d9002d17 	ldw	r4,180(sp)
 40040e8:	002d883a 	mov	r22,zero
 40040ec:	24c0000b 	ldhu	r19,0(r4)
 40040f0:	21000104 	addi	r4,r4,4
 40040f4:	d9002d15 	stw	r4,180(sp)
 40040f8:	003ccb06 	br	4003428 <__alt_data_end+0xfc003428>
 40040fc:	d8c02d17 	ldw	r3,180(sp)
 4004100:	d9002917 	ldw	r4,164(sp)
 4004104:	002d883a 	mov	r22,zero
 4004108:	18800104 	addi	r2,r3,4
 400410c:	1cc00017 	ldw	r19,0(r3)
 4004110:	203ebb0e 	bge	r4,zero,4003c00 <__alt_data_end+0xfc003c00>
 4004114:	003ef106 	br	4003cdc <__alt_data_end+0xfc003cdc>
 4004118:	9080040c 	andi	r2,r18,16
 400411c:	1000921e 	bne	r2,zero,4004368 <___vfprintf_internal_r+0x1aac>
 4004120:	9480100c 	andi	r18,r18,64
 4004124:	90013926 	beq	r18,zero,400460c <___vfprintf_internal_r+0x1d50>
 4004128:	d9002d17 	ldw	r4,180(sp)
 400412c:	d9402f17 	ldw	r5,188(sp)
 4004130:	20800017 	ldw	r2,0(r4)
 4004134:	21000104 	addi	r4,r4,4
 4004138:	d9002d15 	stw	r4,180(sp)
 400413c:	1140000d 	sth	r5,0(r2)
 4004140:	003a1606 	br	400299c <__alt_data_end+0xfc00299c>
 4004144:	9080100c 	andi	r2,r18,64
 4004148:	10008026 	beq	r2,zero,400434c <___vfprintf_internal_r+0x1a90>
 400414c:	d8c02d17 	ldw	r3,180(sp)
 4004150:	1cc0000f 	ldh	r19,0(r3)
 4004154:	18c00104 	addi	r3,r3,4
 4004158:	d8c02d15 	stw	r3,180(sp)
 400415c:	982dd7fa 	srai	r22,r19,31
 4004160:	b005883a 	mov	r2,r22
 4004164:	003b1f06 	br	4002de4 <__alt_data_end+0xfc002de4>
 4004168:	9080100c 	andi	r2,r18,64
 400416c:	d8002785 	stb	zero,158(sp)
 4004170:	10008a1e 	bne	r2,zero,400439c <___vfprintf_internal_r+0x1ae0>
 4004174:	d9402d17 	ldw	r5,180(sp)
 4004178:	d8c02917 	ldw	r3,164(sp)
 400417c:	002d883a 	mov	r22,zero
 4004180:	28800104 	addi	r2,r5,4
 4004184:	2cc00017 	ldw	r19,0(r5)
 4004188:	183e4b0e 	bge	r3,zero,4003ab8 <__alt_data_end+0xfc003ab8>
 400418c:	9d86b03a 	or	r3,r19,r22
 4004190:	d8802d15 	stw	r2,180(sp)
 4004194:	183e4c1e 	bne	r3,zero,4003ac8 <__alt_data_end+0xfc003ac8>
 4004198:	0039883a 	mov	fp,zero
 400419c:	0005883a 	mov	r2,zero
 40041a0:	003d4006 	br	40036a4 <__alt_data_end+0xfc0036a4>
 40041a4:	01410074 	movhi	r5,1025
 40041a8:	29425d84 	addi	r5,r5,2422
 40041ac:	d9402b15 	stw	r5,172(sp)
 40041b0:	d9402b17 	ldw	r5,172(sp)
 40041b4:	1c47883a 	add	r3,r3,r17
 40041b8:	10800044 	addi	r2,r2,1
 40041bc:	41400015 	stw	r5,0(r8)
 40041c0:	44400115 	stw	r17,4(r8)
 40041c4:	d8c02015 	stw	r3,128(sp)
 40041c8:	d8801f15 	stw	r2,124(sp)
 40041cc:	010001c4 	movi	r4,7
 40041d0:	20bec816 	blt	r4,r2,4003cf4 <__alt_data_end+0xfc003cf4>
 40041d4:	42000204 	addi	r8,r8,8
 40041d8:	003ecd06 	br	4003d10 <__alt_data_end+0xfc003d10>
 40041dc:	d9002917 	ldw	r4,164(sp)
 40041e0:	d8002785 	stb	zero,158(sp)
 40041e4:	203d2d16 	blt	r4,zero,400369c <__alt_data_end+0xfc00369c>
 40041e8:	00bfdfc4 	movi	r2,-129
 40041ec:	90a4703a 	and	r18,r18,r2
 40041f0:	003a9106 	br	4002c38 <__alt_data_end+0xfc002c38>
 40041f4:	01010074 	movhi	r4,1025
 40041f8:	21025d84 	addi	r4,r4,2422
 40041fc:	d9002b15 	stw	r4,172(sp)
 4004200:	003c0c06 	br	4003234 <__alt_data_end+0xfc003234>
 4004204:	d9002c17 	ldw	r4,176(sp)
 4004208:	d9801e04 	addi	r6,sp,120
 400420c:	b80b883a 	mov	r5,r23
 4004210:	400a0200 	call	400a020 <__sprint_r>
 4004214:	103aab1e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 4004218:	d8c02017 	ldw	r3,128(sp)
 400421c:	da000404 	addi	r8,sp,16
 4004220:	003d4106 	br	4003728 <__alt_data_end+0xfc003728>
 4004224:	d8801f17 	ldw	r2,124(sp)
 4004228:	01410074 	movhi	r5,1025
 400422c:	01000044 	movi	r4,1
 4004230:	18c00044 	addi	r3,r3,1
 4004234:	10800044 	addi	r2,r2,1
 4004238:	29425d04 	addi	r5,r5,2420
 400423c:	41000115 	stw	r4,4(r8)
 4004240:	41400015 	stw	r5,0(r8)
 4004244:	d8c02015 	stw	r3,128(sp)
 4004248:	d8801f15 	stw	r2,124(sp)
 400424c:	010001c4 	movi	r4,7
 4004250:	20805c16 	blt	r4,r2,40043c4 <___vfprintf_internal_r+0x1b08>
 4004254:	42000204 	addi	r8,r8,8
 4004258:	8800041e 	bne	r17,zero,400426c <___vfprintf_internal_r+0x19b0>
 400425c:	d8803317 	ldw	r2,204(sp)
 4004260:	1000021e 	bne	r2,zero,400426c <___vfprintf_internal_r+0x19b0>
 4004264:	9080004c 	andi	r2,r18,1
 4004268:	103c0926 	beq	r2,zero,4003290 <__alt_data_end+0xfc003290>
 400426c:	d9003717 	ldw	r4,220(sp)
 4004270:	d8801f17 	ldw	r2,124(sp)
 4004274:	d9403417 	ldw	r5,208(sp)
 4004278:	20c7883a 	add	r3,r4,r3
 400427c:	10800044 	addi	r2,r2,1
 4004280:	41000115 	stw	r4,4(r8)
 4004284:	41400015 	stw	r5,0(r8)
 4004288:	d8c02015 	stw	r3,128(sp)
 400428c:	d8801f15 	stw	r2,124(sp)
 4004290:	010001c4 	movi	r4,7
 4004294:	20812116 	blt	r4,r2,400471c <___vfprintf_internal_r+0x1e60>
 4004298:	42000204 	addi	r8,r8,8
 400429c:	0463c83a 	sub	r17,zero,r17
 40042a0:	0440730e 	bge	zero,r17,4004470 <___vfprintf_internal_r+0x1bb4>
 40042a4:	05800404 	movi	r22,16
 40042a8:	b440860e 	bge	r22,r17,40044c4 <___vfprintf_internal_r+0x1c08>
 40042ac:	01410074 	movhi	r5,1025
 40042b0:	29425d84 	addi	r5,r5,2422
 40042b4:	d9402b15 	stw	r5,172(sp)
 40042b8:	070001c4 	movi	fp,7
 40042bc:	dcc02c17 	ldw	r19,176(sp)
 40042c0:	00000306 	br	40042d0 <___vfprintf_internal_r+0x1a14>
 40042c4:	42000204 	addi	r8,r8,8
 40042c8:	8c7ffc04 	addi	r17,r17,-16
 40042cc:	b440800e 	bge	r22,r17,40044d0 <___vfprintf_internal_r+0x1c14>
 40042d0:	18c00404 	addi	r3,r3,16
 40042d4:	10800044 	addi	r2,r2,1
 40042d8:	45000015 	stw	r20,0(r8)
 40042dc:	45800115 	stw	r22,4(r8)
 40042e0:	d8c02015 	stw	r3,128(sp)
 40042e4:	d8801f15 	stw	r2,124(sp)
 40042e8:	e0bff60e 	bge	fp,r2,40042c4 <__alt_data_end+0xfc0042c4>
 40042ec:	d9801e04 	addi	r6,sp,120
 40042f0:	b80b883a 	mov	r5,r23
 40042f4:	9809883a 	mov	r4,r19
 40042f8:	400a0200 	call	400a020 <__sprint_r>
 40042fc:	103a711e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 4004300:	d8c02017 	ldw	r3,128(sp)
 4004304:	d8801f17 	ldw	r2,124(sp)
 4004308:	da000404 	addi	r8,sp,16
 400430c:	003fee06 	br	40042c8 <__alt_data_end+0xfc0042c8>
 4004310:	00bfffc4 	movi	r2,-1
 4004314:	003a6f06 	br	4002cd4 <__alt_data_end+0xfc002cd4>
 4004318:	008011c4 	movi	r2,71
 400431c:	1440b816 	blt	r2,r17,4004600 <___vfprintf_internal_r+0x1d44>
 4004320:	04010074 	movhi	r16,1025
 4004324:	84024f04 	addi	r16,r16,2364
 4004328:	00c000c4 	movi	r3,3
 400432c:	00bfdfc4 	movi	r2,-129
 4004330:	d8c02a15 	stw	r3,168(sp)
 4004334:	90a4703a 	and	r18,r18,r2
 4004338:	df002783 	ldbu	fp,158(sp)
 400433c:	d8c02e15 	stw	r3,184(sp)
 4004340:	d8002915 	stw	zero,164(sp)
 4004344:	d8003215 	stw	zero,200(sp)
 4004348:	003b2906 	br	4002ff0 <__alt_data_end+0xfc002ff0>
 400434c:	d9002d17 	ldw	r4,180(sp)
 4004350:	24c00017 	ldw	r19,0(r4)
 4004354:	21000104 	addi	r4,r4,4
 4004358:	d9002d15 	stw	r4,180(sp)
 400435c:	982dd7fa 	srai	r22,r19,31
 4004360:	b005883a 	mov	r2,r22
 4004364:	003a9f06 	br	4002de4 <__alt_data_end+0xfc002de4>
 4004368:	d9402d17 	ldw	r5,180(sp)
 400436c:	d8c02f17 	ldw	r3,188(sp)
 4004370:	28800017 	ldw	r2,0(r5)
 4004374:	29400104 	addi	r5,r5,4
 4004378:	d9402d15 	stw	r5,180(sp)
 400437c:	10c00015 	stw	r3,0(r2)
 4004380:	00398606 	br	400299c <__alt_data_end+0xfc00299c>
 4004384:	d9402d17 	ldw	r5,180(sp)
 4004388:	002d883a 	mov	r22,zero
 400438c:	2cc00017 	ldw	r19,0(r5)
 4004390:	29400104 	addi	r5,r5,4
 4004394:	d9402d15 	stw	r5,180(sp)
 4004398:	003c2306 	br	4003428 <__alt_data_end+0xfc003428>
 400439c:	d8c02d17 	ldw	r3,180(sp)
 40043a0:	d9002917 	ldw	r4,164(sp)
 40043a4:	002d883a 	mov	r22,zero
 40043a8:	18800104 	addi	r2,r3,4
 40043ac:	1cc0000b 	ldhu	r19,0(r3)
 40043b0:	203dc10e 	bge	r4,zero,4003ab8 <__alt_data_end+0xfc003ab8>
 40043b4:	003f7506 	br	400418c <__alt_data_end+0xfc00418c>
 40043b8:	04010074 	movhi	r16,1025
 40043bc:	84024d04 	addi	r16,r16,2356
 40043c0:	003acc06 	br	4002ef4 <__alt_data_end+0xfc002ef4>
 40043c4:	d9002c17 	ldw	r4,176(sp)
 40043c8:	d9801e04 	addi	r6,sp,120
 40043cc:	b80b883a 	mov	r5,r23
 40043d0:	400a0200 	call	400a020 <__sprint_r>
 40043d4:	103a3b1e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 40043d8:	dc402617 	ldw	r17,152(sp)
 40043dc:	d8c02017 	ldw	r3,128(sp)
 40043e0:	da000404 	addi	r8,sp,16
 40043e4:	003f9c06 	br	4004258 <__alt_data_end+0xfc004258>
 40043e8:	ac400043 	ldbu	r17,1(r21)
 40043ec:	94800814 	ori	r18,r18,32
 40043f0:	ad400044 	addi	r21,r21,1
 40043f4:	8c403fcc 	andi	r17,r17,255
 40043f8:	8c40201c 	xori	r17,r17,128
 40043fc:	8c7fe004 	addi	r17,r17,-128
 4004400:	00398f06 	br	4002a40 <__alt_data_end+0xfc002a40>
 4004404:	d8c02d15 	stw	r3,180(sp)
 4004408:	0039883a 	mov	fp,zero
 400440c:	003e3506 	br	4003ce4 <__alt_data_end+0xfc003ce4>
 4004410:	d9002c17 	ldw	r4,176(sp)
 4004414:	d9801e04 	addi	r6,sp,120
 4004418:	b80b883a 	mov	r5,r23
 400441c:	400a0200 	call	400a020 <__sprint_r>
 4004420:	103a281e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 4004424:	d8c02017 	ldw	r3,128(sp)
 4004428:	da000404 	addi	r8,sp,16
 400442c:	003cd006 	br	4003770 <__alt_data_end+0xfc003770>
 4004430:	8009883a 	mov	r4,r16
 4004434:	da003d15 	stw	r8,244(sp)
 4004438:	40028240 	call	4002824 <strlen>
 400443c:	d8802e15 	stw	r2,184(sp)
 4004440:	da003d17 	ldw	r8,244(sp)
 4004444:	103c340e 	bge	r2,zero,4003518 <__alt_data_end+0xfc003518>
 4004448:	0005883a 	mov	r2,zero
 400444c:	003c3206 	br	4003518 <__alt_data_end+0xfc003518>
 4004450:	d9002c17 	ldw	r4,176(sp)
 4004454:	d9801e04 	addi	r6,sp,120
 4004458:	b80b883a 	mov	r5,r23
 400445c:	400a0200 	call	400a020 <__sprint_r>
 4004460:	103a181e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 4004464:	d8c02017 	ldw	r3,128(sp)
 4004468:	d8801f17 	ldw	r2,124(sp)
 400446c:	da000404 	addi	r8,sp,16
 4004470:	d9403317 	ldw	r5,204(sp)
 4004474:	10800044 	addi	r2,r2,1
 4004478:	44000015 	stw	r16,0(r8)
 400447c:	28c7883a 	add	r3,r5,r3
 4004480:	003b7d06 	br	4003278 <__alt_data_end+0xfc003278>
 4004484:	01010074 	movhi	r4,1025
 4004488:	21026184 	addi	r4,r4,2438
 400448c:	d9003515 	stw	r4,212(sp)
 4004490:	003b1406 	br	40030e4 <__alt_data_end+0xfc0030e4>
 4004494:	013fffc4 	movi	r4,-1
 4004498:	003a3506 	br	4002d70 <__alt_data_end+0xfc002d70>
 400449c:	0023883a 	mov	r17,zero
 40044a0:	003d9d06 	br	4003b18 <__alt_data_end+0xfc003b18>
 40044a4:	d9002c17 	ldw	r4,176(sp)
 40044a8:	d9801e04 	addi	r6,sp,120
 40044ac:	b80b883a 	mov	r5,r23
 40044b0:	400a0200 	call	400a020 <__sprint_r>
 40044b4:	103a031e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 40044b8:	d8c02017 	ldw	r3,128(sp)
 40044bc:	da000404 	addi	r8,sp,16
 40044c0:	003d9406 	br	4003b14 <__alt_data_end+0xfc003b14>
 40044c4:	01010074 	movhi	r4,1025
 40044c8:	21025d84 	addi	r4,r4,2422
 40044cc:	d9002b15 	stw	r4,172(sp)
 40044d0:	d9002b17 	ldw	r4,172(sp)
 40044d4:	1c47883a 	add	r3,r3,r17
 40044d8:	10800044 	addi	r2,r2,1
 40044dc:	41000015 	stw	r4,0(r8)
 40044e0:	44400115 	stw	r17,4(r8)
 40044e4:	d8c02015 	stw	r3,128(sp)
 40044e8:	d8801f15 	stw	r2,124(sp)
 40044ec:	010001c4 	movi	r4,7
 40044f0:	20bfd716 	blt	r4,r2,4004450 <__alt_data_end+0xfc004450>
 40044f4:	42000204 	addi	r8,r8,8
 40044f8:	003fdd06 	br	4004470 <__alt_data_end+0xfc004470>
 40044fc:	d9002c17 	ldw	r4,176(sp)
 4004500:	d9801e04 	addi	r6,sp,120
 4004504:	b80b883a 	mov	r5,r23
 4004508:	400a0200 	call	400a020 <__sprint_r>
 400450c:	1039ed1e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 4004510:	d8802617 	ldw	r2,152(sp)
 4004514:	d8c02017 	ldw	r3,128(sp)
 4004518:	da000404 	addi	r8,sp,16
 400451c:	003e1006 	br	4003d60 <__alt_data_end+0xfc003d60>
 4004520:	00800044 	movi	r2,1
 4004524:	10803fcc 	andi	r2,r2,255
 4004528:	00c00044 	movi	r3,1
 400452c:	10fa3526 	beq	r2,r3,4002e04 <__alt_data_end+0xfc002e04>
 4004530:	00c00084 	movi	r3,2
 4004534:	10fbcb26 	beq	r2,r3,4003464 <__alt_data_end+0xfc003464>
 4004538:	003a8f06 	br	4002f78 <__alt_data_end+0xfc002f78>
 400453c:	01010074 	movhi	r4,1025
 4004540:	21026184 	addi	r4,r4,2438
 4004544:	d9003515 	stw	r4,212(sp)
 4004548:	003b7606 	br	4003324 <__alt_data_end+0xfc003324>
 400454c:	d8802917 	ldw	r2,164(sp)
 4004550:	00c00184 	movi	r3,6
 4004554:	1880012e 	bgeu	r3,r2,400455c <___vfprintf_internal_r+0x1ca0>
 4004558:	1805883a 	mov	r2,r3
 400455c:	d8802e15 	stw	r2,184(sp)
 4004560:	1000ef16 	blt	r2,zero,4004920 <___vfprintf_internal_r+0x2064>
 4004564:	04010074 	movhi	r16,1025
 4004568:	d8802a15 	stw	r2,168(sp)
 400456c:	dcc02d15 	stw	r19,180(sp)
 4004570:	d8002915 	stw	zero,164(sp)
 4004574:	d8003215 	stw	zero,200(sp)
 4004578:	84025b04 	addi	r16,r16,2412
 400457c:	0039883a 	mov	fp,zero
 4004580:	003aa206 	br	400300c <__alt_data_end+0xfc00300c>
 4004584:	0021883a 	mov	r16,zero
 4004588:	003e0706 	br	4003da8 <__alt_data_end+0xfc003da8>
 400458c:	d9002c17 	ldw	r4,176(sp)
 4004590:	d9801e04 	addi	r6,sp,120
 4004594:	b80b883a 	mov	r5,r23
 4004598:	400a0200 	call	400a020 <__sprint_r>
 400459c:	1039c91e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 40045a0:	d8802617 	ldw	r2,152(sp)
 40045a4:	d9403317 	ldw	r5,204(sp)
 40045a8:	d8c02017 	ldw	r3,128(sp)
 40045ac:	da000404 	addi	r8,sp,16
 40045b0:	2885c83a 	sub	r2,r5,r2
 40045b4:	003dfb06 	br	4003da4 <__alt_data_end+0xfc003da4>
 40045b8:	9080004c 	andi	r2,r18,1
 40045bc:	103e8f1e 	bne	r2,zero,4003ffc <__alt_data_end+0xfc003ffc>
 40045c0:	d8802117 	ldw	r2,132(sp)
 40045c4:	003e9e06 	br	4004040 <__alt_data_end+0xfc004040>
 40045c8:	1025883a 	mov	r18,r2
 40045cc:	0039883a 	mov	fp,zero
 40045d0:	00800084 	movi	r2,2
 40045d4:	003fd306 	br	4004524 <__alt_data_end+0xfc004524>
 40045d8:	07000b44 	movi	fp,45
 40045dc:	df002785 	stb	fp,158(sp)
 40045e0:	003a4006 	br	4002ee4 <__alt_data_end+0xfc002ee4>
 40045e4:	00c00b44 	movi	r3,45
 40045e8:	d8c02785 	stb	r3,158(sp)
 40045ec:	d8802a15 	stw	r2,168(sp)
 40045f0:	dc802b17 	ldw	r18,172(sp)
 40045f4:	d8002915 	stw	zero,164(sp)
 40045f8:	07000b44 	movi	fp,45
 40045fc:	003a8006 	br	4003000 <__alt_data_end+0xfc003000>
 4004600:	04010074 	movhi	r16,1025
 4004604:	84025004 	addi	r16,r16,2368
 4004608:	003f4706 	br	4004328 <__alt_data_end+0xfc004328>
 400460c:	d8c02d17 	ldw	r3,180(sp)
 4004610:	d9002f17 	ldw	r4,188(sp)
 4004614:	18800017 	ldw	r2,0(r3)
 4004618:	18c00104 	addi	r3,r3,4
 400461c:	d8c02d15 	stw	r3,180(sp)
 4004620:	11000015 	stw	r4,0(r2)
 4004624:	0038dd06 	br	400299c <__alt_data_end+0xfc00299c>
 4004628:	dd802617 	ldw	r22,152(sp)
 400462c:	00bfff44 	movi	r2,-3
 4004630:	b0801c16 	blt	r22,r2,40046a4 <___vfprintf_internal_r+0x1de8>
 4004634:	d9402917 	ldw	r5,164(sp)
 4004638:	2d801a16 	blt	r5,r22,40046a4 <___vfprintf_internal_r+0x1de8>
 400463c:	dd803215 	stw	r22,200(sp)
 4004640:	003e8906 	br	4004068 <__alt_data_end+0xfc004068>
 4004644:	01010074 	movhi	r4,1025
 4004648:	21025d84 	addi	r4,r4,2422
 400464c:	d9002b15 	stw	r4,172(sp)
 4004650:	003c9106 	br	4003898 <__alt_data_end+0xfc003898>
 4004654:	e005883a 	mov	r2,fp
 4004658:	003e7906 	br	4004040 <__alt_data_end+0xfc004040>
 400465c:	d9402917 	ldw	r5,164(sp)
 4004660:	df002783 	ldbu	fp,158(sp)
 4004664:	dcc02d15 	stw	r19,180(sp)
 4004668:	d9402a15 	stw	r5,168(sp)
 400466c:	d9402e15 	stw	r5,184(sp)
 4004670:	d8002915 	stw	zero,164(sp)
 4004674:	d8003215 	stw	zero,200(sp)
 4004678:	003a5d06 	br	4002ff0 <__alt_data_end+0xfc002ff0>
 400467c:	9080004c 	andi	r2,r18,1
 4004680:	0039883a 	mov	fp,zero
 4004684:	10000426 	beq	r2,zero,4004698 <___vfprintf_internal_r+0x1ddc>
 4004688:	00800c04 	movi	r2,48
 400468c:	dc001dc4 	addi	r16,sp,119
 4004690:	d8801dc5 	stb	r2,119(sp)
 4004694:	003b8006 	br	4003498 <__alt_data_end+0xfc003498>
 4004698:	d8002e15 	stw	zero,184(sp)
 400469c:	dc001e04 	addi	r16,sp,120
 40046a0:	003a4d06 	br	4002fd8 <__alt_data_end+0xfc002fd8>
 40046a4:	8c7fff84 	addi	r17,r17,-2
 40046a8:	b5bfffc4 	addi	r22,r22,-1
 40046ac:	dd802615 	stw	r22,152(sp)
 40046b0:	dc4022c5 	stb	r17,139(sp)
 40046b4:	b000bf16 	blt	r22,zero,40049b4 <___vfprintf_internal_r+0x20f8>
 40046b8:	00800ac4 	movi	r2,43
 40046bc:	d8802305 	stb	r2,140(sp)
 40046c0:	00800244 	movi	r2,9
 40046c4:	15807016 	blt	r2,r22,4004888 <___vfprintf_internal_r+0x1fcc>
 40046c8:	00800c04 	movi	r2,48
 40046cc:	b5800c04 	addi	r22,r22,48
 40046d0:	d8802345 	stb	r2,141(sp)
 40046d4:	dd802385 	stb	r22,142(sp)
 40046d8:	d88023c4 	addi	r2,sp,143
 40046dc:	df0022c4 	addi	fp,sp,139
 40046e0:	d8c03317 	ldw	r3,204(sp)
 40046e4:	1739c83a 	sub	fp,r2,fp
 40046e8:	d9003317 	ldw	r4,204(sp)
 40046ec:	e0c7883a 	add	r3,fp,r3
 40046f0:	df003a15 	stw	fp,232(sp)
 40046f4:	d8c02e15 	stw	r3,184(sp)
 40046f8:	00800044 	movi	r2,1
 40046fc:	1100b30e 	bge	r2,r4,40049cc <___vfprintf_internal_r+0x2110>
 4004700:	d8c02e17 	ldw	r3,184(sp)
 4004704:	18c00044 	addi	r3,r3,1
 4004708:	d8c02e15 	stw	r3,184(sp)
 400470c:	1805883a 	mov	r2,r3
 4004710:	1800ac16 	blt	r3,zero,40049c4 <___vfprintf_internal_r+0x2108>
 4004714:	d8003215 	stw	zero,200(sp)
 4004718:	003e5d06 	br	4004090 <__alt_data_end+0xfc004090>
 400471c:	d9002c17 	ldw	r4,176(sp)
 4004720:	d9801e04 	addi	r6,sp,120
 4004724:	b80b883a 	mov	r5,r23
 4004728:	400a0200 	call	400a020 <__sprint_r>
 400472c:	1039651e 	bne	r2,zero,4002cc4 <__alt_data_end+0xfc002cc4>
 4004730:	dc402617 	ldw	r17,152(sp)
 4004734:	d8c02017 	ldw	r3,128(sp)
 4004738:	d8801f17 	ldw	r2,124(sp)
 400473c:	da000404 	addi	r8,sp,16
 4004740:	003ed606 	br	400429c <__alt_data_end+0xfc00429c>
 4004744:	582b883a 	mov	r21,r11
 4004748:	d8002915 	stw	zero,164(sp)
 400474c:	0038bd06 	br	4002a44 <__alt_data_end+0xfc002a44>
 4004750:	d8802917 	ldw	r2,164(sp)
 4004754:	103e071e 	bne	r2,zero,4003f74 <__alt_data_end+0xfc003f74>
 4004758:	dc002915 	stw	r16,164(sp)
 400475c:	003e0506 	br	4003f74 <__alt_data_end+0xfc003f74>
 4004760:	d9002917 	ldw	r4,164(sp)
 4004764:	20c00044 	addi	r3,r4,1
 4004768:	003e0f06 	br	4003fa8 <__alt_data_end+0xfc003fa8>
 400476c:	01400184 	movi	r5,6
 4004770:	d9402915 	stw	r5,164(sp)
 4004774:	003dff06 	br	4003f74 <__alt_data_end+0xfc003f74>
 4004778:	d8802104 	addi	r2,sp,132
 400477c:	d8800315 	stw	r2,12(sp)
 4004780:	d8802504 	addi	r2,sp,148
 4004784:	d8800215 	stw	r2,8(sp)
 4004788:	d8802604 	addi	r2,sp,152
 400478c:	d8800115 	stw	r2,4(sp)
 4004790:	d8802917 	ldw	r2,164(sp)
 4004794:	d9403617 	ldw	r5,216(sp)
 4004798:	d9002c17 	ldw	r4,176(sp)
 400479c:	d8800015 	stw	r2,0(sp)
 40047a0:	01c000c4 	movi	r7,3
 40047a4:	980d883a 	mov	r6,r19
 40047a8:	da003d15 	stw	r8,244(sp)
 40047ac:	4004ee00 	call	4004ee0 <_dtoa_r>
 40047b0:	d8c02917 	ldw	r3,164(sp)
 40047b4:	da003d17 	ldw	r8,244(sp)
 40047b8:	1021883a 	mov	r16,r2
 40047bc:	10f9883a 	add	fp,r2,r3
 40047c0:	81000007 	ldb	r4,0(r16)
 40047c4:	00800c04 	movi	r2,48
 40047c8:	20805e26 	beq	r4,r2,4004944 <___vfprintf_internal_r+0x2088>
 40047cc:	d8c02617 	ldw	r3,152(sp)
 40047d0:	e0f9883a 	add	fp,fp,r3
 40047d4:	003e0a06 	br	4004000 <__alt_data_end+0xfc004000>
 40047d8:	00c00b44 	movi	r3,45
 40047dc:	24e0003c 	xorhi	r19,r4,32768
 40047e0:	d8c02a05 	stb	r3,168(sp)
 40047e4:	003de906 	br	4003f8c <__alt_data_end+0xfc003f8c>
 40047e8:	d8c03217 	ldw	r3,200(sp)
 40047ec:	00c07a0e 	bge	zero,r3,40049d8 <___vfprintf_internal_r+0x211c>
 40047f0:	00800044 	movi	r2,1
 40047f4:	d9003317 	ldw	r4,204(sp)
 40047f8:	1105883a 	add	r2,r2,r4
 40047fc:	d8802e15 	stw	r2,184(sp)
 4004800:	10004e16 	blt	r2,zero,400493c <___vfprintf_internal_r+0x2080>
 4004804:	044019c4 	movi	r17,103
 4004808:	003e2106 	br	4004090 <__alt_data_end+0xfc004090>
 400480c:	d9002917 	ldw	r4,164(sp)
 4004810:	d8802104 	addi	r2,sp,132
 4004814:	d8800315 	stw	r2,12(sp)
 4004818:	d9000015 	stw	r4,0(sp)
 400481c:	d8802504 	addi	r2,sp,148
 4004820:	d9403617 	ldw	r5,216(sp)
 4004824:	d9002c17 	ldw	r4,176(sp)
 4004828:	d8800215 	stw	r2,8(sp)
 400482c:	d8802604 	addi	r2,sp,152
 4004830:	d8800115 	stw	r2,4(sp)
 4004834:	01c000c4 	movi	r7,3
 4004838:	980d883a 	mov	r6,r19
 400483c:	da003d15 	stw	r8,244(sp)
 4004840:	4004ee00 	call	4004ee0 <_dtoa_r>
 4004844:	d8c02917 	ldw	r3,164(sp)
 4004848:	da003d17 	ldw	r8,244(sp)
 400484c:	1021883a 	mov	r16,r2
 4004850:	00801184 	movi	r2,70
 4004854:	80f9883a 	add	fp,r16,r3
 4004858:	88bfd926 	beq	r17,r2,40047c0 <__alt_data_end+0xfc0047c0>
 400485c:	003de806 	br	4004000 <__alt_data_end+0xfc004000>
 4004860:	d9002917 	ldw	r4,164(sp)
 4004864:	00c04d0e 	bge	zero,r3,400499c <___vfprintf_internal_r+0x20e0>
 4004868:	2000441e 	bne	r4,zero,400497c <___vfprintf_internal_r+0x20c0>
 400486c:	9480004c 	andi	r18,r18,1
 4004870:	9000421e 	bne	r18,zero,400497c <___vfprintf_internal_r+0x20c0>
 4004874:	1805883a 	mov	r2,r3
 4004878:	18007016 	blt	r3,zero,4004a3c <___vfprintf_internal_r+0x2180>
 400487c:	d8c03217 	ldw	r3,200(sp)
 4004880:	d8c02e15 	stw	r3,184(sp)
 4004884:	003e0206 	br	4004090 <__alt_data_end+0xfc004090>
 4004888:	df0022c4 	addi	fp,sp,139
 400488c:	dc002915 	stw	r16,164(sp)
 4004890:	4027883a 	mov	r19,r8
 4004894:	e021883a 	mov	r16,fp
 4004898:	b009883a 	mov	r4,r22
 400489c:	01400284 	movi	r5,10
 40048a0:	40009d00 	call	40009d0 <__modsi3>
 40048a4:	10800c04 	addi	r2,r2,48
 40048a8:	843fffc4 	addi	r16,r16,-1
 40048ac:	b009883a 	mov	r4,r22
 40048b0:	01400284 	movi	r5,10
 40048b4:	80800005 	stb	r2,0(r16)
 40048b8:	400094c0 	call	400094c <__divsi3>
 40048bc:	102d883a 	mov	r22,r2
 40048c0:	00800244 	movi	r2,9
 40048c4:	15bff416 	blt	r2,r22,4004898 <__alt_data_end+0xfc004898>
 40048c8:	9811883a 	mov	r8,r19
 40048cc:	b0800c04 	addi	r2,r22,48
 40048d0:	8027883a 	mov	r19,r16
 40048d4:	997fffc4 	addi	r5,r19,-1
 40048d8:	98bfffc5 	stb	r2,-1(r19)
 40048dc:	dc002917 	ldw	r16,164(sp)
 40048e0:	2f006a2e 	bgeu	r5,fp,4004a8c <___vfprintf_internal_r+0x21d0>
 40048e4:	d9c02384 	addi	r7,sp,142
 40048e8:	3ccfc83a 	sub	r7,r7,r19
 40048ec:	d9002344 	addi	r4,sp,141
 40048f0:	e1cf883a 	add	r7,fp,r7
 40048f4:	00000106 	br	40048fc <___vfprintf_internal_r+0x2040>
 40048f8:	28800003 	ldbu	r2,0(r5)
 40048fc:	20800005 	stb	r2,0(r4)
 4004900:	21000044 	addi	r4,r4,1
 4004904:	29400044 	addi	r5,r5,1
 4004908:	393ffb1e 	bne	r7,r4,40048f8 <__alt_data_end+0xfc0048f8>
 400490c:	d8802304 	addi	r2,sp,140
 4004910:	14c5c83a 	sub	r2,r2,r19
 4004914:	d8c02344 	addi	r3,sp,141
 4004918:	1885883a 	add	r2,r3,r2
 400491c:	003f7006 	br	40046e0 <__alt_data_end+0xfc0046e0>
 4004920:	0005883a 	mov	r2,zero
 4004924:	003f0f06 	br	4004564 <__alt_data_end+0xfc004564>
 4004928:	d8c03217 	ldw	r3,200(sp)
 400492c:	18c00044 	addi	r3,r3,1
 4004930:	d8c02e15 	stw	r3,184(sp)
 4004934:	1805883a 	mov	r2,r3
 4004938:	183fb20e 	bge	r3,zero,4004804 <__alt_data_end+0xfc004804>
 400493c:	0005883a 	mov	r2,zero
 4004940:	003fb006 	br	4004804 <__alt_data_end+0xfc004804>
 4004944:	d9003617 	ldw	r4,216(sp)
 4004948:	000d883a 	mov	r6,zero
 400494c:	000f883a 	mov	r7,zero
 4004950:	980b883a 	mov	r5,r19
 4004954:	d8c03c15 	stw	r3,240(sp)
 4004958:	da003d15 	stw	r8,244(sp)
 400495c:	400d1fc0 	call	400d1fc <__eqdf2>
 4004960:	d8c03c17 	ldw	r3,240(sp)
 4004964:	da003d17 	ldw	r8,244(sp)
 4004968:	103f9826 	beq	r2,zero,40047cc <__alt_data_end+0xfc0047cc>
 400496c:	00800044 	movi	r2,1
 4004970:	10c7c83a 	sub	r3,r2,r3
 4004974:	d8c02615 	stw	r3,152(sp)
 4004978:	003f9506 	br	40047d0 <__alt_data_end+0xfc0047d0>
 400497c:	d9002917 	ldw	r4,164(sp)
 4004980:	d8c03217 	ldw	r3,200(sp)
 4004984:	20800044 	addi	r2,r4,1
 4004988:	1885883a 	add	r2,r3,r2
 400498c:	d8802e15 	stw	r2,184(sp)
 4004990:	103dbf0e 	bge	r2,zero,4004090 <__alt_data_end+0xfc004090>
 4004994:	0005883a 	mov	r2,zero
 4004998:	003dbd06 	br	4004090 <__alt_data_end+0xfc004090>
 400499c:	2000211e 	bne	r4,zero,4004a24 <___vfprintf_internal_r+0x2168>
 40049a0:	9480004c 	andi	r18,r18,1
 40049a4:	90001f1e 	bne	r18,zero,4004a24 <___vfprintf_internal_r+0x2168>
 40049a8:	00800044 	movi	r2,1
 40049ac:	d8802e15 	stw	r2,184(sp)
 40049b0:	003db706 	br	4004090 <__alt_data_end+0xfc004090>
 40049b4:	00800b44 	movi	r2,45
 40049b8:	05adc83a 	sub	r22,zero,r22
 40049bc:	d8802305 	stb	r2,140(sp)
 40049c0:	003f3f06 	br	40046c0 <__alt_data_end+0xfc0046c0>
 40049c4:	0005883a 	mov	r2,zero
 40049c8:	003f5206 	br	4004714 <__alt_data_end+0xfc004714>
 40049cc:	90a4703a 	and	r18,r18,r2
 40049d0:	903f4e26 	beq	r18,zero,400470c <__alt_data_end+0xfc00470c>
 40049d4:	003f4a06 	br	4004700 <__alt_data_end+0xfc004700>
 40049d8:	00800084 	movi	r2,2
 40049dc:	10c5c83a 	sub	r2,r2,r3
 40049e0:	003f8406 	br	40047f4 <__alt_data_end+0xfc0047f4>
 40049e4:	d8802d17 	ldw	r2,180(sp)
 40049e8:	d9002d17 	ldw	r4,180(sp)
 40049ec:	ac400043 	ldbu	r17,1(r21)
 40049f0:	10800017 	ldw	r2,0(r2)
 40049f4:	582b883a 	mov	r21,r11
 40049f8:	d8802915 	stw	r2,164(sp)
 40049fc:	20800104 	addi	r2,r4,4
 4004a00:	d9002917 	ldw	r4,164(sp)
 4004a04:	d8802d15 	stw	r2,180(sp)
 4004a08:	203e7a0e 	bge	r4,zero,40043f4 <__alt_data_end+0xfc0043f4>
 4004a0c:	8c403fcc 	andi	r17,r17,255
 4004a10:	00bfffc4 	movi	r2,-1
 4004a14:	8c40201c 	xori	r17,r17,128
 4004a18:	d8802915 	stw	r2,164(sp)
 4004a1c:	8c7fe004 	addi	r17,r17,-128
 4004a20:	00380706 	br	4002a40 <__alt_data_end+0xfc002a40>
 4004a24:	d8c02917 	ldw	r3,164(sp)
 4004a28:	18c00084 	addi	r3,r3,2
 4004a2c:	d8c02e15 	stw	r3,184(sp)
 4004a30:	1805883a 	mov	r2,r3
 4004a34:	183d960e 	bge	r3,zero,4004090 <__alt_data_end+0xfc004090>
 4004a38:	003fd606 	br	4004994 <__alt_data_end+0xfc004994>
 4004a3c:	0005883a 	mov	r2,zero
 4004a40:	003f8e06 	br	400487c <__alt_data_end+0xfc00487c>
 4004a44:	9080004c 	andi	r2,r18,1
 4004a48:	103f811e 	bne	r2,zero,4004850 <__alt_data_end+0xfc004850>
 4004a4c:	d8802117 	ldw	r2,132(sp)
 4004a50:	1405c83a 	sub	r2,r2,r16
 4004a54:	d8803315 	stw	r2,204(sp)
 4004a58:	b47ef326 	beq	r22,r17,4004628 <__alt_data_end+0xfc004628>
 4004a5c:	dd802617 	ldw	r22,152(sp)
 4004a60:	003f1106 	br	40046a8 <__alt_data_end+0xfc0046a8>
 4004a64:	d9c02785 	stb	r7,158(sp)
 4004a68:	00390406 	br	4002e7c <__alt_data_end+0xfc002e7c>
 4004a6c:	d9c02785 	stb	r7,158(sp)
 4004a70:	0038d306 	br	4002dc0 <__alt_data_end+0xfc002dc0>
 4004a74:	d9c02785 	stb	r7,158(sp)
 4004a78:	003a6106 	br	4003400 <__alt_data_end+0xfc003400>
 4004a7c:	d9c02785 	stb	r7,158(sp)
 4004a80:	003af806 	br	4003664 <__alt_data_end+0xfc003664>
 4004a84:	0005883a 	mov	r2,zero
 4004a88:	003d7e06 	br	4004084 <__alt_data_end+0xfc004084>
 4004a8c:	d8802344 	addi	r2,sp,141
 4004a90:	003f1306 	br	40046e0 <__alt_data_end+0xfc0046e0>
 4004a94:	d9c02785 	stb	r7,158(sp)
 4004a98:	00392306 	br	4002f28 <__alt_data_end+0xfc002f28>
 4004a9c:	d9c02785 	stb	r7,158(sp)
 4004aa0:	003aa906 	br	4003548 <__alt_data_end+0xfc003548>
 4004aa4:	d9c02785 	stb	r7,158(sp)
 4004aa8:	003a3d06 	br	40033a0 <__alt_data_end+0xfc0033a0>
 4004aac:	d9c02785 	stb	r7,158(sp)
 4004ab0:	003aca06 	br	40035dc <__alt_data_end+0xfc0035dc>

04004ab4 <__vfprintf_internal>:
 4004ab4:	00810074 	movhi	r2,1025
 4004ab8:	10897804 	addi	r2,r2,9696
 4004abc:	300f883a 	mov	r7,r6
 4004ac0:	280d883a 	mov	r6,r5
 4004ac4:	200b883a 	mov	r5,r4
 4004ac8:	11000017 	ldw	r4,0(r2)
 4004acc:	40028bc1 	jmpi	40028bc <___vfprintf_internal_r>

04004ad0 <__sbprintf>:
 4004ad0:	2880030b 	ldhu	r2,12(r5)
 4004ad4:	2ac01917 	ldw	r11,100(r5)
 4004ad8:	2a80038b 	ldhu	r10,14(r5)
 4004adc:	2a400717 	ldw	r9,28(r5)
 4004ae0:	2a000917 	ldw	r8,36(r5)
 4004ae4:	defee204 	addi	sp,sp,-1144
 4004ae8:	00c10004 	movi	r3,1024
 4004aec:	dc011a15 	stw	r16,1128(sp)
 4004af0:	10bfff4c 	andi	r2,r2,65533
 4004af4:	2821883a 	mov	r16,r5
 4004af8:	d8cb883a 	add	r5,sp,r3
 4004afc:	dc811c15 	stw	r18,1136(sp)
 4004b00:	dc411b15 	stw	r17,1132(sp)
 4004b04:	dfc11d15 	stw	ra,1140(sp)
 4004b08:	2025883a 	mov	r18,r4
 4004b0c:	d881030d 	sth	r2,1036(sp)
 4004b10:	dac11915 	stw	r11,1124(sp)
 4004b14:	da81038d 	sth	r10,1038(sp)
 4004b18:	da410715 	stw	r9,1052(sp)
 4004b1c:	da010915 	stw	r8,1060(sp)
 4004b20:	dec10015 	stw	sp,1024(sp)
 4004b24:	dec10415 	stw	sp,1040(sp)
 4004b28:	d8c10215 	stw	r3,1032(sp)
 4004b2c:	d8c10515 	stw	r3,1044(sp)
 4004b30:	d8010615 	stw	zero,1048(sp)
 4004b34:	40028bc0 	call	40028bc <___vfprintf_internal_r>
 4004b38:	1023883a 	mov	r17,r2
 4004b3c:	10000416 	blt	r2,zero,4004b50 <__sbprintf+0x80>
 4004b40:	d9410004 	addi	r5,sp,1024
 4004b44:	9009883a 	mov	r4,r18
 4004b48:	40067840 	call	4006784 <_fflush_r>
 4004b4c:	10000d1e 	bne	r2,zero,4004b84 <__sbprintf+0xb4>
 4004b50:	d881030b 	ldhu	r2,1036(sp)
 4004b54:	1080100c 	andi	r2,r2,64
 4004b58:	10000326 	beq	r2,zero,4004b68 <__sbprintf+0x98>
 4004b5c:	8080030b 	ldhu	r2,12(r16)
 4004b60:	10801014 	ori	r2,r2,64
 4004b64:	8080030d 	sth	r2,12(r16)
 4004b68:	8805883a 	mov	r2,r17
 4004b6c:	dfc11d17 	ldw	ra,1140(sp)
 4004b70:	dc811c17 	ldw	r18,1136(sp)
 4004b74:	dc411b17 	ldw	r17,1132(sp)
 4004b78:	dc011a17 	ldw	r16,1128(sp)
 4004b7c:	dec11e04 	addi	sp,sp,1144
 4004b80:	f800283a 	ret
 4004b84:	047fffc4 	movi	r17,-1
 4004b88:	003ff106 	br	4004b50 <__alt_data_end+0xfc004b50>

04004b8c <__swsetup_r>:
 4004b8c:	00810074 	movhi	r2,1025
 4004b90:	defffd04 	addi	sp,sp,-12
 4004b94:	10897804 	addi	r2,r2,9696
 4004b98:	dc400115 	stw	r17,4(sp)
 4004b9c:	2023883a 	mov	r17,r4
 4004ba0:	11000017 	ldw	r4,0(r2)
 4004ba4:	dc000015 	stw	r16,0(sp)
 4004ba8:	dfc00215 	stw	ra,8(sp)
 4004bac:	2821883a 	mov	r16,r5
 4004bb0:	20000226 	beq	r4,zero,4004bbc <__swsetup_r+0x30>
 4004bb4:	20800e17 	ldw	r2,56(r4)
 4004bb8:	10003126 	beq	r2,zero,4004c80 <__swsetup_r+0xf4>
 4004bbc:	8080030b 	ldhu	r2,12(r16)
 4004bc0:	10c0020c 	andi	r3,r2,8
 4004bc4:	1009883a 	mov	r4,r2
 4004bc8:	18000f26 	beq	r3,zero,4004c08 <__swsetup_r+0x7c>
 4004bcc:	80c00417 	ldw	r3,16(r16)
 4004bd0:	18001526 	beq	r3,zero,4004c28 <__swsetup_r+0x9c>
 4004bd4:	1100004c 	andi	r4,r2,1
 4004bd8:	20001c1e 	bne	r4,zero,4004c4c <__swsetup_r+0xc0>
 4004bdc:	1080008c 	andi	r2,r2,2
 4004be0:	1000291e 	bne	r2,zero,4004c88 <__swsetup_r+0xfc>
 4004be4:	80800517 	ldw	r2,20(r16)
 4004be8:	80800215 	stw	r2,8(r16)
 4004bec:	18001c26 	beq	r3,zero,4004c60 <__swsetup_r+0xd4>
 4004bf0:	0005883a 	mov	r2,zero
 4004bf4:	dfc00217 	ldw	ra,8(sp)
 4004bf8:	dc400117 	ldw	r17,4(sp)
 4004bfc:	dc000017 	ldw	r16,0(sp)
 4004c00:	dec00304 	addi	sp,sp,12
 4004c04:	f800283a 	ret
 4004c08:	2080040c 	andi	r2,r4,16
 4004c0c:	10002e26 	beq	r2,zero,4004cc8 <__swsetup_r+0x13c>
 4004c10:	2080010c 	andi	r2,r4,4
 4004c14:	10001e1e 	bne	r2,zero,4004c90 <__swsetup_r+0x104>
 4004c18:	80c00417 	ldw	r3,16(r16)
 4004c1c:	20800214 	ori	r2,r4,8
 4004c20:	8080030d 	sth	r2,12(r16)
 4004c24:	183feb1e 	bne	r3,zero,4004bd4 <__alt_data_end+0xfc004bd4>
 4004c28:	1100a00c 	andi	r4,r2,640
 4004c2c:	01408004 	movi	r5,512
 4004c30:	217fe826 	beq	r4,r5,4004bd4 <__alt_data_end+0xfc004bd4>
 4004c34:	800b883a 	mov	r5,r16
 4004c38:	8809883a 	mov	r4,r17
 4004c3c:	40077040 	call	4007704 <__smakebuf_r>
 4004c40:	8080030b 	ldhu	r2,12(r16)
 4004c44:	80c00417 	ldw	r3,16(r16)
 4004c48:	003fe206 	br	4004bd4 <__alt_data_end+0xfc004bd4>
 4004c4c:	80800517 	ldw	r2,20(r16)
 4004c50:	80000215 	stw	zero,8(r16)
 4004c54:	0085c83a 	sub	r2,zero,r2
 4004c58:	80800615 	stw	r2,24(r16)
 4004c5c:	183fe41e 	bne	r3,zero,4004bf0 <__alt_data_end+0xfc004bf0>
 4004c60:	80c0030b 	ldhu	r3,12(r16)
 4004c64:	0005883a 	mov	r2,zero
 4004c68:	1900200c 	andi	r4,r3,128
 4004c6c:	203fe126 	beq	r4,zero,4004bf4 <__alt_data_end+0xfc004bf4>
 4004c70:	18c01014 	ori	r3,r3,64
 4004c74:	80c0030d 	sth	r3,12(r16)
 4004c78:	00bfffc4 	movi	r2,-1
 4004c7c:	003fdd06 	br	4004bf4 <__alt_data_end+0xfc004bf4>
 4004c80:	4006b600 	call	4006b60 <__sinit>
 4004c84:	003fcd06 	br	4004bbc <__alt_data_end+0xfc004bbc>
 4004c88:	0005883a 	mov	r2,zero
 4004c8c:	003fd606 	br	4004be8 <__alt_data_end+0xfc004be8>
 4004c90:	81400c17 	ldw	r5,48(r16)
 4004c94:	28000626 	beq	r5,zero,4004cb0 <__swsetup_r+0x124>
 4004c98:	80801004 	addi	r2,r16,64
 4004c9c:	28800326 	beq	r5,r2,4004cac <__swsetup_r+0x120>
 4004ca0:	8809883a 	mov	r4,r17
 4004ca4:	4006cd40 	call	4006cd4 <_free_r>
 4004ca8:	8100030b 	ldhu	r4,12(r16)
 4004cac:	80000c15 	stw	zero,48(r16)
 4004cb0:	80c00417 	ldw	r3,16(r16)
 4004cb4:	00bff6c4 	movi	r2,-37
 4004cb8:	1108703a 	and	r4,r2,r4
 4004cbc:	80000115 	stw	zero,4(r16)
 4004cc0:	80c00015 	stw	r3,0(r16)
 4004cc4:	003fd506 	br	4004c1c <__alt_data_end+0xfc004c1c>
 4004cc8:	00800244 	movi	r2,9
 4004ccc:	88800015 	stw	r2,0(r17)
 4004cd0:	20801014 	ori	r2,r4,64
 4004cd4:	8080030d 	sth	r2,12(r16)
 4004cd8:	00bfffc4 	movi	r2,-1
 4004cdc:	003fc506 	br	4004bf4 <__alt_data_end+0xfc004bf4>

04004ce0 <quorem>:
 4004ce0:	defff704 	addi	sp,sp,-36
 4004ce4:	dc800215 	stw	r18,8(sp)
 4004ce8:	20800417 	ldw	r2,16(r4)
 4004cec:	2c800417 	ldw	r18,16(r5)
 4004cf0:	dfc00815 	stw	ra,32(sp)
 4004cf4:	ddc00715 	stw	r23,28(sp)
 4004cf8:	dd800615 	stw	r22,24(sp)
 4004cfc:	dd400515 	stw	r21,20(sp)
 4004d00:	dd000415 	stw	r20,16(sp)
 4004d04:	dcc00315 	stw	r19,12(sp)
 4004d08:	dc400115 	stw	r17,4(sp)
 4004d0c:	dc000015 	stw	r16,0(sp)
 4004d10:	14807116 	blt	r2,r18,4004ed8 <quorem+0x1f8>
 4004d14:	94bfffc4 	addi	r18,r18,-1
 4004d18:	94ad883a 	add	r22,r18,r18
 4004d1c:	b5ad883a 	add	r22,r22,r22
 4004d20:	2c400504 	addi	r17,r5,20
 4004d24:	8da9883a 	add	r20,r17,r22
 4004d28:	25400504 	addi	r21,r4,20
 4004d2c:	282f883a 	mov	r23,r5
 4004d30:	adad883a 	add	r22,r21,r22
 4004d34:	a1400017 	ldw	r5,0(r20)
 4004d38:	2021883a 	mov	r16,r4
 4004d3c:	b1000017 	ldw	r4,0(r22)
 4004d40:	29400044 	addi	r5,r5,1
 4004d44:	4000a440 	call	4000a44 <__udivsi3>
 4004d48:	1027883a 	mov	r19,r2
 4004d4c:	10002c26 	beq	r2,zero,4004e00 <quorem+0x120>
 4004d50:	a813883a 	mov	r9,r21
 4004d54:	880b883a 	mov	r5,r17
 4004d58:	0009883a 	mov	r4,zero
 4004d5c:	000d883a 	mov	r6,zero
 4004d60:	2a000017 	ldw	r8,0(r5)
 4004d64:	49c00017 	ldw	r7,0(r9)
 4004d68:	29400104 	addi	r5,r5,4
 4004d6c:	40bfffcc 	andi	r2,r8,65535
 4004d70:	14c5383a 	mul	r2,r2,r19
 4004d74:	4010d43a 	srli	r8,r8,16
 4004d78:	38ffffcc 	andi	r3,r7,65535
 4004d7c:	1105883a 	add	r2,r2,r4
 4004d80:	1008d43a 	srli	r4,r2,16
 4004d84:	44d1383a 	mul	r8,r8,r19
 4004d88:	198d883a 	add	r6,r3,r6
 4004d8c:	10ffffcc 	andi	r3,r2,65535
 4004d90:	30c7c83a 	sub	r3,r6,r3
 4004d94:	380ed43a 	srli	r7,r7,16
 4004d98:	4105883a 	add	r2,r8,r4
 4004d9c:	180dd43a 	srai	r6,r3,16
 4004da0:	113fffcc 	andi	r4,r2,65535
 4004da4:	390fc83a 	sub	r7,r7,r4
 4004da8:	398d883a 	add	r6,r7,r6
 4004dac:	300e943a 	slli	r7,r6,16
 4004db0:	18ffffcc 	andi	r3,r3,65535
 4004db4:	1008d43a 	srli	r4,r2,16
 4004db8:	38ceb03a 	or	r7,r7,r3
 4004dbc:	49c00015 	stw	r7,0(r9)
 4004dc0:	300dd43a 	srai	r6,r6,16
 4004dc4:	4a400104 	addi	r9,r9,4
 4004dc8:	a17fe52e 	bgeu	r20,r5,4004d60 <__alt_data_end+0xfc004d60>
 4004dcc:	b0800017 	ldw	r2,0(r22)
 4004dd0:	10000b1e 	bne	r2,zero,4004e00 <quorem+0x120>
 4004dd4:	b0bfff04 	addi	r2,r22,-4
 4004dd8:	a880082e 	bgeu	r21,r2,4004dfc <quorem+0x11c>
 4004ddc:	b0ffff17 	ldw	r3,-4(r22)
 4004de0:	18000326 	beq	r3,zero,4004df0 <quorem+0x110>
 4004de4:	00000506 	br	4004dfc <quorem+0x11c>
 4004de8:	10c00017 	ldw	r3,0(r2)
 4004dec:	1800031e 	bne	r3,zero,4004dfc <quorem+0x11c>
 4004df0:	10bfff04 	addi	r2,r2,-4
 4004df4:	94bfffc4 	addi	r18,r18,-1
 4004df8:	a8bffb36 	bltu	r21,r2,4004de8 <__alt_data_end+0xfc004de8>
 4004dfc:	84800415 	stw	r18,16(r16)
 4004e00:	b80b883a 	mov	r5,r23
 4004e04:	8009883a 	mov	r4,r16
 4004e08:	4008e440 	call	4008e44 <__mcmp>
 4004e0c:	10002616 	blt	r2,zero,4004ea8 <quorem+0x1c8>
 4004e10:	9cc00044 	addi	r19,r19,1
 4004e14:	a805883a 	mov	r2,r21
 4004e18:	000b883a 	mov	r5,zero
 4004e1c:	11000017 	ldw	r4,0(r2)
 4004e20:	89800017 	ldw	r6,0(r17)
 4004e24:	10800104 	addi	r2,r2,4
 4004e28:	20ffffcc 	andi	r3,r4,65535
 4004e2c:	194b883a 	add	r5,r3,r5
 4004e30:	30ffffcc 	andi	r3,r6,65535
 4004e34:	28c7c83a 	sub	r3,r5,r3
 4004e38:	300cd43a 	srli	r6,r6,16
 4004e3c:	2008d43a 	srli	r4,r4,16
 4004e40:	180bd43a 	srai	r5,r3,16
 4004e44:	18ffffcc 	andi	r3,r3,65535
 4004e48:	2189c83a 	sub	r4,r4,r6
 4004e4c:	2149883a 	add	r4,r4,r5
 4004e50:	200c943a 	slli	r6,r4,16
 4004e54:	8c400104 	addi	r17,r17,4
 4004e58:	200bd43a 	srai	r5,r4,16
 4004e5c:	30c6b03a 	or	r3,r6,r3
 4004e60:	10ffff15 	stw	r3,-4(r2)
 4004e64:	a47fed2e 	bgeu	r20,r17,4004e1c <__alt_data_end+0xfc004e1c>
 4004e68:	9485883a 	add	r2,r18,r18
 4004e6c:	1085883a 	add	r2,r2,r2
 4004e70:	a887883a 	add	r3,r21,r2
 4004e74:	18800017 	ldw	r2,0(r3)
 4004e78:	10000b1e 	bne	r2,zero,4004ea8 <quorem+0x1c8>
 4004e7c:	18bfff04 	addi	r2,r3,-4
 4004e80:	a880082e 	bgeu	r21,r2,4004ea4 <quorem+0x1c4>
 4004e84:	18ffff17 	ldw	r3,-4(r3)
 4004e88:	18000326 	beq	r3,zero,4004e98 <quorem+0x1b8>
 4004e8c:	00000506 	br	4004ea4 <quorem+0x1c4>
 4004e90:	10c00017 	ldw	r3,0(r2)
 4004e94:	1800031e 	bne	r3,zero,4004ea4 <quorem+0x1c4>
 4004e98:	10bfff04 	addi	r2,r2,-4
 4004e9c:	94bfffc4 	addi	r18,r18,-1
 4004ea0:	a8bffb36 	bltu	r21,r2,4004e90 <__alt_data_end+0xfc004e90>
 4004ea4:	84800415 	stw	r18,16(r16)
 4004ea8:	9805883a 	mov	r2,r19
 4004eac:	dfc00817 	ldw	ra,32(sp)
 4004eb0:	ddc00717 	ldw	r23,28(sp)
 4004eb4:	dd800617 	ldw	r22,24(sp)
 4004eb8:	dd400517 	ldw	r21,20(sp)
 4004ebc:	dd000417 	ldw	r20,16(sp)
 4004ec0:	dcc00317 	ldw	r19,12(sp)
 4004ec4:	dc800217 	ldw	r18,8(sp)
 4004ec8:	dc400117 	ldw	r17,4(sp)
 4004ecc:	dc000017 	ldw	r16,0(sp)
 4004ed0:	dec00904 	addi	sp,sp,36
 4004ed4:	f800283a 	ret
 4004ed8:	0005883a 	mov	r2,zero
 4004edc:	003ff306 	br	4004eac <__alt_data_end+0xfc004eac>

04004ee0 <_dtoa_r>:
 4004ee0:	20801017 	ldw	r2,64(r4)
 4004ee4:	deffde04 	addi	sp,sp,-136
 4004ee8:	df002015 	stw	fp,128(sp)
 4004eec:	dcc01b15 	stw	r19,108(sp)
 4004ef0:	dc801a15 	stw	r18,104(sp)
 4004ef4:	dc401915 	stw	r17,100(sp)
 4004ef8:	dc001815 	stw	r16,96(sp)
 4004efc:	dfc02115 	stw	ra,132(sp)
 4004f00:	ddc01f15 	stw	r23,124(sp)
 4004f04:	dd801e15 	stw	r22,120(sp)
 4004f08:	dd401d15 	stw	r21,116(sp)
 4004f0c:	dd001c15 	stw	r20,112(sp)
 4004f10:	d9c00315 	stw	r7,12(sp)
 4004f14:	2039883a 	mov	fp,r4
 4004f18:	3023883a 	mov	r17,r6
 4004f1c:	2825883a 	mov	r18,r5
 4004f20:	dc002417 	ldw	r16,144(sp)
 4004f24:	3027883a 	mov	r19,r6
 4004f28:	10000826 	beq	r2,zero,4004f4c <_dtoa_r+0x6c>
 4004f2c:	21801117 	ldw	r6,68(r4)
 4004f30:	00c00044 	movi	r3,1
 4004f34:	100b883a 	mov	r5,r2
 4004f38:	1986983a 	sll	r3,r3,r6
 4004f3c:	11800115 	stw	r6,4(r2)
 4004f40:	10c00215 	stw	r3,8(r2)
 4004f44:	40086240 	call	4008624 <_Bfree>
 4004f48:	e0001015 	stw	zero,64(fp)
 4004f4c:	88002e16 	blt	r17,zero,4005008 <_dtoa_r+0x128>
 4004f50:	80000015 	stw	zero,0(r16)
 4004f54:	889ffc2c 	andhi	r2,r17,32752
 4004f58:	00dffc34 	movhi	r3,32752
 4004f5c:	10c01c26 	beq	r2,r3,4004fd0 <_dtoa_r+0xf0>
 4004f60:	000d883a 	mov	r6,zero
 4004f64:	000f883a 	mov	r7,zero
 4004f68:	9009883a 	mov	r4,r18
 4004f6c:	980b883a 	mov	r5,r19
 4004f70:	400d1fc0 	call	400d1fc <__eqdf2>
 4004f74:	10002b1e 	bne	r2,zero,4005024 <_dtoa_r+0x144>
 4004f78:	d9c02317 	ldw	r7,140(sp)
 4004f7c:	00800044 	movi	r2,1
 4004f80:	38800015 	stw	r2,0(r7)
 4004f84:	d8802517 	ldw	r2,148(sp)
 4004f88:	10019e26 	beq	r2,zero,4005604 <_dtoa_r+0x724>
 4004f8c:	d8c02517 	ldw	r3,148(sp)
 4004f90:	00810074 	movhi	r2,1025
 4004f94:	10825d44 	addi	r2,r2,2421
 4004f98:	18800015 	stw	r2,0(r3)
 4004f9c:	10bfffc4 	addi	r2,r2,-1
 4004fa0:	dfc02117 	ldw	ra,132(sp)
 4004fa4:	df002017 	ldw	fp,128(sp)
 4004fa8:	ddc01f17 	ldw	r23,124(sp)
 4004fac:	dd801e17 	ldw	r22,120(sp)
 4004fb0:	dd401d17 	ldw	r21,116(sp)
 4004fb4:	dd001c17 	ldw	r20,112(sp)
 4004fb8:	dcc01b17 	ldw	r19,108(sp)
 4004fbc:	dc801a17 	ldw	r18,104(sp)
 4004fc0:	dc401917 	ldw	r17,100(sp)
 4004fc4:	dc001817 	ldw	r16,96(sp)
 4004fc8:	dec02204 	addi	sp,sp,136
 4004fcc:	f800283a 	ret
 4004fd0:	d8c02317 	ldw	r3,140(sp)
 4004fd4:	0089c3c4 	movi	r2,9999
 4004fd8:	18800015 	stw	r2,0(r3)
 4004fdc:	90017726 	beq	r18,zero,40055bc <_dtoa_r+0x6dc>
 4004fe0:	00810074 	movhi	r2,1025
 4004fe4:	10826904 	addi	r2,r2,2468
 4004fe8:	d9002517 	ldw	r4,148(sp)
 4004fec:	203fec26 	beq	r4,zero,4004fa0 <__alt_data_end+0xfc004fa0>
 4004ff0:	10c000c7 	ldb	r3,3(r2)
 4004ff4:	1801781e 	bne	r3,zero,40055d8 <_dtoa_r+0x6f8>
 4004ff8:	10c000c4 	addi	r3,r2,3
 4004ffc:	d9802517 	ldw	r6,148(sp)
 4005000:	30c00015 	stw	r3,0(r6)
 4005004:	003fe606 	br	4004fa0 <__alt_data_end+0xfc004fa0>
 4005008:	04e00034 	movhi	r19,32768
 400500c:	9cffffc4 	addi	r19,r19,-1
 4005010:	00800044 	movi	r2,1
 4005014:	8ce6703a 	and	r19,r17,r19
 4005018:	80800015 	stw	r2,0(r16)
 400501c:	9823883a 	mov	r17,r19
 4005020:	003fcc06 	br	4004f54 <__alt_data_end+0xfc004f54>
 4005024:	d8800204 	addi	r2,sp,8
 4005028:	d8800015 	stw	r2,0(sp)
 400502c:	d9c00104 	addi	r7,sp,4
 4005030:	900b883a 	mov	r5,r18
 4005034:	980d883a 	mov	r6,r19
 4005038:	e009883a 	mov	r4,fp
 400503c:	8820d53a 	srli	r16,r17,20
 4005040:	40092100 	call	4009210 <__d2b>
 4005044:	d8800915 	stw	r2,36(sp)
 4005048:	8001651e 	bne	r16,zero,40055e0 <_dtoa_r+0x700>
 400504c:	dd800217 	ldw	r22,8(sp)
 4005050:	dc000117 	ldw	r16,4(sp)
 4005054:	00800804 	movi	r2,32
 4005058:	b421883a 	add	r16,r22,r16
 400505c:	80c10c84 	addi	r3,r16,1074
 4005060:	10c2d10e 	bge	r2,r3,4005ba8 <_dtoa_r+0xcc8>
 4005064:	00801004 	movi	r2,64
 4005068:	81010484 	addi	r4,r16,1042
 400506c:	10c7c83a 	sub	r3,r2,r3
 4005070:	9108d83a 	srl	r4,r18,r4
 4005074:	88e2983a 	sll	r17,r17,r3
 4005078:	2448b03a 	or	r4,r4,r17
 400507c:	400deac0 	call	400deac <__floatunsidf>
 4005080:	017f8434 	movhi	r5,65040
 4005084:	01800044 	movi	r6,1
 4005088:	1009883a 	mov	r4,r2
 400508c:	194b883a 	add	r5,r3,r5
 4005090:	843fffc4 	addi	r16,r16,-1
 4005094:	d9801115 	stw	r6,68(sp)
 4005098:	000d883a 	mov	r6,zero
 400509c:	01cffe34 	movhi	r7,16376
 40050a0:	400d4540 	call	400d454 <__subdf3>
 40050a4:	0198dbf4 	movhi	r6,25455
 40050a8:	01cff4f4 	movhi	r7,16339
 40050ac:	3190d844 	addi	r6,r6,17249
 40050b0:	39e1e9c4 	addi	r7,r7,-30809
 40050b4:	1009883a 	mov	r4,r2
 40050b8:	180b883a 	mov	r5,r3
 40050bc:	4001e380 	call	4001e38 <__muldf3>
 40050c0:	01a2d874 	movhi	r6,35681
 40050c4:	01cff1f4 	movhi	r7,16327
 40050c8:	31b22cc4 	addi	r6,r6,-14157
 40050cc:	39e28a04 	addi	r7,r7,-30168
 40050d0:	180b883a 	mov	r5,r3
 40050d4:	1009883a 	mov	r4,r2
 40050d8:	400c9500 	call	400c950 <__adddf3>
 40050dc:	8009883a 	mov	r4,r16
 40050e0:	1029883a 	mov	r20,r2
 40050e4:	1823883a 	mov	r17,r3
 40050e8:	400ddd00 	call	400ddd0 <__floatsidf>
 40050ec:	019427f4 	movhi	r6,20639
 40050f0:	01cff4f4 	movhi	r7,16339
 40050f4:	319e7ec4 	addi	r6,r6,31227
 40050f8:	39d104c4 	addi	r7,r7,17427
 40050fc:	1009883a 	mov	r4,r2
 4005100:	180b883a 	mov	r5,r3
 4005104:	4001e380 	call	4001e38 <__muldf3>
 4005108:	100d883a 	mov	r6,r2
 400510c:	180f883a 	mov	r7,r3
 4005110:	a009883a 	mov	r4,r20
 4005114:	880b883a 	mov	r5,r17
 4005118:	400c9500 	call	400c950 <__adddf3>
 400511c:	1009883a 	mov	r4,r2
 4005120:	180b883a 	mov	r5,r3
 4005124:	1029883a 	mov	r20,r2
 4005128:	1823883a 	mov	r17,r3
 400512c:	400dd500 	call	400dd50 <__fixdfsi>
 4005130:	000d883a 	mov	r6,zero
 4005134:	000f883a 	mov	r7,zero
 4005138:	a009883a 	mov	r4,r20
 400513c:	880b883a 	mov	r5,r17
 4005140:	d8800515 	stw	r2,20(sp)
 4005144:	400d3600 	call	400d360 <__ledf2>
 4005148:	10028716 	blt	r2,zero,4005b68 <_dtoa_r+0xc88>
 400514c:	d8c00517 	ldw	r3,20(sp)
 4005150:	00800584 	movi	r2,22
 4005154:	10c27536 	bltu	r2,r3,4005b2c <_dtoa_r+0xc4c>
 4005158:	180490fa 	slli	r2,r3,3
 400515c:	00c10074 	movhi	r3,1025
 4005160:	18c28504 	addi	r3,r3,2580
 4005164:	1885883a 	add	r2,r3,r2
 4005168:	11000017 	ldw	r4,0(r2)
 400516c:	11400117 	ldw	r5,4(r2)
 4005170:	900d883a 	mov	r6,r18
 4005174:	980f883a 	mov	r7,r19
 4005178:	400d2840 	call	400d284 <__gedf2>
 400517c:	00828d0e 	bge	zero,r2,4005bb4 <_dtoa_r+0xcd4>
 4005180:	d9000517 	ldw	r4,20(sp)
 4005184:	d8000e15 	stw	zero,56(sp)
 4005188:	213fffc4 	addi	r4,r4,-1
 400518c:	d9000515 	stw	r4,20(sp)
 4005190:	b42dc83a 	sub	r22,r22,r16
 4005194:	b5bfffc4 	addi	r22,r22,-1
 4005198:	b0026f16 	blt	r22,zero,4005b58 <_dtoa_r+0xc78>
 400519c:	d8000815 	stw	zero,32(sp)
 40051a0:	d9c00517 	ldw	r7,20(sp)
 40051a4:	38026416 	blt	r7,zero,4005b38 <_dtoa_r+0xc58>
 40051a8:	b1ed883a 	add	r22,r22,r7
 40051ac:	d9c00d15 	stw	r7,52(sp)
 40051b0:	d8000a15 	stw	zero,40(sp)
 40051b4:	d9800317 	ldw	r6,12(sp)
 40051b8:	00800244 	movi	r2,9
 40051bc:	11811436 	bltu	r2,r6,4005610 <_dtoa_r+0x730>
 40051c0:	00800144 	movi	r2,5
 40051c4:	1184e10e 	bge	r2,r6,400654c <_dtoa_r+0x166c>
 40051c8:	31bfff04 	addi	r6,r6,-4
 40051cc:	d9800315 	stw	r6,12(sp)
 40051d0:	0023883a 	mov	r17,zero
 40051d4:	d9800317 	ldw	r6,12(sp)
 40051d8:	008000c4 	movi	r2,3
 40051dc:	30836726 	beq	r6,r2,4005f7c <_dtoa_r+0x109c>
 40051e0:	1183410e 	bge	r2,r6,4005ee8 <_dtoa_r+0x1008>
 40051e4:	d9c00317 	ldw	r7,12(sp)
 40051e8:	00800104 	movi	r2,4
 40051ec:	38827c26 	beq	r7,r2,4005be0 <_dtoa_r+0xd00>
 40051f0:	00800144 	movi	r2,5
 40051f4:	3884c41e 	bne	r7,r2,4006508 <_dtoa_r+0x1628>
 40051f8:	00800044 	movi	r2,1
 40051fc:	d8800b15 	stw	r2,44(sp)
 4005200:	d8c00517 	ldw	r3,20(sp)
 4005204:	d9002217 	ldw	r4,136(sp)
 4005208:	1907883a 	add	r3,r3,r4
 400520c:	19800044 	addi	r6,r3,1
 4005210:	d8c00c15 	stw	r3,48(sp)
 4005214:	d9800615 	stw	r6,24(sp)
 4005218:	0183a40e 	bge	zero,r6,40060ac <_dtoa_r+0x11cc>
 400521c:	d9800617 	ldw	r6,24(sp)
 4005220:	3021883a 	mov	r16,r6
 4005224:	e0001115 	stw	zero,68(fp)
 4005228:	008005c4 	movi	r2,23
 400522c:	1184c92e 	bgeu	r2,r6,4006554 <_dtoa_r+0x1674>
 4005230:	00c00044 	movi	r3,1
 4005234:	00800104 	movi	r2,4
 4005238:	1085883a 	add	r2,r2,r2
 400523c:	11000504 	addi	r4,r2,20
 4005240:	180b883a 	mov	r5,r3
 4005244:	18c00044 	addi	r3,r3,1
 4005248:	313ffb2e 	bgeu	r6,r4,4005238 <__alt_data_end+0xfc005238>
 400524c:	e1401115 	stw	r5,68(fp)
 4005250:	e009883a 	mov	r4,fp
 4005254:	400857c0 	call	400857c <_Balloc>
 4005258:	d8800715 	stw	r2,28(sp)
 400525c:	e0801015 	stw	r2,64(fp)
 4005260:	00800384 	movi	r2,14
 4005264:	1400f736 	bltu	r2,r16,4005644 <_dtoa_r+0x764>
 4005268:	8800f626 	beq	r17,zero,4005644 <_dtoa_r+0x764>
 400526c:	d9c00517 	ldw	r7,20(sp)
 4005270:	01c39a0e 	bge	zero,r7,40060dc <_dtoa_r+0x11fc>
 4005274:	388003cc 	andi	r2,r7,15
 4005278:	100490fa 	slli	r2,r2,3
 400527c:	382bd13a 	srai	r21,r7,4
 4005280:	00c10074 	movhi	r3,1025
 4005284:	18c28504 	addi	r3,r3,2580
 4005288:	1885883a 	add	r2,r3,r2
 400528c:	a8c0040c 	andi	r3,r21,16
 4005290:	12400017 	ldw	r9,0(r2)
 4005294:	12000117 	ldw	r8,4(r2)
 4005298:	18037926 	beq	r3,zero,4006080 <_dtoa_r+0x11a0>
 400529c:	00810074 	movhi	r2,1025
 40052a0:	10827b04 	addi	r2,r2,2540
 40052a4:	11800817 	ldw	r6,32(r2)
 40052a8:	11c00917 	ldw	r7,36(r2)
 40052ac:	9009883a 	mov	r4,r18
 40052b0:	980b883a 	mov	r5,r19
 40052b4:	da001715 	stw	r8,92(sp)
 40052b8:	da401615 	stw	r9,88(sp)
 40052bc:	40015500 	call	4001550 <__divdf3>
 40052c0:	da001717 	ldw	r8,92(sp)
 40052c4:	da401617 	ldw	r9,88(sp)
 40052c8:	ad4003cc 	andi	r21,r21,15
 40052cc:	040000c4 	movi	r16,3
 40052d0:	1023883a 	mov	r17,r2
 40052d4:	1829883a 	mov	r20,r3
 40052d8:	a8001126 	beq	r21,zero,4005320 <_dtoa_r+0x440>
 40052dc:	05c10074 	movhi	r23,1025
 40052e0:	bdc27b04 	addi	r23,r23,2540
 40052e4:	4805883a 	mov	r2,r9
 40052e8:	4007883a 	mov	r3,r8
 40052ec:	a980004c 	andi	r6,r21,1
 40052f0:	1009883a 	mov	r4,r2
 40052f4:	a82bd07a 	srai	r21,r21,1
 40052f8:	180b883a 	mov	r5,r3
 40052fc:	30000426 	beq	r6,zero,4005310 <_dtoa_r+0x430>
 4005300:	b9800017 	ldw	r6,0(r23)
 4005304:	b9c00117 	ldw	r7,4(r23)
 4005308:	84000044 	addi	r16,r16,1
 400530c:	4001e380 	call	4001e38 <__muldf3>
 4005310:	bdc00204 	addi	r23,r23,8
 4005314:	a83ff51e 	bne	r21,zero,40052ec <__alt_data_end+0xfc0052ec>
 4005318:	1013883a 	mov	r9,r2
 400531c:	1811883a 	mov	r8,r3
 4005320:	480d883a 	mov	r6,r9
 4005324:	400f883a 	mov	r7,r8
 4005328:	8809883a 	mov	r4,r17
 400532c:	a00b883a 	mov	r5,r20
 4005330:	40015500 	call	4001550 <__divdf3>
 4005334:	d8800f15 	stw	r2,60(sp)
 4005338:	d8c01015 	stw	r3,64(sp)
 400533c:	d8c00e17 	ldw	r3,56(sp)
 4005340:	18000626 	beq	r3,zero,400535c <_dtoa_r+0x47c>
 4005344:	d9000f17 	ldw	r4,60(sp)
 4005348:	d9401017 	ldw	r5,64(sp)
 400534c:	000d883a 	mov	r6,zero
 4005350:	01cffc34 	movhi	r7,16368
 4005354:	400d3600 	call	400d360 <__ledf2>
 4005358:	10040b16 	blt	r2,zero,4006388 <_dtoa_r+0x14a8>
 400535c:	8009883a 	mov	r4,r16
 4005360:	400ddd00 	call	400ddd0 <__floatsidf>
 4005364:	d9800f17 	ldw	r6,60(sp)
 4005368:	d9c01017 	ldw	r7,64(sp)
 400536c:	1009883a 	mov	r4,r2
 4005370:	180b883a 	mov	r5,r3
 4005374:	4001e380 	call	4001e38 <__muldf3>
 4005378:	000d883a 	mov	r6,zero
 400537c:	01d00734 	movhi	r7,16412
 4005380:	1009883a 	mov	r4,r2
 4005384:	180b883a 	mov	r5,r3
 4005388:	400c9500 	call	400c950 <__adddf3>
 400538c:	1021883a 	mov	r16,r2
 4005390:	d8800617 	ldw	r2,24(sp)
 4005394:	047f3034 	movhi	r17,64704
 4005398:	1c63883a 	add	r17,r3,r17
 400539c:	10031826 	beq	r2,zero,4006000 <_dtoa_r+0x1120>
 40053a0:	d8c00517 	ldw	r3,20(sp)
 40053a4:	db000617 	ldw	r12,24(sp)
 40053a8:	d8c01315 	stw	r3,76(sp)
 40053ac:	d9000b17 	ldw	r4,44(sp)
 40053b0:	20038f26 	beq	r4,zero,40061f0 <_dtoa_r+0x1310>
 40053b4:	60bfffc4 	addi	r2,r12,-1
 40053b8:	100490fa 	slli	r2,r2,3
 40053bc:	00c10074 	movhi	r3,1025
 40053c0:	18c28504 	addi	r3,r3,2580
 40053c4:	1885883a 	add	r2,r3,r2
 40053c8:	11800017 	ldw	r6,0(r2)
 40053cc:	11c00117 	ldw	r7,4(r2)
 40053d0:	d8800717 	ldw	r2,28(sp)
 40053d4:	0009883a 	mov	r4,zero
 40053d8:	014ff834 	movhi	r5,16352
 40053dc:	db001615 	stw	r12,88(sp)
 40053e0:	15c00044 	addi	r23,r2,1
 40053e4:	40015500 	call	4001550 <__divdf3>
 40053e8:	800d883a 	mov	r6,r16
 40053ec:	880f883a 	mov	r7,r17
 40053f0:	1009883a 	mov	r4,r2
 40053f4:	180b883a 	mov	r5,r3
 40053f8:	400d4540 	call	400d454 <__subdf3>
 40053fc:	d9401017 	ldw	r5,64(sp)
 4005400:	d9000f17 	ldw	r4,60(sp)
 4005404:	102b883a 	mov	r21,r2
 4005408:	d8c01215 	stw	r3,72(sp)
 400540c:	400dd500 	call	400dd50 <__fixdfsi>
 4005410:	1009883a 	mov	r4,r2
 4005414:	1029883a 	mov	r20,r2
 4005418:	400ddd00 	call	400ddd0 <__floatsidf>
 400541c:	d9000f17 	ldw	r4,60(sp)
 4005420:	d9401017 	ldw	r5,64(sp)
 4005424:	100d883a 	mov	r6,r2
 4005428:	180f883a 	mov	r7,r3
 400542c:	400d4540 	call	400d454 <__subdf3>
 4005430:	1823883a 	mov	r17,r3
 4005434:	d8c00717 	ldw	r3,28(sp)
 4005438:	d9401217 	ldw	r5,72(sp)
 400543c:	a2000c04 	addi	r8,r20,48
 4005440:	1021883a 	mov	r16,r2
 4005444:	1a000005 	stb	r8,0(r3)
 4005448:	800d883a 	mov	r6,r16
 400544c:	880f883a 	mov	r7,r17
 4005450:	a809883a 	mov	r4,r21
 4005454:	4029883a 	mov	r20,r8
 4005458:	400d2840 	call	400d284 <__gedf2>
 400545c:	00841d16 	blt	zero,r2,40064d4 <_dtoa_r+0x15f4>
 4005460:	800d883a 	mov	r6,r16
 4005464:	880f883a 	mov	r7,r17
 4005468:	0009883a 	mov	r4,zero
 400546c:	014ffc34 	movhi	r5,16368
 4005470:	400d4540 	call	400d454 <__subdf3>
 4005474:	d9401217 	ldw	r5,72(sp)
 4005478:	100d883a 	mov	r6,r2
 400547c:	180f883a 	mov	r7,r3
 4005480:	a809883a 	mov	r4,r21
 4005484:	400d2840 	call	400d284 <__gedf2>
 4005488:	db001617 	ldw	r12,88(sp)
 400548c:	00840e16 	blt	zero,r2,40064c8 <_dtoa_r+0x15e8>
 4005490:	00800044 	movi	r2,1
 4005494:	13006b0e 	bge	r2,r12,4005644 <_dtoa_r+0x764>
 4005498:	d9000717 	ldw	r4,28(sp)
 400549c:	dd800f15 	stw	r22,60(sp)
 40054a0:	dcc01015 	stw	r19,64(sp)
 40054a4:	2319883a 	add	r12,r4,r12
 40054a8:	dcc01217 	ldw	r19,72(sp)
 40054ac:	602d883a 	mov	r22,r12
 40054b0:	dc801215 	stw	r18,72(sp)
 40054b4:	b825883a 	mov	r18,r23
 40054b8:	00000906 	br	40054e0 <_dtoa_r+0x600>
 40054bc:	400d4540 	call	400d454 <__subdf3>
 40054c0:	a80d883a 	mov	r6,r21
 40054c4:	980f883a 	mov	r7,r19
 40054c8:	1009883a 	mov	r4,r2
 40054cc:	180b883a 	mov	r5,r3
 40054d0:	400d3600 	call	400d360 <__ledf2>
 40054d4:	1003e816 	blt	r2,zero,4006478 <_dtoa_r+0x1598>
 40054d8:	b825883a 	mov	r18,r23
 40054dc:	bd83e926 	beq	r23,r22,4006484 <_dtoa_r+0x15a4>
 40054e0:	a809883a 	mov	r4,r21
 40054e4:	980b883a 	mov	r5,r19
 40054e8:	000d883a 	mov	r6,zero
 40054ec:	01d00934 	movhi	r7,16420
 40054f0:	4001e380 	call	4001e38 <__muldf3>
 40054f4:	000d883a 	mov	r6,zero
 40054f8:	01d00934 	movhi	r7,16420
 40054fc:	8009883a 	mov	r4,r16
 4005500:	880b883a 	mov	r5,r17
 4005504:	102b883a 	mov	r21,r2
 4005508:	1827883a 	mov	r19,r3
 400550c:	4001e380 	call	4001e38 <__muldf3>
 4005510:	180b883a 	mov	r5,r3
 4005514:	1009883a 	mov	r4,r2
 4005518:	1821883a 	mov	r16,r3
 400551c:	1023883a 	mov	r17,r2
 4005520:	400dd500 	call	400dd50 <__fixdfsi>
 4005524:	1009883a 	mov	r4,r2
 4005528:	1029883a 	mov	r20,r2
 400552c:	400ddd00 	call	400ddd0 <__floatsidf>
 4005530:	8809883a 	mov	r4,r17
 4005534:	800b883a 	mov	r5,r16
 4005538:	100d883a 	mov	r6,r2
 400553c:	180f883a 	mov	r7,r3
 4005540:	400d4540 	call	400d454 <__subdf3>
 4005544:	a5000c04 	addi	r20,r20,48
 4005548:	a80d883a 	mov	r6,r21
 400554c:	980f883a 	mov	r7,r19
 4005550:	1009883a 	mov	r4,r2
 4005554:	180b883a 	mov	r5,r3
 4005558:	95000005 	stb	r20,0(r18)
 400555c:	1021883a 	mov	r16,r2
 4005560:	1823883a 	mov	r17,r3
 4005564:	400d3600 	call	400d360 <__ledf2>
 4005568:	bdc00044 	addi	r23,r23,1
 400556c:	800d883a 	mov	r6,r16
 4005570:	880f883a 	mov	r7,r17
 4005574:	0009883a 	mov	r4,zero
 4005578:	014ffc34 	movhi	r5,16368
 400557c:	103fcf0e 	bge	r2,zero,40054bc <__alt_data_end+0xfc0054bc>
 4005580:	d8c01317 	ldw	r3,76(sp)
 4005584:	d8c00515 	stw	r3,20(sp)
 4005588:	d9400917 	ldw	r5,36(sp)
 400558c:	e009883a 	mov	r4,fp
 4005590:	40086240 	call	4008624 <_Bfree>
 4005594:	d9000517 	ldw	r4,20(sp)
 4005598:	d9802317 	ldw	r6,140(sp)
 400559c:	d9c02517 	ldw	r7,148(sp)
 40055a0:	b8000005 	stb	zero,0(r23)
 40055a4:	20800044 	addi	r2,r4,1
 40055a8:	30800015 	stw	r2,0(r6)
 40055ac:	3802aa26 	beq	r7,zero,4006058 <_dtoa_r+0x1178>
 40055b0:	3dc00015 	stw	r23,0(r7)
 40055b4:	d8800717 	ldw	r2,28(sp)
 40055b8:	003e7906 	br	4004fa0 <__alt_data_end+0xfc004fa0>
 40055bc:	00800434 	movhi	r2,16
 40055c0:	10bfffc4 	addi	r2,r2,-1
 40055c4:	88a2703a 	and	r17,r17,r2
 40055c8:	883e851e 	bne	r17,zero,4004fe0 <__alt_data_end+0xfc004fe0>
 40055cc:	00810074 	movhi	r2,1025
 40055d0:	10826604 	addi	r2,r2,2456
 40055d4:	003e8406 	br	4004fe8 <__alt_data_end+0xfc004fe8>
 40055d8:	10c00204 	addi	r3,r2,8
 40055dc:	003e8706 	br	4004ffc <__alt_data_end+0xfc004ffc>
 40055e0:	01400434 	movhi	r5,16
 40055e4:	297fffc4 	addi	r5,r5,-1
 40055e8:	994a703a 	and	r5,r19,r5
 40055ec:	9009883a 	mov	r4,r18
 40055f0:	843f0044 	addi	r16,r16,-1023
 40055f4:	294ffc34 	orhi	r5,r5,16368
 40055f8:	dd800217 	ldw	r22,8(sp)
 40055fc:	d8001115 	stw	zero,68(sp)
 4005600:	003ea506 	br	4005098 <__alt_data_end+0xfc005098>
 4005604:	00810074 	movhi	r2,1025
 4005608:	10825d04 	addi	r2,r2,2420
 400560c:	003e6406 	br	4004fa0 <__alt_data_end+0xfc004fa0>
 4005610:	e0001115 	stw	zero,68(fp)
 4005614:	000b883a 	mov	r5,zero
 4005618:	e009883a 	mov	r4,fp
 400561c:	400857c0 	call	400857c <_Balloc>
 4005620:	01bfffc4 	movi	r6,-1
 4005624:	01c00044 	movi	r7,1
 4005628:	d8800715 	stw	r2,28(sp)
 400562c:	d9800c15 	stw	r6,48(sp)
 4005630:	e0801015 	stw	r2,64(fp)
 4005634:	d8000315 	stw	zero,12(sp)
 4005638:	d9c00b15 	stw	r7,44(sp)
 400563c:	d9800615 	stw	r6,24(sp)
 4005640:	d8002215 	stw	zero,136(sp)
 4005644:	d8800117 	ldw	r2,4(sp)
 4005648:	10008916 	blt	r2,zero,4005870 <_dtoa_r+0x990>
 400564c:	d9000517 	ldw	r4,20(sp)
 4005650:	00c00384 	movi	r3,14
 4005654:	19008616 	blt	r3,r4,4005870 <_dtoa_r+0x990>
 4005658:	200490fa 	slli	r2,r4,3
 400565c:	00c10074 	movhi	r3,1025
 4005660:	d9802217 	ldw	r6,136(sp)
 4005664:	18c28504 	addi	r3,r3,2580
 4005668:	1885883a 	add	r2,r3,r2
 400566c:	14000017 	ldw	r16,0(r2)
 4005670:	14400117 	ldw	r17,4(r2)
 4005674:	30016316 	blt	r6,zero,4005c04 <_dtoa_r+0xd24>
 4005678:	800d883a 	mov	r6,r16
 400567c:	880f883a 	mov	r7,r17
 4005680:	9009883a 	mov	r4,r18
 4005684:	980b883a 	mov	r5,r19
 4005688:	40015500 	call	4001550 <__divdf3>
 400568c:	180b883a 	mov	r5,r3
 4005690:	1009883a 	mov	r4,r2
 4005694:	400dd500 	call	400dd50 <__fixdfsi>
 4005698:	1009883a 	mov	r4,r2
 400569c:	102b883a 	mov	r21,r2
 40056a0:	400ddd00 	call	400ddd0 <__floatsidf>
 40056a4:	800d883a 	mov	r6,r16
 40056a8:	880f883a 	mov	r7,r17
 40056ac:	1009883a 	mov	r4,r2
 40056b0:	180b883a 	mov	r5,r3
 40056b4:	4001e380 	call	4001e38 <__muldf3>
 40056b8:	100d883a 	mov	r6,r2
 40056bc:	180f883a 	mov	r7,r3
 40056c0:	9009883a 	mov	r4,r18
 40056c4:	980b883a 	mov	r5,r19
 40056c8:	400d4540 	call	400d454 <__subdf3>
 40056cc:	d9c00717 	ldw	r7,28(sp)
 40056d0:	1009883a 	mov	r4,r2
 40056d4:	a8800c04 	addi	r2,r21,48
 40056d8:	38800005 	stb	r2,0(r7)
 40056dc:	3dc00044 	addi	r23,r7,1
 40056e0:	d9c00617 	ldw	r7,24(sp)
 40056e4:	01800044 	movi	r6,1
 40056e8:	180b883a 	mov	r5,r3
 40056ec:	2005883a 	mov	r2,r4
 40056f0:	39803826 	beq	r7,r6,40057d4 <_dtoa_r+0x8f4>
 40056f4:	000d883a 	mov	r6,zero
 40056f8:	01d00934 	movhi	r7,16420
 40056fc:	4001e380 	call	4001e38 <__muldf3>
 4005700:	000d883a 	mov	r6,zero
 4005704:	000f883a 	mov	r7,zero
 4005708:	1009883a 	mov	r4,r2
 400570c:	180b883a 	mov	r5,r3
 4005710:	1025883a 	mov	r18,r2
 4005714:	1827883a 	mov	r19,r3
 4005718:	400d1fc0 	call	400d1fc <__eqdf2>
 400571c:	103f9a26 	beq	r2,zero,4005588 <__alt_data_end+0xfc005588>
 4005720:	d9c00617 	ldw	r7,24(sp)
 4005724:	d8c00717 	ldw	r3,28(sp)
 4005728:	b829883a 	mov	r20,r23
 400572c:	38bfffc4 	addi	r2,r7,-1
 4005730:	18ad883a 	add	r22,r3,r2
 4005734:	00000a06 	br	4005760 <_dtoa_r+0x880>
 4005738:	4001e380 	call	4001e38 <__muldf3>
 400573c:	000d883a 	mov	r6,zero
 4005740:	000f883a 	mov	r7,zero
 4005744:	1009883a 	mov	r4,r2
 4005748:	180b883a 	mov	r5,r3
 400574c:	1025883a 	mov	r18,r2
 4005750:	1827883a 	mov	r19,r3
 4005754:	b829883a 	mov	r20,r23
 4005758:	400d1fc0 	call	400d1fc <__eqdf2>
 400575c:	103f8a26 	beq	r2,zero,4005588 <__alt_data_end+0xfc005588>
 4005760:	800d883a 	mov	r6,r16
 4005764:	880f883a 	mov	r7,r17
 4005768:	9009883a 	mov	r4,r18
 400576c:	980b883a 	mov	r5,r19
 4005770:	40015500 	call	4001550 <__divdf3>
 4005774:	180b883a 	mov	r5,r3
 4005778:	1009883a 	mov	r4,r2
 400577c:	400dd500 	call	400dd50 <__fixdfsi>
 4005780:	1009883a 	mov	r4,r2
 4005784:	102b883a 	mov	r21,r2
 4005788:	400ddd00 	call	400ddd0 <__floatsidf>
 400578c:	800d883a 	mov	r6,r16
 4005790:	880f883a 	mov	r7,r17
 4005794:	1009883a 	mov	r4,r2
 4005798:	180b883a 	mov	r5,r3
 400579c:	4001e380 	call	4001e38 <__muldf3>
 40057a0:	100d883a 	mov	r6,r2
 40057a4:	180f883a 	mov	r7,r3
 40057a8:	9009883a 	mov	r4,r18
 40057ac:	980b883a 	mov	r5,r19
 40057b0:	400d4540 	call	400d454 <__subdf3>
 40057b4:	aa000c04 	addi	r8,r21,48
 40057b8:	a2000005 	stb	r8,0(r20)
 40057bc:	000d883a 	mov	r6,zero
 40057c0:	01d00934 	movhi	r7,16420
 40057c4:	1009883a 	mov	r4,r2
 40057c8:	180b883a 	mov	r5,r3
 40057cc:	a5c00044 	addi	r23,r20,1
 40057d0:	b53fd91e 	bne	r22,r20,4005738 <__alt_data_end+0xfc005738>
 40057d4:	100d883a 	mov	r6,r2
 40057d8:	180f883a 	mov	r7,r3
 40057dc:	1009883a 	mov	r4,r2
 40057e0:	180b883a 	mov	r5,r3
 40057e4:	400c9500 	call	400c950 <__adddf3>
 40057e8:	100d883a 	mov	r6,r2
 40057ec:	180f883a 	mov	r7,r3
 40057f0:	8009883a 	mov	r4,r16
 40057f4:	880b883a 	mov	r5,r17
 40057f8:	1027883a 	mov	r19,r2
 40057fc:	1825883a 	mov	r18,r3
 4005800:	400d3600 	call	400d360 <__ledf2>
 4005804:	10000816 	blt	r2,zero,4005828 <_dtoa_r+0x948>
 4005808:	980d883a 	mov	r6,r19
 400580c:	900f883a 	mov	r7,r18
 4005810:	8009883a 	mov	r4,r16
 4005814:	880b883a 	mov	r5,r17
 4005818:	400d1fc0 	call	400d1fc <__eqdf2>
 400581c:	103f5a1e 	bne	r2,zero,4005588 <__alt_data_end+0xfc005588>
 4005820:	ad40004c 	andi	r21,r21,1
 4005824:	a83f5826 	beq	r21,zero,4005588 <__alt_data_end+0xfc005588>
 4005828:	bd3fffc3 	ldbu	r20,-1(r23)
 400582c:	b8bfffc4 	addi	r2,r23,-1
 4005830:	1007883a 	mov	r3,r2
 4005834:	01400e44 	movi	r5,57
 4005838:	d9800717 	ldw	r6,28(sp)
 400583c:	00000506 	br	4005854 <_dtoa_r+0x974>
 4005840:	18ffffc4 	addi	r3,r3,-1
 4005844:	11824726 	beq	r2,r6,4006164 <_dtoa_r+0x1284>
 4005848:	1d000003 	ldbu	r20,0(r3)
 400584c:	102f883a 	mov	r23,r2
 4005850:	10bfffc4 	addi	r2,r2,-1
 4005854:	a1003fcc 	andi	r4,r20,255
 4005858:	2100201c 	xori	r4,r4,128
 400585c:	213fe004 	addi	r4,r4,-128
 4005860:	217ff726 	beq	r4,r5,4005840 <__alt_data_end+0xfc005840>
 4005864:	a2000044 	addi	r8,r20,1
 4005868:	12000005 	stb	r8,0(r2)
 400586c:	003f4606 	br	4005588 <__alt_data_end+0xfc005588>
 4005870:	d9000b17 	ldw	r4,44(sp)
 4005874:	2000c826 	beq	r4,zero,4005b98 <_dtoa_r+0xcb8>
 4005878:	d9800317 	ldw	r6,12(sp)
 400587c:	00c00044 	movi	r3,1
 4005880:	1980f90e 	bge	r3,r6,4005c68 <_dtoa_r+0xd88>
 4005884:	d8800617 	ldw	r2,24(sp)
 4005888:	d8c00a17 	ldw	r3,40(sp)
 400588c:	157fffc4 	addi	r21,r2,-1
 4005890:	1d41f316 	blt	r3,r21,4006060 <_dtoa_r+0x1180>
 4005894:	1d6bc83a 	sub	r21,r3,r21
 4005898:	d9c00617 	ldw	r7,24(sp)
 400589c:	3802aa16 	blt	r7,zero,4006348 <_dtoa_r+0x1468>
 40058a0:	dd000817 	ldw	r20,32(sp)
 40058a4:	d8800617 	ldw	r2,24(sp)
 40058a8:	d8c00817 	ldw	r3,32(sp)
 40058ac:	01400044 	movi	r5,1
 40058b0:	e009883a 	mov	r4,fp
 40058b4:	1887883a 	add	r3,r3,r2
 40058b8:	d8c00815 	stw	r3,32(sp)
 40058bc:	b0ad883a 	add	r22,r22,r2
 40058c0:	40089880 	call	4008988 <__i2b>
 40058c4:	1023883a 	mov	r17,r2
 40058c8:	a0000826 	beq	r20,zero,40058ec <_dtoa_r+0xa0c>
 40058cc:	0580070e 	bge	zero,r22,40058ec <_dtoa_r+0xa0c>
 40058d0:	a005883a 	mov	r2,r20
 40058d4:	b500b916 	blt	r22,r20,4005bbc <_dtoa_r+0xcdc>
 40058d8:	d9000817 	ldw	r4,32(sp)
 40058dc:	a0a9c83a 	sub	r20,r20,r2
 40058e0:	b0adc83a 	sub	r22,r22,r2
 40058e4:	2089c83a 	sub	r4,r4,r2
 40058e8:	d9000815 	stw	r4,32(sp)
 40058ec:	d9800a17 	ldw	r6,40(sp)
 40058f0:	0181810e 	bge	zero,r6,4005ef8 <_dtoa_r+0x1018>
 40058f4:	d9c00b17 	ldw	r7,44(sp)
 40058f8:	3800b326 	beq	r7,zero,4005bc8 <_dtoa_r+0xce8>
 40058fc:	a800b226 	beq	r21,zero,4005bc8 <_dtoa_r+0xce8>
 4005900:	880b883a 	mov	r5,r17
 4005904:	a80d883a 	mov	r6,r21
 4005908:	e009883a 	mov	r4,fp
 400590c:	4008bbc0 	call	4008bbc <__pow5mult>
 4005910:	d9800917 	ldw	r6,36(sp)
 4005914:	100b883a 	mov	r5,r2
 4005918:	e009883a 	mov	r4,fp
 400591c:	1023883a 	mov	r17,r2
 4005920:	40089c40 	call	40089c4 <__multiply>
 4005924:	1021883a 	mov	r16,r2
 4005928:	d8800a17 	ldw	r2,40(sp)
 400592c:	d9400917 	ldw	r5,36(sp)
 4005930:	e009883a 	mov	r4,fp
 4005934:	1545c83a 	sub	r2,r2,r21
 4005938:	d8800a15 	stw	r2,40(sp)
 400593c:	40086240 	call	4008624 <_Bfree>
 4005940:	d8c00a17 	ldw	r3,40(sp)
 4005944:	18009f1e 	bne	r3,zero,4005bc4 <_dtoa_r+0xce4>
 4005948:	05c00044 	movi	r23,1
 400594c:	e009883a 	mov	r4,fp
 4005950:	b80b883a 	mov	r5,r23
 4005954:	40089880 	call	4008988 <__i2b>
 4005958:	d9000d17 	ldw	r4,52(sp)
 400595c:	102b883a 	mov	r21,r2
 4005960:	2000ce26 	beq	r4,zero,4005c9c <_dtoa_r+0xdbc>
 4005964:	200d883a 	mov	r6,r4
 4005968:	100b883a 	mov	r5,r2
 400596c:	e009883a 	mov	r4,fp
 4005970:	4008bbc0 	call	4008bbc <__pow5mult>
 4005974:	d9800317 	ldw	r6,12(sp)
 4005978:	102b883a 	mov	r21,r2
 400597c:	b981810e 	bge	r23,r6,4005f84 <_dtoa_r+0x10a4>
 4005980:	0027883a 	mov	r19,zero
 4005984:	a8800417 	ldw	r2,16(r21)
 4005988:	05c00804 	movi	r23,32
 400598c:	10800104 	addi	r2,r2,4
 4005990:	1085883a 	add	r2,r2,r2
 4005994:	1085883a 	add	r2,r2,r2
 4005998:	a885883a 	add	r2,r21,r2
 400599c:	11000017 	ldw	r4,0(r2)
 40059a0:	40088700 	call	4008870 <__hi0bits>
 40059a4:	b885c83a 	sub	r2,r23,r2
 40059a8:	1585883a 	add	r2,r2,r22
 40059ac:	108007cc 	andi	r2,r2,31
 40059b0:	1000b326 	beq	r2,zero,4005c80 <_dtoa_r+0xda0>
 40059b4:	00c00804 	movi	r3,32
 40059b8:	1887c83a 	sub	r3,r3,r2
 40059bc:	01000104 	movi	r4,4
 40059c0:	20c2cd0e 	bge	r4,r3,40064f8 <_dtoa_r+0x1618>
 40059c4:	00c00704 	movi	r3,28
 40059c8:	1885c83a 	sub	r2,r3,r2
 40059cc:	d8c00817 	ldw	r3,32(sp)
 40059d0:	a0a9883a 	add	r20,r20,r2
 40059d4:	b0ad883a 	add	r22,r22,r2
 40059d8:	1887883a 	add	r3,r3,r2
 40059dc:	d8c00815 	stw	r3,32(sp)
 40059e0:	d9800817 	ldw	r6,32(sp)
 40059e4:	0180040e 	bge	zero,r6,40059f8 <_dtoa_r+0xb18>
 40059e8:	800b883a 	mov	r5,r16
 40059ec:	e009883a 	mov	r4,fp
 40059f0:	4008cfc0 	call	4008cfc <__lshift>
 40059f4:	1021883a 	mov	r16,r2
 40059f8:	0580050e 	bge	zero,r22,4005a10 <_dtoa_r+0xb30>
 40059fc:	a80b883a 	mov	r5,r21
 4005a00:	b00d883a 	mov	r6,r22
 4005a04:	e009883a 	mov	r4,fp
 4005a08:	4008cfc0 	call	4008cfc <__lshift>
 4005a0c:	102b883a 	mov	r21,r2
 4005a10:	d9c00e17 	ldw	r7,56(sp)
 4005a14:	3801211e 	bne	r7,zero,4005e9c <_dtoa_r+0xfbc>
 4005a18:	d9800617 	ldw	r6,24(sp)
 4005a1c:	0181380e 	bge	zero,r6,4005f00 <_dtoa_r+0x1020>
 4005a20:	d8c00b17 	ldw	r3,44(sp)
 4005a24:	1800ab1e 	bne	r3,zero,4005cd4 <_dtoa_r+0xdf4>
 4005a28:	dc800717 	ldw	r18,28(sp)
 4005a2c:	dcc00617 	ldw	r19,24(sp)
 4005a30:	9029883a 	mov	r20,r18
 4005a34:	00000206 	br	4005a40 <_dtoa_r+0xb60>
 4005a38:	400864c0 	call	400864c <__multadd>
 4005a3c:	1021883a 	mov	r16,r2
 4005a40:	a80b883a 	mov	r5,r21
 4005a44:	8009883a 	mov	r4,r16
 4005a48:	4004ce00 	call	4004ce0 <quorem>
 4005a4c:	10800c04 	addi	r2,r2,48
 4005a50:	90800005 	stb	r2,0(r18)
 4005a54:	94800044 	addi	r18,r18,1
 4005a58:	9507c83a 	sub	r3,r18,r20
 4005a5c:	000f883a 	mov	r7,zero
 4005a60:	01800284 	movi	r6,10
 4005a64:	800b883a 	mov	r5,r16
 4005a68:	e009883a 	mov	r4,fp
 4005a6c:	1cfff216 	blt	r3,r19,4005a38 <__alt_data_end+0xfc005a38>
 4005a70:	1011883a 	mov	r8,r2
 4005a74:	d8800617 	ldw	r2,24(sp)
 4005a78:	0082370e 	bge	zero,r2,4006358 <_dtoa_r+0x1478>
 4005a7c:	d9000717 	ldw	r4,28(sp)
 4005a80:	0025883a 	mov	r18,zero
 4005a84:	20af883a 	add	r23,r4,r2
 4005a88:	01800044 	movi	r6,1
 4005a8c:	800b883a 	mov	r5,r16
 4005a90:	e009883a 	mov	r4,fp
 4005a94:	da001715 	stw	r8,92(sp)
 4005a98:	4008cfc0 	call	4008cfc <__lshift>
 4005a9c:	a80b883a 	mov	r5,r21
 4005aa0:	1009883a 	mov	r4,r2
 4005aa4:	d8800915 	stw	r2,36(sp)
 4005aa8:	4008e440 	call	4008e44 <__mcmp>
 4005aac:	da001717 	ldw	r8,92(sp)
 4005ab0:	0081800e 	bge	zero,r2,40060b4 <_dtoa_r+0x11d4>
 4005ab4:	b93fffc3 	ldbu	r4,-1(r23)
 4005ab8:	b8bfffc4 	addi	r2,r23,-1
 4005abc:	1007883a 	mov	r3,r2
 4005ac0:	01800e44 	movi	r6,57
 4005ac4:	d9c00717 	ldw	r7,28(sp)
 4005ac8:	00000506 	br	4005ae0 <_dtoa_r+0xc00>
 4005acc:	18ffffc4 	addi	r3,r3,-1
 4005ad0:	11c12326 	beq	r2,r7,4005f60 <_dtoa_r+0x1080>
 4005ad4:	19000003 	ldbu	r4,0(r3)
 4005ad8:	102f883a 	mov	r23,r2
 4005adc:	10bfffc4 	addi	r2,r2,-1
 4005ae0:	21403fcc 	andi	r5,r4,255
 4005ae4:	2940201c 	xori	r5,r5,128
 4005ae8:	297fe004 	addi	r5,r5,-128
 4005aec:	29bff726 	beq	r5,r6,4005acc <__alt_data_end+0xfc005acc>
 4005af0:	21000044 	addi	r4,r4,1
 4005af4:	11000005 	stb	r4,0(r2)
 4005af8:	a80b883a 	mov	r5,r21
 4005afc:	e009883a 	mov	r4,fp
 4005b00:	40086240 	call	4008624 <_Bfree>
 4005b04:	883ea026 	beq	r17,zero,4005588 <__alt_data_end+0xfc005588>
 4005b08:	90000426 	beq	r18,zero,4005b1c <_dtoa_r+0xc3c>
 4005b0c:	94400326 	beq	r18,r17,4005b1c <_dtoa_r+0xc3c>
 4005b10:	900b883a 	mov	r5,r18
 4005b14:	e009883a 	mov	r4,fp
 4005b18:	40086240 	call	4008624 <_Bfree>
 4005b1c:	880b883a 	mov	r5,r17
 4005b20:	e009883a 	mov	r4,fp
 4005b24:	40086240 	call	4008624 <_Bfree>
 4005b28:	003e9706 	br	4005588 <__alt_data_end+0xfc005588>
 4005b2c:	01800044 	movi	r6,1
 4005b30:	d9800e15 	stw	r6,56(sp)
 4005b34:	003d9606 	br	4005190 <__alt_data_end+0xfc005190>
 4005b38:	d8800817 	ldw	r2,32(sp)
 4005b3c:	d8c00517 	ldw	r3,20(sp)
 4005b40:	d8000d15 	stw	zero,52(sp)
 4005b44:	10c5c83a 	sub	r2,r2,r3
 4005b48:	00c9c83a 	sub	r4,zero,r3
 4005b4c:	d8800815 	stw	r2,32(sp)
 4005b50:	d9000a15 	stw	r4,40(sp)
 4005b54:	003d9706 	br	40051b4 <__alt_data_end+0xfc0051b4>
 4005b58:	05adc83a 	sub	r22,zero,r22
 4005b5c:	dd800815 	stw	r22,32(sp)
 4005b60:	002d883a 	mov	r22,zero
 4005b64:	003d8e06 	br	40051a0 <__alt_data_end+0xfc0051a0>
 4005b68:	d9000517 	ldw	r4,20(sp)
 4005b6c:	400ddd00 	call	400ddd0 <__floatsidf>
 4005b70:	100d883a 	mov	r6,r2
 4005b74:	180f883a 	mov	r7,r3
 4005b78:	a009883a 	mov	r4,r20
 4005b7c:	880b883a 	mov	r5,r17
 4005b80:	400d1fc0 	call	400d1fc <__eqdf2>
 4005b84:	103d7126 	beq	r2,zero,400514c <__alt_data_end+0xfc00514c>
 4005b88:	d9c00517 	ldw	r7,20(sp)
 4005b8c:	39ffffc4 	addi	r7,r7,-1
 4005b90:	d9c00515 	stw	r7,20(sp)
 4005b94:	003d6d06 	br	400514c <__alt_data_end+0xfc00514c>
 4005b98:	dd400a17 	ldw	r21,40(sp)
 4005b9c:	dd000817 	ldw	r20,32(sp)
 4005ba0:	0023883a 	mov	r17,zero
 4005ba4:	003f4806 	br	40058c8 <__alt_data_end+0xfc0058c8>
 4005ba8:	10e3c83a 	sub	r17,r2,r3
 4005bac:	9448983a 	sll	r4,r18,r17
 4005bb0:	003d3206 	br	400507c <__alt_data_end+0xfc00507c>
 4005bb4:	d8000e15 	stw	zero,56(sp)
 4005bb8:	003d7506 	br	4005190 <__alt_data_end+0xfc005190>
 4005bbc:	b005883a 	mov	r2,r22
 4005bc0:	003f4506 	br	40058d8 <__alt_data_end+0xfc0058d8>
 4005bc4:	dc000915 	stw	r16,36(sp)
 4005bc8:	d9800a17 	ldw	r6,40(sp)
 4005bcc:	d9400917 	ldw	r5,36(sp)
 4005bd0:	e009883a 	mov	r4,fp
 4005bd4:	4008bbc0 	call	4008bbc <__pow5mult>
 4005bd8:	1021883a 	mov	r16,r2
 4005bdc:	003f5a06 	br	4005948 <__alt_data_end+0xfc005948>
 4005be0:	01c00044 	movi	r7,1
 4005be4:	d9c00b15 	stw	r7,44(sp)
 4005be8:	d8802217 	ldw	r2,136(sp)
 4005bec:	0081280e 	bge	zero,r2,4006090 <_dtoa_r+0x11b0>
 4005bf0:	100d883a 	mov	r6,r2
 4005bf4:	1021883a 	mov	r16,r2
 4005bf8:	d8800c15 	stw	r2,48(sp)
 4005bfc:	d8800615 	stw	r2,24(sp)
 4005c00:	003d8806 	br	4005224 <__alt_data_end+0xfc005224>
 4005c04:	d8800617 	ldw	r2,24(sp)
 4005c08:	00be9b16 	blt	zero,r2,4005678 <__alt_data_end+0xfc005678>
 4005c0c:	10010f1e 	bne	r2,zero,400604c <_dtoa_r+0x116c>
 4005c10:	880b883a 	mov	r5,r17
 4005c14:	000d883a 	mov	r6,zero
 4005c18:	01d00534 	movhi	r7,16404
 4005c1c:	8009883a 	mov	r4,r16
 4005c20:	4001e380 	call	4001e38 <__muldf3>
 4005c24:	900d883a 	mov	r6,r18
 4005c28:	980f883a 	mov	r7,r19
 4005c2c:	1009883a 	mov	r4,r2
 4005c30:	180b883a 	mov	r5,r3
 4005c34:	400d2840 	call	400d284 <__gedf2>
 4005c38:	002b883a 	mov	r21,zero
 4005c3c:	0023883a 	mov	r17,zero
 4005c40:	1000bf16 	blt	r2,zero,4005f40 <_dtoa_r+0x1060>
 4005c44:	d9802217 	ldw	r6,136(sp)
 4005c48:	ddc00717 	ldw	r23,28(sp)
 4005c4c:	018c303a 	nor	r6,zero,r6
 4005c50:	d9800515 	stw	r6,20(sp)
 4005c54:	a80b883a 	mov	r5,r21
 4005c58:	e009883a 	mov	r4,fp
 4005c5c:	40086240 	call	4008624 <_Bfree>
 4005c60:	883e4926 	beq	r17,zero,4005588 <__alt_data_end+0xfc005588>
 4005c64:	003fad06 	br	4005b1c <__alt_data_end+0xfc005b1c>
 4005c68:	d9c01117 	ldw	r7,68(sp)
 4005c6c:	3801bc26 	beq	r7,zero,4006360 <_dtoa_r+0x1480>
 4005c70:	10810cc4 	addi	r2,r2,1075
 4005c74:	dd400a17 	ldw	r21,40(sp)
 4005c78:	dd000817 	ldw	r20,32(sp)
 4005c7c:	003f0a06 	br	40058a8 <__alt_data_end+0xfc0058a8>
 4005c80:	00800704 	movi	r2,28
 4005c84:	d9000817 	ldw	r4,32(sp)
 4005c88:	a0a9883a 	add	r20,r20,r2
 4005c8c:	b0ad883a 	add	r22,r22,r2
 4005c90:	2089883a 	add	r4,r4,r2
 4005c94:	d9000815 	stw	r4,32(sp)
 4005c98:	003f5106 	br	40059e0 <__alt_data_end+0xfc0059e0>
 4005c9c:	d8c00317 	ldw	r3,12(sp)
 4005ca0:	b8c1fc0e 	bge	r23,r3,4006494 <_dtoa_r+0x15b4>
 4005ca4:	0027883a 	mov	r19,zero
 4005ca8:	b805883a 	mov	r2,r23
 4005cac:	003f3e06 	br	40059a8 <__alt_data_end+0xfc0059a8>
 4005cb0:	880b883a 	mov	r5,r17
 4005cb4:	e009883a 	mov	r4,fp
 4005cb8:	000f883a 	mov	r7,zero
 4005cbc:	01800284 	movi	r6,10
 4005cc0:	400864c0 	call	400864c <__multadd>
 4005cc4:	d9000c17 	ldw	r4,48(sp)
 4005cc8:	1023883a 	mov	r17,r2
 4005ccc:	0102040e 	bge	zero,r4,40064e0 <_dtoa_r+0x1600>
 4005cd0:	d9000615 	stw	r4,24(sp)
 4005cd4:	0500050e 	bge	zero,r20,4005cec <_dtoa_r+0xe0c>
 4005cd8:	880b883a 	mov	r5,r17
 4005cdc:	a00d883a 	mov	r6,r20
 4005ce0:	e009883a 	mov	r4,fp
 4005ce4:	4008cfc0 	call	4008cfc <__lshift>
 4005ce8:	1023883a 	mov	r17,r2
 4005cec:	9801241e 	bne	r19,zero,4006180 <_dtoa_r+0x12a0>
 4005cf0:	8829883a 	mov	r20,r17
 4005cf4:	d9000617 	ldw	r4,24(sp)
 4005cf8:	dcc00717 	ldw	r19,28(sp)
 4005cfc:	9480004c 	andi	r18,r18,1
 4005d00:	20bfffc4 	addi	r2,r4,-1
 4005d04:	9885883a 	add	r2,r19,r2
 4005d08:	d8800415 	stw	r2,16(sp)
 4005d0c:	dc800615 	stw	r18,24(sp)
 4005d10:	a80b883a 	mov	r5,r21
 4005d14:	8009883a 	mov	r4,r16
 4005d18:	4004ce00 	call	4004ce0 <quorem>
 4005d1c:	880b883a 	mov	r5,r17
 4005d20:	8009883a 	mov	r4,r16
 4005d24:	102f883a 	mov	r23,r2
 4005d28:	4008e440 	call	4008e44 <__mcmp>
 4005d2c:	a80b883a 	mov	r5,r21
 4005d30:	a00d883a 	mov	r6,r20
 4005d34:	e009883a 	mov	r4,fp
 4005d38:	102d883a 	mov	r22,r2
 4005d3c:	4008ea40 	call	4008ea4 <__mdiff>
 4005d40:	1007883a 	mov	r3,r2
 4005d44:	10800317 	ldw	r2,12(r2)
 4005d48:	bc800c04 	addi	r18,r23,48
 4005d4c:	180b883a 	mov	r5,r3
 4005d50:	10004e1e 	bne	r2,zero,4005e8c <_dtoa_r+0xfac>
 4005d54:	8009883a 	mov	r4,r16
 4005d58:	d8c01615 	stw	r3,88(sp)
 4005d5c:	4008e440 	call	4008e44 <__mcmp>
 4005d60:	d8c01617 	ldw	r3,88(sp)
 4005d64:	e009883a 	mov	r4,fp
 4005d68:	d8801615 	stw	r2,88(sp)
 4005d6c:	180b883a 	mov	r5,r3
 4005d70:	40086240 	call	4008624 <_Bfree>
 4005d74:	d8801617 	ldw	r2,88(sp)
 4005d78:	1000041e 	bne	r2,zero,4005d8c <_dtoa_r+0xeac>
 4005d7c:	d9800317 	ldw	r6,12(sp)
 4005d80:	3000021e 	bne	r6,zero,4005d8c <_dtoa_r+0xeac>
 4005d84:	d8c00617 	ldw	r3,24(sp)
 4005d88:	18003726 	beq	r3,zero,4005e68 <_dtoa_r+0xf88>
 4005d8c:	b0002016 	blt	r22,zero,4005e10 <_dtoa_r+0xf30>
 4005d90:	b000041e 	bne	r22,zero,4005da4 <_dtoa_r+0xec4>
 4005d94:	d9000317 	ldw	r4,12(sp)
 4005d98:	2000021e 	bne	r4,zero,4005da4 <_dtoa_r+0xec4>
 4005d9c:	d8c00617 	ldw	r3,24(sp)
 4005da0:	18001b26 	beq	r3,zero,4005e10 <_dtoa_r+0xf30>
 4005da4:	00810716 	blt	zero,r2,40061c4 <_dtoa_r+0x12e4>
 4005da8:	d8c00417 	ldw	r3,16(sp)
 4005dac:	9d800044 	addi	r22,r19,1
 4005db0:	9c800005 	stb	r18,0(r19)
 4005db4:	b02f883a 	mov	r23,r22
 4005db8:	98c10626 	beq	r19,r3,40061d4 <_dtoa_r+0x12f4>
 4005dbc:	800b883a 	mov	r5,r16
 4005dc0:	000f883a 	mov	r7,zero
 4005dc4:	01800284 	movi	r6,10
 4005dc8:	e009883a 	mov	r4,fp
 4005dcc:	400864c0 	call	400864c <__multadd>
 4005dd0:	1021883a 	mov	r16,r2
 4005dd4:	000f883a 	mov	r7,zero
 4005dd8:	01800284 	movi	r6,10
 4005ddc:	880b883a 	mov	r5,r17
 4005de0:	e009883a 	mov	r4,fp
 4005de4:	8d002526 	beq	r17,r20,4005e7c <_dtoa_r+0xf9c>
 4005de8:	400864c0 	call	400864c <__multadd>
 4005dec:	a00b883a 	mov	r5,r20
 4005df0:	000f883a 	mov	r7,zero
 4005df4:	01800284 	movi	r6,10
 4005df8:	e009883a 	mov	r4,fp
 4005dfc:	1023883a 	mov	r17,r2
 4005e00:	400864c0 	call	400864c <__multadd>
 4005e04:	1029883a 	mov	r20,r2
 4005e08:	b027883a 	mov	r19,r22
 4005e0c:	003fc006 	br	4005d10 <__alt_data_end+0xfc005d10>
 4005e10:	9011883a 	mov	r8,r18
 4005e14:	00800e0e 	bge	zero,r2,4005e50 <_dtoa_r+0xf70>
 4005e18:	800b883a 	mov	r5,r16
 4005e1c:	01800044 	movi	r6,1
 4005e20:	e009883a 	mov	r4,fp
 4005e24:	da001715 	stw	r8,92(sp)
 4005e28:	4008cfc0 	call	4008cfc <__lshift>
 4005e2c:	a80b883a 	mov	r5,r21
 4005e30:	1009883a 	mov	r4,r2
 4005e34:	1021883a 	mov	r16,r2
 4005e38:	4008e440 	call	4008e44 <__mcmp>
 4005e3c:	da001717 	ldw	r8,92(sp)
 4005e40:	0081960e 	bge	zero,r2,400649c <_dtoa_r+0x15bc>
 4005e44:	00800e44 	movi	r2,57
 4005e48:	40817026 	beq	r8,r2,400640c <_dtoa_r+0x152c>
 4005e4c:	ba000c44 	addi	r8,r23,49
 4005e50:	8825883a 	mov	r18,r17
 4005e54:	9dc00044 	addi	r23,r19,1
 4005e58:	9a000005 	stb	r8,0(r19)
 4005e5c:	a023883a 	mov	r17,r20
 4005e60:	dc000915 	stw	r16,36(sp)
 4005e64:	003f2406 	br	4005af8 <__alt_data_end+0xfc005af8>
 4005e68:	00800e44 	movi	r2,57
 4005e6c:	9011883a 	mov	r8,r18
 4005e70:	90816626 	beq	r18,r2,400640c <_dtoa_r+0x152c>
 4005e74:	05bff516 	blt	zero,r22,4005e4c <__alt_data_end+0xfc005e4c>
 4005e78:	003ff506 	br	4005e50 <__alt_data_end+0xfc005e50>
 4005e7c:	400864c0 	call	400864c <__multadd>
 4005e80:	1023883a 	mov	r17,r2
 4005e84:	1029883a 	mov	r20,r2
 4005e88:	003fdf06 	br	4005e08 <__alt_data_end+0xfc005e08>
 4005e8c:	e009883a 	mov	r4,fp
 4005e90:	40086240 	call	4008624 <_Bfree>
 4005e94:	00800044 	movi	r2,1
 4005e98:	003fbc06 	br	4005d8c <__alt_data_end+0xfc005d8c>
 4005e9c:	a80b883a 	mov	r5,r21
 4005ea0:	8009883a 	mov	r4,r16
 4005ea4:	4008e440 	call	4008e44 <__mcmp>
 4005ea8:	103edb0e 	bge	r2,zero,4005a18 <__alt_data_end+0xfc005a18>
 4005eac:	800b883a 	mov	r5,r16
 4005eb0:	000f883a 	mov	r7,zero
 4005eb4:	01800284 	movi	r6,10
 4005eb8:	e009883a 	mov	r4,fp
 4005ebc:	400864c0 	call	400864c <__multadd>
 4005ec0:	1021883a 	mov	r16,r2
 4005ec4:	d8800517 	ldw	r2,20(sp)
 4005ec8:	d8c00b17 	ldw	r3,44(sp)
 4005ecc:	10bfffc4 	addi	r2,r2,-1
 4005ed0:	d8800515 	stw	r2,20(sp)
 4005ed4:	183f761e 	bne	r3,zero,4005cb0 <__alt_data_end+0xfc005cb0>
 4005ed8:	d9000c17 	ldw	r4,48(sp)
 4005edc:	0101730e 	bge	zero,r4,40064ac <_dtoa_r+0x15cc>
 4005ee0:	d9000615 	stw	r4,24(sp)
 4005ee4:	003ed006 	br	4005a28 <__alt_data_end+0xfc005a28>
 4005ee8:	00800084 	movi	r2,2
 4005eec:	3081861e 	bne	r6,r2,4006508 <_dtoa_r+0x1628>
 4005ef0:	d8000b15 	stw	zero,44(sp)
 4005ef4:	003f3c06 	br	4005be8 <__alt_data_end+0xfc005be8>
 4005ef8:	dc000917 	ldw	r16,36(sp)
 4005efc:	003e9206 	br	4005948 <__alt_data_end+0xfc005948>
 4005f00:	d9c00317 	ldw	r7,12(sp)
 4005f04:	00800084 	movi	r2,2
 4005f08:	11fec50e 	bge	r2,r7,4005a20 <__alt_data_end+0xfc005a20>
 4005f0c:	d9000617 	ldw	r4,24(sp)
 4005f10:	20013c1e 	bne	r4,zero,4006404 <_dtoa_r+0x1524>
 4005f14:	a80b883a 	mov	r5,r21
 4005f18:	000f883a 	mov	r7,zero
 4005f1c:	01800144 	movi	r6,5
 4005f20:	e009883a 	mov	r4,fp
 4005f24:	400864c0 	call	400864c <__multadd>
 4005f28:	100b883a 	mov	r5,r2
 4005f2c:	8009883a 	mov	r4,r16
 4005f30:	102b883a 	mov	r21,r2
 4005f34:	4008e440 	call	4008e44 <__mcmp>
 4005f38:	dc000915 	stw	r16,36(sp)
 4005f3c:	00bf410e 	bge	zero,r2,4005c44 <__alt_data_end+0xfc005c44>
 4005f40:	d9c00717 	ldw	r7,28(sp)
 4005f44:	00800c44 	movi	r2,49
 4005f48:	38800005 	stb	r2,0(r7)
 4005f4c:	d8800517 	ldw	r2,20(sp)
 4005f50:	3dc00044 	addi	r23,r7,1
 4005f54:	10800044 	addi	r2,r2,1
 4005f58:	d8800515 	stw	r2,20(sp)
 4005f5c:	003f3d06 	br	4005c54 <__alt_data_end+0xfc005c54>
 4005f60:	d9800517 	ldw	r6,20(sp)
 4005f64:	d9c00717 	ldw	r7,28(sp)
 4005f68:	00800c44 	movi	r2,49
 4005f6c:	31800044 	addi	r6,r6,1
 4005f70:	d9800515 	stw	r6,20(sp)
 4005f74:	38800005 	stb	r2,0(r7)
 4005f78:	003edf06 	br	4005af8 <__alt_data_end+0xfc005af8>
 4005f7c:	d8000b15 	stw	zero,44(sp)
 4005f80:	003c9f06 	br	4005200 <__alt_data_end+0xfc005200>
 4005f84:	903e7e1e 	bne	r18,zero,4005980 <__alt_data_end+0xfc005980>
 4005f88:	00800434 	movhi	r2,16
 4005f8c:	10bfffc4 	addi	r2,r2,-1
 4005f90:	9884703a 	and	r2,r19,r2
 4005f94:	1000ea1e 	bne	r2,zero,4006340 <_dtoa_r+0x1460>
 4005f98:	9cdffc2c 	andhi	r19,r19,32752
 4005f9c:	9800e826 	beq	r19,zero,4006340 <_dtoa_r+0x1460>
 4005fa0:	d9c00817 	ldw	r7,32(sp)
 4005fa4:	b5800044 	addi	r22,r22,1
 4005fa8:	04c00044 	movi	r19,1
 4005fac:	39c00044 	addi	r7,r7,1
 4005fb0:	d9c00815 	stw	r7,32(sp)
 4005fb4:	d8800d17 	ldw	r2,52(sp)
 4005fb8:	103e721e 	bne	r2,zero,4005984 <__alt_data_end+0xfc005984>
 4005fbc:	00800044 	movi	r2,1
 4005fc0:	003e7906 	br	40059a8 <__alt_data_end+0xfc0059a8>
 4005fc4:	8009883a 	mov	r4,r16
 4005fc8:	400ddd00 	call	400ddd0 <__floatsidf>
 4005fcc:	d9800f17 	ldw	r6,60(sp)
 4005fd0:	d9c01017 	ldw	r7,64(sp)
 4005fd4:	1009883a 	mov	r4,r2
 4005fd8:	180b883a 	mov	r5,r3
 4005fdc:	4001e380 	call	4001e38 <__muldf3>
 4005fe0:	000d883a 	mov	r6,zero
 4005fe4:	01d00734 	movhi	r7,16412
 4005fe8:	1009883a 	mov	r4,r2
 4005fec:	180b883a 	mov	r5,r3
 4005ff0:	400c9500 	call	400c950 <__adddf3>
 4005ff4:	047f3034 	movhi	r17,64704
 4005ff8:	1021883a 	mov	r16,r2
 4005ffc:	1c63883a 	add	r17,r3,r17
 4006000:	d9000f17 	ldw	r4,60(sp)
 4006004:	d9401017 	ldw	r5,64(sp)
 4006008:	000d883a 	mov	r6,zero
 400600c:	01d00534 	movhi	r7,16404
 4006010:	400d4540 	call	400d454 <__subdf3>
 4006014:	800d883a 	mov	r6,r16
 4006018:	880f883a 	mov	r7,r17
 400601c:	1009883a 	mov	r4,r2
 4006020:	180b883a 	mov	r5,r3
 4006024:	102b883a 	mov	r21,r2
 4006028:	1829883a 	mov	r20,r3
 400602c:	400d2840 	call	400d284 <__gedf2>
 4006030:	00806c16 	blt	zero,r2,40061e4 <_dtoa_r+0x1304>
 4006034:	89e0003c 	xorhi	r7,r17,32768
 4006038:	800d883a 	mov	r6,r16
 400603c:	a809883a 	mov	r4,r21
 4006040:	a00b883a 	mov	r5,r20
 4006044:	400d3600 	call	400d360 <__ledf2>
 4006048:	103d7e0e 	bge	r2,zero,4005644 <__alt_data_end+0xfc005644>
 400604c:	002b883a 	mov	r21,zero
 4006050:	0023883a 	mov	r17,zero
 4006054:	003efb06 	br	4005c44 <__alt_data_end+0xfc005c44>
 4006058:	d8800717 	ldw	r2,28(sp)
 400605c:	003bd006 	br	4004fa0 <__alt_data_end+0xfc004fa0>
 4006060:	d9000a17 	ldw	r4,40(sp)
 4006064:	d9800d17 	ldw	r6,52(sp)
 4006068:	dd400a15 	stw	r21,40(sp)
 400606c:	a905c83a 	sub	r2,r21,r4
 4006070:	308d883a 	add	r6,r6,r2
 4006074:	d9800d15 	stw	r6,52(sp)
 4006078:	002b883a 	mov	r21,zero
 400607c:	003e0606 	br	4005898 <__alt_data_end+0xfc005898>
 4006080:	9023883a 	mov	r17,r18
 4006084:	9829883a 	mov	r20,r19
 4006088:	04000084 	movi	r16,2
 400608c:	003c9206 	br	40052d8 <__alt_data_end+0xfc0052d8>
 4006090:	04000044 	movi	r16,1
 4006094:	dc000c15 	stw	r16,48(sp)
 4006098:	dc000615 	stw	r16,24(sp)
 400609c:	dc002215 	stw	r16,136(sp)
 40060a0:	e0001115 	stw	zero,68(fp)
 40060a4:	000b883a 	mov	r5,zero
 40060a8:	003c6906 	br	4005250 <__alt_data_end+0xfc005250>
 40060ac:	3021883a 	mov	r16,r6
 40060b0:	003ffb06 	br	40060a0 <__alt_data_end+0xfc0060a0>
 40060b4:	1000021e 	bne	r2,zero,40060c0 <_dtoa_r+0x11e0>
 40060b8:	4200004c 	andi	r8,r8,1
 40060bc:	403e7d1e 	bne	r8,zero,4005ab4 <__alt_data_end+0xfc005ab4>
 40060c0:	01000c04 	movi	r4,48
 40060c4:	00000106 	br	40060cc <_dtoa_r+0x11ec>
 40060c8:	102f883a 	mov	r23,r2
 40060cc:	b8bfffc4 	addi	r2,r23,-1
 40060d0:	10c00007 	ldb	r3,0(r2)
 40060d4:	193ffc26 	beq	r3,r4,40060c8 <__alt_data_end+0xfc0060c8>
 40060d8:	003e8706 	br	4005af8 <__alt_data_end+0xfc005af8>
 40060dc:	d8800517 	ldw	r2,20(sp)
 40060e0:	00a3c83a 	sub	r17,zero,r2
 40060e4:	8800a426 	beq	r17,zero,4006378 <_dtoa_r+0x1498>
 40060e8:	888003cc 	andi	r2,r17,15
 40060ec:	100490fa 	slli	r2,r2,3
 40060f0:	00c10074 	movhi	r3,1025
 40060f4:	18c28504 	addi	r3,r3,2580
 40060f8:	1885883a 	add	r2,r3,r2
 40060fc:	11800017 	ldw	r6,0(r2)
 4006100:	11c00117 	ldw	r7,4(r2)
 4006104:	9009883a 	mov	r4,r18
 4006108:	980b883a 	mov	r5,r19
 400610c:	8823d13a 	srai	r17,r17,4
 4006110:	4001e380 	call	4001e38 <__muldf3>
 4006114:	d8800f15 	stw	r2,60(sp)
 4006118:	d8c01015 	stw	r3,64(sp)
 400611c:	8800e826 	beq	r17,zero,40064c0 <_dtoa_r+0x15e0>
 4006120:	05010074 	movhi	r20,1025
 4006124:	a5027b04 	addi	r20,r20,2540
 4006128:	04000084 	movi	r16,2
 400612c:	8980004c 	andi	r6,r17,1
 4006130:	1009883a 	mov	r4,r2
 4006134:	8823d07a 	srai	r17,r17,1
 4006138:	180b883a 	mov	r5,r3
 400613c:	30000426 	beq	r6,zero,4006150 <_dtoa_r+0x1270>
 4006140:	a1800017 	ldw	r6,0(r20)
 4006144:	a1c00117 	ldw	r7,4(r20)
 4006148:	84000044 	addi	r16,r16,1
 400614c:	4001e380 	call	4001e38 <__muldf3>
 4006150:	a5000204 	addi	r20,r20,8
 4006154:	883ff51e 	bne	r17,zero,400612c <__alt_data_end+0xfc00612c>
 4006158:	d8800f15 	stw	r2,60(sp)
 400615c:	d8c01015 	stw	r3,64(sp)
 4006160:	003c7606 	br	400533c <__alt_data_end+0xfc00533c>
 4006164:	00c00c04 	movi	r3,48
 4006168:	10c00005 	stb	r3,0(r2)
 400616c:	d8c00517 	ldw	r3,20(sp)
 4006170:	bd3fffc3 	ldbu	r20,-1(r23)
 4006174:	18c00044 	addi	r3,r3,1
 4006178:	d8c00515 	stw	r3,20(sp)
 400617c:	003db906 	br	4005864 <__alt_data_end+0xfc005864>
 4006180:	89400117 	ldw	r5,4(r17)
 4006184:	e009883a 	mov	r4,fp
 4006188:	400857c0 	call	400857c <_Balloc>
 400618c:	89800417 	ldw	r6,16(r17)
 4006190:	89400304 	addi	r5,r17,12
 4006194:	11000304 	addi	r4,r2,12
 4006198:	31800084 	addi	r6,r6,2
 400619c:	318d883a 	add	r6,r6,r6
 40061a0:	318d883a 	add	r6,r6,r6
 40061a4:	1027883a 	mov	r19,r2
 40061a8:	40081b00 	call	40081b0 <memcpy>
 40061ac:	01800044 	movi	r6,1
 40061b0:	980b883a 	mov	r5,r19
 40061b4:	e009883a 	mov	r4,fp
 40061b8:	4008cfc0 	call	4008cfc <__lshift>
 40061bc:	1029883a 	mov	r20,r2
 40061c0:	003ecc06 	br	4005cf4 <__alt_data_end+0xfc005cf4>
 40061c4:	00800e44 	movi	r2,57
 40061c8:	90809026 	beq	r18,r2,400640c <_dtoa_r+0x152c>
 40061cc:	92000044 	addi	r8,r18,1
 40061d0:	003f1f06 	br	4005e50 <__alt_data_end+0xfc005e50>
 40061d4:	9011883a 	mov	r8,r18
 40061d8:	8825883a 	mov	r18,r17
 40061dc:	a023883a 	mov	r17,r20
 40061e0:	003e2906 	br	4005a88 <__alt_data_end+0xfc005a88>
 40061e4:	002b883a 	mov	r21,zero
 40061e8:	0023883a 	mov	r17,zero
 40061ec:	003f5406 	br	4005f40 <__alt_data_end+0xfc005f40>
 40061f0:	61bfffc4 	addi	r6,r12,-1
 40061f4:	300490fa 	slli	r2,r6,3
 40061f8:	00c10074 	movhi	r3,1025
 40061fc:	18c28504 	addi	r3,r3,2580
 4006200:	1885883a 	add	r2,r3,r2
 4006204:	11000017 	ldw	r4,0(r2)
 4006208:	11400117 	ldw	r5,4(r2)
 400620c:	d8800717 	ldw	r2,28(sp)
 4006210:	880f883a 	mov	r7,r17
 4006214:	d9801215 	stw	r6,72(sp)
 4006218:	800d883a 	mov	r6,r16
 400621c:	db001615 	stw	r12,88(sp)
 4006220:	15c00044 	addi	r23,r2,1
 4006224:	4001e380 	call	4001e38 <__muldf3>
 4006228:	d9401017 	ldw	r5,64(sp)
 400622c:	d9000f17 	ldw	r4,60(sp)
 4006230:	d8c01515 	stw	r3,84(sp)
 4006234:	d8801415 	stw	r2,80(sp)
 4006238:	400dd500 	call	400dd50 <__fixdfsi>
 400623c:	1009883a 	mov	r4,r2
 4006240:	1021883a 	mov	r16,r2
 4006244:	400ddd00 	call	400ddd0 <__floatsidf>
 4006248:	d9000f17 	ldw	r4,60(sp)
 400624c:	d9401017 	ldw	r5,64(sp)
 4006250:	100d883a 	mov	r6,r2
 4006254:	180f883a 	mov	r7,r3
 4006258:	400d4540 	call	400d454 <__subdf3>
 400625c:	1829883a 	mov	r20,r3
 4006260:	d8c00717 	ldw	r3,28(sp)
 4006264:	84000c04 	addi	r16,r16,48
 4006268:	1023883a 	mov	r17,r2
 400626c:	1c000005 	stb	r16,0(r3)
 4006270:	db001617 	ldw	r12,88(sp)
 4006274:	00800044 	movi	r2,1
 4006278:	60802226 	beq	r12,r2,4006304 <_dtoa_r+0x1424>
 400627c:	d9c00717 	ldw	r7,28(sp)
 4006280:	8805883a 	mov	r2,r17
 4006284:	b82b883a 	mov	r21,r23
 4006288:	3b19883a 	add	r12,r7,r12
 400628c:	6023883a 	mov	r17,r12
 4006290:	a007883a 	mov	r3,r20
 4006294:	dc800f15 	stw	r18,60(sp)
 4006298:	000d883a 	mov	r6,zero
 400629c:	01d00934 	movhi	r7,16420
 40062a0:	1009883a 	mov	r4,r2
 40062a4:	180b883a 	mov	r5,r3
 40062a8:	4001e380 	call	4001e38 <__muldf3>
 40062ac:	180b883a 	mov	r5,r3
 40062b0:	1009883a 	mov	r4,r2
 40062b4:	1829883a 	mov	r20,r3
 40062b8:	1025883a 	mov	r18,r2
 40062bc:	400dd500 	call	400dd50 <__fixdfsi>
 40062c0:	1009883a 	mov	r4,r2
 40062c4:	1021883a 	mov	r16,r2
 40062c8:	400ddd00 	call	400ddd0 <__floatsidf>
 40062cc:	100d883a 	mov	r6,r2
 40062d0:	180f883a 	mov	r7,r3
 40062d4:	9009883a 	mov	r4,r18
 40062d8:	a00b883a 	mov	r5,r20
 40062dc:	84000c04 	addi	r16,r16,48
 40062e0:	400d4540 	call	400d454 <__subdf3>
 40062e4:	ad400044 	addi	r21,r21,1
 40062e8:	ac3fffc5 	stb	r16,-1(r21)
 40062ec:	ac7fea1e 	bne	r21,r17,4006298 <__alt_data_end+0xfc006298>
 40062f0:	1023883a 	mov	r17,r2
 40062f4:	d8801217 	ldw	r2,72(sp)
 40062f8:	dc800f17 	ldw	r18,60(sp)
 40062fc:	1829883a 	mov	r20,r3
 4006300:	b8af883a 	add	r23,r23,r2
 4006304:	d9001417 	ldw	r4,80(sp)
 4006308:	d9401517 	ldw	r5,84(sp)
 400630c:	000d883a 	mov	r6,zero
 4006310:	01cff834 	movhi	r7,16352
 4006314:	400c9500 	call	400c950 <__adddf3>
 4006318:	880d883a 	mov	r6,r17
 400631c:	a00f883a 	mov	r7,r20
 4006320:	1009883a 	mov	r4,r2
 4006324:	180b883a 	mov	r5,r3
 4006328:	400d3600 	call	400d360 <__ledf2>
 400632c:	10003e0e 	bge	r2,zero,4006428 <_dtoa_r+0x1548>
 4006330:	d9001317 	ldw	r4,76(sp)
 4006334:	bd3fffc3 	ldbu	r20,-1(r23)
 4006338:	d9000515 	stw	r4,20(sp)
 400633c:	003d3b06 	br	400582c <__alt_data_end+0xfc00582c>
 4006340:	0027883a 	mov	r19,zero
 4006344:	003f1b06 	br	4005fb4 <__alt_data_end+0xfc005fb4>
 4006348:	d8800817 	ldw	r2,32(sp)
 400634c:	11e9c83a 	sub	r20,r2,r7
 4006350:	0005883a 	mov	r2,zero
 4006354:	003d5406 	br	40058a8 <__alt_data_end+0xfc0058a8>
 4006358:	00800044 	movi	r2,1
 400635c:	003dc706 	br	4005a7c <__alt_data_end+0xfc005a7c>
 4006360:	d8c00217 	ldw	r3,8(sp)
 4006364:	00800d84 	movi	r2,54
 4006368:	dd400a17 	ldw	r21,40(sp)
 400636c:	10c5c83a 	sub	r2,r2,r3
 4006370:	dd000817 	ldw	r20,32(sp)
 4006374:	003d4c06 	br	40058a8 <__alt_data_end+0xfc0058a8>
 4006378:	dc800f15 	stw	r18,60(sp)
 400637c:	dcc01015 	stw	r19,64(sp)
 4006380:	04000084 	movi	r16,2
 4006384:	003bed06 	br	400533c <__alt_data_end+0xfc00533c>
 4006388:	d9000617 	ldw	r4,24(sp)
 400638c:	203f0d26 	beq	r4,zero,4005fc4 <__alt_data_end+0xfc005fc4>
 4006390:	d9800c17 	ldw	r6,48(sp)
 4006394:	01bcab0e 	bge	zero,r6,4005644 <__alt_data_end+0xfc005644>
 4006398:	d9401017 	ldw	r5,64(sp)
 400639c:	d9000f17 	ldw	r4,60(sp)
 40063a0:	000d883a 	mov	r6,zero
 40063a4:	01d00934 	movhi	r7,16420
 40063a8:	4001e380 	call	4001e38 <__muldf3>
 40063ac:	81000044 	addi	r4,r16,1
 40063b0:	d8800f15 	stw	r2,60(sp)
 40063b4:	d8c01015 	stw	r3,64(sp)
 40063b8:	400ddd00 	call	400ddd0 <__floatsidf>
 40063bc:	d9800f17 	ldw	r6,60(sp)
 40063c0:	d9c01017 	ldw	r7,64(sp)
 40063c4:	1009883a 	mov	r4,r2
 40063c8:	180b883a 	mov	r5,r3
 40063cc:	4001e380 	call	4001e38 <__muldf3>
 40063d0:	01d00734 	movhi	r7,16412
 40063d4:	000d883a 	mov	r6,zero
 40063d8:	1009883a 	mov	r4,r2
 40063dc:	180b883a 	mov	r5,r3
 40063e0:	400c9500 	call	400c950 <__adddf3>
 40063e4:	d9c00517 	ldw	r7,20(sp)
 40063e8:	047f3034 	movhi	r17,64704
 40063ec:	1021883a 	mov	r16,r2
 40063f0:	39ffffc4 	addi	r7,r7,-1
 40063f4:	d9c01315 	stw	r7,76(sp)
 40063f8:	1c63883a 	add	r17,r3,r17
 40063fc:	db000c17 	ldw	r12,48(sp)
 4006400:	003bea06 	br	40053ac <__alt_data_end+0xfc0053ac>
 4006404:	dc000915 	stw	r16,36(sp)
 4006408:	003e0e06 	br	4005c44 <__alt_data_end+0xfc005c44>
 400640c:	01000e44 	movi	r4,57
 4006410:	8825883a 	mov	r18,r17
 4006414:	9dc00044 	addi	r23,r19,1
 4006418:	99000005 	stb	r4,0(r19)
 400641c:	a023883a 	mov	r17,r20
 4006420:	dc000915 	stw	r16,36(sp)
 4006424:	003da406 	br	4005ab8 <__alt_data_end+0xfc005ab8>
 4006428:	d9801417 	ldw	r6,80(sp)
 400642c:	d9c01517 	ldw	r7,84(sp)
 4006430:	0009883a 	mov	r4,zero
 4006434:	014ff834 	movhi	r5,16352
 4006438:	400d4540 	call	400d454 <__subdf3>
 400643c:	880d883a 	mov	r6,r17
 4006440:	a00f883a 	mov	r7,r20
 4006444:	1009883a 	mov	r4,r2
 4006448:	180b883a 	mov	r5,r3
 400644c:	400d2840 	call	400d284 <__gedf2>
 4006450:	00bc7c0e 	bge	zero,r2,4005644 <__alt_data_end+0xfc005644>
 4006454:	01000c04 	movi	r4,48
 4006458:	00000106 	br	4006460 <_dtoa_r+0x1580>
 400645c:	102f883a 	mov	r23,r2
 4006460:	b8bfffc4 	addi	r2,r23,-1
 4006464:	10c00007 	ldb	r3,0(r2)
 4006468:	193ffc26 	beq	r3,r4,400645c <__alt_data_end+0xfc00645c>
 400646c:	d9801317 	ldw	r6,76(sp)
 4006470:	d9800515 	stw	r6,20(sp)
 4006474:	003c4406 	br	4005588 <__alt_data_end+0xfc005588>
 4006478:	d9801317 	ldw	r6,76(sp)
 400647c:	d9800515 	stw	r6,20(sp)
 4006480:	003cea06 	br	400582c <__alt_data_end+0xfc00582c>
 4006484:	dd800f17 	ldw	r22,60(sp)
 4006488:	dcc01017 	ldw	r19,64(sp)
 400648c:	dc801217 	ldw	r18,72(sp)
 4006490:	003c6c06 	br	4005644 <__alt_data_end+0xfc005644>
 4006494:	903e031e 	bne	r18,zero,4005ca4 <__alt_data_end+0xfc005ca4>
 4006498:	003ebb06 	br	4005f88 <__alt_data_end+0xfc005f88>
 400649c:	103e6c1e 	bne	r2,zero,4005e50 <__alt_data_end+0xfc005e50>
 40064a0:	4080004c 	andi	r2,r8,1
 40064a4:	103e6a26 	beq	r2,zero,4005e50 <__alt_data_end+0xfc005e50>
 40064a8:	003e6606 	br	4005e44 <__alt_data_end+0xfc005e44>
 40064ac:	d8c00317 	ldw	r3,12(sp)
 40064b0:	00800084 	movi	r2,2
 40064b4:	10c02916 	blt	r2,r3,400655c <_dtoa_r+0x167c>
 40064b8:	d9000c17 	ldw	r4,48(sp)
 40064bc:	003e8806 	br	4005ee0 <__alt_data_end+0xfc005ee0>
 40064c0:	04000084 	movi	r16,2
 40064c4:	003b9d06 	br	400533c <__alt_data_end+0xfc00533c>
 40064c8:	d9001317 	ldw	r4,76(sp)
 40064cc:	d9000515 	stw	r4,20(sp)
 40064d0:	003cd606 	br	400582c <__alt_data_end+0xfc00582c>
 40064d4:	d8801317 	ldw	r2,76(sp)
 40064d8:	d8800515 	stw	r2,20(sp)
 40064dc:	003c2a06 	br	4005588 <__alt_data_end+0xfc005588>
 40064e0:	d9800317 	ldw	r6,12(sp)
 40064e4:	00800084 	movi	r2,2
 40064e8:	11801516 	blt	r2,r6,4006540 <_dtoa_r+0x1660>
 40064ec:	d9c00c17 	ldw	r7,48(sp)
 40064f0:	d9c00615 	stw	r7,24(sp)
 40064f4:	003df706 	br	4005cd4 <__alt_data_end+0xfc005cd4>
 40064f8:	193d3926 	beq	r3,r4,40059e0 <__alt_data_end+0xfc0059e0>
 40064fc:	00c00f04 	movi	r3,60
 4006500:	1885c83a 	sub	r2,r3,r2
 4006504:	003ddf06 	br	4005c84 <__alt_data_end+0xfc005c84>
 4006508:	e009883a 	mov	r4,fp
 400650c:	e0001115 	stw	zero,68(fp)
 4006510:	000b883a 	mov	r5,zero
 4006514:	400857c0 	call	400857c <_Balloc>
 4006518:	d8800715 	stw	r2,28(sp)
 400651c:	d8c00717 	ldw	r3,28(sp)
 4006520:	00bfffc4 	movi	r2,-1
 4006524:	01000044 	movi	r4,1
 4006528:	d8800c15 	stw	r2,48(sp)
 400652c:	e0c01015 	stw	r3,64(fp)
 4006530:	d9000b15 	stw	r4,44(sp)
 4006534:	d8800615 	stw	r2,24(sp)
 4006538:	d8002215 	stw	zero,136(sp)
 400653c:	003c4106 	br	4005644 <__alt_data_end+0xfc005644>
 4006540:	d8c00c17 	ldw	r3,48(sp)
 4006544:	d8c00615 	stw	r3,24(sp)
 4006548:	003e7006 	br	4005f0c <__alt_data_end+0xfc005f0c>
 400654c:	04400044 	movi	r17,1
 4006550:	003b2006 	br	40051d4 <__alt_data_end+0xfc0051d4>
 4006554:	000b883a 	mov	r5,zero
 4006558:	003b3d06 	br	4005250 <__alt_data_end+0xfc005250>
 400655c:	d8800c17 	ldw	r2,48(sp)
 4006560:	d8800615 	stw	r2,24(sp)
 4006564:	003e6906 	br	4005f0c <__alt_data_end+0xfc005f0c>

04006568 <__sflush_r>:
 4006568:	2880030b 	ldhu	r2,12(r5)
 400656c:	defffb04 	addi	sp,sp,-20
 4006570:	dcc00315 	stw	r19,12(sp)
 4006574:	dc400115 	stw	r17,4(sp)
 4006578:	dfc00415 	stw	ra,16(sp)
 400657c:	dc800215 	stw	r18,8(sp)
 4006580:	dc000015 	stw	r16,0(sp)
 4006584:	10c0020c 	andi	r3,r2,8
 4006588:	2823883a 	mov	r17,r5
 400658c:	2027883a 	mov	r19,r4
 4006590:	1800311e 	bne	r3,zero,4006658 <__sflush_r+0xf0>
 4006594:	28c00117 	ldw	r3,4(r5)
 4006598:	10820014 	ori	r2,r2,2048
 400659c:	2880030d 	sth	r2,12(r5)
 40065a0:	00c04b0e 	bge	zero,r3,40066d0 <__sflush_r+0x168>
 40065a4:	8a000a17 	ldw	r8,40(r17)
 40065a8:	40002326 	beq	r8,zero,4006638 <__sflush_r+0xd0>
 40065ac:	9c000017 	ldw	r16,0(r19)
 40065b0:	10c4000c 	andi	r3,r2,4096
 40065b4:	98000015 	stw	zero,0(r19)
 40065b8:	18004826 	beq	r3,zero,40066dc <__sflush_r+0x174>
 40065bc:	89801417 	ldw	r6,80(r17)
 40065c0:	10c0010c 	andi	r3,r2,4
 40065c4:	18000626 	beq	r3,zero,40065e0 <__sflush_r+0x78>
 40065c8:	88c00117 	ldw	r3,4(r17)
 40065cc:	88800c17 	ldw	r2,48(r17)
 40065d0:	30cdc83a 	sub	r6,r6,r3
 40065d4:	10000226 	beq	r2,zero,40065e0 <__sflush_r+0x78>
 40065d8:	88800f17 	ldw	r2,60(r17)
 40065dc:	308dc83a 	sub	r6,r6,r2
 40065e0:	89400717 	ldw	r5,28(r17)
 40065e4:	000f883a 	mov	r7,zero
 40065e8:	9809883a 	mov	r4,r19
 40065ec:	403ee83a 	callr	r8
 40065f0:	00ffffc4 	movi	r3,-1
 40065f4:	10c04426 	beq	r2,r3,4006708 <__sflush_r+0x1a0>
 40065f8:	88c0030b 	ldhu	r3,12(r17)
 40065fc:	89000417 	ldw	r4,16(r17)
 4006600:	88000115 	stw	zero,4(r17)
 4006604:	197dffcc 	andi	r5,r3,63487
 4006608:	8940030d 	sth	r5,12(r17)
 400660c:	89000015 	stw	r4,0(r17)
 4006610:	18c4000c 	andi	r3,r3,4096
 4006614:	18002c1e 	bne	r3,zero,40066c8 <__sflush_r+0x160>
 4006618:	89400c17 	ldw	r5,48(r17)
 400661c:	9c000015 	stw	r16,0(r19)
 4006620:	28000526 	beq	r5,zero,4006638 <__sflush_r+0xd0>
 4006624:	88801004 	addi	r2,r17,64
 4006628:	28800226 	beq	r5,r2,4006634 <__sflush_r+0xcc>
 400662c:	9809883a 	mov	r4,r19
 4006630:	4006cd40 	call	4006cd4 <_free_r>
 4006634:	88000c15 	stw	zero,48(r17)
 4006638:	0005883a 	mov	r2,zero
 400663c:	dfc00417 	ldw	ra,16(sp)
 4006640:	dcc00317 	ldw	r19,12(sp)
 4006644:	dc800217 	ldw	r18,8(sp)
 4006648:	dc400117 	ldw	r17,4(sp)
 400664c:	dc000017 	ldw	r16,0(sp)
 4006650:	dec00504 	addi	sp,sp,20
 4006654:	f800283a 	ret
 4006658:	2c800417 	ldw	r18,16(r5)
 400665c:	903ff626 	beq	r18,zero,4006638 <__alt_data_end+0xfc006638>
 4006660:	2c000017 	ldw	r16,0(r5)
 4006664:	108000cc 	andi	r2,r2,3
 4006668:	2c800015 	stw	r18,0(r5)
 400666c:	84a1c83a 	sub	r16,r16,r18
 4006670:	1000131e 	bne	r2,zero,40066c0 <__sflush_r+0x158>
 4006674:	28800517 	ldw	r2,20(r5)
 4006678:	88800215 	stw	r2,8(r17)
 400667c:	04000316 	blt	zero,r16,400668c <__sflush_r+0x124>
 4006680:	003fed06 	br	4006638 <__alt_data_end+0xfc006638>
 4006684:	90a5883a 	add	r18,r18,r2
 4006688:	043feb0e 	bge	zero,r16,4006638 <__alt_data_end+0xfc006638>
 400668c:	88800917 	ldw	r2,36(r17)
 4006690:	89400717 	ldw	r5,28(r17)
 4006694:	800f883a 	mov	r7,r16
 4006698:	900d883a 	mov	r6,r18
 400669c:	9809883a 	mov	r4,r19
 40066a0:	103ee83a 	callr	r2
 40066a4:	80a1c83a 	sub	r16,r16,r2
 40066a8:	00bff616 	blt	zero,r2,4006684 <__alt_data_end+0xfc006684>
 40066ac:	88c0030b 	ldhu	r3,12(r17)
 40066b0:	00bfffc4 	movi	r2,-1
 40066b4:	18c01014 	ori	r3,r3,64
 40066b8:	88c0030d 	sth	r3,12(r17)
 40066bc:	003fdf06 	br	400663c <__alt_data_end+0xfc00663c>
 40066c0:	0005883a 	mov	r2,zero
 40066c4:	003fec06 	br	4006678 <__alt_data_end+0xfc006678>
 40066c8:	88801415 	stw	r2,80(r17)
 40066cc:	003fd206 	br	4006618 <__alt_data_end+0xfc006618>
 40066d0:	28c00f17 	ldw	r3,60(r5)
 40066d4:	00ffb316 	blt	zero,r3,40065a4 <__alt_data_end+0xfc0065a4>
 40066d8:	003fd706 	br	4006638 <__alt_data_end+0xfc006638>
 40066dc:	89400717 	ldw	r5,28(r17)
 40066e0:	000d883a 	mov	r6,zero
 40066e4:	01c00044 	movi	r7,1
 40066e8:	9809883a 	mov	r4,r19
 40066ec:	403ee83a 	callr	r8
 40066f0:	100d883a 	mov	r6,r2
 40066f4:	00bfffc4 	movi	r2,-1
 40066f8:	30801426 	beq	r6,r2,400674c <__sflush_r+0x1e4>
 40066fc:	8880030b 	ldhu	r2,12(r17)
 4006700:	8a000a17 	ldw	r8,40(r17)
 4006704:	003fae06 	br	40065c0 <__alt_data_end+0xfc0065c0>
 4006708:	98c00017 	ldw	r3,0(r19)
 400670c:	183fba26 	beq	r3,zero,40065f8 <__alt_data_end+0xfc0065f8>
 4006710:	01000744 	movi	r4,29
 4006714:	19000626 	beq	r3,r4,4006730 <__sflush_r+0x1c8>
 4006718:	01000584 	movi	r4,22
 400671c:	19000426 	beq	r3,r4,4006730 <__sflush_r+0x1c8>
 4006720:	88c0030b 	ldhu	r3,12(r17)
 4006724:	18c01014 	ori	r3,r3,64
 4006728:	88c0030d 	sth	r3,12(r17)
 400672c:	003fc306 	br	400663c <__alt_data_end+0xfc00663c>
 4006730:	8880030b 	ldhu	r2,12(r17)
 4006734:	88c00417 	ldw	r3,16(r17)
 4006738:	88000115 	stw	zero,4(r17)
 400673c:	10bdffcc 	andi	r2,r2,63487
 4006740:	8880030d 	sth	r2,12(r17)
 4006744:	88c00015 	stw	r3,0(r17)
 4006748:	003fb306 	br	4006618 <__alt_data_end+0xfc006618>
 400674c:	98800017 	ldw	r2,0(r19)
 4006750:	103fea26 	beq	r2,zero,40066fc <__alt_data_end+0xfc0066fc>
 4006754:	00c00744 	movi	r3,29
 4006758:	10c00226 	beq	r2,r3,4006764 <__sflush_r+0x1fc>
 400675c:	00c00584 	movi	r3,22
 4006760:	10c0031e 	bne	r2,r3,4006770 <__sflush_r+0x208>
 4006764:	9c000015 	stw	r16,0(r19)
 4006768:	0005883a 	mov	r2,zero
 400676c:	003fb306 	br	400663c <__alt_data_end+0xfc00663c>
 4006770:	88c0030b 	ldhu	r3,12(r17)
 4006774:	3005883a 	mov	r2,r6
 4006778:	18c01014 	ori	r3,r3,64
 400677c:	88c0030d 	sth	r3,12(r17)
 4006780:	003fae06 	br	400663c <__alt_data_end+0xfc00663c>

04006784 <_fflush_r>:
 4006784:	defffd04 	addi	sp,sp,-12
 4006788:	dc000115 	stw	r16,4(sp)
 400678c:	dfc00215 	stw	ra,8(sp)
 4006790:	2021883a 	mov	r16,r4
 4006794:	20000226 	beq	r4,zero,40067a0 <_fflush_r+0x1c>
 4006798:	20800e17 	ldw	r2,56(r4)
 400679c:	10000c26 	beq	r2,zero,40067d0 <_fflush_r+0x4c>
 40067a0:	2880030f 	ldh	r2,12(r5)
 40067a4:	1000051e 	bne	r2,zero,40067bc <_fflush_r+0x38>
 40067a8:	0005883a 	mov	r2,zero
 40067ac:	dfc00217 	ldw	ra,8(sp)
 40067b0:	dc000117 	ldw	r16,4(sp)
 40067b4:	dec00304 	addi	sp,sp,12
 40067b8:	f800283a 	ret
 40067bc:	8009883a 	mov	r4,r16
 40067c0:	dfc00217 	ldw	ra,8(sp)
 40067c4:	dc000117 	ldw	r16,4(sp)
 40067c8:	dec00304 	addi	sp,sp,12
 40067cc:	40065681 	jmpi	4006568 <__sflush_r>
 40067d0:	d9400015 	stw	r5,0(sp)
 40067d4:	4006b600 	call	4006b60 <__sinit>
 40067d8:	d9400017 	ldw	r5,0(sp)
 40067dc:	003ff006 	br	40067a0 <__alt_data_end+0xfc0067a0>

040067e0 <fflush>:
 40067e0:	20000526 	beq	r4,zero,40067f8 <fflush+0x18>
 40067e4:	00810074 	movhi	r2,1025
 40067e8:	10897804 	addi	r2,r2,9696
 40067ec:	200b883a 	mov	r5,r4
 40067f0:	11000017 	ldw	r4,0(r2)
 40067f4:	40067841 	jmpi	4006784 <_fflush_r>
 40067f8:	00810074 	movhi	r2,1025
 40067fc:	10897704 	addi	r2,r2,9692
 4006800:	11000017 	ldw	r4,0(r2)
 4006804:	01410034 	movhi	r5,1024
 4006808:	2959e104 	addi	r5,r5,26500
 400680c:	40075641 	jmpi	4007564 <_fwalk_reent>

04006810 <__fp_unlock>:
 4006810:	0005883a 	mov	r2,zero
 4006814:	f800283a 	ret

04006818 <_cleanup_r>:
 4006818:	01410074 	movhi	r5,1025
 400681c:	296e0f04 	addi	r5,r5,-18372
 4006820:	40075641 	jmpi	4007564 <_fwalk_reent>

04006824 <__sinit.part.1>:
 4006824:	defff704 	addi	sp,sp,-36
 4006828:	00c10034 	movhi	r3,1024
 400682c:	dfc00815 	stw	ra,32(sp)
 4006830:	ddc00715 	stw	r23,28(sp)
 4006834:	dd800615 	stw	r22,24(sp)
 4006838:	dd400515 	stw	r21,20(sp)
 400683c:	dd000415 	stw	r20,16(sp)
 4006840:	dcc00315 	stw	r19,12(sp)
 4006844:	dc800215 	stw	r18,8(sp)
 4006848:	dc400115 	stw	r17,4(sp)
 400684c:	dc000015 	stw	r16,0(sp)
 4006850:	18da0604 	addi	r3,r3,26648
 4006854:	24000117 	ldw	r16,4(r4)
 4006858:	20c00f15 	stw	r3,60(r4)
 400685c:	2080bb04 	addi	r2,r4,748
 4006860:	00c000c4 	movi	r3,3
 4006864:	20c0b915 	stw	r3,740(r4)
 4006868:	2080ba15 	stw	r2,744(r4)
 400686c:	2000b815 	stw	zero,736(r4)
 4006870:	05c00204 	movi	r23,8
 4006874:	00800104 	movi	r2,4
 4006878:	2025883a 	mov	r18,r4
 400687c:	b80d883a 	mov	r6,r23
 4006880:	81001704 	addi	r4,r16,92
 4006884:	000b883a 	mov	r5,zero
 4006888:	80000015 	stw	zero,0(r16)
 400688c:	80000115 	stw	zero,4(r16)
 4006890:	80000215 	stw	zero,8(r16)
 4006894:	8080030d 	sth	r2,12(r16)
 4006898:	80001915 	stw	zero,100(r16)
 400689c:	8000038d 	sth	zero,14(r16)
 40068a0:	80000415 	stw	zero,16(r16)
 40068a4:	80000515 	stw	zero,20(r16)
 40068a8:	80000615 	stw	zero,24(r16)
 40068ac:	40084540 	call	4008454 <memset>
 40068b0:	05810074 	movhi	r22,1025
 40068b4:	94400217 	ldw	r17,8(r18)
 40068b8:	05410074 	movhi	r21,1025
 40068bc:	05010074 	movhi	r20,1025
 40068c0:	04c10074 	movhi	r19,1025
 40068c4:	b5a74304 	addi	r22,r22,-25332
 40068c8:	ad675a04 	addi	r21,r21,-25240
 40068cc:	a5277904 	addi	r20,r20,-25116
 40068d0:	9ce79004 	addi	r19,r19,-25024
 40068d4:	85800815 	stw	r22,32(r16)
 40068d8:	85400915 	stw	r21,36(r16)
 40068dc:	85000a15 	stw	r20,40(r16)
 40068e0:	84c00b15 	stw	r19,44(r16)
 40068e4:	84000715 	stw	r16,28(r16)
 40068e8:	00800284 	movi	r2,10
 40068ec:	8880030d 	sth	r2,12(r17)
 40068f0:	00800044 	movi	r2,1
 40068f4:	b80d883a 	mov	r6,r23
 40068f8:	89001704 	addi	r4,r17,92
 40068fc:	000b883a 	mov	r5,zero
 4006900:	88000015 	stw	zero,0(r17)
 4006904:	88000115 	stw	zero,4(r17)
 4006908:	88000215 	stw	zero,8(r17)
 400690c:	88001915 	stw	zero,100(r17)
 4006910:	8880038d 	sth	r2,14(r17)
 4006914:	88000415 	stw	zero,16(r17)
 4006918:	88000515 	stw	zero,20(r17)
 400691c:	88000615 	stw	zero,24(r17)
 4006920:	40084540 	call	4008454 <memset>
 4006924:	94000317 	ldw	r16,12(r18)
 4006928:	00800484 	movi	r2,18
 400692c:	8c400715 	stw	r17,28(r17)
 4006930:	8d800815 	stw	r22,32(r17)
 4006934:	8d400915 	stw	r21,36(r17)
 4006938:	8d000a15 	stw	r20,40(r17)
 400693c:	8cc00b15 	stw	r19,44(r17)
 4006940:	8080030d 	sth	r2,12(r16)
 4006944:	00800084 	movi	r2,2
 4006948:	80000015 	stw	zero,0(r16)
 400694c:	80000115 	stw	zero,4(r16)
 4006950:	80000215 	stw	zero,8(r16)
 4006954:	80001915 	stw	zero,100(r16)
 4006958:	8080038d 	sth	r2,14(r16)
 400695c:	80000415 	stw	zero,16(r16)
 4006960:	80000515 	stw	zero,20(r16)
 4006964:	80000615 	stw	zero,24(r16)
 4006968:	b80d883a 	mov	r6,r23
 400696c:	000b883a 	mov	r5,zero
 4006970:	81001704 	addi	r4,r16,92
 4006974:	40084540 	call	4008454 <memset>
 4006978:	00800044 	movi	r2,1
 400697c:	84000715 	stw	r16,28(r16)
 4006980:	85800815 	stw	r22,32(r16)
 4006984:	85400915 	stw	r21,36(r16)
 4006988:	85000a15 	stw	r20,40(r16)
 400698c:	84c00b15 	stw	r19,44(r16)
 4006990:	90800e15 	stw	r2,56(r18)
 4006994:	dfc00817 	ldw	ra,32(sp)
 4006998:	ddc00717 	ldw	r23,28(sp)
 400699c:	dd800617 	ldw	r22,24(sp)
 40069a0:	dd400517 	ldw	r21,20(sp)
 40069a4:	dd000417 	ldw	r20,16(sp)
 40069a8:	dcc00317 	ldw	r19,12(sp)
 40069ac:	dc800217 	ldw	r18,8(sp)
 40069b0:	dc400117 	ldw	r17,4(sp)
 40069b4:	dc000017 	ldw	r16,0(sp)
 40069b8:	dec00904 	addi	sp,sp,36
 40069bc:	f800283a 	ret

040069c0 <__fp_lock>:
 40069c0:	0005883a 	mov	r2,zero
 40069c4:	f800283a 	ret

040069c8 <__sfmoreglue>:
 40069c8:	defffc04 	addi	sp,sp,-16
 40069cc:	dc400115 	stw	r17,4(sp)
 40069d0:	2c7fffc4 	addi	r17,r5,-1
 40069d4:	8c401a24 	muli	r17,r17,104
 40069d8:	dc800215 	stw	r18,8(sp)
 40069dc:	2825883a 	mov	r18,r5
 40069e0:	89401d04 	addi	r5,r17,116
 40069e4:	dc000015 	stw	r16,0(sp)
 40069e8:	dfc00315 	stw	ra,12(sp)
 40069ec:	40078c00 	call	40078c0 <_malloc_r>
 40069f0:	1021883a 	mov	r16,r2
 40069f4:	10000726 	beq	r2,zero,4006a14 <__sfmoreglue+0x4c>
 40069f8:	11000304 	addi	r4,r2,12
 40069fc:	10000015 	stw	zero,0(r2)
 4006a00:	14800115 	stw	r18,4(r2)
 4006a04:	11000215 	stw	r4,8(r2)
 4006a08:	89801a04 	addi	r6,r17,104
 4006a0c:	000b883a 	mov	r5,zero
 4006a10:	40084540 	call	4008454 <memset>
 4006a14:	8005883a 	mov	r2,r16
 4006a18:	dfc00317 	ldw	ra,12(sp)
 4006a1c:	dc800217 	ldw	r18,8(sp)
 4006a20:	dc400117 	ldw	r17,4(sp)
 4006a24:	dc000017 	ldw	r16,0(sp)
 4006a28:	dec00404 	addi	sp,sp,16
 4006a2c:	f800283a 	ret

04006a30 <__sfp>:
 4006a30:	defffb04 	addi	sp,sp,-20
 4006a34:	dc000015 	stw	r16,0(sp)
 4006a38:	04010074 	movhi	r16,1025
 4006a3c:	84097704 	addi	r16,r16,9692
 4006a40:	dcc00315 	stw	r19,12(sp)
 4006a44:	2027883a 	mov	r19,r4
 4006a48:	81000017 	ldw	r4,0(r16)
 4006a4c:	dfc00415 	stw	ra,16(sp)
 4006a50:	dc800215 	stw	r18,8(sp)
 4006a54:	20800e17 	ldw	r2,56(r4)
 4006a58:	dc400115 	stw	r17,4(sp)
 4006a5c:	1000021e 	bne	r2,zero,4006a68 <__sfp+0x38>
 4006a60:	40068240 	call	4006824 <__sinit.part.1>
 4006a64:	81000017 	ldw	r4,0(r16)
 4006a68:	2480b804 	addi	r18,r4,736
 4006a6c:	047fffc4 	movi	r17,-1
 4006a70:	91000117 	ldw	r4,4(r18)
 4006a74:	94000217 	ldw	r16,8(r18)
 4006a78:	213fffc4 	addi	r4,r4,-1
 4006a7c:	20000a16 	blt	r4,zero,4006aa8 <__sfp+0x78>
 4006a80:	8080030f 	ldh	r2,12(r16)
 4006a84:	10000c26 	beq	r2,zero,4006ab8 <__sfp+0x88>
 4006a88:	80c01d04 	addi	r3,r16,116
 4006a8c:	00000206 	br	4006a98 <__sfp+0x68>
 4006a90:	18bfe60f 	ldh	r2,-104(r3)
 4006a94:	10000826 	beq	r2,zero,4006ab8 <__sfp+0x88>
 4006a98:	213fffc4 	addi	r4,r4,-1
 4006a9c:	1c3ffd04 	addi	r16,r3,-12
 4006aa0:	18c01a04 	addi	r3,r3,104
 4006aa4:	247ffa1e 	bne	r4,r17,4006a90 <__alt_data_end+0xfc006a90>
 4006aa8:	90800017 	ldw	r2,0(r18)
 4006aac:	10001d26 	beq	r2,zero,4006b24 <__sfp+0xf4>
 4006ab0:	1025883a 	mov	r18,r2
 4006ab4:	003fee06 	br	4006a70 <__alt_data_end+0xfc006a70>
 4006ab8:	00bfffc4 	movi	r2,-1
 4006abc:	8080038d 	sth	r2,14(r16)
 4006ac0:	00800044 	movi	r2,1
 4006ac4:	8080030d 	sth	r2,12(r16)
 4006ac8:	80001915 	stw	zero,100(r16)
 4006acc:	80000015 	stw	zero,0(r16)
 4006ad0:	80000215 	stw	zero,8(r16)
 4006ad4:	80000115 	stw	zero,4(r16)
 4006ad8:	80000415 	stw	zero,16(r16)
 4006adc:	80000515 	stw	zero,20(r16)
 4006ae0:	80000615 	stw	zero,24(r16)
 4006ae4:	01800204 	movi	r6,8
 4006ae8:	000b883a 	mov	r5,zero
 4006aec:	81001704 	addi	r4,r16,92
 4006af0:	40084540 	call	4008454 <memset>
 4006af4:	8005883a 	mov	r2,r16
 4006af8:	80000c15 	stw	zero,48(r16)
 4006afc:	80000d15 	stw	zero,52(r16)
 4006b00:	80001115 	stw	zero,68(r16)
 4006b04:	80001215 	stw	zero,72(r16)
 4006b08:	dfc00417 	ldw	ra,16(sp)
 4006b0c:	dcc00317 	ldw	r19,12(sp)
 4006b10:	dc800217 	ldw	r18,8(sp)
 4006b14:	dc400117 	ldw	r17,4(sp)
 4006b18:	dc000017 	ldw	r16,0(sp)
 4006b1c:	dec00504 	addi	sp,sp,20
 4006b20:	f800283a 	ret
 4006b24:	01400104 	movi	r5,4
 4006b28:	9809883a 	mov	r4,r19
 4006b2c:	40069c80 	call	40069c8 <__sfmoreglue>
 4006b30:	90800015 	stw	r2,0(r18)
 4006b34:	103fde1e 	bne	r2,zero,4006ab0 <__alt_data_end+0xfc006ab0>
 4006b38:	00800304 	movi	r2,12
 4006b3c:	98800015 	stw	r2,0(r19)
 4006b40:	0005883a 	mov	r2,zero
 4006b44:	003ff006 	br	4006b08 <__alt_data_end+0xfc006b08>

04006b48 <_cleanup>:
 4006b48:	00810074 	movhi	r2,1025
 4006b4c:	10897704 	addi	r2,r2,9692
 4006b50:	11000017 	ldw	r4,0(r2)
 4006b54:	01410074 	movhi	r5,1025
 4006b58:	296e0f04 	addi	r5,r5,-18372
 4006b5c:	40075641 	jmpi	4007564 <_fwalk_reent>

04006b60 <__sinit>:
 4006b60:	20800e17 	ldw	r2,56(r4)
 4006b64:	10000126 	beq	r2,zero,4006b6c <__sinit+0xc>
 4006b68:	f800283a 	ret
 4006b6c:	40068241 	jmpi	4006824 <__sinit.part.1>

04006b70 <__sfp_lock_acquire>:
 4006b70:	f800283a 	ret

04006b74 <__sfp_lock_release>:
 4006b74:	f800283a 	ret

04006b78 <__sinit_lock_acquire>:
 4006b78:	f800283a 	ret

04006b7c <__sinit_lock_release>:
 4006b7c:	f800283a 	ret

04006b80 <__fp_lock_all>:
 4006b80:	00810074 	movhi	r2,1025
 4006b84:	10897804 	addi	r2,r2,9696
 4006b88:	11000017 	ldw	r4,0(r2)
 4006b8c:	01410034 	movhi	r5,1024
 4006b90:	295a7004 	addi	r5,r5,27072
 4006b94:	40074a01 	jmpi	40074a0 <_fwalk>

04006b98 <__fp_unlock_all>:
 4006b98:	00810074 	movhi	r2,1025
 4006b9c:	10897804 	addi	r2,r2,9696
 4006ba0:	11000017 	ldw	r4,0(r2)
 4006ba4:	01410034 	movhi	r5,1024
 4006ba8:	295a0404 	addi	r5,r5,26640
 4006bac:	40074a01 	jmpi	40074a0 <_fwalk>

04006bb0 <_malloc_trim_r>:
 4006bb0:	defffb04 	addi	sp,sp,-20
 4006bb4:	dcc00315 	stw	r19,12(sp)
 4006bb8:	04c10074 	movhi	r19,1025
 4006bbc:	dc800215 	stw	r18,8(sp)
 4006bc0:	dc400115 	stw	r17,4(sp)
 4006bc4:	dc000015 	stw	r16,0(sp)
 4006bc8:	dfc00415 	stw	ra,16(sp)
 4006bcc:	2821883a 	mov	r16,r5
 4006bd0:	9cc3f304 	addi	r19,r19,4044
 4006bd4:	2025883a 	mov	r18,r4
 4006bd8:	400e54c0 	call	400e54c <__malloc_lock>
 4006bdc:	98800217 	ldw	r2,8(r19)
 4006be0:	14400117 	ldw	r17,4(r2)
 4006be4:	00bfff04 	movi	r2,-4
 4006be8:	88a2703a 	and	r17,r17,r2
 4006bec:	8c21c83a 	sub	r16,r17,r16
 4006bf0:	8403fbc4 	addi	r16,r16,4079
 4006bf4:	8020d33a 	srli	r16,r16,12
 4006bf8:	0083ffc4 	movi	r2,4095
 4006bfc:	843fffc4 	addi	r16,r16,-1
 4006c00:	8020933a 	slli	r16,r16,12
 4006c04:	1400060e 	bge	r2,r16,4006c20 <_malloc_trim_r+0x70>
 4006c08:	000b883a 	mov	r5,zero
 4006c0c:	9009883a 	mov	r4,r18
 4006c10:	4009cb80 	call	4009cb8 <_sbrk_r>
 4006c14:	98c00217 	ldw	r3,8(r19)
 4006c18:	1c47883a 	add	r3,r3,r17
 4006c1c:	10c00a26 	beq	r2,r3,4006c48 <_malloc_trim_r+0x98>
 4006c20:	9009883a 	mov	r4,r18
 4006c24:	400e5700 	call	400e570 <__malloc_unlock>
 4006c28:	0005883a 	mov	r2,zero
 4006c2c:	dfc00417 	ldw	ra,16(sp)
 4006c30:	dcc00317 	ldw	r19,12(sp)
 4006c34:	dc800217 	ldw	r18,8(sp)
 4006c38:	dc400117 	ldw	r17,4(sp)
 4006c3c:	dc000017 	ldw	r16,0(sp)
 4006c40:	dec00504 	addi	sp,sp,20
 4006c44:	f800283a 	ret
 4006c48:	040bc83a 	sub	r5,zero,r16
 4006c4c:	9009883a 	mov	r4,r18
 4006c50:	4009cb80 	call	4009cb8 <_sbrk_r>
 4006c54:	00ffffc4 	movi	r3,-1
 4006c58:	10c00d26 	beq	r2,r3,4006c90 <_malloc_trim_r+0xe0>
 4006c5c:	00c10074 	movhi	r3,1025
 4006c60:	18d05504 	addi	r3,r3,16724
 4006c64:	18800017 	ldw	r2,0(r3)
 4006c68:	99000217 	ldw	r4,8(r19)
 4006c6c:	8c23c83a 	sub	r17,r17,r16
 4006c70:	8c400054 	ori	r17,r17,1
 4006c74:	1421c83a 	sub	r16,r2,r16
 4006c78:	24400115 	stw	r17,4(r4)
 4006c7c:	9009883a 	mov	r4,r18
 4006c80:	1c000015 	stw	r16,0(r3)
 4006c84:	400e5700 	call	400e570 <__malloc_unlock>
 4006c88:	00800044 	movi	r2,1
 4006c8c:	003fe706 	br	4006c2c <__alt_data_end+0xfc006c2c>
 4006c90:	000b883a 	mov	r5,zero
 4006c94:	9009883a 	mov	r4,r18
 4006c98:	4009cb80 	call	4009cb8 <_sbrk_r>
 4006c9c:	99000217 	ldw	r4,8(r19)
 4006ca0:	014003c4 	movi	r5,15
 4006ca4:	1107c83a 	sub	r3,r2,r4
 4006ca8:	28ffdd0e 	bge	r5,r3,4006c20 <__alt_data_end+0xfc006c20>
 4006cac:	01410074 	movhi	r5,1025
 4006cb0:	29497a04 	addi	r5,r5,9704
 4006cb4:	29400017 	ldw	r5,0(r5)
 4006cb8:	18c00054 	ori	r3,r3,1
 4006cbc:	20c00115 	stw	r3,4(r4)
 4006cc0:	00c10074 	movhi	r3,1025
 4006cc4:	1145c83a 	sub	r2,r2,r5
 4006cc8:	18d05504 	addi	r3,r3,16724
 4006ccc:	18800015 	stw	r2,0(r3)
 4006cd0:	003fd306 	br	4006c20 <__alt_data_end+0xfc006c20>

04006cd4 <_free_r>:
 4006cd4:	28004126 	beq	r5,zero,4006ddc <_free_r+0x108>
 4006cd8:	defffd04 	addi	sp,sp,-12
 4006cdc:	dc400115 	stw	r17,4(sp)
 4006ce0:	dc000015 	stw	r16,0(sp)
 4006ce4:	2023883a 	mov	r17,r4
 4006ce8:	2821883a 	mov	r16,r5
 4006cec:	dfc00215 	stw	ra,8(sp)
 4006cf0:	400e54c0 	call	400e54c <__malloc_lock>
 4006cf4:	81ffff17 	ldw	r7,-4(r16)
 4006cf8:	00bfff84 	movi	r2,-2
 4006cfc:	01010074 	movhi	r4,1025
 4006d00:	81bffe04 	addi	r6,r16,-8
 4006d04:	3884703a 	and	r2,r7,r2
 4006d08:	2103f304 	addi	r4,r4,4044
 4006d0c:	308b883a 	add	r5,r6,r2
 4006d10:	2a400117 	ldw	r9,4(r5)
 4006d14:	22000217 	ldw	r8,8(r4)
 4006d18:	00ffff04 	movi	r3,-4
 4006d1c:	48c6703a 	and	r3,r9,r3
 4006d20:	2a005726 	beq	r5,r8,4006e80 <_free_r+0x1ac>
 4006d24:	28c00115 	stw	r3,4(r5)
 4006d28:	39c0004c 	andi	r7,r7,1
 4006d2c:	3800091e 	bne	r7,zero,4006d54 <_free_r+0x80>
 4006d30:	823ffe17 	ldw	r8,-8(r16)
 4006d34:	22400204 	addi	r9,r4,8
 4006d38:	320dc83a 	sub	r6,r6,r8
 4006d3c:	31c00217 	ldw	r7,8(r6)
 4006d40:	1205883a 	add	r2,r2,r8
 4006d44:	3a406526 	beq	r7,r9,4006edc <_free_r+0x208>
 4006d48:	32000317 	ldw	r8,12(r6)
 4006d4c:	3a000315 	stw	r8,12(r7)
 4006d50:	41c00215 	stw	r7,8(r8)
 4006d54:	28cf883a 	add	r7,r5,r3
 4006d58:	39c00117 	ldw	r7,4(r7)
 4006d5c:	39c0004c 	andi	r7,r7,1
 4006d60:	38003a26 	beq	r7,zero,4006e4c <_free_r+0x178>
 4006d64:	10c00054 	ori	r3,r2,1
 4006d68:	30c00115 	stw	r3,4(r6)
 4006d6c:	3087883a 	add	r3,r6,r2
 4006d70:	18800015 	stw	r2,0(r3)
 4006d74:	00c07fc4 	movi	r3,511
 4006d78:	18801936 	bltu	r3,r2,4006de0 <_free_r+0x10c>
 4006d7c:	1004d0fa 	srli	r2,r2,3
 4006d80:	01c00044 	movi	r7,1
 4006d84:	21400117 	ldw	r5,4(r4)
 4006d88:	10c00044 	addi	r3,r2,1
 4006d8c:	18c7883a 	add	r3,r3,r3
 4006d90:	1005d0ba 	srai	r2,r2,2
 4006d94:	18c7883a 	add	r3,r3,r3
 4006d98:	18c7883a 	add	r3,r3,r3
 4006d9c:	1907883a 	add	r3,r3,r4
 4006da0:	3884983a 	sll	r2,r7,r2
 4006da4:	19c00017 	ldw	r7,0(r3)
 4006da8:	1a3ffe04 	addi	r8,r3,-8
 4006dac:	1144b03a 	or	r2,r2,r5
 4006db0:	32000315 	stw	r8,12(r6)
 4006db4:	31c00215 	stw	r7,8(r6)
 4006db8:	20800115 	stw	r2,4(r4)
 4006dbc:	19800015 	stw	r6,0(r3)
 4006dc0:	39800315 	stw	r6,12(r7)
 4006dc4:	8809883a 	mov	r4,r17
 4006dc8:	dfc00217 	ldw	ra,8(sp)
 4006dcc:	dc400117 	ldw	r17,4(sp)
 4006dd0:	dc000017 	ldw	r16,0(sp)
 4006dd4:	dec00304 	addi	sp,sp,12
 4006dd8:	400e5701 	jmpi	400e570 <__malloc_unlock>
 4006ddc:	f800283a 	ret
 4006de0:	100ad27a 	srli	r5,r2,9
 4006de4:	00c00104 	movi	r3,4
 4006de8:	19404a36 	bltu	r3,r5,4006f14 <_free_r+0x240>
 4006dec:	100ad1ba 	srli	r5,r2,6
 4006df0:	28c00e44 	addi	r3,r5,57
 4006df4:	18c7883a 	add	r3,r3,r3
 4006df8:	29400e04 	addi	r5,r5,56
 4006dfc:	18c7883a 	add	r3,r3,r3
 4006e00:	18c7883a 	add	r3,r3,r3
 4006e04:	1909883a 	add	r4,r3,r4
 4006e08:	20c00017 	ldw	r3,0(r4)
 4006e0c:	01c10074 	movhi	r7,1025
 4006e10:	213ffe04 	addi	r4,r4,-8
 4006e14:	39c3f304 	addi	r7,r7,4044
 4006e18:	20c04426 	beq	r4,r3,4006f2c <_free_r+0x258>
 4006e1c:	01ffff04 	movi	r7,-4
 4006e20:	19400117 	ldw	r5,4(r3)
 4006e24:	29ca703a 	and	r5,r5,r7
 4006e28:	1140022e 	bgeu	r2,r5,4006e34 <_free_r+0x160>
 4006e2c:	18c00217 	ldw	r3,8(r3)
 4006e30:	20fffb1e 	bne	r4,r3,4006e20 <__alt_data_end+0xfc006e20>
 4006e34:	19000317 	ldw	r4,12(r3)
 4006e38:	31000315 	stw	r4,12(r6)
 4006e3c:	30c00215 	stw	r3,8(r6)
 4006e40:	21800215 	stw	r6,8(r4)
 4006e44:	19800315 	stw	r6,12(r3)
 4006e48:	003fde06 	br	4006dc4 <__alt_data_end+0xfc006dc4>
 4006e4c:	29c00217 	ldw	r7,8(r5)
 4006e50:	10c5883a 	add	r2,r2,r3
 4006e54:	00c10074 	movhi	r3,1025
 4006e58:	18c3f504 	addi	r3,r3,4052
 4006e5c:	38c03b26 	beq	r7,r3,4006f4c <_free_r+0x278>
 4006e60:	2a000317 	ldw	r8,12(r5)
 4006e64:	11400054 	ori	r5,r2,1
 4006e68:	3087883a 	add	r3,r6,r2
 4006e6c:	3a000315 	stw	r8,12(r7)
 4006e70:	41c00215 	stw	r7,8(r8)
 4006e74:	31400115 	stw	r5,4(r6)
 4006e78:	18800015 	stw	r2,0(r3)
 4006e7c:	003fbd06 	br	4006d74 <__alt_data_end+0xfc006d74>
 4006e80:	39c0004c 	andi	r7,r7,1
 4006e84:	10c5883a 	add	r2,r2,r3
 4006e88:	3800071e 	bne	r7,zero,4006ea8 <_free_r+0x1d4>
 4006e8c:	81fffe17 	ldw	r7,-8(r16)
 4006e90:	31cdc83a 	sub	r6,r6,r7
 4006e94:	30c00317 	ldw	r3,12(r6)
 4006e98:	31400217 	ldw	r5,8(r6)
 4006e9c:	11c5883a 	add	r2,r2,r7
 4006ea0:	28c00315 	stw	r3,12(r5)
 4006ea4:	19400215 	stw	r5,8(r3)
 4006ea8:	10c00054 	ori	r3,r2,1
 4006eac:	30c00115 	stw	r3,4(r6)
 4006eb0:	00c10074 	movhi	r3,1025
 4006eb4:	18c97b04 	addi	r3,r3,9708
 4006eb8:	18c00017 	ldw	r3,0(r3)
 4006ebc:	21800215 	stw	r6,8(r4)
 4006ec0:	10ffc036 	bltu	r2,r3,4006dc4 <__alt_data_end+0xfc006dc4>
 4006ec4:	00810074 	movhi	r2,1025
 4006ec8:	10904b04 	addi	r2,r2,16684
 4006ecc:	11400017 	ldw	r5,0(r2)
 4006ed0:	8809883a 	mov	r4,r17
 4006ed4:	4006bb00 	call	4006bb0 <_malloc_trim_r>
 4006ed8:	003fba06 	br	4006dc4 <__alt_data_end+0xfc006dc4>
 4006edc:	28c9883a 	add	r4,r5,r3
 4006ee0:	21000117 	ldw	r4,4(r4)
 4006ee4:	2100004c 	andi	r4,r4,1
 4006ee8:	2000391e 	bne	r4,zero,4006fd0 <_free_r+0x2fc>
 4006eec:	29c00217 	ldw	r7,8(r5)
 4006ef0:	29000317 	ldw	r4,12(r5)
 4006ef4:	1885883a 	add	r2,r3,r2
 4006ef8:	10c00054 	ori	r3,r2,1
 4006efc:	39000315 	stw	r4,12(r7)
 4006f00:	21c00215 	stw	r7,8(r4)
 4006f04:	30c00115 	stw	r3,4(r6)
 4006f08:	308d883a 	add	r6,r6,r2
 4006f0c:	30800015 	stw	r2,0(r6)
 4006f10:	003fac06 	br	4006dc4 <__alt_data_end+0xfc006dc4>
 4006f14:	00c00504 	movi	r3,20
 4006f18:	19401536 	bltu	r3,r5,4006f70 <_free_r+0x29c>
 4006f1c:	28c01704 	addi	r3,r5,92
 4006f20:	18c7883a 	add	r3,r3,r3
 4006f24:	294016c4 	addi	r5,r5,91
 4006f28:	003fb406 	br	4006dfc <__alt_data_end+0xfc006dfc>
 4006f2c:	280bd0ba 	srai	r5,r5,2
 4006f30:	00c00044 	movi	r3,1
 4006f34:	38800117 	ldw	r2,4(r7)
 4006f38:	194a983a 	sll	r5,r3,r5
 4006f3c:	2007883a 	mov	r3,r4
 4006f40:	2884b03a 	or	r2,r5,r2
 4006f44:	38800115 	stw	r2,4(r7)
 4006f48:	003fbb06 	br	4006e38 <__alt_data_end+0xfc006e38>
 4006f4c:	21800515 	stw	r6,20(r4)
 4006f50:	21800415 	stw	r6,16(r4)
 4006f54:	10c00054 	ori	r3,r2,1
 4006f58:	31c00315 	stw	r7,12(r6)
 4006f5c:	31c00215 	stw	r7,8(r6)
 4006f60:	30c00115 	stw	r3,4(r6)
 4006f64:	308d883a 	add	r6,r6,r2
 4006f68:	30800015 	stw	r2,0(r6)
 4006f6c:	003f9506 	br	4006dc4 <__alt_data_end+0xfc006dc4>
 4006f70:	00c01504 	movi	r3,84
 4006f74:	19400536 	bltu	r3,r5,4006f8c <_free_r+0x2b8>
 4006f78:	100ad33a 	srli	r5,r2,12
 4006f7c:	28c01bc4 	addi	r3,r5,111
 4006f80:	18c7883a 	add	r3,r3,r3
 4006f84:	29401b84 	addi	r5,r5,110
 4006f88:	003f9c06 	br	4006dfc <__alt_data_end+0xfc006dfc>
 4006f8c:	00c05504 	movi	r3,340
 4006f90:	19400536 	bltu	r3,r5,4006fa8 <_free_r+0x2d4>
 4006f94:	100ad3fa 	srli	r5,r2,15
 4006f98:	28c01e04 	addi	r3,r5,120
 4006f9c:	18c7883a 	add	r3,r3,r3
 4006fa0:	29401dc4 	addi	r5,r5,119
 4006fa4:	003f9506 	br	4006dfc <__alt_data_end+0xfc006dfc>
 4006fa8:	00c15504 	movi	r3,1364
 4006fac:	19400536 	bltu	r3,r5,4006fc4 <_free_r+0x2f0>
 4006fb0:	100ad4ba 	srli	r5,r2,18
 4006fb4:	28c01f44 	addi	r3,r5,125
 4006fb8:	18c7883a 	add	r3,r3,r3
 4006fbc:	29401f04 	addi	r5,r5,124
 4006fc0:	003f8e06 	br	4006dfc <__alt_data_end+0xfc006dfc>
 4006fc4:	00c03f84 	movi	r3,254
 4006fc8:	01401f84 	movi	r5,126
 4006fcc:	003f8b06 	br	4006dfc <__alt_data_end+0xfc006dfc>
 4006fd0:	10c00054 	ori	r3,r2,1
 4006fd4:	30c00115 	stw	r3,4(r6)
 4006fd8:	308d883a 	add	r6,r6,r2
 4006fdc:	30800015 	stw	r2,0(r6)
 4006fe0:	003f7806 	br	4006dc4 <__alt_data_end+0xfc006dc4>

04006fe4 <__sfvwrite_r>:
 4006fe4:	30800217 	ldw	r2,8(r6)
 4006fe8:	10006726 	beq	r2,zero,4007188 <__sfvwrite_r+0x1a4>
 4006fec:	28c0030b 	ldhu	r3,12(r5)
 4006ff0:	defff404 	addi	sp,sp,-48
 4006ff4:	dd400715 	stw	r21,28(sp)
 4006ff8:	dd000615 	stw	r20,24(sp)
 4006ffc:	dc000215 	stw	r16,8(sp)
 4007000:	dfc00b15 	stw	ra,44(sp)
 4007004:	df000a15 	stw	fp,40(sp)
 4007008:	ddc00915 	stw	r23,36(sp)
 400700c:	dd800815 	stw	r22,32(sp)
 4007010:	dcc00515 	stw	r19,20(sp)
 4007014:	dc800415 	stw	r18,16(sp)
 4007018:	dc400315 	stw	r17,12(sp)
 400701c:	1880020c 	andi	r2,r3,8
 4007020:	2821883a 	mov	r16,r5
 4007024:	202b883a 	mov	r21,r4
 4007028:	3029883a 	mov	r20,r6
 400702c:	10002726 	beq	r2,zero,40070cc <__sfvwrite_r+0xe8>
 4007030:	28800417 	ldw	r2,16(r5)
 4007034:	10002526 	beq	r2,zero,40070cc <__sfvwrite_r+0xe8>
 4007038:	1880008c 	andi	r2,r3,2
 400703c:	a4400017 	ldw	r17,0(r20)
 4007040:	10002a26 	beq	r2,zero,40070ec <__sfvwrite_r+0x108>
 4007044:	05a00034 	movhi	r22,32768
 4007048:	0027883a 	mov	r19,zero
 400704c:	0025883a 	mov	r18,zero
 4007050:	b5bf0004 	addi	r22,r22,-1024
 4007054:	980d883a 	mov	r6,r19
 4007058:	a809883a 	mov	r4,r21
 400705c:	90004626 	beq	r18,zero,4007178 <__sfvwrite_r+0x194>
 4007060:	900f883a 	mov	r7,r18
 4007064:	b480022e 	bgeu	r22,r18,4007070 <__sfvwrite_r+0x8c>
 4007068:	01e00034 	movhi	r7,32768
 400706c:	39ff0004 	addi	r7,r7,-1024
 4007070:	80800917 	ldw	r2,36(r16)
 4007074:	81400717 	ldw	r5,28(r16)
 4007078:	103ee83a 	callr	r2
 400707c:	0080570e 	bge	zero,r2,40071dc <__sfvwrite_r+0x1f8>
 4007080:	a0c00217 	ldw	r3,8(r20)
 4007084:	98a7883a 	add	r19,r19,r2
 4007088:	90a5c83a 	sub	r18,r18,r2
 400708c:	1885c83a 	sub	r2,r3,r2
 4007090:	a0800215 	stw	r2,8(r20)
 4007094:	103fef1e 	bne	r2,zero,4007054 <__alt_data_end+0xfc007054>
 4007098:	0005883a 	mov	r2,zero
 400709c:	dfc00b17 	ldw	ra,44(sp)
 40070a0:	df000a17 	ldw	fp,40(sp)
 40070a4:	ddc00917 	ldw	r23,36(sp)
 40070a8:	dd800817 	ldw	r22,32(sp)
 40070ac:	dd400717 	ldw	r21,28(sp)
 40070b0:	dd000617 	ldw	r20,24(sp)
 40070b4:	dcc00517 	ldw	r19,20(sp)
 40070b8:	dc800417 	ldw	r18,16(sp)
 40070bc:	dc400317 	ldw	r17,12(sp)
 40070c0:	dc000217 	ldw	r16,8(sp)
 40070c4:	dec00c04 	addi	sp,sp,48
 40070c8:	f800283a 	ret
 40070cc:	800b883a 	mov	r5,r16
 40070d0:	a809883a 	mov	r4,r21
 40070d4:	4004b8c0 	call	4004b8c <__swsetup_r>
 40070d8:	1000eb1e 	bne	r2,zero,4007488 <__sfvwrite_r+0x4a4>
 40070dc:	80c0030b 	ldhu	r3,12(r16)
 40070e0:	a4400017 	ldw	r17,0(r20)
 40070e4:	1880008c 	andi	r2,r3,2
 40070e8:	103fd61e 	bne	r2,zero,4007044 <__alt_data_end+0xfc007044>
 40070ec:	1880004c 	andi	r2,r3,1
 40070f0:	10003f1e 	bne	r2,zero,40071f0 <__sfvwrite_r+0x20c>
 40070f4:	0039883a 	mov	fp,zero
 40070f8:	0025883a 	mov	r18,zero
 40070fc:	90001a26 	beq	r18,zero,4007168 <__sfvwrite_r+0x184>
 4007100:	1880800c 	andi	r2,r3,512
 4007104:	84c00217 	ldw	r19,8(r16)
 4007108:	10002126 	beq	r2,zero,4007190 <__sfvwrite_r+0x1ac>
 400710c:	982f883a 	mov	r23,r19
 4007110:	94c09336 	bltu	r18,r19,4007360 <__sfvwrite_r+0x37c>
 4007114:	1881200c 	andi	r2,r3,1152
 4007118:	10009e1e 	bne	r2,zero,4007394 <__sfvwrite_r+0x3b0>
 400711c:	81000017 	ldw	r4,0(r16)
 4007120:	b80d883a 	mov	r6,r23
 4007124:	e00b883a 	mov	r5,fp
 4007128:	40082f80 	call	40082f8 <memmove>
 400712c:	80c00217 	ldw	r3,8(r16)
 4007130:	81000017 	ldw	r4,0(r16)
 4007134:	9005883a 	mov	r2,r18
 4007138:	1ce7c83a 	sub	r19,r3,r19
 400713c:	25cf883a 	add	r7,r4,r23
 4007140:	84c00215 	stw	r19,8(r16)
 4007144:	81c00015 	stw	r7,0(r16)
 4007148:	a0c00217 	ldw	r3,8(r20)
 400714c:	e0b9883a 	add	fp,fp,r2
 4007150:	90a5c83a 	sub	r18,r18,r2
 4007154:	18a7c83a 	sub	r19,r3,r2
 4007158:	a4c00215 	stw	r19,8(r20)
 400715c:	983fce26 	beq	r19,zero,4007098 <__alt_data_end+0xfc007098>
 4007160:	80c0030b 	ldhu	r3,12(r16)
 4007164:	903fe61e 	bne	r18,zero,4007100 <__alt_data_end+0xfc007100>
 4007168:	8f000017 	ldw	fp,0(r17)
 400716c:	8c800117 	ldw	r18,4(r17)
 4007170:	8c400204 	addi	r17,r17,8
 4007174:	003fe106 	br	40070fc <__alt_data_end+0xfc0070fc>
 4007178:	8cc00017 	ldw	r19,0(r17)
 400717c:	8c800117 	ldw	r18,4(r17)
 4007180:	8c400204 	addi	r17,r17,8
 4007184:	003fb306 	br	4007054 <__alt_data_end+0xfc007054>
 4007188:	0005883a 	mov	r2,zero
 400718c:	f800283a 	ret
 4007190:	81000017 	ldw	r4,0(r16)
 4007194:	80800417 	ldw	r2,16(r16)
 4007198:	11005736 	bltu	r2,r4,40072f8 <__sfvwrite_r+0x314>
 400719c:	85c00517 	ldw	r23,20(r16)
 40071a0:	95c05536 	bltu	r18,r23,40072f8 <__sfvwrite_r+0x314>
 40071a4:	00a00034 	movhi	r2,32768
 40071a8:	10bfffc4 	addi	r2,r2,-1
 40071ac:	9009883a 	mov	r4,r18
 40071b0:	1480012e 	bgeu	r2,r18,40071b8 <__sfvwrite_r+0x1d4>
 40071b4:	1009883a 	mov	r4,r2
 40071b8:	b80b883a 	mov	r5,r23
 40071bc:	400094c0 	call	400094c <__divsi3>
 40071c0:	15cf383a 	mul	r7,r2,r23
 40071c4:	81400717 	ldw	r5,28(r16)
 40071c8:	80800917 	ldw	r2,36(r16)
 40071cc:	e00d883a 	mov	r6,fp
 40071d0:	a809883a 	mov	r4,r21
 40071d4:	103ee83a 	callr	r2
 40071d8:	00bfdb16 	blt	zero,r2,4007148 <__alt_data_end+0xfc007148>
 40071dc:	8080030b 	ldhu	r2,12(r16)
 40071e0:	10801014 	ori	r2,r2,64
 40071e4:	8080030d 	sth	r2,12(r16)
 40071e8:	00bfffc4 	movi	r2,-1
 40071ec:	003fab06 	br	400709c <__alt_data_end+0xfc00709c>
 40071f0:	0027883a 	mov	r19,zero
 40071f4:	0011883a 	mov	r8,zero
 40071f8:	0039883a 	mov	fp,zero
 40071fc:	0025883a 	mov	r18,zero
 4007200:	90001f26 	beq	r18,zero,4007280 <__sfvwrite_r+0x29c>
 4007204:	40005a26 	beq	r8,zero,4007370 <__sfvwrite_r+0x38c>
 4007208:	982d883a 	mov	r22,r19
 400720c:	94c0012e 	bgeu	r18,r19,4007214 <__sfvwrite_r+0x230>
 4007210:	902d883a 	mov	r22,r18
 4007214:	81000017 	ldw	r4,0(r16)
 4007218:	80800417 	ldw	r2,16(r16)
 400721c:	b02f883a 	mov	r23,r22
 4007220:	81c00517 	ldw	r7,20(r16)
 4007224:	1100032e 	bgeu	r2,r4,4007234 <__sfvwrite_r+0x250>
 4007228:	80c00217 	ldw	r3,8(r16)
 400722c:	38c7883a 	add	r3,r7,r3
 4007230:	1d801816 	blt	r3,r22,4007294 <__sfvwrite_r+0x2b0>
 4007234:	b1c03e16 	blt	r22,r7,4007330 <__sfvwrite_r+0x34c>
 4007238:	80800917 	ldw	r2,36(r16)
 400723c:	81400717 	ldw	r5,28(r16)
 4007240:	e00d883a 	mov	r6,fp
 4007244:	da000115 	stw	r8,4(sp)
 4007248:	a809883a 	mov	r4,r21
 400724c:	103ee83a 	callr	r2
 4007250:	102f883a 	mov	r23,r2
 4007254:	da000117 	ldw	r8,4(sp)
 4007258:	00bfe00e 	bge	zero,r2,40071dc <__alt_data_end+0xfc0071dc>
 400725c:	9de7c83a 	sub	r19,r19,r23
 4007260:	98001f26 	beq	r19,zero,40072e0 <__sfvwrite_r+0x2fc>
 4007264:	a0800217 	ldw	r2,8(r20)
 4007268:	e5f9883a 	add	fp,fp,r23
 400726c:	95e5c83a 	sub	r18,r18,r23
 4007270:	15efc83a 	sub	r23,r2,r23
 4007274:	a5c00215 	stw	r23,8(r20)
 4007278:	b83f8726 	beq	r23,zero,4007098 <__alt_data_end+0xfc007098>
 400727c:	903fe11e 	bne	r18,zero,4007204 <__alt_data_end+0xfc007204>
 4007280:	8f000017 	ldw	fp,0(r17)
 4007284:	8c800117 	ldw	r18,4(r17)
 4007288:	0011883a 	mov	r8,zero
 400728c:	8c400204 	addi	r17,r17,8
 4007290:	003fdb06 	br	4007200 <__alt_data_end+0xfc007200>
 4007294:	180d883a 	mov	r6,r3
 4007298:	e00b883a 	mov	r5,fp
 400729c:	da000115 	stw	r8,4(sp)
 40072a0:	d8c00015 	stw	r3,0(sp)
 40072a4:	40082f80 	call	40082f8 <memmove>
 40072a8:	d8c00017 	ldw	r3,0(sp)
 40072ac:	80800017 	ldw	r2,0(r16)
 40072b0:	800b883a 	mov	r5,r16
 40072b4:	a809883a 	mov	r4,r21
 40072b8:	10c5883a 	add	r2,r2,r3
 40072bc:	80800015 	stw	r2,0(r16)
 40072c0:	d8c00015 	stw	r3,0(sp)
 40072c4:	40067840 	call	4006784 <_fflush_r>
 40072c8:	d8c00017 	ldw	r3,0(sp)
 40072cc:	da000117 	ldw	r8,4(sp)
 40072d0:	103fc21e 	bne	r2,zero,40071dc <__alt_data_end+0xfc0071dc>
 40072d4:	182f883a 	mov	r23,r3
 40072d8:	9de7c83a 	sub	r19,r19,r23
 40072dc:	983fe11e 	bne	r19,zero,4007264 <__alt_data_end+0xfc007264>
 40072e0:	800b883a 	mov	r5,r16
 40072e4:	a809883a 	mov	r4,r21
 40072e8:	40067840 	call	4006784 <_fflush_r>
 40072ec:	103fbb1e 	bne	r2,zero,40071dc <__alt_data_end+0xfc0071dc>
 40072f0:	0011883a 	mov	r8,zero
 40072f4:	003fdb06 	br	4007264 <__alt_data_end+0xfc007264>
 40072f8:	94c0012e 	bgeu	r18,r19,4007300 <__sfvwrite_r+0x31c>
 40072fc:	9027883a 	mov	r19,r18
 4007300:	980d883a 	mov	r6,r19
 4007304:	e00b883a 	mov	r5,fp
 4007308:	40082f80 	call	40082f8 <memmove>
 400730c:	80800217 	ldw	r2,8(r16)
 4007310:	80c00017 	ldw	r3,0(r16)
 4007314:	14c5c83a 	sub	r2,r2,r19
 4007318:	1cc7883a 	add	r3,r3,r19
 400731c:	80800215 	stw	r2,8(r16)
 4007320:	80c00015 	stw	r3,0(r16)
 4007324:	10004326 	beq	r2,zero,4007434 <__sfvwrite_r+0x450>
 4007328:	9805883a 	mov	r2,r19
 400732c:	003f8606 	br	4007148 <__alt_data_end+0xfc007148>
 4007330:	b00d883a 	mov	r6,r22
 4007334:	e00b883a 	mov	r5,fp
 4007338:	da000115 	stw	r8,4(sp)
 400733c:	40082f80 	call	40082f8 <memmove>
 4007340:	80800217 	ldw	r2,8(r16)
 4007344:	80c00017 	ldw	r3,0(r16)
 4007348:	da000117 	ldw	r8,4(sp)
 400734c:	1585c83a 	sub	r2,r2,r22
 4007350:	1dad883a 	add	r22,r3,r22
 4007354:	80800215 	stw	r2,8(r16)
 4007358:	85800015 	stw	r22,0(r16)
 400735c:	003fbf06 	br	400725c <__alt_data_end+0xfc00725c>
 4007360:	81000017 	ldw	r4,0(r16)
 4007364:	9027883a 	mov	r19,r18
 4007368:	902f883a 	mov	r23,r18
 400736c:	003f6c06 	br	4007120 <__alt_data_end+0xfc007120>
 4007370:	900d883a 	mov	r6,r18
 4007374:	01400284 	movi	r5,10
 4007378:	e009883a 	mov	r4,fp
 400737c:	40080cc0 	call	40080cc <memchr>
 4007380:	10003e26 	beq	r2,zero,400747c <__sfvwrite_r+0x498>
 4007384:	10800044 	addi	r2,r2,1
 4007388:	1727c83a 	sub	r19,r2,fp
 400738c:	02000044 	movi	r8,1
 4007390:	003f9d06 	br	4007208 <__alt_data_end+0xfc007208>
 4007394:	80800517 	ldw	r2,20(r16)
 4007398:	81400417 	ldw	r5,16(r16)
 400739c:	81c00017 	ldw	r7,0(r16)
 40073a0:	10a7883a 	add	r19,r2,r2
 40073a4:	9885883a 	add	r2,r19,r2
 40073a8:	1026d7fa 	srli	r19,r2,31
 40073ac:	396dc83a 	sub	r22,r7,r5
 40073b0:	b1000044 	addi	r4,r22,1
 40073b4:	9885883a 	add	r2,r19,r2
 40073b8:	1027d07a 	srai	r19,r2,1
 40073bc:	2485883a 	add	r2,r4,r18
 40073c0:	980d883a 	mov	r6,r19
 40073c4:	9880022e 	bgeu	r19,r2,40073d0 <__sfvwrite_r+0x3ec>
 40073c8:	1027883a 	mov	r19,r2
 40073cc:	100d883a 	mov	r6,r2
 40073d0:	18c1000c 	andi	r3,r3,1024
 40073d4:	18001c26 	beq	r3,zero,4007448 <__sfvwrite_r+0x464>
 40073d8:	300b883a 	mov	r5,r6
 40073dc:	a809883a 	mov	r4,r21
 40073e0:	40078c00 	call	40078c0 <_malloc_r>
 40073e4:	102f883a 	mov	r23,r2
 40073e8:	10002926 	beq	r2,zero,4007490 <__sfvwrite_r+0x4ac>
 40073ec:	81400417 	ldw	r5,16(r16)
 40073f0:	b00d883a 	mov	r6,r22
 40073f4:	1009883a 	mov	r4,r2
 40073f8:	40081b00 	call	40081b0 <memcpy>
 40073fc:	8080030b 	ldhu	r2,12(r16)
 4007400:	00fedfc4 	movi	r3,-1153
 4007404:	10c4703a 	and	r2,r2,r3
 4007408:	10802014 	ori	r2,r2,128
 400740c:	8080030d 	sth	r2,12(r16)
 4007410:	bd89883a 	add	r4,r23,r22
 4007414:	9d8fc83a 	sub	r7,r19,r22
 4007418:	85c00415 	stw	r23,16(r16)
 400741c:	84c00515 	stw	r19,20(r16)
 4007420:	81000015 	stw	r4,0(r16)
 4007424:	9027883a 	mov	r19,r18
 4007428:	81c00215 	stw	r7,8(r16)
 400742c:	902f883a 	mov	r23,r18
 4007430:	003f3b06 	br	4007120 <__alt_data_end+0xfc007120>
 4007434:	800b883a 	mov	r5,r16
 4007438:	a809883a 	mov	r4,r21
 400743c:	40067840 	call	4006784 <_fflush_r>
 4007440:	103fb926 	beq	r2,zero,4007328 <__alt_data_end+0xfc007328>
 4007444:	003f6506 	br	40071dc <__alt_data_end+0xfc0071dc>
 4007448:	a809883a 	mov	r4,r21
 400744c:	40096e00 	call	40096e0 <_realloc_r>
 4007450:	102f883a 	mov	r23,r2
 4007454:	103fee1e 	bne	r2,zero,4007410 <__alt_data_end+0xfc007410>
 4007458:	81400417 	ldw	r5,16(r16)
 400745c:	a809883a 	mov	r4,r21
 4007460:	4006cd40 	call	4006cd4 <_free_r>
 4007464:	8080030b 	ldhu	r2,12(r16)
 4007468:	00ffdfc4 	movi	r3,-129
 400746c:	1884703a 	and	r2,r3,r2
 4007470:	00c00304 	movi	r3,12
 4007474:	a8c00015 	stw	r3,0(r21)
 4007478:	003f5906 	br	40071e0 <__alt_data_end+0xfc0071e0>
 400747c:	94c00044 	addi	r19,r18,1
 4007480:	02000044 	movi	r8,1
 4007484:	003f6006 	br	4007208 <__alt_data_end+0xfc007208>
 4007488:	00bfffc4 	movi	r2,-1
 400748c:	003f0306 	br	400709c <__alt_data_end+0xfc00709c>
 4007490:	00800304 	movi	r2,12
 4007494:	a8800015 	stw	r2,0(r21)
 4007498:	8080030b 	ldhu	r2,12(r16)
 400749c:	003f5006 	br	40071e0 <__alt_data_end+0xfc0071e0>

040074a0 <_fwalk>:
 40074a0:	defff704 	addi	sp,sp,-36
 40074a4:	dd000415 	stw	r20,16(sp)
 40074a8:	dfc00815 	stw	ra,32(sp)
 40074ac:	ddc00715 	stw	r23,28(sp)
 40074b0:	dd800615 	stw	r22,24(sp)
 40074b4:	dd400515 	stw	r21,20(sp)
 40074b8:	dcc00315 	stw	r19,12(sp)
 40074bc:	dc800215 	stw	r18,8(sp)
 40074c0:	dc400115 	stw	r17,4(sp)
 40074c4:	dc000015 	stw	r16,0(sp)
 40074c8:	2500b804 	addi	r20,r4,736
 40074cc:	a0002326 	beq	r20,zero,400755c <_fwalk+0xbc>
 40074d0:	282b883a 	mov	r21,r5
 40074d4:	002f883a 	mov	r23,zero
 40074d8:	05800044 	movi	r22,1
 40074dc:	04ffffc4 	movi	r19,-1
 40074e0:	a4400117 	ldw	r17,4(r20)
 40074e4:	a4800217 	ldw	r18,8(r20)
 40074e8:	8c7fffc4 	addi	r17,r17,-1
 40074ec:	88000d16 	blt	r17,zero,4007524 <_fwalk+0x84>
 40074f0:	94000304 	addi	r16,r18,12
 40074f4:	94800384 	addi	r18,r18,14
 40074f8:	8080000b 	ldhu	r2,0(r16)
 40074fc:	8c7fffc4 	addi	r17,r17,-1
 4007500:	813ffd04 	addi	r4,r16,-12
 4007504:	b080042e 	bgeu	r22,r2,4007518 <_fwalk+0x78>
 4007508:	9080000f 	ldh	r2,0(r18)
 400750c:	14c00226 	beq	r2,r19,4007518 <_fwalk+0x78>
 4007510:	a83ee83a 	callr	r21
 4007514:	b8aeb03a 	or	r23,r23,r2
 4007518:	84001a04 	addi	r16,r16,104
 400751c:	94801a04 	addi	r18,r18,104
 4007520:	8cfff51e 	bne	r17,r19,40074f8 <__alt_data_end+0xfc0074f8>
 4007524:	a5000017 	ldw	r20,0(r20)
 4007528:	a03fed1e 	bne	r20,zero,40074e0 <__alt_data_end+0xfc0074e0>
 400752c:	b805883a 	mov	r2,r23
 4007530:	dfc00817 	ldw	ra,32(sp)
 4007534:	ddc00717 	ldw	r23,28(sp)
 4007538:	dd800617 	ldw	r22,24(sp)
 400753c:	dd400517 	ldw	r21,20(sp)
 4007540:	dd000417 	ldw	r20,16(sp)
 4007544:	dcc00317 	ldw	r19,12(sp)
 4007548:	dc800217 	ldw	r18,8(sp)
 400754c:	dc400117 	ldw	r17,4(sp)
 4007550:	dc000017 	ldw	r16,0(sp)
 4007554:	dec00904 	addi	sp,sp,36
 4007558:	f800283a 	ret
 400755c:	002f883a 	mov	r23,zero
 4007560:	003ff206 	br	400752c <__alt_data_end+0xfc00752c>

04007564 <_fwalk_reent>:
 4007564:	defff704 	addi	sp,sp,-36
 4007568:	dd000415 	stw	r20,16(sp)
 400756c:	dfc00815 	stw	ra,32(sp)
 4007570:	ddc00715 	stw	r23,28(sp)
 4007574:	dd800615 	stw	r22,24(sp)
 4007578:	dd400515 	stw	r21,20(sp)
 400757c:	dcc00315 	stw	r19,12(sp)
 4007580:	dc800215 	stw	r18,8(sp)
 4007584:	dc400115 	stw	r17,4(sp)
 4007588:	dc000015 	stw	r16,0(sp)
 400758c:	2500b804 	addi	r20,r4,736
 4007590:	a0002326 	beq	r20,zero,4007620 <_fwalk_reent+0xbc>
 4007594:	282b883a 	mov	r21,r5
 4007598:	2027883a 	mov	r19,r4
 400759c:	002f883a 	mov	r23,zero
 40075a0:	05800044 	movi	r22,1
 40075a4:	04bfffc4 	movi	r18,-1
 40075a8:	a4400117 	ldw	r17,4(r20)
 40075ac:	a4000217 	ldw	r16,8(r20)
 40075b0:	8c7fffc4 	addi	r17,r17,-1
 40075b4:	88000c16 	blt	r17,zero,40075e8 <_fwalk_reent+0x84>
 40075b8:	84000304 	addi	r16,r16,12
 40075bc:	8080000b 	ldhu	r2,0(r16)
 40075c0:	8c7fffc4 	addi	r17,r17,-1
 40075c4:	817ffd04 	addi	r5,r16,-12
 40075c8:	b080052e 	bgeu	r22,r2,40075e0 <_fwalk_reent+0x7c>
 40075cc:	8080008f 	ldh	r2,2(r16)
 40075d0:	9809883a 	mov	r4,r19
 40075d4:	14800226 	beq	r2,r18,40075e0 <_fwalk_reent+0x7c>
 40075d8:	a83ee83a 	callr	r21
 40075dc:	b8aeb03a 	or	r23,r23,r2
 40075e0:	84001a04 	addi	r16,r16,104
 40075e4:	8cbff51e 	bne	r17,r18,40075bc <__alt_data_end+0xfc0075bc>
 40075e8:	a5000017 	ldw	r20,0(r20)
 40075ec:	a03fee1e 	bne	r20,zero,40075a8 <__alt_data_end+0xfc0075a8>
 40075f0:	b805883a 	mov	r2,r23
 40075f4:	dfc00817 	ldw	ra,32(sp)
 40075f8:	ddc00717 	ldw	r23,28(sp)
 40075fc:	dd800617 	ldw	r22,24(sp)
 4007600:	dd400517 	ldw	r21,20(sp)
 4007604:	dd000417 	ldw	r20,16(sp)
 4007608:	dcc00317 	ldw	r19,12(sp)
 400760c:	dc800217 	ldw	r18,8(sp)
 4007610:	dc400117 	ldw	r17,4(sp)
 4007614:	dc000017 	ldw	r16,0(sp)
 4007618:	dec00904 	addi	sp,sp,36
 400761c:	f800283a 	ret
 4007620:	002f883a 	mov	r23,zero
 4007624:	003ff206 	br	40075f0 <__alt_data_end+0xfc0075f0>

04007628 <_setlocale_r>:
 4007628:	30001b26 	beq	r6,zero,4007698 <_setlocale_r+0x70>
 400762c:	01410074 	movhi	r5,1025
 4007630:	defffe04 	addi	sp,sp,-8
 4007634:	29426b04 	addi	r5,r5,2476
 4007638:	3009883a 	mov	r4,r6
 400763c:	dc000015 	stw	r16,0(sp)
 4007640:	dfc00115 	stw	ra,4(sp)
 4007644:	3021883a 	mov	r16,r6
 4007648:	4009e480 	call	4009e48 <strcmp>
 400764c:	1000061e 	bne	r2,zero,4007668 <_setlocale_r+0x40>
 4007650:	00810074 	movhi	r2,1025
 4007654:	10826a04 	addi	r2,r2,2472
 4007658:	dfc00117 	ldw	ra,4(sp)
 400765c:	dc000017 	ldw	r16,0(sp)
 4007660:	dec00204 	addi	sp,sp,8
 4007664:	f800283a 	ret
 4007668:	01410074 	movhi	r5,1025
 400766c:	29426a04 	addi	r5,r5,2472
 4007670:	8009883a 	mov	r4,r16
 4007674:	4009e480 	call	4009e48 <strcmp>
 4007678:	103ff526 	beq	r2,zero,4007650 <__alt_data_end+0xfc007650>
 400767c:	01410074 	movhi	r5,1025
 4007680:	29425504 	addi	r5,r5,2388
 4007684:	8009883a 	mov	r4,r16
 4007688:	4009e480 	call	4009e48 <strcmp>
 400768c:	103ff026 	beq	r2,zero,4007650 <__alt_data_end+0xfc007650>
 4007690:	0005883a 	mov	r2,zero
 4007694:	003ff006 	br	4007658 <__alt_data_end+0xfc007658>
 4007698:	00810074 	movhi	r2,1025
 400769c:	10826a04 	addi	r2,r2,2472
 40076a0:	f800283a 	ret

040076a4 <__locale_charset>:
 40076a4:	00810074 	movhi	r2,1025
 40076a8:	1083dd04 	addi	r2,r2,3956
 40076ac:	f800283a 	ret

040076b0 <__locale_mb_cur_max>:
 40076b0:	00810074 	movhi	r2,1025
 40076b4:	10897904 	addi	r2,r2,9700
 40076b8:	10800017 	ldw	r2,0(r2)
 40076bc:	f800283a 	ret

040076c0 <__locale_msgcharset>:
 40076c0:	00810074 	movhi	r2,1025
 40076c4:	1083d504 	addi	r2,r2,3924
 40076c8:	f800283a 	ret

040076cc <__locale_cjk_lang>:
 40076cc:	0005883a 	mov	r2,zero
 40076d0:	f800283a 	ret

040076d4 <_localeconv_r>:
 40076d4:	00810074 	movhi	r2,1025
 40076d8:	1083e504 	addi	r2,r2,3988
 40076dc:	f800283a 	ret

040076e0 <setlocale>:
 40076e0:	00810074 	movhi	r2,1025
 40076e4:	10897804 	addi	r2,r2,9696
 40076e8:	280d883a 	mov	r6,r5
 40076ec:	200b883a 	mov	r5,r4
 40076f0:	11000017 	ldw	r4,0(r2)
 40076f4:	40076281 	jmpi	4007628 <_setlocale_r>

040076f8 <localeconv>:
 40076f8:	00810074 	movhi	r2,1025
 40076fc:	1083e504 	addi	r2,r2,3988
 4007700:	f800283a 	ret

04007704 <__smakebuf_r>:
 4007704:	2880030b 	ldhu	r2,12(r5)
 4007708:	10c0008c 	andi	r3,r2,2
 400770c:	1800411e 	bne	r3,zero,4007814 <__smakebuf_r+0x110>
 4007710:	deffec04 	addi	sp,sp,-80
 4007714:	dc000f15 	stw	r16,60(sp)
 4007718:	2821883a 	mov	r16,r5
 400771c:	2940038f 	ldh	r5,14(r5)
 4007720:	dc401015 	stw	r17,64(sp)
 4007724:	dfc01315 	stw	ra,76(sp)
 4007728:	dcc01215 	stw	r19,72(sp)
 400772c:	dc801115 	stw	r18,68(sp)
 4007730:	2023883a 	mov	r17,r4
 4007734:	28001c16 	blt	r5,zero,40077a8 <__smakebuf_r+0xa4>
 4007738:	d80d883a 	mov	r6,sp
 400773c:	400bb480 	call	400bb48 <_fstat_r>
 4007740:	10001816 	blt	r2,zero,40077a4 <__smakebuf_r+0xa0>
 4007744:	d8800117 	ldw	r2,4(sp)
 4007748:	00e00014 	movui	r3,32768
 400774c:	10bc000c 	andi	r2,r2,61440
 4007750:	14c80020 	cmpeqi	r19,r2,8192
 4007754:	10c03726 	beq	r2,r3,4007834 <__smakebuf_r+0x130>
 4007758:	80c0030b 	ldhu	r3,12(r16)
 400775c:	18c20014 	ori	r3,r3,2048
 4007760:	80c0030d 	sth	r3,12(r16)
 4007764:	00c80004 	movi	r3,8192
 4007768:	10c0521e 	bne	r2,r3,40078b4 <__smakebuf_r+0x1b0>
 400776c:	8140038f 	ldh	r5,14(r16)
 4007770:	8809883a 	mov	r4,r17
 4007774:	400bba40 	call	400bba4 <_isatty_r>
 4007778:	10004c26 	beq	r2,zero,40078ac <__smakebuf_r+0x1a8>
 400777c:	8080030b 	ldhu	r2,12(r16)
 4007780:	80c010c4 	addi	r3,r16,67
 4007784:	80c00015 	stw	r3,0(r16)
 4007788:	10800054 	ori	r2,r2,1
 400778c:	8080030d 	sth	r2,12(r16)
 4007790:	00800044 	movi	r2,1
 4007794:	80c00415 	stw	r3,16(r16)
 4007798:	80800515 	stw	r2,20(r16)
 400779c:	04810004 	movi	r18,1024
 40077a0:	00000706 	br	40077c0 <__smakebuf_r+0xbc>
 40077a4:	8080030b 	ldhu	r2,12(r16)
 40077a8:	10c0200c 	andi	r3,r2,128
 40077ac:	18001f1e 	bne	r3,zero,400782c <__smakebuf_r+0x128>
 40077b0:	04810004 	movi	r18,1024
 40077b4:	10820014 	ori	r2,r2,2048
 40077b8:	8080030d 	sth	r2,12(r16)
 40077bc:	0027883a 	mov	r19,zero
 40077c0:	900b883a 	mov	r5,r18
 40077c4:	8809883a 	mov	r4,r17
 40077c8:	40078c00 	call	40078c0 <_malloc_r>
 40077cc:	10002c26 	beq	r2,zero,4007880 <__smakebuf_r+0x17c>
 40077d0:	80c0030b 	ldhu	r3,12(r16)
 40077d4:	01010034 	movhi	r4,1024
 40077d8:	211a0604 	addi	r4,r4,26648
 40077dc:	89000f15 	stw	r4,60(r17)
 40077e0:	18c02014 	ori	r3,r3,128
 40077e4:	80c0030d 	sth	r3,12(r16)
 40077e8:	80800015 	stw	r2,0(r16)
 40077ec:	80800415 	stw	r2,16(r16)
 40077f0:	84800515 	stw	r18,20(r16)
 40077f4:	98001a1e 	bne	r19,zero,4007860 <__smakebuf_r+0x15c>
 40077f8:	dfc01317 	ldw	ra,76(sp)
 40077fc:	dcc01217 	ldw	r19,72(sp)
 4007800:	dc801117 	ldw	r18,68(sp)
 4007804:	dc401017 	ldw	r17,64(sp)
 4007808:	dc000f17 	ldw	r16,60(sp)
 400780c:	dec01404 	addi	sp,sp,80
 4007810:	f800283a 	ret
 4007814:	288010c4 	addi	r2,r5,67
 4007818:	28800015 	stw	r2,0(r5)
 400781c:	28800415 	stw	r2,16(r5)
 4007820:	00800044 	movi	r2,1
 4007824:	28800515 	stw	r2,20(r5)
 4007828:	f800283a 	ret
 400782c:	04801004 	movi	r18,64
 4007830:	003fe006 	br	40077b4 <__alt_data_end+0xfc0077b4>
 4007834:	81000a17 	ldw	r4,40(r16)
 4007838:	00c10074 	movhi	r3,1025
 400783c:	18e77904 	addi	r3,r3,-25116
 4007840:	20ffc51e 	bne	r4,r3,4007758 <__alt_data_end+0xfc007758>
 4007844:	8080030b 	ldhu	r2,12(r16)
 4007848:	04810004 	movi	r18,1024
 400784c:	84801315 	stw	r18,76(r16)
 4007850:	1484b03a 	or	r2,r2,r18
 4007854:	8080030d 	sth	r2,12(r16)
 4007858:	0027883a 	mov	r19,zero
 400785c:	003fd806 	br	40077c0 <__alt_data_end+0xfc0077c0>
 4007860:	8140038f 	ldh	r5,14(r16)
 4007864:	8809883a 	mov	r4,r17
 4007868:	400bba40 	call	400bba4 <_isatty_r>
 400786c:	103fe226 	beq	r2,zero,40077f8 <__alt_data_end+0xfc0077f8>
 4007870:	8080030b 	ldhu	r2,12(r16)
 4007874:	10800054 	ori	r2,r2,1
 4007878:	8080030d 	sth	r2,12(r16)
 400787c:	003fde06 	br	40077f8 <__alt_data_end+0xfc0077f8>
 4007880:	8080030b 	ldhu	r2,12(r16)
 4007884:	10c0800c 	andi	r3,r2,512
 4007888:	183fdb1e 	bne	r3,zero,40077f8 <__alt_data_end+0xfc0077f8>
 400788c:	10800094 	ori	r2,r2,2
 4007890:	80c010c4 	addi	r3,r16,67
 4007894:	8080030d 	sth	r2,12(r16)
 4007898:	00800044 	movi	r2,1
 400789c:	80c00015 	stw	r3,0(r16)
 40078a0:	80c00415 	stw	r3,16(r16)
 40078a4:	80800515 	stw	r2,20(r16)
 40078a8:	003fd306 	br	40077f8 <__alt_data_end+0xfc0077f8>
 40078ac:	04810004 	movi	r18,1024
 40078b0:	003fc306 	br	40077c0 <__alt_data_end+0xfc0077c0>
 40078b4:	0027883a 	mov	r19,zero
 40078b8:	04810004 	movi	r18,1024
 40078bc:	003fc006 	br	40077c0 <__alt_data_end+0xfc0077c0>

040078c0 <_malloc_r>:
 40078c0:	defff504 	addi	sp,sp,-44
 40078c4:	dc800315 	stw	r18,12(sp)
 40078c8:	dfc00a15 	stw	ra,40(sp)
 40078cc:	df000915 	stw	fp,36(sp)
 40078d0:	ddc00815 	stw	r23,32(sp)
 40078d4:	dd800715 	stw	r22,28(sp)
 40078d8:	dd400615 	stw	r21,24(sp)
 40078dc:	dd000515 	stw	r20,20(sp)
 40078e0:	dcc00415 	stw	r19,16(sp)
 40078e4:	dc400215 	stw	r17,8(sp)
 40078e8:	dc000115 	stw	r16,4(sp)
 40078ec:	288002c4 	addi	r2,r5,11
 40078f0:	00c00584 	movi	r3,22
 40078f4:	2025883a 	mov	r18,r4
 40078f8:	18807f2e 	bgeu	r3,r2,4007af8 <_malloc_r+0x238>
 40078fc:	047ffe04 	movi	r17,-8
 4007900:	1462703a 	and	r17,r2,r17
 4007904:	8800a316 	blt	r17,zero,4007b94 <_malloc_r+0x2d4>
 4007908:	8940a236 	bltu	r17,r5,4007b94 <_malloc_r+0x2d4>
 400790c:	400e54c0 	call	400e54c <__malloc_lock>
 4007910:	00807dc4 	movi	r2,503
 4007914:	1441e92e 	bgeu	r2,r17,40080bc <_malloc_r+0x7fc>
 4007918:	8804d27a 	srli	r2,r17,9
 400791c:	1000a126 	beq	r2,zero,4007ba4 <_malloc_r+0x2e4>
 4007920:	00c00104 	movi	r3,4
 4007924:	18811e36 	bltu	r3,r2,4007da0 <_malloc_r+0x4e0>
 4007928:	8804d1ba 	srli	r2,r17,6
 400792c:	12000e44 	addi	r8,r2,57
 4007930:	11c00e04 	addi	r7,r2,56
 4007934:	4209883a 	add	r4,r8,r8
 4007938:	04c10074 	movhi	r19,1025
 400793c:	2109883a 	add	r4,r4,r4
 4007940:	9cc3f304 	addi	r19,r19,4044
 4007944:	2109883a 	add	r4,r4,r4
 4007948:	9909883a 	add	r4,r19,r4
 400794c:	24000117 	ldw	r16,4(r4)
 4007950:	213ffe04 	addi	r4,r4,-8
 4007954:	24009726 	beq	r4,r16,4007bb4 <_malloc_r+0x2f4>
 4007958:	80800117 	ldw	r2,4(r16)
 400795c:	01bfff04 	movi	r6,-4
 4007960:	014003c4 	movi	r5,15
 4007964:	1184703a 	and	r2,r2,r6
 4007968:	1447c83a 	sub	r3,r2,r17
 400796c:	28c00716 	blt	r5,r3,400798c <_malloc_r+0xcc>
 4007970:	1800920e 	bge	r3,zero,4007bbc <_malloc_r+0x2fc>
 4007974:	84000317 	ldw	r16,12(r16)
 4007978:	24008e26 	beq	r4,r16,4007bb4 <_malloc_r+0x2f4>
 400797c:	80800117 	ldw	r2,4(r16)
 4007980:	1184703a 	and	r2,r2,r6
 4007984:	1447c83a 	sub	r3,r2,r17
 4007988:	28fff90e 	bge	r5,r3,4007970 <__alt_data_end+0xfc007970>
 400798c:	3809883a 	mov	r4,r7
 4007990:	01810074 	movhi	r6,1025
 4007994:	9c000417 	ldw	r16,16(r19)
 4007998:	3183f304 	addi	r6,r6,4044
 400799c:	32000204 	addi	r8,r6,8
 40079a0:	82013426 	beq	r16,r8,4007e74 <_malloc_r+0x5b4>
 40079a4:	80c00117 	ldw	r3,4(r16)
 40079a8:	00bfff04 	movi	r2,-4
 40079ac:	188e703a 	and	r7,r3,r2
 40079b0:	3c45c83a 	sub	r2,r7,r17
 40079b4:	00c003c4 	movi	r3,15
 40079b8:	18811f16 	blt	r3,r2,4007e38 <_malloc_r+0x578>
 40079bc:	32000515 	stw	r8,20(r6)
 40079c0:	32000415 	stw	r8,16(r6)
 40079c4:	10007f0e 	bge	r2,zero,4007bc4 <_malloc_r+0x304>
 40079c8:	00807fc4 	movi	r2,511
 40079cc:	11c0fd36 	bltu	r2,r7,4007dc4 <_malloc_r+0x504>
 40079d0:	3806d0fa 	srli	r3,r7,3
 40079d4:	01c00044 	movi	r7,1
 40079d8:	30800117 	ldw	r2,4(r6)
 40079dc:	19400044 	addi	r5,r3,1
 40079e0:	294b883a 	add	r5,r5,r5
 40079e4:	1807d0ba 	srai	r3,r3,2
 40079e8:	294b883a 	add	r5,r5,r5
 40079ec:	294b883a 	add	r5,r5,r5
 40079f0:	298b883a 	add	r5,r5,r6
 40079f4:	38c6983a 	sll	r3,r7,r3
 40079f8:	29c00017 	ldw	r7,0(r5)
 40079fc:	2a7ffe04 	addi	r9,r5,-8
 4007a00:	1886b03a 	or	r3,r3,r2
 4007a04:	82400315 	stw	r9,12(r16)
 4007a08:	81c00215 	stw	r7,8(r16)
 4007a0c:	30c00115 	stw	r3,4(r6)
 4007a10:	2c000015 	stw	r16,0(r5)
 4007a14:	3c000315 	stw	r16,12(r7)
 4007a18:	2005d0ba 	srai	r2,r4,2
 4007a1c:	01400044 	movi	r5,1
 4007a20:	288a983a 	sll	r5,r5,r2
 4007a24:	19406f36 	bltu	r3,r5,4007be4 <_malloc_r+0x324>
 4007a28:	28c4703a 	and	r2,r5,r3
 4007a2c:	10000a1e 	bne	r2,zero,4007a58 <_malloc_r+0x198>
 4007a30:	00bfff04 	movi	r2,-4
 4007a34:	294b883a 	add	r5,r5,r5
 4007a38:	2088703a 	and	r4,r4,r2
 4007a3c:	28c4703a 	and	r2,r5,r3
 4007a40:	21000104 	addi	r4,r4,4
 4007a44:	1000041e 	bne	r2,zero,4007a58 <_malloc_r+0x198>
 4007a48:	294b883a 	add	r5,r5,r5
 4007a4c:	28c4703a 	and	r2,r5,r3
 4007a50:	21000104 	addi	r4,r4,4
 4007a54:	103ffc26 	beq	r2,zero,4007a48 <__alt_data_end+0xfc007a48>
 4007a58:	02bfff04 	movi	r10,-4
 4007a5c:	024003c4 	movi	r9,15
 4007a60:	21800044 	addi	r6,r4,1
 4007a64:	318d883a 	add	r6,r6,r6
 4007a68:	318d883a 	add	r6,r6,r6
 4007a6c:	318d883a 	add	r6,r6,r6
 4007a70:	998d883a 	add	r6,r19,r6
 4007a74:	333ffe04 	addi	r12,r6,-8
 4007a78:	2017883a 	mov	r11,r4
 4007a7c:	31800104 	addi	r6,r6,4
 4007a80:	34000017 	ldw	r16,0(r6)
 4007a84:	31fffd04 	addi	r7,r6,-12
 4007a88:	81c0041e 	bne	r16,r7,4007a9c <_malloc_r+0x1dc>
 4007a8c:	0000fb06 	br	4007e7c <_malloc_r+0x5bc>
 4007a90:	1801030e 	bge	r3,zero,4007ea0 <_malloc_r+0x5e0>
 4007a94:	84000317 	ldw	r16,12(r16)
 4007a98:	81c0f826 	beq	r16,r7,4007e7c <_malloc_r+0x5bc>
 4007a9c:	80800117 	ldw	r2,4(r16)
 4007aa0:	1284703a 	and	r2,r2,r10
 4007aa4:	1447c83a 	sub	r3,r2,r17
 4007aa8:	48fff90e 	bge	r9,r3,4007a90 <__alt_data_end+0xfc007a90>
 4007aac:	80800317 	ldw	r2,12(r16)
 4007ab0:	81000217 	ldw	r4,8(r16)
 4007ab4:	89400054 	ori	r5,r17,1
 4007ab8:	81400115 	stw	r5,4(r16)
 4007abc:	20800315 	stw	r2,12(r4)
 4007ac0:	11000215 	stw	r4,8(r2)
 4007ac4:	8463883a 	add	r17,r16,r17
 4007ac8:	9c400515 	stw	r17,20(r19)
 4007acc:	9c400415 	stw	r17,16(r19)
 4007ad0:	18800054 	ori	r2,r3,1
 4007ad4:	88800115 	stw	r2,4(r17)
 4007ad8:	8a000315 	stw	r8,12(r17)
 4007adc:	8a000215 	stw	r8,8(r17)
 4007ae0:	88e3883a 	add	r17,r17,r3
 4007ae4:	88c00015 	stw	r3,0(r17)
 4007ae8:	9009883a 	mov	r4,r18
 4007aec:	400e5700 	call	400e570 <__malloc_unlock>
 4007af0:	80800204 	addi	r2,r16,8
 4007af4:	00001b06 	br	4007b64 <_malloc_r+0x2a4>
 4007af8:	04400404 	movi	r17,16
 4007afc:	89402536 	bltu	r17,r5,4007b94 <_malloc_r+0x2d4>
 4007b00:	400e54c0 	call	400e54c <__malloc_lock>
 4007b04:	00800184 	movi	r2,6
 4007b08:	01000084 	movi	r4,2
 4007b0c:	04c10074 	movhi	r19,1025
 4007b10:	1085883a 	add	r2,r2,r2
 4007b14:	9cc3f304 	addi	r19,r19,4044
 4007b18:	1085883a 	add	r2,r2,r2
 4007b1c:	9885883a 	add	r2,r19,r2
 4007b20:	14000117 	ldw	r16,4(r2)
 4007b24:	10fffe04 	addi	r3,r2,-8
 4007b28:	80c0d926 	beq	r16,r3,4007e90 <_malloc_r+0x5d0>
 4007b2c:	80c00117 	ldw	r3,4(r16)
 4007b30:	81000317 	ldw	r4,12(r16)
 4007b34:	00bfff04 	movi	r2,-4
 4007b38:	1884703a 	and	r2,r3,r2
 4007b3c:	81400217 	ldw	r5,8(r16)
 4007b40:	8085883a 	add	r2,r16,r2
 4007b44:	10c00117 	ldw	r3,4(r2)
 4007b48:	29000315 	stw	r4,12(r5)
 4007b4c:	21400215 	stw	r5,8(r4)
 4007b50:	18c00054 	ori	r3,r3,1
 4007b54:	10c00115 	stw	r3,4(r2)
 4007b58:	9009883a 	mov	r4,r18
 4007b5c:	400e5700 	call	400e570 <__malloc_unlock>
 4007b60:	80800204 	addi	r2,r16,8
 4007b64:	dfc00a17 	ldw	ra,40(sp)
 4007b68:	df000917 	ldw	fp,36(sp)
 4007b6c:	ddc00817 	ldw	r23,32(sp)
 4007b70:	dd800717 	ldw	r22,28(sp)
 4007b74:	dd400617 	ldw	r21,24(sp)
 4007b78:	dd000517 	ldw	r20,20(sp)
 4007b7c:	dcc00417 	ldw	r19,16(sp)
 4007b80:	dc800317 	ldw	r18,12(sp)
 4007b84:	dc400217 	ldw	r17,8(sp)
 4007b88:	dc000117 	ldw	r16,4(sp)
 4007b8c:	dec00b04 	addi	sp,sp,44
 4007b90:	f800283a 	ret
 4007b94:	00800304 	movi	r2,12
 4007b98:	90800015 	stw	r2,0(r18)
 4007b9c:	0005883a 	mov	r2,zero
 4007ba0:	003ff006 	br	4007b64 <__alt_data_end+0xfc007b64>
 4007ba4:	01002004 	movi	r4,128
 4007ba8:	02001004 	movi	r8,64
 4007bac:	01c00fc4 	movi	r7,63
 4007bb0:	003f6106 	br	4007938 <__alt_data_end+0xfc007938>
 4007bb4:	4009883a 	mov	r4,r8
 4007bb8:	003f7506 	br	4007990 <__alt_data_end+0xfc007990>
 4007bbc:	81000317 	ldw	r4,12(r16)
 4007bc0:	003fde06 	br	4007b3c <__alt_data_end+0xfc007b3c>
 4007bc4:	81c5883a 	add	r2,r16,r7
 4007bc8:	11400117 	ldw	r5,4(r2)
 4007bcc:	9009883a 	mov	r4,r18
 4007bd0:	29400054 	ori	r5,r5,1
 4007bd4:	11400115 	stw	r5,4(r2)
 4007bd8:	400e5700 	call	400e570 <__malloc_unlock>
 4007bdc:	80800204 	addi	r2,r16,8
 4007be0:	003fe006 	br	4007b64 <__alt_data_end+0xfc007b64>
 4007be4:	9c000217 	ldw	r16,8(r19)
 4007be8:	00bfff04 	movi	r2,-4
 4007bec:	85800117 	ldw	r22,4(r16)
 4007bf0:	b0ac703a 	and	r22,r22,r2
 4007bf4:	b4400336 	bltu	r22,r17,4007c04 <_malloc_r+0x344>
 4007bf8:	b445c83a 	sub	r2,r22,r17
 4007bfc:	00c003c4 	movi	r3,15
 4007c00:	18805d16 	blt	r3,r2,4007d78 <_malloc_r+0x4b8>
 4007c04:	05c10074 	movhi	r23,1025
 4007c08:	00810074 	movhi	r2,1025
 4007c0c:	10904b04 	addi	r2,r2,16684
 4007c10:	bdc97a04 	addi	r23,r23,9704
 4007c14:	15400017 	ldw	r21,0(r2)
 4007c18:	b8c00017 	ldw	r3,0(r23)
 4007c1c:	00bfffc4 	movi	r2,-1
 4007c20:	858d883a 	add	r6,r16,r22
 4007c24:	8d6b883a 	add	r21,r17,r21
 4007c28:	1880ea26 	beq	r3,r2,4007fd4 <_malloc_r+0x714>
 4007c2c:	ad4403c4 	addi	r21,r21,4111
 4007c30:	00bc0004 	movi	r2,-4096
 4007c34:	a8aa703a 	and	r21,r21,r2
 4007c38:	a80b883a 	mov	r5,r21
 4007c3c:	9009883a 	mov	r4,r18
 4007c40:	d9800015 	stw	r6,0(sp)
 4007c44:	4009cb80 	call	4009cb8 <_sbrk_r>
 4007c48:	1029883a 	mov	r20,r2
 4007c4c:	00bfffc4 	movi	r2,-1
 4007c50:	d9800017 	ldw	r6,0(sp)
 4007c54:	a080e826 	beq	r20,r2,4007ff8 <_malloc_r+0x738>
 4007c58:	a180a636 	bltu	r20,r6,4007ef4 <_malloc_r+0x634>
 4007c5c:	07010074 	movhi	fp,1025
 4007c60:	e7105504 	addi	fp,fp,16724
 4007c64:	e0800017 	ldw	r2,0(fp)
 4007c68:	a887883a 	add	r3,r21,r2
 4007c6c:	e0c00015 	stw	r3,0(fp)
 4007c70:	3500e626 	beq	r6,r20,400800c <_malloc_r+0x74c>
 4007c74:	b9000017 	ldw	r4,0(r23)
 4007c78:	00bfffc4 	movi	r2,-1
 4007c7c:	2080ee26 	beq	r4,r2,4008038 <_malloc_r+0x778>
 4007c80:	a185c83a 	sub	r2,r20,r6
 4007c84:	10c5883a 	add	r2,r2,r3
 4007c88:	e0800015 	stw	r2,0(fp)
 4007c8c:	a0c001cc 	andi	r3,r20,7
 4007c90:	1800bc26 	beq	r3,zero,4007f84 <_malloc_r+0x6c4>
 4007c94:	a0e9c83a 	sub	r20,r20,r3
 4007c98:	00840204 	movi	r2,4104
 4007c9c:	a5000204 	addi	r20,r20,8
 4007ca0:	10c7c83a 	sub	r3,r2,r3
 4007ca4:	a545883a 	add	r2,r20,r21
 4007ca8:	1083ffcc 	andi	r2,r2,4095
 4007cac:	18abc83a 	sub	r21,r3,r2
 4007cb0:	a80b883a 	mov	r5,r21
 4007cb4:	9009883a 	mov	r4,r18
 4007cb8:	4009cb80 	call	4009cb8 <_sbrk_r>
 4007cbc:	00ffffc4 	movi	r3,-1
 4007cc0:	10c0e126 	beq	r2,r3,4008048 <_malloc_r+0x788>
 4007cc4:	1505c83a 	sub	r2,r2,r20
 4007cc8:	1545883a 	add	r2,r2,r21
 4007ccc:	10800054 	ori	r2,r2,1
 4007cd0:	e0c00017 	ldw	r3,0(fp)
 4007cd4:	9d000215 	stw	r20,8(r19)
 4007cd8:	a0800115 	stw	r2,4(r20)
 4007cdc:	a8c7883a 	add	r3,r21,r3
 4007ce0:	e0c00015 	stw	r3,0(fp)
 4007ce4:	84c00e26 	beq	r16,r19,4007d20 <_malloc_r+0x460>
 4007ce8:	018003c4 	movi	r6,15
 4007cec:	3580a72e 	bgeu	r6,r22,4007f8c <_malloc_r+0x6cc>
 4007cf0:	81400117 	ldw	r5,4(r16)
 4007cf4:	013ffe04 	movi	r4,-8
 4007cf8:	b0bffd04 	addi	r2,r22,-12
 4007cfc:	1104703a 	and	r2,r2,r4
 4007d00:	2900004c 	andi	r4,r5,1
 4007d04:	2088b03a 	or	r4,r4,r2
 4007d08:	81000115 	stw	r4,4(r16)
 4007d0c:	01400144 	movi	r5,5
 4007d10:	8089883a 	add	r4,r16,r2
 4007d14:	21400115 	stw	r5,4(r4)
 4007d18:	21400215 	stw	r5,8(r4)
 4007d1c:	3080cd36 	bltu	r6,r2,4008054 <_malloc_r+0x794>
 4007d20:	00810074 	movhi	r2,1025
 4007d24:	10904a04 	addi	r2,r2,16680
 4007d28:	11000017 	ldw	r4,0(r2)
 4007d2c:	20c0012e 	bgeu	r4,r3,4007d34 <_malloc_r+0x474>
 4007d30:	10c00015 	stw	r3,0(r2)
 4007d34:	00810074 	movhi	r2,1025
 4007d38:	10904904 	addi	r2,r2,16676
 4007d3c:	11000017 	ldw	r4,0(r2)
 4007d40:	9c000217 	ldw	r16,8(r19)
 4007d44:	20c0012e 	bgeu	r4,r3,4007d4c <_malloc_r+0x48c>
 4007d48:	10c00015 	stw	r3,0(r2)
 4007d4c:	80c00117 	ldw	r3,4(r16)
 4007d50:	00bfff04 	movi	r2,-4
 4007d54:	1886703a 	and	r3,r3,r2
 4007d58:	1c45c83a 	sub	r2,r3,r17
 4007d5c:	1c400236 	bltu	r3,r17,4007d68 <_malloc_r+0x4a8>
 4007d60:	00c003c4 	movi	r3,15
 4007d64:	18800416 	blt	r3,r2,4007d78 <_malloc_r+0x4b8>
 4007d68:	9009883a 	mov	r4,r18
 4007d6c:	400e5700 	call	400e570 <__malloc_unlock>
 4007d70:	0005883a 	mov	r2,zero
 4007d74:	003f7b06 	br	4007b64 <__alt_data_end+0xfc007b64>
 4007d78:	88c00054 	ori	r3,r17,1
 4007d7c:	80c00115 	stw	r3,4(r16)
 4007d80:	8463883a 	add	r17,r16,r17
 4007d84:	10800054 	ori	r2,r2,1
 4007d88:	9c400215 	stw	r17,8(r19)
 4007d8c:	88800115 	stw	r2,4(r17)
 4007d90:	9009883a 	mov	r4,r18
 4007d94:	400e5700 	call	400e570 <__malloc_unlock>
 4007d98:	80800204 	addi	r2,r16,8
 4007d9c:	003f7106 	br	4007b64 <__alt_data_end+0xfc007b64>
 4007da0:	00c00504 	movi	r3,20
 4007da4:	18804a2e 	bgeu	r3,r2,4007ed0 <_malloc_r+0x610>
 4007da8:	00c01504 	movi	r3,84
 4007dac:	18806e36 	bltu	r3,r2,4007f68 <_malloc_r+0x6a8>
 4007db0:	8804d33a 	srli	r2,r17,12
 4007db4:	12001bc4 	addi	r8,r2,111
 4007db8:	11c01b84 	addi	r7,r2,110
 4007dbc:	4209883a 	add	r4,r8,r8
 4007dc0:	003edd06 	br	4007938 <__alt_data_end+0xfc007938>
 4007dc4:	3804d27a 	srli	r2,r7,9
 4007dc8:	00c00104 	movi	r3,4
 4007dcc:	1880442e 	bgeu	r3,r2,4007ee0 <_malloc_r+0x620>
 4007dd0:	00c00504 	movi	r3,20
 4007dd4:	18808136 	bltu	r3,r2,4007fdc <_malloc_r+0x71c>
 4007dd8:	11401704 	addi	r5,r2,92
 4007ddc:	10c016c4 	addi	r3,r2,91
 4007de0:	294b883a 	add	r5,r5,r5
 4007de4:	294b883a 	add	r5,r5,r5
 4007de8:	294b883a 	add	r5,r5,r5
 4007dec:	994b883a 	add	r5,r19,r5
 4007df0:	28800017 	ldw	r2,0(r5)
 4007df4:	01810074 	movhi	r6,1025
 4007df8:	297ffe04 	addi	r5,r5,-8
 4007dfc:	3183f304 	addi	r6,r6,4044
 4007e00:	28806526 	beq	r5,r2,4007f98 <_malloc_r+0x6d8>
 4007e04:	01bfff04 	movi	r6,-4
 4007e08:	10c00117 	ldw	r3,4(r2)
 4007e0c:	1986703a 	and	r3,r3,r6
 4007e10:	38c0022e 	bgeu	r7,r3,4007e1c <_malloc_r+0x55c>
 4007e14:	10800217 	ldw	r2,8(r2)
 4007e18:	28bffb1e 	bne	r5,r2,4007e08 <__alt_data_end+0xfc007e08>
 4007e1c:	11400317 	ldw	r5,12(r2)
 4007e20:	98c00117 	ldw	r3,4(r19)
 4007e24:	81400315 	stw	r5,12(r16)
 4007e28:	80800215 	stw	r2,8(r16)
 4007e2c:	2c000215 	stw	r16,8(r5)
 4007e30:	14000315 	stw	r16,12(r2)
 4007e34:	003ef806 	br	4007a18 <__alt_data_end+0xfc007a18>
 4007e38:	88c00054 	ori	r3,r17,1
 4007e3c:	80c00115 	stw	r3,4(r16)
 4007e40:	8463883a 	add	r17,r16,r17
 4007e44:	34400515 	stw	r17,20(r6)
 4007e48:	34400415 	stw	r17,16(r6)
 4007e4c:	10c00054 	ori	r3,r2,1
 4007e50:	8a000315 	stw	r8,12(r17)
 4007e54:	8a000215 	stw	r8,8(r17)
 4007e58:	88c00115 	stw	r3,4(r17)
 4007e5c:	88a3883a 	add	r17,r17,r2
 4007e60:	88800015 	stw	r2,0(r17)
 4007e64:	9009883a 	mov	r4,r18
 4007e68:	400e5700 	call	400e570 <__malloc_unlock>
 4007e6c:	80800204 	addi	r2,r16,8
 4007e70:	003f3c06 	br	4007b64 <__alt_data_end+0xfc007b64>
 4007e74:	30c00117 	ldw	r3,4(r6)
 4007e78:	003ee706 	br	4007a18 <__alt_data_end+0xfc007a18>
 4007e7c:	5ac00044 	addi	r11,r11,1
 4007e80:	588000cc 	andi	r2,r11,3
 4007e84:	31800204 	addi	r6,r6,8
 4007e88:	103efd1e 	bne	r2,zero,4007a80 <__alt_data_end+0xfc007a80>
 4007e8c:	00002406 	br	4007f20 <_malloc_r+0x660>
 4007e90:	14000317 	ldw	r16,12(r2)
 4007e94:	143f251e 	bne	r2,r16,4007b2c <__alt_data_end+0xfc007b2c>
 4007e98:	21000084 	addi	r4,r4,2
 4007e9c:	003ebc06 	br	4007990 <__alt_data_end+0xfc007990>
 4007ea0:	8085883a 	add	r2,r16,r2
 4007ea4:	10c00117 	ldw	r3,4(r2)
 4007ea8:	81000317 	ldw	r4,12(r16)
 4007eac:	81400217 	ldw	r5,8(r16)
 4007eb0:	18c00054 	ori	r3,r3,1
 4007eb4:	10c00115 	stw	r3,4(r2)
 4007eb8:	29000315 	stw	r4,12(r5)
 4007ebc:	21400215 	stw	r5,8(r4)
 4007ec0:	9009883a 	mov	r4,r18
 4007ec4:	400e5700 	call	400e570 <__malloc_unlock>
 4007ec8:	80800204 	addi	r2,r16,8
 4007ecc:	003f2506 	br	4007b64 <__alt_data_end+0xfc007b64>
 4007ed0:	12001704 	addi	r8,r2,92
 4007ed4:	11c016c4 	addi	r7,r2,91
 4007ed8:	4209883a 	add	r4,r8,r8
 4007edc:	003e9606 	br	4007938 <__alt_data_end+0xfc007938>
 4007ee0:	3804d1ba 	srli	r2,r7,6
 4007ee4:	11400e44 	addi	r5,r2,57
 4007ee8:	10c00e04 	addi	r3,r2,56
 4007eec:	294b883a 	add	r5,r5,r5
 4007ef0:	003fbc06 	br	4007de4 <__alt_data_end+0xfc007de4>
 4007ef4:	84ff5926 	beq	r16,r19,4007c5c <__alt_data_end+0xfc007c5c>
 4007ef8:	00810074 	movhi	r2,1025
 4007efc:	1083f304 	addi	r2,r2,4044
 4007f00:	14000217 	ldw	r16,8(r2)
 4007f04:	00bfff04 	movi	r2,-4
 4007f08:	80c00117 	ldw	r3,4(r16)
 4007f0c:	1886703a 	and	r3,r3,r2
 4007f10:	003f9106 	br	4007d58 <__alt_data_end+0xfc007d58>
 4007f14:	60800217 	ldw	r2,8(r12)
 4007f18:	213fffc4 	addi	r4,r4,-1
 4007f1c:	1300651e 	bne	r2,r12,40080b4 <_malloc_r+0x7f4>
 4007f20:	208000cc 	andi	r2,r4,3
 4007f24:	633ffe04 	addi	r12,r12,-8
 4007f28:	103ffa1e 	bne	r2,zero,4007f14 <__alt_data_end+0xfc007f14>
 4007f2c:	98800117 	ldw	r2,4(r19)
 4007f30:	0146303a 	nor	r3,zero,r5
 4007f34:	1884703a 	and	r2,r3,r2
 4007f38:	98800115 	stw	r2,4(r19)
 4007f3c:	294b883a 	add	r5,r5,r5
 4007f40:	117f2836 	bltu	r2,r5,4007be4 <__alt_data_end+0xfc007be4>
 4007f44:	283f2726 	beq	r5,zero,4007be4 <__alt_data_end+0xfc007be4>
 4007f48:	2886703a 	and	r3,r5,r2
 4007f4c:	5809883a 	mov	r4,r11
 4007f50:	183ec31e 	bne	r3,zero,4007a60 <__alt_data_end+0xfc007a60>
 4007f54:	294b883a 	add	r5,r5,r5
 4007f58:	2886703a 	and	r3,r5,r2
 4007f5c:	21000104 	addi	r4,r4,4
 4007f60:	183ffc26 	beq	r3,zero,4007f54 <__alt_data_end+0xfc007f54>
 4007f64:	003ebe06 	br	4007a60 <__alt_data_end+0xfc007a60>
 4007f68:	00c05504 	movi	r3,340
 4007f6c:	18801236 	bltu	r3,r2,4007fb8 <_malloc_r+0x6f8>
 4007f70:	8804d3fa 	srli	r2,r17,15
 4007f74:	12001e04 	addi	r8,r2,120
 4007f78:	11c01dc4 	addi	r7,r2,119
 4007f7c:	4209883a 	add	r4,r8,r8
 4007f80:	003e6d06 	br	4007938 <__alt_data_end+0xfc007938>
 4007f84:	00c40004 	movi	r3,4096
 4007f88:	003f4606 	br	4007ca4 <__alt_data_end+0xfc007ca4>
 4007f8c:	00800044 	movi	r2,1
 4007f90:	a0800115 	stw	r2,4(r20)
 4007f94:	003f7406 	br	4007d68 <__alt_data_end+0xfc007d68>
 4007f98:	1805d0ba 	srai	r2,r3,2
 4007f9c:	01c00044 	movi	r7,1
 4007fa0:	30c00117 	ldw	r3,4(r6)
 4007fa4:	388e983a 	sll	r7,r7,r2
 4007fa8:	2805883a 	mov	r2,r5
 4007fac:	38c6b03a 	or	r3,r7,r3
 4007fb0:	30c00115 	stw	r3,4(r6)
 4007fb4:	003f9b06 	br	4007e24 <__alt_data_end+0xfc007e24>
 4007fb8:	00c15504 	movi	r3,1364
 4007fbc:	18801a36 	bltu	r3,r2,4008028 <_malloc_r+0x768>
 4007fc0:	8804d4ba 	srli	r2,r17,18
 4007fc4:	12001f44 	addi	r8,r2,125
 4007fc8:	11c01f04 	addi	r7,r2,124
 4007fcc:	4209883a 	add	r4,r8,r8
 4007fd0:	003e5906 	br	4007938 <__alt_data_end+0xfc007938>
 4007fd4:	ad400404 	addi	r21,r21,16
 4007fd8:	003f1706 	br	4007c38 <__alt_data_end+0xfc007c38>
 4007fdc:	00c01504 	movi	r3,84
 4007fe0:	18802336 	bltu	r3,r2,4008070 <_malloc_r+0x7b0>
 4007fe4:	3804d33a 	srli	r2,r7,12
 4007fe8:	11401bc4 	addi	r5,r2,111
 4007fec:	10c01b84 	addi	r3,r2,110
 4007ff0:	294b883a 	add	r5,r5,r5
 4007ff4:	003f7b06 	br	4007de4 <__alt_data_end+0xfc007de4>
 4007ff8:	9c000217 	ldw	r16,8(r19)
 4007ffc:	00bfff04 	movi	r2,-4
 4008000:	80c00117 	ldw	r3,4(r16)
 4008004:	1886703a 	and	r3,r3,r2
 4008008:	003f5306 	br	4007d58 <__alt_data_end+0xfc007d58>
 400800c:	3083ffcc 	andi	r2,r6,4095
 4008010:	103f181e 	bne	r2,zero,4007c74 <__alt_data_end+0xfc007c74>
 4008014:	99000217 	ldw	r4,8(r19)
 4008018:	b545883a 	add	r2,r22,r21
 400801c:	10800054 	ori	r2,r2,1
 4008020:	20800115 	stw	r2,4(r4)
 4008024:	003f3e06 	br	4007d20 <__alt_data_end+0xfc007d20>
 4008028:	01003f84 	movi	r4,254
 400802c:	02001fc4 	movi	r8,127
 4008030:	01c01f84 	movi	r7,126
 4008034:	003e4006 	br	4007938 <__alt_data_end+0xfc007938>
 4008038:	00810074 	movhi	r2,1025
 400803c:	10897a04 	addi	r2,r2,9704
 4008040:	15000015 	stw	r20,0(r2)
 4008044:	003f1106 	br	4007c8c <__alt_data_end+0xfc007c8c>
 4008048:	00800044 	movi	r2,1
 400804c:	002b883a 	mov	r21,zero
 4008050:	003f1f06 	br	4007cd0 <__alt_data_end+0xfc007cd0>
 4008054:	81400204 	addi	r5,r16,8
 4008058:	9009883a 	mov	r4,r18
 400805c:	4006cd40 	call	4006cd4 <_free_r>
 4008060:	00810074 	movhi	r2,1025
 4008064:	10905504 	addi	r2,r2,16724
 4008068:	10c00017 	ldw	r3,0(r2)
 400806c:	003f2c06 	br	4007d20 <__alt_data_end+0xfc007d20>
 4008070:	00c05504 	movi	r3,340
 4008074:	18800536 	bltu	r3,r2,400808c <_malloc_r+0x7cc>
 4008078:	3804d3fa 	srli	r2,r7,15
 400807c:	11401e04 	addi	r5,r2,120
 4008080:	10c01dc4 	addi	r3,r2,119
 4008084:	294b883a 	add	r5,r5,r5
 4008088:	003f5606 	br	4007de4 <__alt_data_end+0xfc007de4>
 400808c:	00c15504 	movi	r3,1364
 4008090:	18800536 	bltu	r3,r2,40080a8 <_malloc_r+0x7e8>
 4008094:	3804d4ba 	srli	r2,r7,18
 4008098:	11401f44 	addi	r5,r2,125
 400809c:	10c01f04 	addi	r3,r2,124
 40080a0:	294b883a 	add	r5,r5,r5
 40080a4:	003f4f06 	br	4007de4 <__alt_data_end+0xfc007de4>
 40080a8:	01403f84 	movi	r5,254
 40080ac:	00c01f84 	movi	r3,126
 40080b0:	003f4c06 	br	4007de4 <__alt_data_end+0xfc007de4>
 40080b4:	98800117 	ldw	r2,4(r19)
 40080b8:	003fa006 	br	4007f3c <__alt_data_end+0xfc007f3c>
 40080bc:	8808d0fa 	srli	r4,r17,3
 40080c0:	20800044 	addi	r2,r4,1
 40080c4:	1085883a 	add	r2,r2,r2
 40080c8:	003e9006 	br	4007b0c <__alt_data_end+0xfc007b0c>

040080cc <memchr>:
 40080cc:	208000cc 	andi	r2,r4,3
 40080d0:	280f883a 	mov	r7,r5
 40080d4:	10003426 	beq	r2,zero,40081a8 <memchr+0xdc>
 40080d8:	30bfffc4 	addi	r2,r6,-1
 40080dc:	30001a26 	beq	r6,zero,4008148 <memchr+0x7c>
 40080e0:	20c00003 	ldbu	r3,0(r4)
 40080e4:	29803fcc 	andi	r6,r5,255
 40080e8:	30c0051e 	bne	r6,r3,4008100 <memchr+0x34>
 40080ec:	00001806 	br	4008150 <memchr+0x84>
 40080f0:	10001526 	beq	r2,zero,4008148 <memchr+0x7c>
 40080f4:	20c00003 	ldbu	r3,0(r4)
 40080f8:	10bfffc4 	addi	r2,r2,-1
 40080fc:	30c01426 	beq	r6,r3,4008150 <memchr+0x84>
 4008100:	21000044 	addi	r4,r4,1
 4008104:	20c000cc 	andi	r3,r4,3
 4008108:	183ff91e 	bne	r3,zero,40080f0 <__alt_data_end+0xfc0080f0>
 400810c:	020000c4 	movi	r8,3
 4008110:	40801136 	bltu	r8,r2,4008158 <memchr+0x8c>
 4008114:	10000c26 	beq	r2,zero,4008148 <memchr+0x7c>
 4008118:	20c00003 	ldbu	r3,0(r4)
 400811c:	29403fcc 	andi	r5,r5,255
 4008120:	28c00b26 	beq	r5,r3,4008150 <memchr+0x84>
 4008124:	20c00044 	addi	r3,r4,1
 4008128:	39803fcc 	andi	r6,r7,255
 400812c:	2089883a 	add	r4,r4,r2
 4008130:	00000306 	br	4008140 <memchr+0x74>
 4008134:	18c00044 	addi	r3,r3,1
 4008138:	197fffc3 	ldbu	r5,-1(r3)
 400813c:	31400526 	beq	r6,r5,4008154 <memchr+0x88>
 4008140:	1805883a 	mov	r2,r3
 4008144:	20fffb1e 	bne	r4,r3,4008134 <__alt_data_end+0xfc008134>
 4008148:	0005883a 	mov	r2,zero
 400814c:	f800283a 	ret
 4008150:	2005883a 	mov	r2,r4
 4008154:	f800283a 	ret
 4008158:	28c03fcc 	andi	r3,r5,255
 400815c:	1812923a 	slli	r9,r3,8
 4008160:	02ffbff4 	movhi	r11,65279
 4008164:	02a02074 	movhi	r10,32897
 4008168:	48d2b03a 	or	r9,r9,r3
 400816c:	4806943a 	slli	r3,r9,16
 4008170:	5affbfc4 	addi	r11,r11,-257
 4008174:	52a02004 	addi	r10,r10,-32640
 4008178:	48d2b03a 	or	r9,r9,r3
 400817c:	20c00017 	ldw	r3,0(r4)
 4008180:	48c6f03a 	xor	r3,r9,r3
 4008184:	1acd883a 	add	r6,r3,r11
 4008188:	00c6303a 	nor	r3,zero,r3
 400818c:	30c6703a 	and	r3,r6,r3
 4008190:	1a86703a 	and	r3,r3,r10
 4008194:	183fe01e 	bne	r3,zero,4008118 <__alt_data_end+0xfc008118>
 4008198:	10bfff04 	addi	r2,r2,-4
 400819c:	21000104 	addi	r4,r4,4
 40081a0:	40bff636 	bltu	r8,r2,400817c <__alt_data_end+0xfc00817c>
 40081a4:	003fdb06 	br	4008114 <__alt_data_end+0xfc008114>
 40081a8:	3005883a 	mov	r2,r6
 40081ac:	003fd706 	br	400810c <__alt_data_end+0xfc00810c>

040081b0 <memcpy>:
 40081b0:	defffd04 	addi	sp,sp,-12
 40081b4:	dfc00215 	stw	ra,8(sp)
 40081b8:	dc400115 	stw	r17,4(sp)
 40081bc:	dc000015 	stw	r16,0(sp)
 40081c0:	00c003c4 	movi	r3,15
 40081c4:	2005883a 	mov	r2,r4
 40081c8:	1980452e 	bgeu	r3,r6,40082e0 <memcpy+0x130>
 40081cc:	2906b03a 	or	r3,r5,r4
 40081d0:	18c000cc 	andi	r3,r3,3
 40081d4:	1800441e 	bne	r3,zero,40082e8 <memcpy+0x138>
 40081d8:	347ffc04 	addi	r17,r6,-16
 40081dc:	8822d13a 	srli	r17,r17,4
 40081e0:	28c00104 	addi	r3,r5,4
 40081e4:	23400104 	addi	r13,r4,4
 40081e8:	8820913a 	slli	r16,r17,4
 40081ec:	2b000204 	addi	r12,r5,8
 40081f0:	22c00204 	addi	r11,r4,8
 40081f4:	84000504 	addi	r16,r16,20
 40081f8:	2a800304 	addi	r10,r5,12
 40081fc:	22400304 	addi	r9,r4,12
 4008200:	2c21883a 	add	r16,r5,r16
 4008204:	2811883a 	mov	r8,r5
 4008208:	200f883a 	mov	r7,r4
 400820c:	41000017 	ldw	r4,0(r8)
 4008210:	1fc00017 	ldw	ra,0(r3)
 4008214:	63c00017 	ldw	r15,0(r12)
 4008218:	39000015 	stw	r4,0(r7)
 400821c:	53800017 	ldw	r14,0(r10)
 4008220:	6fc00015 	stw	ra,0(r13)
 4008224:	5bc00015 	stw	r15,0(r11)
 4008228:	4b800015 	stw	r14,0(r9)
 400822c:	18c00404 	addi	r3,r3,16
 4008230:	39c00404 	addi	r7,r7,16
 4008234:	42000404 	addi	r8,r8,16
 4008238:	6b400404 	addi	r13,r13,16
 400823c:	63000404 	addi	r12,r12,16
 4008240:	5ac00404 	addi	r11,r11,16
 4008244:	52800404 	addi	r10,r10,16
 4008248:	4a400404 	addi	r9,r9,16
 400824c:	1c3fef1e 	bne	r3,r16,400820c <__alt_data_end+0xfc00820c>
 4008250:	89c00044 	addi	r7,r17,1
 4008254:	380e913a 	slli	r7,r7,4
 4008258:	310003cc 	andi	r4,r6,15
 400825c:	02c000c4 	movi	r11,3
 4008260:	11c7883a 	add	r3,r2,r7
 4008264:	29cb883a 	add	r5,r5,r7
 4008268:	5900212e 	bgeu	r11,r4,40082f0 <memcpy+0x140>
 400826c:	1813883a 	mov	r9,r3
 4008270:	2811883a 	mov	r8,r5
 4008274:	200f883a 	mov	r7,r4
 4008278:	42800017 	ldw	r10,0(r8)
 400827c:	4a400104 	addi	r9,r9,4
 4008280:	39ffff04 	addi	r7,r7,-4
 4008284:	4abfff15 	stw	r10,-4(r9)
 4008288:	42000104 	addi	r8,r8,4
 400828c:	59fffa36 	bltu	r11,r7,4008278 <__alt_data_end+0xfc008278>
 4008290:	213fff04 	addi	r4,r4,-4
 4008294:	2008d0ba 	srli	r4,r4,2
 4008298:	318000cc 	andi	r6,r6,3
 400829c:	21000044 	addi	r4,r4,1
 40082a0:	2109883a 	add	r4,r4,r4
 40082a4:	2109883a 	add	r4,r4,r4
 40082a8:	1907883a 	add	r3,r3,r4
 40082ac:	290b883a 	add	r5,r5,r4
 40082b0:	30000626 	beq	r6,zero,40082cc <memcpy+0x11c>
 40082b4:	198d883a 	add	r6,r3,r6
 40082b8:	29c00003 	ldbu	r7,0(r5)
 40082bc:	18c00044 	addi	r3,r3,1
 40082c0:	29400044 	addi	r5,r5,1
 40082c4:	19ffffc5 	stb	r7,-1(r3)
 40082c8:	19bffb1e 	bne	r3,r6,40082b8 <__alt_data_end+0xfc0082b8>
 40082cc:	dfc00217 	ldw	ra,8(sp)
 40082d0:	dc400117 	ldw	r17,4(sp)
 40082d4:	dc000017 	ldw	r16,0(sp)
 40082d8:	dec00304 	addi	sp,sp,12
 40082dc:	f800283a 	ret
 40082e0:	2007883a 	mov	r3,r4
 40082e4:	003ff206 	br	40082b0 <__alt_data_end+0xfc0082b0>
 40082e8:	2007883a 	mov	r3,r4
 40082ec:	003ff106 	br	40082b4 <__alt_data_end+0xfc0082b4>
 40082f0:	200d883a 	mov	r6,r4
 40082f4:	003fee06 	br	40082b0 <__alt_data_end+0xfc0082b0>

040082f8 <memmove>:
 40082f8:	2005883a 	mov	r2,r4
 40082fc:	29000b2e 	bgeu	r5,r4,400832c <memmove+0x34>
 4008300:	298f883a 	add	r7,r5,r6
 4008304:	21c0092e 	bgeu	r4,r7,400832c <memmove+0x34>
 4008308:	2187883a 	add	r3,r4,r6
 400830c:	198bc83a 	sub	r5,r3,r6
 4008310:	30004826 	beq	r6,zero,4008434 <memmove+0x13c>
 4008314:	39ffffc4 	addi	r7,r7,-1
 4008318:	39000003 	ldbu	r4,0(r7)
 400831c:	18ffffc4 	addi	r3,r3,-1
 4008320:	19000005 	stb	r4,0(r3)
 4008324:	28fffb1e 	bne	r5,r3,4008314 <__alt_data_end+0xfc008314>
 4008328:	f800283a 	ret
 400832c:	00c003c4 	movi	r3,15
 4008330:	1980412e 	bgeu	r3,r6,4008438 <memmove+0x140>
 4008334:	2886b03a 	or	r3,r5,r2
 4008338:	18c000cc 	andi	r3,r3,3
 400833c:	1800401e 	bne	r3,zero,4008440 <memmove+0x148>
 4008340:	33fffc04 	addi	r15,r6,-16
 4008344:	781ed13a 	srli	r15,r15,4
 4008348:	28c00104 	addi	r3,r5,4
 400834c:	13400104 	addi	r13,r2,4
 4008350:	781c913a 	slli	r14,r15,4
 4008354:	2b000204 	addi	r12,r5,8
 4008358:	12c00204 	addi	r11,r2,8
 400835c:	73800504 	addi	r14,r14,20
 4008360:	2a800304 	addi	r10,r5,12
 4008364:	12400304 	addi	r9,r2,12
 4008368:	2b9d883a 	add	r14,r5,r14
 400836c:	2811883a 	mov	r8,r5
 4008370:	100f883a 	mov	r7,r2
 4008374:	41000017 	ldw	r4,0(r8)
 4008378:	39c00404 	addi	r7,r7,16
 400837c:	18c00404 	addi	r3,r3,16
 4008380:	393ffc15 	stw	r4,-16(r7)
 4008384:	193ffc17 	ldw	r4,-16(r3)
 4008388:	6b400404 	addi	r13,r13,16
 400838c:	5ac00404 	addi	r11,r11,16
 4008390:	693ffc15 	stw	r4,-16(r13)
 4008394:	61000017 	ldw	r4,0(r12)
 4008398:	4a400404 	addi	r9,r9,16
 400839c:	42000404 	addi	r8,r8,16
 40083a0:	593ffc15 	stw	r4,-16(r11)
 40083a4:	51000017 	ldw	r4,0(r10)
 40083a8:	63000404 	addi	r12,r12,16
 40083ac:	52800404 	addi	r10,r10,16
 40083b0:	493ffc15 	stw	r4,-16(r9)
 40083b4:	1bbfef1e 	bne	r3,r14,4008374 <__alt_data_end+0xfc008374>
 40083b8:	79000044 	addi	r4,r15,1
 40083bc:	2008913a 	slli	r4,r4,4
 40083c0:	328003cc 	andi	r10,r6,15
 40083c4:	02c000c4 	movi	r11,3
 40083c8:	1107883a 	add	r3,r2,r4
 40083cc:	290b883a 	add	r5,r5,r4
 40083d0:	5a801e2e 	bgeu	r11,r10,400844c <memmove+0x154>
 40083d4:	1813883a 	mov	r9,r3
 40083d8:	2811883a 	mov	r8,r5
 40083dc:	500f883a 	mov	r7,r10
 40083e0:	41000017 	ldw	r4,0(r8)
 40083e4:	4a400104 	addi	r9,r9,4
 40083e8:	39ffff04 	addi	r7,r7,-4
 40083ec:	493fff15 	stw	r4,-4(r9)
 40083f0:	42000104 	addi	r8,r8,4
 40083f4:	59fffa36 	bltu	r11,r7,40083e0 <__alt_data_end+0xfc0083e0>
 40083f8:	513fff04 	addi	r4,r10,-4
 40083fc:	2008d0ba 	srli	r4,r4,2
 4008400:	318000cc 	andi	r6,r6,3
 4008404:	21000044 	addi	r4,r4,1
 4008408:	2109883a 	add	r4,r4,r4
 400840c:	2109883a 	add	r4,r4,r4
 4008410:	1907883a 	add	r3,r3,r4
 4008414:	290b883a 	add	r5,r5,r4
 4008418:	30000b26 	beq	r6,zero,4008448 <memmove+0x150>
 400841c:	198d883a 	add	r6,r3,r6
 4008420:	29c00003 	ldbu	r7,0(r5)
 4008424:	18c00044 	addi	r3,r3,1
 4008428:	29400044 	addi	r5,r5,1
 400842c:	19ffffc5 	stb	r7,-1(r3)
 4008430:	19bffb1e 	bne	r3,r6,4008420 <__alt_data_end+0xfc008420>
 4008434:	f800283a 	ret
 4008438:	1007883a 	mov	r3,r2
 400843c:	003ff606 	br	4008418 <__alt_data_end+0xfc008418>
 4008440:	1007883a 	mov	r3,r2
 4008444:	003ff506 	br	400841c <__alt_data_end+0xfc00841c>
 4008448:	f800283a 	ret
 400844c:	500d883a 	mov	r6,r10
 4008450:	003ff106 	br	4008418 <__alt_data_end+0xfc008418>

04008454 <memset>:
 4008454:	20c000cc 	andi	r3,r4,3
 4008458:	2005883a 	mov	r2,r4
 400845c:	18004426 	beq	r3,zero,4008570 <memset+0x11c>
 4008460:	31ffffc4 	addi	r7,r6,-1
 4008464:	30004026 	beq	r6,zero,4008568 <memset+0x114>
 4008468:	2813883a 	mov	r9,r5
 400846c:	200d883a 	mov	r6,r4
 4008470:	2007883a 	mov	r3,r4
 4008474:	00000406 	br	4008488 <memset+0x34>
 4008478:	3a3fffc4 	addi	r8,r7,-1
 400847c:	31800044 	addi	r6,r6,1
 4008480:	38003926 	beq	r7,zero,4008568 <memset+0x114>
 4008484:	400f883a 	mov	r7,r8
 4008488:	18c00044 	addi	r3,r3,1
 400848c:	32400005 	stb	r9,0(r6)
 4008490:	1a0000cc 	andi	r8,r3,3
 4008494:	403ff81e 	bne	r8,zero,4008478 <__alt_data_end+0xfc008478>
 4008498:	010000c4 	movi	r4,3
 400849c:	21c02d2e 	bgeu	r4,r7,4008554 <memset+0x100>
 40084a0:	29003fcc 	andi	r4,r5,255
 40084a4:	200c923a 	slli	r6,r4,8
 40084a8:	3108b03a 	or	r4,r6,r4
 40084ac:	200c943a 	slli	r6,r4,16
 40084b0:	218cb03a 	or	r6,r4,r6
 40084b4:	010003c4 	movi	r4,15
 40084b8:	21c0182e 	bgeu	r4,r7,400851c <memset+0xc8>
 40084bc:	3b3ffc04 	addi	r12,r7,-16
 40084c0:	6018d13a 	srli	r12,r12,4
 40084c4:	1a000104 	addi	r8,r3,4
 40084c8:	1ac00204 	addi	r11,r3,8
 40084cc:	6008913a 	slli	r4,r12,4
 40084d0:	1a800304 	addi	r10,r3,12
 40084d4:	1813883a 	mov	r9,r3
 40084d8:	21000504 	addi	r4,r4,20
 40084dc:	1909883a 	add	r4,r3,r4
 40084e0:	49800015 	stw	r6,0(r9)
 40084e4:	41800015 	stw	r6,0(r8)
 40084e8:	59800015 	stw	r6,0(r11)
 40084ec:	51800015 	stw	r6,0(r10)
 40084f0:	42000404 	addi	r8,r8,16
 40084f4:	4a400404 	addi	r9,r9,16
 40084f8:	5ac00404 	addi	r11,r11,16
 40084fc:	52800404 	addi	r10,r10,16
 4008500:	413ff71e 	bne	r8,r4,40084e0 <__alt_data_end+0xfc0084e0>
 4008504:	63000044 	addi	r12,r12,1
 4008508:	6018913a 	slli	r12,r12,4
 400850c:	39c003cc 	andi	r7,r7,15
 4008510:	010000c4 	movi	r4,3
 4008514:	1b07883a 	add	r3,r3,r12
 4008518:	21c00e2e 	bgeu	r4,r7,4008554 <memset+0x100>
 400851c:	1813883a 	mov	r9,r3
 4008520:	3811883a 	mov	r8,r7
 4008524:	010000c4 	movi	r4,3
 4008528:	49800015 	stw	r6,0(r9)
 400852c:	423fff04 	addi	r8,r8,-4
 4008530:	4a400104 	addi	r9,r9,4
 4008534:	223ffc36 	bltu	r4,r8,4008528 <__alt_data_end+0xfc008528>
 4008538:	393fff04 	addi	r4,r7,-4
 400853c:	2008d0ba 	srli	r4,r4,2
 4008540:	39c000cc 	andi	r7,r7,3
 4008544:	21000044 	addi	r4,r4,1
 4008548:	2109883a 	add	r4,r4,r4
 400854c:	2109883a 	add	r4,r4,r4
 4008550:	1907883a 	add	r3,r3,r4
 4008554:	38000526 	beq	r7,zero,400856c <memset+0x118>
 4008558:	19cf883a 	add	r7,r3,r7
 400855c:	19400005 	stb	r5,0(r3)
 4008560:	18c00044 	addi	r3,r3,1
 4008564:	38fffd1e 	bne	r7,r3,400855c <__alt_data_end+0xfc00855c>
 4008568:	f800283a 	ret
 400856c:	f800283a 	ret
 4008570:	2007883a 	mov	r3,r4
 4008574:	300f883a 	mov	r7,r6
 4008578:	003fc706 	br	4008498 <__alt_data_end+0xfc008498>

0400857c <_Balloc>:
 400857c:	20801317 	ldw	r2,76(r4)
 4008580:	defffc04 	addi	sp,sp,-16
 4008584:	dc400115 	stw	r17,4(sp)
 4008588:	dc000015 	stw	r16,0(sp)
 400858c:	dfc00315 	stw	ra,12(sp)
 4008590:	dc800215 	stw	r18,8(sp)
 4008594:	2023883a 	mov	r17,r4
 4008598:	2821883a 	mov	r16,r5
 400859c:	10000f26 	beq	r2,zero,40085dc <_Balloc+0x60>
 40085a0:	8407883a 	add	r3,r16,r16
 40085a4:	18c7883a 	add	r3,r3,r3
 40085a8:	10c7883a 	add	r3,r2,r3
 40085ac:	18800017 	ldw	r2,0(r3)
 40085b0:	10001126 	beq	r2,zero,40085f8 <_Balloc+0x7c>
 40085b4:	11000017 	ldw	r4,0(r2)
 40085b8:	19000015 	stw	r4,0(r3)
 40085bc:	10000415 	stw	zero,16(r2)
 40085c0:	10000315 	stw	zero,12(r2)
 40085c4:	dfc00317 	ldw	ra,12(sp)
 40085c8:	dc800217 	ldw	r18,8(sp)
 40085cc:	dc400117 	ldw	r17,4(sp)
 40085d0:	dc000017 	ldw	r16,0(sp)
 40085d4:	dec00404 	addi	sp,sp,16
 40085d8:	f800283a 	ret
 40085dc:	01800844 	movi	r6,33
 40085e0:	01400104 	movi	r5,4
 40085e4:	400b7780 	call	400b778 <_calloc_r>
 40085e8:	88801315 	stw	r2,76(r17)
 40085ec:	103fec1e 	bne	r2,zero,40085a0 <__alt_data_end+0xfc0085a0>
 40085f0:	0005883a 	mov	r2,zero
 40085f4:	003ff306 	br	40085c4 <__alt_data_end+0xfc0085c4>
 40085f8:	01400044 	movi	r5,1
 40085fc:	2c24983a 	sll	r18,r5,r16
 4008600:	8809883a 	mov	r4,r17
 4008604:	91800144 	addi	r6,r18,5
 4008608:	318d883a 	add	r6,r6,r6
 400860c:	318d883a 	add	r6,r6,r6
 4008610:	400b7780 	call	400b778 <_calloc_r>
 4008614:	103ff626 	beq	r2,zero,40085f0 <__alt_data_end+0xfc0085f0>
 4008618:	14000115 	stw	r16,4(r2)
 400861c:	14800215 	stw	r18,8(r2)
 4008620:	003fe606 	br	40085bc <__alt_data_end+0xfc0085bc>

04008624 <_Bfree>:
 4008624:	28000826 	beq	r5,zero,4008648 <_Bfree+0x24>
 4008628:	28c00117 	ldw	r3,4(r5)
 400862c:	20801317 	ldw	r2,76(r4)
 4008630:	18c7883a 	add	r3,r3,r3
 4008634:	18c7883a 	add	r3,r3,r3
 4008638:	10c5883a 	add	r2,r2,r3
 400863c:	10c00017 	ldw	r3,0(r2)
 4008640:	28c00015 	stw	r3,0(r5)
 4008644:	11400015 	stw	r5,0(r2)
 4008648:	f800283a 	ret

0400864c <__multadd>:
 400864c:	defffa04 	addi	sp,sp,-24
 4008650:	dc800315 	stw	r18,12(sp)
 4008654:	dc400215 	stw	r17,8(sp)
 4008658:	dc000115 	stw	r16,4(sp)
 400865c:	2823883a 	mov	r17,r5
 4008660:	2c000417 	ldw	r16,16(r5)
 4008664:	dfc00515 	stw	ra,20(sp)
 4008668:	dcc00415 	stw	r19,16(sp)
 400866c:	2025883a 	mov	r18,r4
 4008670:	29400504 	addi	r5,r5,20
 4008674:	0011883a 	mov	r8,zero
 4008678:	28c00017 	ldw	r3,0(r5)
 400867c:	29400104 	addi	r5,r5,4
 4008680:	42000044 	addi	r8,r8,1
 4008684:	18bfffcc 	andi	r2,r3,65535
 4008688:	1185383a 	mul	r2,r2,r6
 400868c:	1806d43a 	srli	r3,r3,16
 4008690:	11cf883a 	add	r7,r2,r7
 4008694:	3808d43a 	srli	r4,r7,16
 4008698:	1987383a 	mul	r3,r3,r6
 400869c:	38bfffcc 	andi	r2,r7,65535
 40086a0:	1907883a 	add	r3,r3,r4
 40086a4:	1808943a 	slli	r4,r3,16
 40086a8:	180ed43a 	srli	r7,r3,16
 40086ac:	2085883a 	add	r2,r4,r2
 40086b0:	28bfff15 	stw	r2,-4(r5)
 40086b4:	443ff016 	blt	r8,r16,4008678 <__alt_data_end+0xfc008678>
 40086b8:	38000926 	beq	r7,zero,40086e0 <__multadd+0x94>
 40086bc:	88800217 	ldw	r2,8(r17)
 40086c0:	80800f0e 	bge	r16,r2,4008700 <__multadd+0xb4>
 40086c4:	80800144 	addi	r2,r16,5
 40086c8:	1085883a 	add	r2,r2,r2
 40086cc:	1085883a 	add	r2,r2,r2
 40086d0:	8885883a 	add	r2,r17,r2
 40086d4:	11c00015 	stw	r7,0(r2)
 40086d8:	84000044 	addi	r16,r16,1
 40086dc:	8c000415 	stw	r16,16(r17)
 40086e0:	8805883a 	mov	r2,r17
 40086e4:	dfc00517 	ldw	ra,20(sp)
 40086e8:	dcc00417 	ldw	r19,16(sp)
 40086ec:	dc800317 	ldw	r18,12(sp)
 40086f0:	dc400217 	ldw	r17,8(sp)
 40086f4:	dc000117 	ldw	r16,4(sp)
 40086f8:	dec00604 	addi	sp,sp,24
 40086fc:	f800283a 	ret
 4008700:	89400117 	ldw	r5,4(r17)
 4008704:	9009883a 	mov	r4,r18
 4008708:	d9c00015 	stw	r7,0(sp)
 400870c:	29400044 	addi	r5,r5,1
 4008710:	400857c0 	call	400857c <_Balloc>
 4008714:	89800417 	ldw	r6,16(r17)
 4008718:	89400304 	addi	r5,r17,12
 400871c:	11000304 	addi	r4,r2,12
 4008720:	31800084 	addi	r6,r6,2
 4008724:	318d883a 	add	r6,r6,r6
 4008728:	318d883a 	add	r6,r6,r6
 400872c:	1027883a 	mov	r19,r2
 4008730:	40081b00 	call	40081b0 <memcpy>
 4008734:	d9c00017 	ldw	r7,0(sp)
 4008738:	88000a26 	beq	r17,zero,4008764 <__multadd+0x118>
 400873c:	88c00117 	ldw	r3,4(r17)
 4008740:	90801317 	ldw	r2,76(r18)
 4008744:	18c7883a 	add	r3,r3,r3
 4008748:	18c7883a 	add	r3,r3,r3
 400874c:	10c5883a 	add	r2,r2,r3
 4008750:	10c00017 	ldw	r3,0(r2)
 4008754:	88c00015 	stw	r3,0(r17)
 4008758:	14400015 	stw	r17,0(r2)
 400875c:	9823883a 	mov	r17,r19
 4008760:	003fd806 	br	40086c4 <__alt_data_end+0xfc0086c4>
 4008764:	9823883a 	mov	r17,r19
 4008768:	003fd606 	br	40086c4 <__alt_data_end+0xfc0086c4>

0400876c <__s2b>:
 400876c:	defff904 	addi	sp,sp,-28
 4008770:	dc400115 	stw	r17,4(sp)
 4008774:	dc000015 	stw	r16,0(sp)
 4008778:	2023883a 	mov	r17,r4
 400877c:	2821883a 	mov	r16,r5
 4008780:	39000204 	addi	r4,r7,8
 4008784:	01400244 	movi	r5,9
 4008788:	dcc00315 	stw	r19,12(sp)
 400878c:	dc800215 	stw	r18,8(sp)
 4008790:	dfc00615 	stw	ra,24(sp)
 4008794:	dd400515 	stw	r21,20(sp)
 4008798:	dd000415 	stw	r20,16(sp)
 400879c:	3825883a 	mov	r18,r7
 40087a0:	3027883a 	mov	r19,r6
 40087a4:	400094c0 	call	400094c <__divsi3>
 40087a8:	00c00044 	movi	r3,1
 40087ac:	000b883a 	mov	r5,zero
 40087b0:	1880030e 	bge	r3,r2,40087c0 <__s2b+0x54>
 40087b4:	18c7883a 	add	r3,r3,r3
 40087b8:	29400044 	addi	r5,r5,1
 40087bc:	18bffd16 	blt	r3,r2,40087b4 <__alt_data_end+0xfc0087b4>
 40087c0:	8809883a 	mov	r4,r17
 40087c4:	400857c0 	call	400857c <_Balloc>
 40087c8:	d8c00717 	ldw	r3,28(sp)
 40087cc:	10c00515 	stw	r3,20(r2)
 40087d0:	00c00044 	movi	r3,1
 40087d4:	10c00415 	stw	r3,16(r2)
 40087d8:	00c00244 	movi	r3,9
 40087dc:	1cc0210e 	bge	r3,r19,4008864 <__s2b+0xf8>
 40087e0:	80eb883a 	add	r21,r16,r3
 40087e4:	a829883a 	mov	r20,r21
 40087e8:	84e1883a 	add	r16,r16,r19
 40087ec:	a1c00007 	ldb	r7,0(r20)
 40087f0:	01800284 	movi	r6,10
 40087f4:	a5000044 	addi	r20,r20,1
 40087f8:	100b883a 	mov	r5,r2
 40087fc:	39fff404 	addi	r7,r7,-48
 4008800:	8809883a 	mov	r4,r17
 4008804:	400864c0 	call	400864c <__multadd>
 4008808:	a43ff81e 	bne	r20,r16,40087ec <__alt_data_end+0xfc0087ec>
 400880c:	ace1883a 	add	r16,r21,r19
 4008810:	843ffe04 	addi	r16,r16,-8
 4008814:	9c800a0e 	bge	r19,r18,4008840 <__s2b+0xd4>
 4008818:	94e5c83a 	sub	r18,r18,r19
 400881c:	84a5883a 	add	r18,r16,r18
 4008820:	81c00007 	ldb	r7,0(r16)
 4008824:	01800284 	movi	r6,10
 4008828:	84000044 	addi	r16,r16,1
 400882c:	100b883a 	mov	r5,r2
 4008830:	39fff404 	addi	r7,r7,-48
 4008834:	8809883a 	mov	r4,r17
 4008838:	400864c0 	call	400864c <__multadd>
 400883c:	84bff81e 	bne	r16,r18,4008820 <__alt_data_end+0xfc008820>
 4008840:	dfc00617 	ldw	ra,24(sp)
 4008844:	dd400517 	ldw	r21,20(sp)
 4008848:	dd000417 	ldw	r20,16(sp)
 400884c:	dcc00317 	ldw	r19,12(sp)
 4008850:	dc800217 	ldw	r18,8(sp)
 4008854:	dc400117 	ldw	r17,4(sp)
 4008858:	dc000017 	ldw	r16,0(sp)
 400885c:	dec00704 	addi	sp,sp,28
 4008860:	f800283a 	ret
 4008864:	84000284 	addi	r16,r16,10
 4008868:	1827883a 	mov	r19,r3
 400886c:	003fe906 	br	4008814 <__alt_data_end+0xfc008814>

04008870 <__hi0bits>:
 4008870:	20bfffec 	andhi	r2,r4,65535
 4008874:	1000141e 	bne	r2,zero,40088c8 <__hi0bits+0x58>
 4008878:	2008943a 	slli	r4,r4,16
 400887c:	00800404 	movi	r2,16
 4008880:	20ffc02c 	andhi	r3,r4,65280
 4008884:	1800021e 	bne	r3,zero,4008890 <__hi0bits+0x20>
 4008888:	2008923a 	slli	r4,r4,8
 400888c:	10800204 	addi	r2,r2,8
 4008890:	20fc002c 	andhi	r3,r4,61440
 4008894:	1800021e 	bne	r3,zero,40088a0 <__hi0bits+0x30>
 4008898:	2008913a 	slli	r4,r4,4
 400889c:	10800104 	addi	r2,r2,4
 40088a0:	20f0002c 	andhi	r3,r4,49152
 40088a4:	1800031e 	bne	r3,zero,40088b4 <__hi0bits+0x44>
 40088a8:	2109883a 	add	r4,r4,r4
 40088ac:	10800084 	addi	r2,r2,2
 40088b0:	2109883a 	add	r4,r4,r4
 40088b4:	20000316 	blt	r4,zero,40088c4 <__hi0bits+0x54>
 40088b8:	2110002c 	andhi	r4,r4,16384
 40088bc:	2000041e 	bne	r4,zero,40088d0 <__hi0bits+0x60>
 40088c0:	00800804 	movi	r2,32
 40088c4:	f800283a 	ret
 40088c8:	0005883a 	mov	r2,zero
 40088cc:	003fec06 	br	4008880 <__alt_data_end+0xfc008880>
 40088d0:	10800044 	addi	r2,r2,1
 40088d4:	f800283a 	ret

040088d8 <__lo0bits>:
 40088d8:	20c00017 	ldw	r3,0(r4)
 40088dc:	188001cc 	andi	r2,r3,7
 40088e0:	10000826 	beq	r2,zero,4008904 <__lo0bits+0x2c>
 40088e4:	1880004c 	andi	r2,r3,1
 40088e8:	1000211e 	bne	r2,zero,4008970 <__lo0bits+0x98>
 40088ec:	1880008c 	andi	r2,r3,2
 40088f0:	1000211e 	bne	r2,zero,4008978 <__lo0bits+0xa0>
 40088f4:	1806d0ba 	srli	r3,r3,2
 40088f8:	00800084 	movi	r2,2
 40088fc:	20c00015 	stw	r3,0(r4)
 4008900:	f800283a 	ret
 4008904:	18bfffcc 	andi	r2,r3,65535
 4008908:	10001326 	beq	r2,zero,4008958 <__lo0bits+0x80>
 400890c:	0005883a 	mov	r2,zero
 4008910:	19403fcc 	andi	r5,r3,255
 4008914:	2800021e 	bne	r5,zero,4008920 <__lo0bits+0x48>
 4008918:	1806d23a 	srli	r3,r3,8
 400891c:	10800204 	addi	r2,r2,8
 4008920:	194003cc 	andi	r5,r3,15
 4008924:	2800021e 	bne	r5,zero,4008930 <__lo0bits+0x58>
 4008928:	1806d13a 	srli	r3,r3,4
 400892c:	10800104 	addi	r2,r2,4
 4008930:	194000cc 	andi	r5,r3,3
 4008934:	2800021e 	bne	r5,zero,4008940 <__lo0bits+0x68>
 4008938:	1806d0ba 	srli	r3,r3,2
 400893c:	10800084 	addi	r2,r2,2
 4008940:	1940004c 	andi	r5,r3,1
 4008944:	2800081e 	bne	r5,zero,4008968 <__lo0bits+0x90>
 4008948:	1806d07a 	srli	r3,r3,1
 400894c:	1800051e 	bne	r3,zero,4008964 <__lo0bits+0x8c>
 4008950:	00800804 	movi	r2,32
 4008954:	f800283a 	ret
 4008958:	1806d43a 	srli	r3,r3,16
 400895c:	00800404 	movi	r2,16
 4008960:	003feb06 	br	4008910 <__alt_data_end+0xfc008910>
 4008964:	10800044 	addi	r2,r2,1
 4008968:	20c00015 	stw	r3,0(r4)
 400896c:	f800283a 	ret
 4008970:	0005883a 	mov	r2,zero
 4008974:	f800283a 	ret
 4008978:	1806d07a 	srli	r3,r3,1
 400897c:	00800044 	movi	r2,1
 4008980:	20c00015 	stw	r3,0(r4)
 4008984:	f800283a 	ret

04008988 <__i2b>:
 4008988:	defffd04 	addi	sp,sp,-12
 400898c:	dc000015 	stw	r16,0(sp)
 4008990:	04000044 	movi	r16,1
 4008994:	dc400115 	stw	r17,4(sp)
 4008998:	2823883a 	mov	r17,r5
 400899c:	800b883a 	mov	r5,r16
 40089a0:	dfc00215 	stw	ra,8(sp)
 40089a4:	400857c0 	call	400857c <_Balloc>
 40089a8:	14400515 	stw	r17,20(r2)
 40089ac:	14000415 	stw	r16,16(r2)
 40089b0:	dfc00217 	ldw	ra,8(sp)
 40089b4:	dc400117 	ldw	r17,4(sp)
 40089b8:	dc000017 	ldw	r16,0(sp)
 40089bc:	dec00304 	addi	sp,sp,12
 40089c0:	f800283a 	ret

040089c4 <__multiply>:
 40089c4:	defffa04 	addi	sp,sp,-24
 40089c8:	dcc00315 	stw	r19,12(sp)
 40089cc:	dc800215 	stw	r18,8(sp)
 40089d0:	34c00417 	ldw	r19,16(r6)
 40089d4:	2c800417 	ldw	r18,16(r5)
 40089d8:	dd000415 	stw	r20,16(sp)
 40089dc:	dc400115 	stw	r17,4(sp)
 40089e0:	dfc00515 	stw	ra,20(sp)
 40089e4:	dc000015 	stw	r16,0(sp)
 40089e8:	2829883a 	mov	r20,r5
 40089ec:	3023883a 	mov	r17,r6
 40089f0:	94c0050e 	bge	r18,r19,4008a08 <__multiply+0x44>
 40089f4:	9007883a 	mov	r3,r18
 40089f8:	3029883a 	mov	r20,r6
 40089fc:	9825883a 	mov	r18,r19
 4008a00:	2823883a 	mov	r17,r5
 4008a04:	1827883a 	mov	r19,r3
 4008a08:	a0800217 	ldw	r2,8(r20)
 4008a0c:	94e1883a 	add	r16,r18,r19
 4008a10:	a1400117 	ldw	r5,4(r20)
 4008a14:	1400010e 	bge	r2,r16,4008a1c <__multiply+0x58>
 4008a18:	29400044 	addi	r5,r5,1
 4008a1c:	400857c0 	call	400857c <_Balloc>
 4008a20:	8415883a 	add	r10,r16,r16
 4008a24:	12c00504 	addi	r11,r2,20
 4008a28:	5295883a 	add	r10,r10,r10
 4008a2c:	5a95883a 	add	r10,r11,r10
 4008a30:	5807883a 	mov	r3,r11
 4008a34:	5a80032e 	bgeu	r11,r10,4008a44 <__multiply+0x80>
 4008a38:	18000015 	stw	zero,0(r3)
 4008a3c:	18c00104 	addi	r3,r3,4
 4008a40:	1abffd36 	bltu	r3,r10,4008a38 <__alt_data_end+0xfc008a38>
 4008a44:	9ce7883a 	add	r19,r19,r19
 4008a48:	94a5883a 	add	r18,r18,r18
 4008a4c:	89800504 	addi	r6,r17,20
 4008a50:	9ce7883a 	add	r19,r19,r19
 4008a54:	a3400504 	addi	r13,r20,20
 4008a58:	94a5883a 	add	r18,r18,r18
 4008a5c:	34d9883a 	add	r12,r6,r19
 4008a60:	6c93883a 	add	r9,r13,r18
 4008a64:	3300422e 	bgeu	r6,r12,4008b70 <__multiply+0x1ac>
 4008a68:	37c00017 	ldw	ra,0(r6)
 4008a6c:	fbffffcc 	andi	r15,ra,65535
 4008a70:	78001b26 	beq	r15,zero,4008ae0 <__multiply+0x11c>
 4008a74:	5811883a 	mov	r8,r11
 4008a78:	681d883a 	mov	r14,r13
 4008a7c:	000f883a 	mov	r7,zero
 4008a80:	71000017 	ldw	r4,0(r14)
 4008a84:	40c00017 	ldw	r3,0(r8)
 4008a88:	73800104 	addi	r14,r14,4
 4008a8c:	217fffcc 	andi	r5,r4,65535
 4008a90:	2bcb383a 	mul	r5,r5,r15
 4008a94:	2008d43a 	srli	r4,r4,16
 4008a98:	1c7fffcc 	andi	r17,r3,65535
 4008a9c:	2c4b883a 	add	r5,r5,r17
 4008aa0:	29cb883a 	add	r5,r5,r7
 4008aa4:	23c9383a 	mul	r4,r4,r15
 4008aa8:	1806d43a 	srli	r3,r3,16
 4008aac:	280ed43a 	srli	r7,r5,16
 4008ab0:	297fffcc 	andi	r5,r5,65535
 4008ab4:	20c7883a 	add	r3,r4,r3
 4008ab8:	19c7883a 	add	r3,r3,r7
 4008abc:	1808943a 	slli	r4,r3,16
 4008ac0:	4023883a 	mov	r17,r8
 4008ac4:	180ed43a 	srli	r7,r3,16
 4008ac8:	214ab03a 	or	r5,r4,r5
 4008acc:	41400015 	stw	r5,0(r8)
 4008ad0:	42000104 	addi	r8,r8,4
 4008ad4:	727fea36 	bltu	r14,r9,4008a80 <__alt_data_end+0xfc008a80>
 4008ad8:	89c00115 	stw	r7,4(r17)
 4008adc:	37c00017 	ldw	ra,0(r6)
 4008ae0:	f83ed43a 	srli	ra,ra,16
 4008ae4:	f8001f26 	beq	ra,zero,4008b64 <__multiply+0x1a0>
 4008ae8:	58c00017 	ldw	r3,0(r11)
 4008aec:	681d883a 	mov	r14,r13
 4008af0:	581f883a 	mov	r15,r11
 4008af4:	1811883a 	mov	r8,r3
 4008af8:	5825883a 	mov	r18,r11
 4008afc:	000f883a 	mov	r7,zero
 4008b00:	00000106 	br	4008b08 <__multiply+0x144>
 4008b04:	8825883a 	mov	r18,r17
 4008b08:	7140000b 	ldhu	r5,0(r14)
 4008b0c:	4010d43a 	srli	r8,r8,16
 4008b10:	193fffcc 	andi	r4,r3,65535
 4008b14:	2fcb383a 	mul	r5,r5,ra
 4008b18:	7bc00104 	addi	r15,r15,4
 4008b1c:	73800104 	addi	r14,r14,4
 4008b20:	2a0b883a 	add	r5,r5,r8
 4008b24:	29cb883a 	add	r5,r5,r7
 4008b28:	2806943a 	slli	r3,r5,16
 4008b2c:	94400104 	addi	r17,r18,4
 4008b30:	280ad43a 	srli	r5,r5,16
 4008b34:	1908b03a 	or	r4,r3,r4
 4008b38:	793fff15 	stw	r4,-4(r15)
 4008b3c:	70ffff17 	ldw	r3,-4(r14)
 4008b40:	8a000017 	ldw	r8,0(r17)
 4008b44:	1806d43a 	srli	r3,r3,16
 4008b48:	413fffcc 	andi	r4,r8,65535
 4008b4c:	1fc7383a 	mul	r3,r3,ra
 4008b50:	1907883a 	add	r3,r3,r4
 4008b54:	1947883a 	add	r3,r3,r5
 4008b58:	180ed43a 	srli	r7,r3,16
 4008b5c:	727fe936 	bltu	r14,r9,4008b04 <__alt_data_end+0xfc008b04>
 4008b60:	90c00115 	stw	r3,4(r18)
 4008b64:	31800104 	addi	r6,r6,4
 4008b68:	5ac00104 	addi	r11,r11,4
 4008b6c:	333fbe36 	bltu	r6,r12,4008a68 <__alt_data_end+0xfc008a68>
 4008b70:	0400090e 	bge	zero,r16,4008b98 <__multiply+0x1d4>
 4008b74:	50ffff17 	ldw	r3,-4(r10)
 4008b78:	52bfff04 	addi	r10,r10,-4
 4008b7c:	18000326 	beq	r3,zero,4008b8c <__multiply+0x1c8>
 4008b80:	00000506 	br	4008b98 <__multiply+0x1d4>
 4008b84:	50c00017 	ldw	r3,0(r10)
 4008b88:	1800031e 	bne	r3,zero,4008b98 <__multiply+0x1d4>
 4008b8c:	843fffc4 	addi	r16,r16,-1
 4008b90:	52bfff04 	addi	r10,r10,-4
 4008b94:	803ffb1e 	bne	r16,zero,4008b84 <__alt_data_end+0xfc008b84>
 4008b98:	14000415 	stw	r16,16(r2)
 4008b9c:	dfc00517 	ldw	ra,20(sp)
 4008ba0:	dd000417 	ldw	r20,16(sp)
 4008ba4:	dcc00317 	ldw	r19,12(sp)
 4008ba8:	dc800217 	ldw	r18,8(sp)
 4008bac:	dc400117 	ldw	r17,4(sp)
 4008bb0:	dc000017 	ldw	r16,0(sp)
 4008bb4:	dec00604 	addi	sp,sp,24
 4008bb8:	f800283a 	ret

04008bbc <__pow5mult>:
 4008bbc:	defffa04 	addi	sp,sp,-24
 4008bc0:	dcc00315 	stw	r19,12(sp)
 4008bc4:	dc000015 	stw	r16,0(sp)
 4008bc8:	dfc00515 	stw	ra,20(sp)
 4008bcc:	dd000415 	stw	r20,16(sp)
 4008bd0:	dc800215 	stw	r18,8(sp)
 4008bd4:	dc400115 	stw	r17,4(sp)
 4008bd8:	308000cc 	andi	r2,r6,3
 4008bdc:	3021883a 	mov	r16,r6
 4008be0:	2027883a 	mov	r19,r4
 4008be4:	10002f1e 	bne	r2,zero,4008ca4 <__pow5mult+0xe8>
 4008be8:	2825883a 	mov	r18,r5
 4008bec:	8021d0ba 	srai	r16,r16,2
 4008bf0:	80001a26 	beq	r16,zero,4008c5c <__pow5mult+0xa0>
 4008bf4:	9c401217 	ldw	r17,72(r19)
 4008bf8:	8800061e 	bne	r17,zero,4008c14 <__pow5mult+0x58>
 4008bfc:	00003406 	br	4008cd0 <__pow5mult+0x114>
 4008c00:	8021d07a 	srai	r16,r16,1
 4008c04:	80001526 	beq	r16,zero,4008c5c <__pow5mult+0xa0>
 4008c08:	88800017 	ldw	r2,0(r17)
 4008c0c:	10001c26 	beq	r2,zero,4008c80 <__pow5mult+0xc4>
 4008c10:	1023883a 	mov	r17,r2
 4008c14:	8080004c 	andi	r2,r16,1
 4008c18:	103ff926 	beq	r2,zero,4008c00 <__alt_data_end+0xfc008c00>
 4008c1c:	880d883a 	mov	r6,r17
 4008c20:	900b883a 	mov	r5,r18
 4008c24:	9809883a 	mov	r4,r19
 4008c28:	40089c40 	call	40089c4 <__multiply>
 4008c2c:	90001b26 	beq	r18,zero,4008c9c <__pow5mult+0xe0>
 4008c30:	91000117 	ldw	r4,4(r18)
 4008c34:	98c01317 	ldw	r3,76(r19)
 4008c38:	8021d07a 	srai	r16,r16,1
 4008c3c:	2109883a 	add	r4,r4,r4
 4008c40:	2109883a 	add	r4,r4,r4
 4008c44:	1907883a 	add	r3,r3,r4
 4008c48:	19000017 	ldw	r4,0(r3)
 4008c4c:	91000015 	stw	r4,0(r18)
 4008c50:	1c800015 	stw	r18,0(r3)
 4008c54:	1025883a 	mov	r18,r2
 4008c58:	803feb1e 	bne	r16,zero,4008c08 <__alt_data_end+0xfc008c08>
 4008c5c:	9005883a 	mov	r2,r18
 4008c60:	dfc00517 	ldw	ra,20(sp)
 4008c64:	dd000417 	ldw	r20,16(sp)
 4008c68:	dcc00317 	ldw	r19,12(sp)
 4008c6c:	dc800217 	ldw	r18,8(sp)
 4008c70:	dc400117 	ldw	r17,4(sp)
 4008c74:	dc000017 	ldw	r16,0(sp)
 4008c78:	dec00604 	addi	sp,sp,24
 4008c7c:	f800283a 	ret
 4008c80:	880d883a 	mov	r6,r17
 4008c84:	880b883a 	mov	r5,r17
 4008c88:	9809883a 	mov	r4,r19
 4008c8c:	40089c40 	call	40089c4 <__multiply>
 4008c90:	88800015 	stw	r2,0(r17)
 4008c94:	10000015 	stw	zero,0(r2)
 4008c98:	003fdd06 	br	4008c10 <__alt_data_end+0xfc008c10>
 4008c9c:	1025883a 	mov	r18,r2
 4008ca0:	003fd706 	br	4008c00 <__alt_data_end+0xfc008c00>
 4008ca4:	10bfffc4 	addi	r2,r2,-1
 4008ca8:	1085883a 	add	r2,r2,r2
 4008cac:	00c10074 	movhi	r3,1025
 4008cb0:	18c26e04 	addi	r3,r3,2488
 4008cb4:	1085883a 	add	r2,r2,r2
 4008cb8:	1885883a 	add	r2,r3,r2
 4008cbc:	11800017 	ldw	r6,0(r2)
 4008cc0:	000f883a 	mov	r7,zero
 4008cc4:	400864c0 	call	400864c <__multadd>
 4008cc8:	1025883a 	mov	r18,r2
 4008ccc:	003fc706 	br	4008bec <__alt_data_end+0xfc008bec>
 4008cd0:	05000044 	movi	r20,1
 4008cd4:	a00b883a 	mov	r5,r20
 4008cd8:	9809883a 	mov	r4,r19
 4008cdc:	400857c0 	call	400857c <_Balloc>
 4008ce0:	1023883a 	mov	r17,r2
 4008ce4:	00809c44 	movi	r2,625
 4008ce8:	88800515 	stw	r2,20(r17)
 4008cec:	8d000415 	stw	r20,16(r17)
 4008cf0:	9c401215 	stw	r17,72(r19)
 4008cf4:	88000015 	stw	zero,0(r17)
 4008cf8:	003fc606 	br	4008c14 <__alt_data_end+0xfc008c14>

04008cfc <__lshift>:
 4008cfc:	defff904 	addi	sp,sp,-28
 4008d00:	dd400515 	stw	r21,20(sp)
 4008d04:	dcc00315 	stw	r19,12(sp)
 4008d08:	302bd17a 	srai	r21,r6,5
 4008d0c:	2cc00417 	ldw	r19,16(r5)
 4008d10:	28800217 	ldw	r2,8(r5)
 4008d14:	dd000415 	stw	r20,16(sp)
 4008d18:	ace7883a 	add	r19,r21,r19
 4008d1c:	dc800215 	stw	r18,8(sp)
 4008d20:	dc400115 	stw	r17,4(sp)
 4008d24:	dc000015 	stw	r16,0(sp)
 4008d28:	dfc00615 	stw	ra,24(sp)
 4008d2c:	9c000044 	addi	r16,r19,1
 4008d30:	2823883a 	mov	r17,r5
 4008d34:	3029883a 	mov	r20,r6
 4008d38:	2025883a 	mov	r18,r4
 4008d3c:	29400117 	ldw	r5,4(r5)
 4008d40:	1400030e 	bge	r2,r16,4008d50 <__lshift+0x54>
 4008d44:	1085883a 	add	r2,r2,r2
 4008d48:	29400044 	addi	r5,r5,1
 4008d4c:	143ffd16 	blt	r2,r16,4008d44 <__alt_data_end+0xfc008d44>
 4008d50:	9009883a 	mov	r4,r18
 4008d54:	400857c0 	call	400857c <_Balloc>
 4008d58:	10c00504 	addi	r3,r2,20
 4008d5c:	0540070e 	bge	zero,r21,4008d7c <__lshift+0x80>
 4008d60:	ad6b883a 	add	r21,r21,r21
 4008d64:	ad6b883a 	add	r21,r21,r21
 4008d68:	1809883a 	mov	r4,r3
 4008d6c:	1d47883a 	add	r3,r3,r21
 4008d70:	20000015 	stw	zero,0(r4)
 4008d74:	21000104 	addi	r4,r4,4
 4008d78:	193ffd1e 	bne	r3,r4,4008d70 <__alt_data_end+0xfc008d70>
 4008d7c:	8a000417 	ldw	r8,16(r17)
 4008d80:	89000504 	addi	r4,r17,20
 4008d84:	a18007cc 	andi	r6,r20,31
 4008d88:	4211883a 	add	r8,r8,r8
 4008d8c:	4211883a 	add	r8,r8,r8
 4008d90:	2211883a 	add	r8,r4,r8
 4008d94:	30002326 	beq	r6,zero,4008e24 <__lshift+0x128>
 4008d98:	02400804 	movi	r9,32
 4008d9c:	4993c83a 	sub	r9,r9,r6
 4008da0:	000b883a 	mov	r5,zero
 4008da4:	21c00017 	ldw	r7,0(r4)
 4008da8:	1815883a 	mov	r10,r3
 4008dac:	18c00104 	addi	r3,r3,4
 4008db0:	398e983a 	sll	r7,r7,r6
 4008db4:	21000104 	addi	r4,r4,4
 4008db8:	394ab03a 	or	r5,r7,r5
 4008dbc:	197fff15 	stw	r5,-4(r3)
 4008dc0:	217fff17 	ldw	r5,-4(r4)
 4008dc4:	2a4ad83a 	srl	r5,r5,r9
 4008dc8:	223ff636 	bltu	r4,r8,4008da4 <__alt_data_end+0xfc008da4>
 4008dcc:	51400115 	stw	r5,4(r10)
 4008dd0:	28001a1e 	bne	r5,zero,4008e3c <__lshift+0x140>
 4008dd4:	843fffc4 	addi	r16,r16,-1
 4008dd8:	14000415 	stw	r16,16(r2)
 4008ddc:	88000826 	beq	r17,zero,4008e00 <__lshift+0x104>
 4008de0:	89000117 	ldw	r4,4(r17)
 4008de4:	90c01317 	ldw	r3,76(r18)
 4008de8:	2109883a 	add	r4,r4,r4
 4008dec:	2109883a 	add	r4,r4,r4
 4008df0:	1907883a 	add	r3,r3,r4
 4008df4:	19000017 	ldw	r4,0(r3)
 4008df8:	89000015 	stw	r4,0(r17)
 4008dfc:	1c400015 	stw	r17,0(r3)
 4008e00:	dfc00617 	ldw	ra,24(sp)
 4008e04:	dd400517 	ldw	r21,20(sp)
 4008e08:	dd000417 	ldw	r20,16(sp)
 4008e0c:	dcc00317 	ldw	r19,12(sp)
 4008e10:	dc800217 	ldw	r18,8(sp)
 4008e14:	dc400117 	ldw	r17,4(sp)
 4008e18:	dc000017 	ldw	r16,0(sp)
 4008e1c:	dec00704 	addi	sp,sp,28
 4008e20:	f800283a 	ret
 4008e24:	21400017 	ldw	r5,0(r4)
 4008e28:	18c00104 	addi	r3,r3,4
 4008e2c:	21000104 	addi	r4,r4,4
 4008e30:	197fff15 	stw	r5,-4(r3)
 4008e34:	223ffb36 	bltu	r4,r8,4008e24 <__alt_data_end+0xfc008e24>
 4008e38:	003fe606 	br	4008dd4 <__alt_data_end+0xfc008dd4>
 4008e3c:	9c000084 	addi	r16,r19,2
 4008e40:	003fe406 	br	4008dd4 <__alt_data_end+0xfc008dd4>

04008e44 <__mcmp>:
 4008e44:	20800417 	ldw	r2,16(r4)
 4008e48:	28c00417 	ldw	r3,16(r5)
 4008e4c:	10c5c83a 	sub	r2,r2,r3
 4008e50:	1000111e 	bne	r2,zero,4008e98 <__mcmp+0x54>
 4008e54:	18c7883a 	add	r3,r3,r3
 4008e58:	18c7883a 	add	r3,r3,r3
 4008e5c:	21000504 	addi	r4,r4,20
 4008e60:	29400504 	addi	r5,r5,20
 4008e64:	20c5883a 	add	r2,r4,r3
 4008e68:	28cb883a 	add	r5,r5,r3
 4008e6c:	00000106 	br	4008e74 <__mcmp+0x30>
 4008e70:	20800a2e 	bgeu	r4,r2,4008e9c <__mcmp+0x58>
 4008e74:	10bfff04 	addi	r2,r2,-4
 4008e78:	297fff04 	addi	r5,r5,-4
 4008e7c:	11800017 	ldw	r6,0(r2)
 4008e80:	28c00017 	ldw	r3,0(r5)
 4008e84:	30fffa26 	beq	r6,r3,4008e70 <__alt_data_end+0xfc008e70>
 4008e88:	30c00236 	bltu	r6,r3,4008e94 <__mcmp+0x50>
 4008e8c:	00800044 	movi	r2,1
 4008e90:	f800283a 	ret
 4008e94:	00bfffc4 	movi	r2,-1
 4008e98:	f800283a 	ret
 4008e9c:	0005883a 	mov	r2,zero
 4008ea0:	f800283a 	ret

04008ea4 <__mdiff>:
 4008ea4:	28c00417 	ldw	r3,16(r5)
 4008ea8:	30800417 	ldw	r2,16(r6)
 4008eac:	defffa04 	addi	sp,sp,-24
 4008eb0:	dcc00315 	stw	r19,12(sp)
 4008eb4:	dc800215 	stw	r18,8(sp)
 4008eb8:	dfc00515 	stw	ra,20(sp)
 4008ebc:	dd000415 	stw	r20,16(sp)
 4008ec0:	dc400115 	stw	r17,4(sp)
 4008ec4:	dc000015 	stw	r16,0(sp)
 4008ec8:	1887c83a 	sub	r3,r3,r2
 4008ecc:	2825883a 	mov	r18,r5
 4008ed0:	3027883a 	mov	r19,r6
 4008ed4:	1800141e 	bne	r3,zero,4008f28 <__mdiff+0x84>
 4008ed8:	1085883a 	add	r2,r2,r2
 4008edc:	1085883a 	add	r2,r2,r2
 4008ee0:	2a000504 	addi	r8,r5,20
 4008ee4:	34000504 	addi	r16,r6,20
 4008ee8:	4087883a 	add	r3,r8,r2
 4008eec:	8085883a 	add	r2,r16,r2
 4008ef0:	00000106 	br	4008ef8 <__mdiff+0x54>
 4008ef4:	40c0592e 	bgeu	r8,r3,400905c <__mdiff+0x1b8>
 4008ef8:	18ffff04 	addi	r3,r3,-4
 4008efc:	10bfff04 	addi	r2,r2,-4
 4008f00:	19c00017 	ldw	r7,0(r3)
 4008f04:	11400017 	ldw	r5,0(r2)
 4008f08:	397ffa26 	beq	r7,r5,4008ef4 <__alt_data_end+0xfc008ef4>
 4008f0c:	3940592e 	bgeu	r7,r5,4009074 <__mdiff+0x1d0>
 4008f10:	9005883a 	mov	r2,r18
 4008f14:	4023883a 	mov	r17,r8
 4008f18:	9825883a 	mov	r18,r19
 4008f1c:	05000044 	movi	r20,1
 4008f20:	1027883a 	mov	r19,r2
 4008f24:	00000406 	br	4008f38 <__mdiff+0x94>
 4008f28:	18005616 	blt	r3,zero,4009084 <__mdiff+0x1e0>
 4008f2c:	34400504 	addi	r17,r6,20
 4008f30:	2c000504 	addi	r16,r5,20
 4008f34:	0029883a 	mov	r20,zero
 4008f38:	91400117 	ldw	r5,4(r18)
 4008f3c:	400857c0 	call	400857c <_Balloc>
 4008f40:	92400417 	ldw	r9,16(r18)
 4008f44:	9b000417 	ldw	r12,16(r19)
 4008f48:	12c00504 	addi	r11,r2,20
 4008f4c:	4a51883a 	add	r8,r9,r9
 4008f50:	6319883a 	add	r12,r12,r12
 4008f54:	4211883a 	add	r8,r8,r8
 4008f58:	6319883a 	add	r12,r12,r12
 4008f5c:	15000315 	stw	r20,12(r2)
 4008f60:	8211883a 	add	r8,r16,r8
 4008f64:	8b19883a 	add	r12,r17,r12
 4008f68:	0007883a 	mov	r3,zero
 4008f6c:	81400017 	ldw	r5,0(r16)
 4008f70:	89c00017 	ldw	r7,0(r17)
 4008f74:	59800104 	addi	r6,r11,4
 4008f78:	293fffcc 	andi	r4,r5,65535
 4008f7c:	20c7883a 	add	r3,r4,r3
 4008f80:	393fffcc 	andi	r4,r7,65535
 4008f84:	1909c83a 	sub	r4,r3,r4
 4008f88:	280ad43a 	srli	r5,r5,16
 4008f8c:	380ed43a 	srli	r7,r7,16
 4008f90:	2007d43a 	srai	r3,r4,16
 4008f94:	213fffcc 	andi	r4,r4,65535
 4008f98:	29cbc83a 	sub	r5,r5,r7
 4008f9c:	28c7883a 	add	r3,r5,r3
 4008fa0:	180a943a 	slli	r5,r3,16
 4008fa4:	8c400104 	addi	r17,r17,4
 4008fa8:	84000104 	addi	r16,r16,4
 4008fac:	2908b03a 	or	r4,r5,r4
 4008fb0:	59000015 	stw	r4,0(r11)
 4008fb4:	1807d43a 	srai	r3,r3,16
 4008fb8:	3015883a 	mov	r10,r6
 4008fbc:	3017883a 	mov	r11,r6
 4008fc0:	8b3fea36 	bltu	r17,r12,4008f6c <__alt_data_end+0xfc008f6c>
 4008fc4:	8200162e 	bgeu	r16,r8,4009020 <__mdiff+0x17c>
 4008fc8:	8017883a 	mov	r11,r16
 4008fcc:	59400017 	ldw	r5,0(r11)
 4008fd0:	31800104 	addi	r6,r6,4
 4008fd4:	5ac00104 	addi	r11,r11,4
 4008fd8:	293fffcc 	andi	r4,r5,65535
 4008fdc:	20c7883a 	add	r3,r4,r3
 4008fe0:	280ed43a 	srli	r7,r5,16
 4008fe4:	180bd43a 	srai	r5,r3,16
 4008fe8:	193fffcc 	andi	r4,r3,65535
 4008fec:	3947883a 	add	r3,r7,r5
 4008ff0:	180a943a 	slli	r5,r3,16
 4008ff4:	1807d43a 	srai	r3,r3,16
 4008ff8:	2908b03a 	or	r4,r5,r4
 4008ffc:	313fff15 	stw	r4,-4(r6)
 4009000:	5a3ff236 	bltu	r11,r8,4008fcc <__alt_data_end+0xfc008fcc>
 4009004:	0406303a 	nor	r3,zero,r16
 4009008:	1a07883a 	add	r3,r3,r8
 400900c:	1806d0ba 	srli	r3,r3,2
 4009010:	18c00044 	addi	r3,r3,1
 4009014:	18c7883a 	add	r3,r3,r3
 4009018:	18c7883a 	add	r3,r3,r3
 400901c:	50d5883a 	add	r10,r10,r3
 4009020:	50ffff04 	addi	r3,r10,-4
 4009024:	2000041e 	bne	r4,zero,4009038 <__mdiff+0x194>
 4009028:	18ffff04 	addi	r3,r3,-4
 400902c:	19000017 	ldw	r4,0(r3)
 4009030:	4a7fffc4 	addi	r9,r9,-1
 4009034:	203ffc26 	beq	r4,zero,4009028 <__alt_data_end+0xfc009028>
 4009038:	12400415 	stw	r9,16(r2)
 400903c:	dfc00517 	ldw	ra,20(sp)
 4009040:	dd000417 	ldw	r20,16(sp)
 4009044:	dcc00317 	ldw	r19,12(sp)
 4009048:	dc800217 	ldw	r18,8(sp)
 400904c:	dc400117 	ldw	r17,4(sp)
 4009050:	dc000017 	ldw	r16,0(sp)
 4009054:	dec00604 	addi	sp,sp,24
 4009058:	f800283a 	ret
 400905c:	000b883a 	mov	r5,zero
 4009060:	400857c0 	call	400857c <_Balloc>
 4009064:	00c00044 	movi	r3,1
 4009068:	10c00415 	stw	r3,16(r2)
 400906c:	10000515 	stw	zero,20(r2)
 4009070:	003ff206 	br	400903c <__alt_data_end+0xfc00903c>
 4009074:	8023883a 	mov	r17,r16
 4009078:	0029883a 	mov	r20,zero
 400907c:	4021883a 	mov	r16,r8
 4009080:	003fad06 	br	4008f38 <__alt_data_end+0xfc008f38>
 4009084:	9005883a 	mov	r2,r18
 4009088:	94400504 	addi	r17,r18,20
 400908c:	9c000504 	addi	r16,r19,20
 4009090:	9825883a 	mov	r18,r19
 4009094:	05000044 	movi	r20,1
 4009098:	1027883a 	mov	r19,r2
 400909c:	003fa606 	br	4008f38 <__alt_data_end+0xfc008f38>

040090a0 <__ulp>:
 40090a0:	295ffc2c 	andhi	r5,r5,32752
 40090a4:	00bf3034 	movhi	r2,64704
 40090a8:	2887883a 	add	r3,r5,r2
 40090ac:	00c0020e 	bge	zero,r3,40090b8 <__ulp+0x18>
 40090b0:	0005883a 	mov	r2,zero
 40090b4:	f800283a 	ret
 40090b8:	00c7c83a 	sub	r3,zero,r3
 40090bc:	1807d53a 	srai	r3,r3,20
 40090c0:	008004c4 	movi	r2,19
 40090c4:	10c00b0e 	bge	r2,r3,40090f4 <__ulp+0x54>
 40090c8:	18bffb04 	addi	r2,r3,-20
 40090cc:	01000784 	movi	r4,30
 40090d0:	0007883a 	mov	r3,zero
 40090d4:	20800516 	blt	r4,r2,40090ec <__ulp+0x4c>
 40090d8:	010007c4 	movi	r4,31
 40090dc:	2089c83a 	sub	r4,r4,r2
 40090e0:	00800044 	movi	r2,1
 40090e4:	1104983a 	sll	r2,r2,r4
 40090e8:	f800283a 	ret
 40090ec:	00800044 	movi	r2,1
 40090f0:	f800283a 	ret
 40090f4:	01400234 	movhi	r5,8
 40090f8:	28c7d83a 	sra	r3,r5,r3
 40090fc:	0005883a 	mov	r2,zero
 4009100:	f800283a 	ret

04009104 <__b2d>:
 4009104:	defffa04 	addi	sp,sp,-24
 4009108:	dc000015 	stw	r16,0(sp)
 400910c:	24000417 	ldw	r16,16(r4)
 4009110:	dc400115 	stw	r17,4(sp)
 4009114:	24400504 	addi	r17,r4,20
 4009118:	8421883a 	add	r16,r16,r16
 400911c:	8421883a 	add	r16,r16,r16
 4009120:	8c21883a 	add	r16,r17,r16
 4009124:	dc800215 	stw	r18,8(sp)
 4009128:	84bfff17 	ldw	r18,-4(r16)
 400912c:	dd000415 	stw	r20,16(sp)
 4009130:	dcc00315 	stw	r19,12(sp)
 4009134:	9009883a 	mov	r4,r18
 4009138:	2829883a 	mov	r20,r5
 400913c:	dfc00515 	stw	ra,20(sp)
 4009140:	40088700 	call	4008870 <__hi0bits>
 4009144:	00c00804 	movi	r3,32
 4009148:	1889c83a 	sub	r4,r3,r2
 400914c:	a1000015 	stw	r4,0(r20)
 4009150:	01000284 	movi	r4,10
 4009154:	84ffff04 	addi	r19,r16,-4
 4009158:	20801216 	blt	r4,r2,40091a4 <__b2d+0xa0>
 400915c:	018002c4 	movi	r6,11
 4009160:	308dc83a 	sub	r6,r6,r2
 4009164:	9186d83a 	srl	r3,r18,r6
 4009168:	18cffc34 	orhi	r3,r3,16368
 400916c:	8cc0212e 	bgeu	r17,r19,40091f4 <__b2d+0xf0>
 4009170:	813ffe17 	ldw	r4,-8(r16)
 4009174:	218cd83a 	srl	r6,r4,r6
 4009178:	10800544 	addi	r2,r2,21
 400917c:	9084983a 	sll	r2,r18,r2
 4009180:	1184b03a 	or	r2,r2,r6
 4009184:	dfc00517 	ldw	ra,20(sp)
 4009188:	dd000417 	ldw	r20,16(sp)
 400918c:	dcc00317 	ldw	r19,12(sp)
 4009190:	dc800217 	ldw	r18,8(sp)
 4009194:	dc400117 	ldw	r17,4(sp)
 4009198:	dc000017 	ldw	r16,0(sp)
 400919c:	dec00604 	addi	sp,sp,24
 40091a0:	f800283a 	ret
 40091a4:	8cc00f2e 	bgeu	r17,r19,40091e4 <__b2d+0xe0>
 40091a8:	117ffd44 	addi	r5,r2,-11
 40091ac:	80bffe17 	ldw	r2,-8(r16)
 40091b0:	28000e26 	beq	r5,zero,40091ec <__b2d+0xe8>
 40091b4:	1949c83a 	sub	r4,r3,r5
 40091b8:	9164983a 	sll	r18,r18,r5
 40091bc:	1106d83a 	srl	r3,r2,r4
 40091c0:	81bffe04 	addi	r6,r16,-8
 40091c4:	948ffc34 	orhi	r18,r18,16368
 40091c8:	90c6b03a 	or	r3,r18,r3
 40091cc:	89800e2e 	bgeu	r17,r6,4009208 <__b2d+0x104>
 40091d0:	81bffd17 	ldw	r6,-12(r16)
 40091d4:	1144983a 	sll	r2,r2,r5
 40091d8:	310ad83a 	srl	r5,r6,r4
 40091dc:	2884b03a 	or	r2,r5,r2
 40091e0:	003fe806 	br	4009184 <__alt_data_end+0xfc009184>
 40091e4:	10bffd44 	addi	r2,r2,-11
 40091e8:	1000041e 	bne	r2,zero,40091fc <__b2d+0xf8>
 40091ec:	90cffc34 	orhi	r3,r18,16368
 40091f0:	003fe406 	br	4009184 <__alt_data_end+0xfc009184>
 40091f4:	000d883a 	mov	r6,zero
 40091f8:	003fdf06 	br	4009178 <__alt_data_end+0xfc009178>
 40091fc:	90a4983a 	sll	r18,r18,r2
 4009200:	0005883a 	mov	r2,zero
 4009204:	003ff906 	br	40091ec <__alt_data_end+0xfc0091ec>
 4009208:	1144983a 	sll	r2,r2,r5
 400920c:	003fdd06 	br	4009184 <__alt_data_end+0xfc009184>

04009210 <__d2b>:
 4009210:	defff804 	addi	sp,sp,-32
 4009214:	dc000215 	stw	r16,8(sp)
 4009218:	3021883a 	mov	r16,r6
 400921c:	dc400315 	stw	r17,12(sp)
 4009220:	8022907a 	slli	r17,r16,1
 4009224:	dd000615 	stw	r20,24(sp)
 4009228:	2829883a 	mov	r20,r5
 400922c:	01400044 	movi	r5,1
 4009230:	dcc00515 	stw	r19,20(sp)
 4009234:	dc800415 	stw	r18,16(sp)
 4009238:	dfc00715 	stw	ra,28(sp)
 400923c:	3825883a 	mov	r18,r7
 4009240:	8822d57a 	srli	r17,r17,21
 4009244:	400857c0 	call	400857c <_Balloc>
 4009248:	1027883a 	mov	r19,r2
 400924c:	00800434 	movhi	r2,16
 4009250:	10bfffc4 	addi	r2,r2,-1
 4009254:	808c703a 	and	r6,r16,r2
 4009258:	88000126 	beq	r17,zero,4009260 <__d2b+0x50>
 400925c:	31800434 	orhi	r6,r6,16
 4009260:	d9800015 	stw	r6,0(sp)
 4009264:	a0002426 	beq	r20,zero,40092f8 <__d2b+0xe8>
 4009268:	d9000104 	addi	r4,sp,4
 400926c:	dd000115 	stw	r20,4(sp)
 4009270:	40088d80 	call	40088d8 <__lo0bits>
 4009274:	d8c00017 	ldw	r3,0(sp)
 4009278:	10002f1e 	bne	r2,zero,4009338 <__d2b+0x128>
 400927c:	d9000117 	ldw	r4,4(sp)
 4009280:	99000515 	stw	r4,20(r19)
 4009284:	1821003a 	cmpeq	r16,r3,zero
 4009288:	01000084 	movi	r4,2
 400928c:	2421c83a 	sub	r16,r4,r16
 4009290:	98c00615 	stw	r3,24(r19)
 4009294:	9c000415 	stw	r16,16(r19)
 4009298:	88001f1e 	bne	r17,zero,4009318 <__d2b+0x108>
 400929c:	10bef384 	addi	r2,r2,-1074
 40092a0:	90800015 	stw	r2,0(r18)
 40092a4:	00900034 	movhi	r2,16384
 40092a8:	10bfffc4 	addi	r2,r2,-1
 40092ac:	8085883a 	add	r2,r16,r2
 40092b0:	1085883a 	add	r2,r2,r2
 40092b4:	1085883a 	add	r2,r2,r2
 40092b8:	9885883a 	add	r2,r19,r2
 40092bc:	11000517 	ldw	r4,20(r2)
 40092c0:	8020917a 	slli	r16,r16,5
 40092c4:	40088700 	call	4008870 <__hi0bits>
 40092c8:	d8c00817 	ldw	r3,32(sp)
 40092cc:	8085c83a 	sub	r2,r16,r2
 40092d0:	18800015 	stw	r2,0(r3)
 40092d4:	9805883a 	mov	r2,r19
 40092d8:	dfc00717 	ldw	ra,28(sp)
 40092dc:	dd000617 	ldw	r20,24(sp)
 40092e0:	dcc00517 	ldw	r19,20(sp)
 40092e4:	dc800417 	ldw	r18,16(sp)
 40092e8:	dc400317 	ldw	r17,12(sp)
 40092ec:	dc000217 	ldw	r16,8(sp)
 40092f0:	dec00804 	addi	sp,sp,32
 40092f4:	f800283a 	ret
 40092f8:	d809883a 	mov	r4,sp
 40092fc:	40088d80 	call	40088d8 <__lo0bits>
 4009300:	d8c00017 	ldw	r3,0(sp)
 4009304:	04000044 	movi	r16,1
 4009308:	9c000415 	stw	r16,16(r19)
 400930c:	98c00515 	stw	r3,20(r19)
 4009310:	10800804 	addi	r2,r2,32
 4009314:	883fe126 	beq	r17,zero,400929c <__alt_data_end+0xfc00929c>
 4009318:	00c00d44 	movi	r3,53
 400931c:	8c7ef344 	addi	r17,r17,-1075
 4009320:	88a3883a 	add	r17,r17,r2
 4009324:	1885c83a 	sub	r2,r3,r2
 4009328:	d8c00817 	ldw	r3,32(sp)
 400932c:	94400015 	stw	r17,0(r18)
 4009330:	18800015 	stw	r2,0(r3)
 4009334:	003fe706 	br	40092d4 <__alt_data_end+0xfc0092d4>
 4009338:	01000804 	movi	r4,32
 400933c:	2089c83a 	sub	r4,r4,r2
 4009340:	1908983a 	sll	r4,r3,r4
 4009344:	d9400117 	ldw	r5,4(sp)
 4009348:	1886d83a 	srl	r3,r3,r2
 400934c:	2148b03a 	or	r4,r4,r5
 4009350:	99000515 	stw	r4,20(r19)
 4009354:	d8c00015 	stw	r3,0(sp)
 4009358:	003fca06 	br	4009284 <__alt_data_end+0xfc009284>

0400935c <__ratio>:
 400935c:	defff904 	addi	sp,sp,-28
 4009360:	dc400315 	stw	r17,12(sp)
 4009364:	2823883a 	mov	r17,r5
 4009368:	d9400104 	addi	r5,sp,4
 400936c:	dfc00615 	stw	ra,24(sp)
 4009370:	dcc00515 	stw	r19,20(sp)
 4009374:	dc800415 	stw	r18,16(sp)
 4009378:	2027883a 	mov	r19,r4
 400937c:	dc000215 	stw	r16,8(sp)
 4009380:	40091040 	call	4009104 <__b2d>
 4009384:	d80b883a 	mov	r5,sp
 4009388:	8809883a 	mov	r4,r17
 400938c:	1025883a 	mov	r18,r2
 4009390:	1821883a 	mov	r16,r3
 4009394:	40091040 	call	4009104 <__b2d>
 4009398:	8a000417 	ldw	r8,16(r17)
 400939c:	99000417 	ldw	r4,16(r19)
 40093a0:	d9400117 	ldw	r5,4(sp)
 40093a4:	2209c83a 	sub	r4,r4,r8
 40093a8:	2010917a 	slli	r8,r4,5
 40093ac:	d9000017 	ldw	r4,0(sp)
 40093b0:	2909c83a 	sub	r4,r5,r4
 40093b4:	4109883a 	add	r4,r8,r4
 40093b8:	01000e0e 	bge	zero,r4,40093f4 <__ratio+0x98>
 40093bc:	2008953a 	slli	r4,r4,20
 40093c0:	2421883a 	add	r16,r4,r16
 40093c4:	100d883a 	mov	r6,r2
 40093c8:	180f883a 	mov	r7,r3
 40093cc:	9009883a 	mov	r4,r18
 40093d0:	800b883a 	mov	r5,r16
 40093d4:	40015500 	call	4001550 <__divdf3>
 40093d8:	dfc00617 	ldw	ra,24(sp)
 40093dc:	dcc00517 	ldw	r19,20(sp)
 40093e0:	dc800417 	ldw	r18,16(sp)
 40093e4:	dc400317 	ldw	r17,12(sp)
 40093e8:	dc000217 	ldw	r16,8(sp)
 40093ec:	dec00704 	addi	sp,sp,28
 40093f0:	f800283a 	ret
 40093f4:	2008953a 	slli	r4,r4,20
 40093f8:	1907c83a 	sub	r3,r3,r4
 40093fc:	003ff106 	br	40093c4 <__alt_data_end+0xfc0093c4>

04009400 <_mprec_log10>:
 4009400:	defffe04 	addi	sp,sp,-8
 4009404:	dc000015 	stw	r16,0(sp)
 4009408:	dfc00115 	stw	ra,4(sp)
 400940c:	008005c4 	movi	r2,23
 4009410:	2021883a 	mov	r16,r4
 4009414:	11000d0e 	bge	r2,r4,400944c <_mprec_log10+0x4c>
 4009418:	0005883a 	mov	r2,zero
 400941c:	00cffc34 	movhi	r3,16368
 4009420:	843fffc4 	addi	r16,r16,-1
 4009424:	000d883a 	mov	r6,zero
 4009428:	01d00934 	movhi	r7,16420
 400942c:	1009883a 	mov	r4,r2
 4009430:	180b883a 	mov	r5,r3
 4009434:	4001e380 	call	4001e38 <__muldf3>
 4009438:	803ff91e 	bne	r16,zero,4009420 <__alt_data_end+0xfc009420>
 400943c:	dfc00117 	ldw	ra,4(sp)
 4009440:	dc000017 	ldw	r16,0(sp)
 4009444:	dec00204 	addi	sp,sp,8
 4009448:	f800283a 	ret
 400944c:	202090fa 	slli	r16,r4,3
 4009450:	00810074 	movhi	r2,1025
 4009454:	10828504 	addi	r2,r2,2580
 4009458:	1421883a 	add	r16,r2,r16
 400945c:	80800017 	ldw	r2,0(r16)
 4009460:	80c00117 	ldw	r3,4(r16)
 4009464:	dfc00117 	ldw	ra,4(sp)
 4009468:	dc000017 	ldw	r16,0(sp)
 400946c:	dec00204 	addi	sp,sp,8
 4009470:	f800283a 	ret

04009474 <__copybits>:
 4009474:	297fffc4 	addi	r5,r5,-1
 4009478:	280fd17a 	srai	r7,r5,5
 400947c:	30c00417 	ldw	r3,16(r6)
 4009480:	30800504 	addi	r2,r6,20
 4009484:	39c00044 	addi	r7,r7,1
 4009488:	18c7883a 	add	r3,r3,r3
 400948c:	39cf883a 	add	r7,r7,r7
 4009490:	18c7883a 	add	r3,r3,r3
 4009494:	39cf883a 	add	r7,r7,r7
 4009498:	10c7883a 	add	r3,r2,r3
 400949c:	21cf883a 	add	r7,r4,r7
 40094a0:	10c00d2e 	bgeu	r2,r3,40094d8 <__copybits+0x64>
 40094a4:	200b883a 	mov	r5,r4
 40094a8:	12000017 	ldw	r8,0(r2)
 40094ac:	29400104 	addi	r5,r5,4
 40094b0:	10800104 	addi	r2,r2,4
 40094b4:	2a3fff15 	stw	r8,-4(r5)
 40094b8:	10fffb36 	bltu	r2,r3,40094a8 <__alt_data_end+0xfc0094a8>
 40094bc:	1985c83a 	sub	r2,r3,r6
 40094c0:	10bffac4 	addi	r2,r2,-21
 40094c4:	1004d0ba 	srli	r2,r2,2
 40094c8:	10800044 	addi	r2,r2,1
 40094cc:	1085883a 	add	r2,r2,r2
 40094d0:	1085883a 	add	r2,r2,r2
 40094d4:	2089883a 	add	r4,r4,r2
 40094d8:	21c0032e 	bgeu	r4,r7,40094e8 <__copybits+0x74>
 40094dc:	20000015 	stw	zero,0(r4)
 40094e0:	21000104 	addi	r4,r4,4
 40094e4:	21fffd36 	bltu	r4,r7,40094dc <__alt_data_end+0xfc0094dc>
 40094e8:	f800283a 	ret

040094ec <__any_on>:
 40094ec:	20c00417 	ldw	r3,16(r4)
 40094f0:	2805d17a 	srai	r2,r5,5
 40094f4:	21000504 	addi	r4,r4,20
 40094f8:	18800d0e 	bge	r3,r2,4009530 <__any_on+0x44>
 40094fc:	18c7883a 	add	r3,r3,r3
 4009500:	18c7883a 	add	r3,r3,r3
 4009504:	20c7883a 	add	r3,r4,r3
 4009508:	20c0192e 	bgeu	r4,r3,4009570 <__any_on+0x84>
 400950c:	18bfff17 	ldw	r2,-4(r3)
 4009510:	18ffff04 	addi	r3,r3,-4
 4009514:	1000041e 	bne	r2,zero,4009528 <__any_on+0x3c>
 4009518:	20c0142e 	bgeu	r4,r3,400956c <__any_on+0x80>
 400951c:	18ffff04 	addi	r3,r3,-4
 4009520:	19400017 	ldw	r5,0(r3)
 4009524:	283ffc26 	beq	r5,zero,4009518 <__alt_data_end+0xfc009518>
 4009528:	00800044 	movi	r2,1
 400952c:	f800283a 	ret
 4009530:	10c00a0e 	bge	r2,r3,400955c <__any_on+0x70>
 4009534:	1085883a 	add	r2,r2,r2
 4009538:	1085883a 	add	r2,r2,r2
 400953c:	294007cc 	andi	r5,r5,31
 4009540:	2087883a 	add	r3,r4,r2
 4009544:	283ff026 	beq	r5,zero,4009508 <__alt_data_end+0xfc009508>
 4009548:	19800017 	ldw	r6,0(r3)
 400954c:	3144d83a 	srl	r2,r6,r5
 4009550:	114a983a 	sll	r5,r2,r5
 4009554:	317ff41e 	bne	r6,r5,4009528 <__alt_data_end+0xfc009528>
 4009558:	003feb06 	br	4009508 <__alt_data_end+0xfc009508>
 400955c:	1085883a 	add	r2,r2,r2
 4009560:	1085883a 	add	r2,r2,r2
 4009564:	2087883a 	add	r3,r4,r2
 4009568:	003fe706 	br	4009508 <__alt_data_end+0xfc009508>
 400956c:	f800283a 	ret
 4009570:	0005883a 	mov	r2,zero
 4009574:	f800283a 	ret

04009578 <_putc_r>:
 4009578:	defffc04 	addi	sp,sp,-16
 400957c:	dc000215 	stw	r16,8(sp)
 4009580:	dfc00315 	stw	ra,12(sp)
 4009584:	2021883a 	mov	r16,r4
 4009588:	20000226 	beq	r4,zero,4009594 <_putc_r+0x1c>
 400958c:	20800e17 	ldw	r2,56(r4)
 4009590:	10001b26 	beq	r2,zero,4009600 <_putc_r+0x88>
 4009594:	30800217 	ldw	r2,8(r6)
 4009598:	10bfffc4 	addi	r2,r2,-1
 400959c:	30800215 	stw	r2,8(r6)
 40095a0:	10000a16 	blt	r2,zero,40095cc <_putc_r+0x54>
 40095a4:	30800017 	ldw	r2,0(r6)
 40095a8:	11400005 	stb	r5,0(r2)
 40095ac:	30800017 	ldw	r2,0(r6)
 40095b0:	10c00044 	addi	r3,r2,1
 40095b4:	30c00015 	stw	r3,0(r6)
 40095b8:	10800003 	ldbu	r2,0(r2)
 40095bc:	dfc00317 	ldw	ra,12(sp)
 40095c0:	dc000217 	ldw	r16,8(sp)
 40095c4:	dec00404 	addi	sp,sp,16
 40095c8:	f800283a 	ret
 40095cc:	30c00617 	ldw	r3,24(r6)
 40095d0:	10c00616 	blt	r2,r3,40095ec <_putc_r+0x74>
 40095d4:	30800017 	ldw	r2,0(r6)
 40095d8:	00c00284 	movi	r3,10
 40095dc:	11400005 	stb	r5,0(r2)
 40095e0:	30800017 	ldw	r2,0(r6)
 40095e4:	11400003 	ldbu	r5,0(r2)
 40095e8:	28fff11e 	bne	r5,r3,40095b0 <__alt_data_end+0xfc0095b0>
 40095ec:	8009883a 	mov	r4,r16
 40095f0:	dfc00317 	ldw	ra,12(sp)
 40095f4:	dc000217 	ldw	r16,8(sp)
 40095f8:	dec00404 	addi	sp,sp,16
 40095fc:	400b56c1 	jmpi	400b56c <__swbuf_r>
 4009600:	d9400015 	stw	r5,0(sp)
 4009604:	d9800115 	stw	r6,4(sp)
 4009608:	4006b600 	call	4006b60 <__sinit>
 400960c:	d9800117 	ldw	r6,4(sp)
 4009610:	d9400017 	ldw	r5,0(sp)
 4009614:	003fdf06 	br	4009594 <__alt_data_end+0xfc009594>

04009618 <putc>:
 4009618:	00810074 	movhi	r2,1025
 400961c:	defffc04 	addi	sp,sp,-16
 4009620:	10897804 	addi	r2,r2,9696
 4009624:	dc000115 	stw	r16,4(sp)
 4009628:	14000017 	ldw	r16,0(r2)
 400962c:	dc400215 	stw	r17,8(sp)
 4009630:	dfc00315 	stw	ra,12(sp)
 4009634:	2023883a 	mov	r17,r4
 4009638:	80000226 	beq	r16,zero,4009644 <putc+0x2c>
 400963c:	80800e17 	ldw	r2,56(r16)
 4009640:	10001a26 	beq	r2,zero,40096ac <putc+0x94>
 4009644:	28800217 	ldw	r2,8(r5)
 4009648:	10bfffc4 	addi	r2,r2,-1
 400964c:	28800215 	stw	r2,8(r5)
 4009650:	10000b16 	blt	r2,zero,4009680 <putc+0x68>
 4009654:	28800017 	ldw	r2,0(r5)
 4009658:	14400005 	stb	r17,0(r2)
 400965c:	28800017 	ldw	r2,0(r5)
 4009660:	10c00044 	addi	r3,r2,1
 4009664:	28c00015 	stw	r3,0(r5)
 4009668:	10800003 	ldbu	r2,0(r2)
 400966c:	dfc00317 	ldw	ra,12(sp)
 4009670:	dc400217 	ldw	r17,8(sp)
 4009674:	dc000117 	ldw	r16,4(sp)
 4009678:	dec00404 	addi	sp,sp,16
 400967c:	f800283a 	ret
 4009680:	28c00617 	ldw	r3,24(r5)
 4009684:	10c00e16 	blt	r2,r3,40096c0 <putc+0xa8>
 4009688:	28800017 	ldw	r2,0(r5)
 400968c:	01000284 	movi	r4,10
 4009690:	14400005 	stb	r17,0(r2)
 4009694:	28800017 	ldw	r2,0(r5)
 4009698:	10c00003 	ldbu	r3,0(r2)
 400969c:	193ff01e 	bne	r3,r4,4009660 <__alt_data_end+0xfc009660>
 40096a0:	280d883a 	mov	r6,r5
 40096a4:	180b883a 	mov	r5,r3
 40096a8:	00000706 	br	40096c8 <putc+0xb0>
 40096ac:	8009883a 	mov	r4,r16
 40096b0:	d9400015 	stw	r5,0(sp)
 40096b4:	4006b600 	call	4006b60 <__sinit>
 40096b8:	d9400017 	ldw	r5,0(sp)
 40096bc:	003fe106 	br	4009644 <__alt_data_end+0xfc009644>
 40096c0:	280d883a 	mov	r6,r5
 40096c4:	880b883a 	mov	r5,r17
 40096c8:	8009883a 	mov	r4,r16
 40096cc:	dfc00317 	ldw	ra,12(sp)
 40096d0:	dc400217 	ldw	r17,8(sp)
 40096d4:	dc000117 	ldw	r16,4(sp)
 40096d8:	dec00404 	addi	sp,sp,16
 40096dc:	400b56c1 	jmpi	400b56c <__swbuf_r>

040096e0 <_realloc_r>:
 40096e0:	defff604 	addi	sp,sp,-40
 40096e4:	dc800215 	stw	r18,8(sp)
 40096e8:	dfc00915 	stw	ra,36(sp)
 40096ec:	df000815 	stw	fp,32(sp)
 40096f0:	ddc00715 	stw	r23,28(sp)
 40096f4:	dd800615 	stw	r22,24(sp)
 40096f8:	dd400515 	stw	r21,20(sp)
 40096fc:	dd000415 	stw	r20,16(sp)
 4009700:	dcc00315 	stw	r19,12(sp)
 4009704:	dc400115 	stw	r17,4(sp)
 4009708:	dc000015 	stw	r16,0(sp)
 400970c:	3025883a 	mov	r18,r6
 4009710:	2800b726 	beq	r5,zero,40099f0 <_realloc_r+0x310>
 4009714:	282b883a 	mov	r21,r5
 4009718:	2029883a 	mov	r20,r4
 400971c:	400e54c0 	call	400e54c <__malloc_lock>
 4009720:	a8bfff17 	ldw	r2,-4(r21)
 4009724:	043fff04 	movi	r16,-4
 4009728:	90c002c4 	addi	r3,r18,11
 400972c:	01000584 	movi	r4,22
 4009730:	acfffe04 	addi	r19,r21,-8
 4009734:	1420703a 	and	r16,r2,r16
 4009738:	20c0332e 	bgeu	r4,r3,4009808 <_realloc_r+0x128>
 400973c:	047ffe04 	movi	r17,-8
 4009740:	1c62703a 	and	r17,r3,r17
 4009744:	8807883a 	mov	r3,r17
 4009748:	88005816 	blt	r17,zero,40098ac <_realloc_r+0x1cc>
 400974c:	8c805736 	bltu	r17,r18,40098ac <_realloc_r+0x1cc>
 4009750:	80c0300e 	bge	r16,r3,4009814 <_realloc_r+0x134>
 4009754:	07010074 	movhi	fp,1025
 4009758:	e703f304 	addi	fp,fp,4044
 400975c:	e1c00217 	ldw	r7,8(fp)
 4009760:	9c09883a 	add	r4,r19,r16
 4009764:	22000117 	ldw	r8,4(r4)
 4009768:	21c06326 	beq	r4,r7,40098f8 <_realloc_r+0x218>
 400976c:	017fff84 	movi	r5,-2
 4009770:	414a703a 	and	r5,r8,r5
 4009774:	214b883a 	add	r5,r4,r5
 4009778:	29800117 	ldw	r6,4(r5)
 400977c:	3180004c 	andi	r6,r6,1
 4009780:	30003f26 	beq	r6,zero,4009880 <_realloc_r+0x1a0>
 4009784:	1080004c 	andi	r2,r2,1
 4009788:	10008326 	beq	r2,zero,4009998 <_realloc_r+0x2b8>
 400978c:	900b883a 	mov	r5,r18
 4009790:	a009883a 	mov	r4,r20
 4009794:	40078c00 	call	40078c0 <_malloc_r>
 4009798:	1025883a 	mov	r18,r2
 400979c:	10011e26 	beq	r2,zero,4009c18 <_realloc_r+0x538>
 40097a0:	a93fff17 	ldw	r4,-4(r21)
 40097a4:	10fffe04 	addi	r3,r2,-8
 40097a8:	00bfff84 	movi	r2,-2
 40097ac:	2084703a 	and	r2,r4,r2
 40097b0:	9885883a 	add	r2,r19,r2
 40097b4:	1880ee26 	beq	r3,r2,4009b70 <_realloc_r+0x490>
 40097b8:	81bfff04 	addi	r6,r16,-4
 40097bc:	00800904 	movi	r2,36
 40097c0:	1180b836 	bltu	r2,r6,4009aa4 <_realloc_r+0x3c4>
 40097c4:	00c004c4 	movi	r3,19
 40097c8:	19809636 	bltu	r3,r6,4009a24 <_realloc_r+0x344>
 40097cc:	9005883a 	mov	r2,r18
 40097d0:	a807883a 	mov	r3,r21
 40097d4:	19000017 	ldw	r4,0(r3)
 40097d8:	11000015 	stw	r4,0(r2)
 40097dc:	19000117 	ldw	r4,4(r3)
 40097e0:	11000115 	stw	r4,4(r2)
 40097e4:	18c00217 	ldw	r3,8(r3)
 40097e8:	10c00215 	stw	r3,8(r2)
 40097ec:	a80b883a 	mov	r5,r21
 40097f0:	a009883a 	mov	r4,r20
 40097f4:	4006cd40 	call	4006cd4 <_free_r>
 40097f8:	a009883a 	mov	r4,r20
 40097fc:	400e5700 	call	400e570 <__malloc_unlock>
 4009800:	9005883a 	mov	r2,r18
 4009804:	00001206 	br	4009850 <_realloc_r+0x170>
 4009808:	00c00404 	movi	r3,16
 400980c:	1823883a 	mov	r17,r3
 4009810:	003fce06 	br	400974c <__alt_data_end+0xfc00974c>
 4009814:	a825883a 	mov	r18,r21
 4009818:	8445c83a 	sub	r2,r16,r17
 400981c:	00c003c4 	movi	r3,15
 4009820:	18802636 	bltu	r3,r2,40098bc <_realloc_r+0x1dc>
 4009824:	99800117 	ldw	r6,4(r19)
 4009828:	9c07883a 	add	r3,r19,r16
 400982c:	3180004c 	andi	r6,r6,1
 4009830:	3420b03a 	or	r16,r6,r16
 4009834:	9c000115 	stw	r16,4(r19)
 4009838:	18800117 	ldw	r2,4(r3)
 400983c:	10800054 	ori	r2,r2,1
 4009840:	18800115 	stw	r2,4(r3)
 4009844:	a009883a 	mov	r4,r20
 4009848:	400e5700 	call	400e570 <__malloc_unlock>
 400984c:	9005883a 	mov	r2,r18
 4009850:	dfc00917 	ldw	ra,36(sp)
 4009854:	df000817 	ldw	fp,32(sp)
 4009858:	ddc00717 	ldw	r23,28(sp)
 400985c:	dd800617 	ldw	r22,24(sp)
 4009860:	dd400517 	ldw	r21,20(sp)
 4009864:	dd000417 	ldw	r20,16(sp)
 4009868:	dcc00317 	ldw	r19,12(sp)
 400986c:	dc800217 	ldw	r18,8(sp)
 4009870:	dc400117 	ldw	r17,4(sp)
 4009874:	dc000017 	ldw	r16,0(sp)
 4009878:	dec00a04 	addi	sp,sp,40
 400987c:	f800283a 	ret
 4009880:	017fff04 	movi	r5,-4
 4009884:	414a703a 	and	r5,r8,r5
 4009888:	814d883a 	add	r6,r16,r5
 400988c:	30c01f16 	blt	r6,r3,400990c <_realloc_r+0x22c>
 4009890:	20800317 	ldw	r2,12(r4)
 4009894:	20c00217 	ldw	r3,8(r4)
 4009898:	a825883a 	mov	r18,r21
 400989c:	3021883a 	mov	r16,r6
 40098a0:	18800315 	stw	r2,12(r3)
 40098a4:	10c00215 	stw	r3,8(r2)
 40098a8:	003fdb06 	br	4009818 <__alt_data_end+0xfc009818>
 40098ac:	00800304 	movi	r2,12
 40098b0:	a0800015 	stw	r2,0(r20)
 40098b4:	0005883a 	mov	r2,zero
 40098b8:	003fe506 	br	4009850 <__alt_data_end+0xfc009850>
 40098bc:	98c00117 	ldw	r3,4(r19)
 40098c0:	9c4b883a 	add	r5,r19,r17
 40098c4:	11000054 	ori	r4,r2,1
 40098c8:	18c0004c 	andi	r3,r3,1
 40098cc:	1c62b03a 	or	r17,r3,r17
 40098d0:	9c400115 	stw	r17,4(r19)
 40098d4:	29000115 	stw	r4,4(r5)
 40098d8:	2885883a 	add	r2,r5,r2
 40098dc:	10c00117 	ldw	r3,4(r2)
 40098e0:	29400204 	addi	r5,r5,8
 40098e4:	a009883a 	mov	r4,r20
 40098e8:	18c00054 	ori	r3,r3,1
 40098ec:	10c00115 	stw	r3,4(r2)
 40098f0:	4006cd40 	call	4006cd4 <_free_r>
 40098f4:	003fd306 	br	4009844 <__alt_data_end+0xfc009844>
 40098f8:	017fff04 	movi	r5,-4
 40098fc:	414a703a 	and	r5,r8,r5
 4009900:	89800404 	addi	r6,r17,16
 4009904:	8151883a 	add	r8,r16,r5
 4009908:	4180590e 	bge	r8,r6,4009a70 <_realloc_r+0x390>
 400990c:	1080004c 	andi	r2,r2,1
 4009910:	103f9e1e 	bne	r2,zero,400978c <__alt_data_end+0xfc00978c>
 4009914:	adbffe17 	ldw	r22,-8(r21)
 4009918:	00bfff04 	movi	r2,-4
 400991c:	9dadc83a 	sub	r22,r19,r22
 4009920:	b1800117 	ldw	r6,4(r22)
 4009924:	3084703a 	and	r2,r6,r2
 4009928:	20002026 	beq	r4,zero,40099ac <_realloc_r+0x2cc>
 400992c:	80af883a 	add	r23,r16,r2
 4009930:	b96f883a 	add	r23,r23,r5
 4009934:	21c05f26 	beq	r4,r7,4009ab4 <_realloc_r+0x3d4>
 4009938:	b8c01c16 	blt	r23,r3,40099ac <_realloc_r+0x2cc>
 400993c:	20800317 	ldw	r2,12(r4)
 4009940:	20c00217 	ldw	r3,8(r4)
 4009944:	81bfff04 	addi	r6,r16,-4
 4009948:	01000904 	movi	r4,36
 400994c:	18800315 	stw	r2,12(r3)
 4009950:	10c00215 	stw	r3,8(r2)
 4009954:	b0c00217 	ldw	r3,8(r22)
 4009958:	b0800317 	ldw	r2,12(r22)
 400995c:	b4800204 	addi	r18,r22,8
 4009960:	18800315 	stw	r2,12(r3)
 4009964:	10c00215 	stw	r3,8(r2)
 4009968:	21801b36 	bltu	r4,r6,40099d8 <_realloc_r+0x2f8>
 400996c:	008004c4 	movi	r2,19
 4009970:	1180352e 	bgeu	r2,r6,4009a48 <_realloc_r+0x368>
 4009974:	a8800017 	ldw	r2,0(r21)
 4009978:	b0800215 	stw	r2,8(r22)
 400997c:	a8800117 	ldw	r2,4(r21)
 4009980:	b0800315 	stw	r2,12(r22)
 4009984:	008006c4 	movi	r2,27
 4009988:	11807f36 	bltu	r2,r6,4009b88 <_realloc_r+0x4a8>
 400998c:	b0800404 	addi	r2,r22,16
 4009990:	ad400204 	addi	r21,r21,8
 4009994:	00002d06 	br	4009a4c <_realloc_r+0x36c>
 4009998:	adbffe17 	ldw	r22,-8(r21)
 400999c:	00bfff04 	movi	r2,-4
 40099a0:	9dadc83a 	sub	r22,r19,r22
 40099a4:	b1000117 	ldw	r4,4(r22)
 40099a8:	2084703a 	and	r2,r4,r2
 40099ac:	b03f7726 	beq	r22,zero,400978c <__alt_data_end+0xfc00978c>
 40099b0:	80af883a 	add	r23,r16,r2
 40099b4:	b8ff7516 	blt	r23,r3,400978c <__alt_data_end+0xfc00978c>
 40099b8:	b0800317 	ldw	r2,12(r22)
 40099bc:	b0c00217 	ldw	r3,8(r22)
 40099c0:	81bfff04 	addi	r6,r16,-4
 40099c4:	01000904 	movi	r4,36
 40099c8:	18800315 	stw	r2,12(r3)
 40099cc:	10c00215 	stw	r3,8(r2)
 40099d0:	b4800204 	addi	r18,r22,8
 40099d4:	21bfe52e 	bgeu	r4,r6,400996c <__alt_data_end+0xfc00996c>
 40099d8:	a80b883a 	mov	r5,r21
 40099dc:	9009883a 	mov	r4,r18
 40099e0:	40082f80 	call	40082f8 <memmove>
 40099e4:	b821883a 	mov	r16,r23
 40099e8:	b027883a 	mov	r19,r22
 40099ec:	003f8a06 	br	4009818 <__alt_data_end+0xfc009818>
 40099f0:	300b883a 	mov	r5,r6
 40099f4:	dfc00917 	ldw	ra,36(sp)
 40099f8:	df000817 	ldw	fp,32(sp)
 40099fc:	ddc00717 	ldw	r23,28(sp)
 4009a00:	dd800617 	ldw	r22,24(sp)
 4009a04:	dd400517 	ldw	r21,20(sp)
 4009a08:	dd000417 	ldw	r20,16(sp)
 4009a0c:	dcc00317 	ldw	r19,12(sp)
 4009a10:	dc800217 	ldw	r18,8(sp)
 4009a14:	dc400117 	ldw	r17,4(sp)
 4009a18:	dc000017 	ldw	r16,0(sp)
 4009a1c:	dec00a04 	addi	sp,sp,40
 4009a20:	40078c01 	jmpi	40078c0 <_malloc_r>
 4009a24:	a8c00017 	ldw	r3,0(r21)
 4009a28:	90c00015 	stw	r3,0(r18)
 4009a2c:	a8c00117 	ldw	r3,4(r21)
 4009a30:	90c00115 	stw	r3,4(r18)
 4009a34:	00c006c4 	movi	r3,27
 4009a38:	19804536 	bltu	r3,r6,4009b50 <_realloc_r+0x470>
 4009a3c:	90800204 	addi	r2,r18,8
 4009a40:	a8c00204 	addi	r3,r21,8
 4009a44:	003f6306 	br	40097d4 <__alt_data_end+0xfc0097d4>
 4009a48:	9005883a 	mov	r2,r18
 4009a4c:	a8c00017 	ldw	r3,0(r21)
 4009a50:	b821883a 	mov	r16,r23
 4009a54:	b027883a 	mov	r19,r22
 4009a58:	10c00015 	stw	r3,0(r2)
 4009a5c:	a8c00117 	ldw	r3,4(r21)
 4009a60:	10c00115 	stw	r3,4(r2)
 4009a64:	a8c00217 	ldw	r3,8(r21)
 4009a68:	10c00215 	stw	r3,8(r2)
 4009a6c:	003f6a06 	br	4009818 <__alt_data_end+0xfc009818>
 4009a70:	9c67883a 	add	r19,r19,r17
 4009a74:	4445c83a 	sub	r2,r8,r17
 4009a78:	e4c00215 	stw	r19,8(fp)
 4009a7c:	10800054 	ori	r2,r2,1
 4009a80:	98800115 	stw	r2,4(r19)
 4009a84:	a8bfff17 	ldw	r2,-4(r21)
 4009a88:	a009883a 	mov	r4,r20
 4009a8c:	1080004c 	andi	r2,r2,1
 4009a90:	1462b03a 	or	r17,r2,r17
 4009a94:	ac7fff15 	stw	r17,-4(r21)
 4009a98:	400e5700 	call	400e570 <__malloc_unlock>
 4009a9c:	a805883a 	mov	r2,r21
 4009aa0:	003f6b06 	br	4009850 <__alt_data_end+0xfc009850>
 4009aa4:	a80b883a 	mov	r5,r21
 4009aa8:	9009883a 	mov	r4,r18
 4009aac:	40082f80 	call	40082f8 <memmove>
 4009ab0:	003f4e06 	br	40097ec <__alt_data_end+0xfc0097ec>
 4009ab4:	89000404 	addi	r4,r17,16
 4009ab8:	b93fbc16 	blt	r23,r4,40099ac <__alt_data_end+0xfc0099ac>
 4009abc:	b0800317 	ldw	r2,12(r22)
 4009ac0:	b0c00217 	ldw	r3,8(r22)
 4009ac4:	81bfff04 	addi	r6,r16,-4
 4009ac8:	01000904 	movi	r4,36
 4009acc:	18800315 	stw	r2,12(r3)
 4009ad0:	10c00215 	stw	r3,8(r2)
 4009ad4:	b4800204 	addi	r18,r22,8
 4009ad8:	21804336 	bltu	r4,r6,4009be8 <_realloc_r+0x508>
 4009adc:	008004c4 	movi	r2,19
 4009ae0:	11803f2e 	bgeu	r2,r6,4009be0 <_realloc_r+0x500>
 4009ae4:	a8800017 	ldw	r2,0(r21)
 4009ae8:	b0800215 	stw	r2,8(r22)
 4009aec:	a8800117 	ldw	r2,4(r21)
 4009af0:	b0800315 	stw	r2,12(r22)
 4009af4:	008006c4 	movi	r2,27
 4009af8:	11803f36 	bltu	r2,r6,4009bf8 <_realloc_r+0x518>
 4009afc:	b0800404 	addi	r2,r22,16
 4009b00:	ad400204 	addi	r21,r21,8
 4009b04:	a8c00017 	ldw	r3,0(r21)
 4009b08:	10c00015 	stw	r3,0(r2)
 4009b0c:	a8c00117 	ldw	r3,4(r21)
 4009b10:	10c00115 	stw	r3,4(r2)
 4009b14:	a8c00217 	ldw	r3,8(r21)
 4009b18:	10c00215 	stw	r3,8(r2)
 4009b1c:	b447883a 	add	r3,r22,r17
 4009b20:	bc45c83a 	sub	r2,r23,r17
 4009b24:	e0c00215 	stw	r3,8(fp)
 4009b28:	10800054 	ori	r2,r2,1
 4009b2c:	18800115 	stw	r2,4(r3)
 4009b30:	b0800117 	ldw	r2,4(r22)
 4009b34:	a009883a 	mov	r4,r20
 4009b38:	1080004c 	andi	r2,r2,1
 4009b3c:	1462b03a 	or	r17,r2,r17
 4009b40:	b4400115 	stw	r17,4(r22)
 4009b44:	400e5700 	call	400e570 <__malloc_unlock>
 4009b48:	9005883a 	mov	r2,r18
 4009b4c:	003f4006 	br	4009850 <__alt_data_end+0xfc009850>
 4009b50:	a8c00217 	ldw	r3,8(r21)
 4009b54:	90c00215 	stw	r3,8(r18)
 4009b58:	a8c00317 	ldw	r3,12(r21)
 4009b5c:	90c00315 	stw	r3,12(r18)
 4009b60:	30801126 	beq	r6,r2,4009ba8 <_realloc_r+0x4c8>
 4009b64:	90800404 	addi	r2,r18,16
 4009b68:	a8c00404 	addi	r3,r21,16
 4009b6c:	003f1906 	br	40097d4 <__alt_data_end+0xfc0097d4>
 4009b70:	90ffff17 	ldw	r3,-4(r18)
 4009b74:	00bfff04 	movi	r2,-4
 4009b78:	a825883a 	mov	r18,r21
 4009b7c:	1884703a 	and	r2,r3,r2
 4009b80:	80a1883a 	add	r16,r16,r2
 4009b84:	003f2406 	br	4009818 <__alt_data_end+0xfc009818>
 4009b88:	a8800217 	ldw	r2,8(r21)
 4009b8c:	b0800415 	stw	r2,16(r22)
 4009b90:	a8800317 	ldw	r2,12(r21)
 4009b94:	b0800515 	stw	r2,20(r22)
 4009b98:	31000a26 	beq	r6,r4,4009bc4 <_realloc_r+0x4e4>
 4009b9c:	b0800604 	addi	r2,r22,24
 4009ba0:	ad400404 	addi	r21,r21,16
 4009ba4:	003fa906 	br	4009a4c <__alt_data_end+0xfc009a4c>
 4009ba8:	a9000417 	ldw	r4,16(r21)
 4009bac:	90800604 	addi	r2,r18,24
 4009bb0:	a8c00604 	addi	r3,r21,24
 4009bb4:	91000415 	stw	r4,16(r18)
 4009bb8:	a9000517 	ldw	r4,20(r21)
 4009bbc:	91000515 	stw	r4,20(r18)
 4009bc0:	003f0406 	br	40097d4 <__alt_data_end+0xfc0097d4>
 4009bc4:	a8c00417 	ldw	r3,16(r21)
 4009bc8:	ad400604 	addi	r21,r21,24
 4009bcc:	b0800804 	addi	r2,r22,32
 4009bd0:	b0c00615 	stw	r3,24(r22)
 4009bd4:	a8ffff17 	ldw	r3,-4(r21)
 4009bd8:	b0c00715 	stw	r3,28(r22)
 4009bdc:	003f9b06 	br	4009a4c <__alt_data_end+0xfc009a4c>
 4009be0:	9005883a 	mov	r2,r18
 4009be4:	003fc706 	br	4009b04 <__alt_data_end+0xfc009b04>
 4009be8:	a80b883a 	mov	r5,r21
 4009bec:	9009883a 	mov	r4,r18
 4009bf0:	40082f80 	call	40082f8 <memmove>
 4009bf4:	003fc906 	br	4009b1c <__alt_data_end+0xfc009b1c>
 4009bf8:	a8800217 	ldw	r2,8(r21)
 4009bfc:	b0800415 	stw	r2,16(r22)
 4009c00:	a8800317 	ldw	r2,12(r21)
 4009c04:	b0800515 	stw	r2,20(r22)
 4009c08:	31000726 	beq	r6,r4,4009c28 <_realloc_r+0x548>
 4009c0c:	b0800604 	addi	r2,r22,24
 4009c10:	ad400404 	addi	r21,r21,16
 4009c14:	003fbb06 	br	4009b04 <__alt_data_end+0xfc009b04>
 4009c18:	a009883a 	mov	r4,r20
 4009c1c:	400e5700 	call	400e570 <__malloc_unlock>
 4009c20:	0005883a 	mov	r2,zero
 4009c24:	003f0a06 	br	4009850 <__alt_data_end+0xfc009850>
 4009c28:	a8c00417 	ldw	r3,16(r21)
 4009c2c:	ad400604 	addi	r21,r21,24
 4009c30:	b0800804 	addi	r2,r22,32
 4009c34:	b0c00615 	stw	r3,24(r22)
 4009c38:	a8ffff17 	ldw	r3,-4(r21)
 4009c3c:	b0c00715 	stw	r3,28(r22)
 4009c40:	003fb006 	br	4009b04 <__alt_data_end+0xfc009b04>

04009c44 <__fpclassifyd>:
 4009c44:	00a00034 	movhi	r2,32768
 4009c48:	10bfffc4 	addi	r2,r2,-1
 4009c4c:	2884703a 	and	r2,r5,r2
 4009c50:	10000726 	beq	r2,zero,4009c70 <__fpclassifyd+0x2c>
 4009c54:	00fffc34 	movhi	r3,65520
 4009c58:	019ff834 	movhi	r6,32736
 4009c5c:	28c7883a 	add	r3,r5,r3
 4009c60:	31bfffc4 	addi	r6,r6,-1
 4009c64:	30c00536 	bltu	r6,r3,4009c7c <__fpclassifyd+0x38>
 4009c68:	00800104 	movi	r2,4
 4009c6c:	f800283a 	ret
 4009c70:	2000021e 	bne	r4,zero,4009c7c <__fpclassifyd+0x38>
 4009c74:	00800084 	movi	r2,2
 4009c78:	f800283a 	ret
 4009c7c:	00dffc34 	movhi	r3,32752
 4009c80:	019ff834 	movhi	r6,32736
 4009c84:	28cb883a 	add	r5,r5,r3
 4009c88:	31bfffc4 	addi	r6,r6,-1
 4009c8c:	317ff62e 	bgeu	r6,r5,4009c68 <__alt_data_end+0xfc009c68>
 4009c90:	01400434 	movhi	r5,16
 4009c94:	297fffc4 	addi	r5,r5,-1
 4009c98:	28800236 	bltu	r5,r2,4009ca4 <__fpclassifyd+0x60>
 4009c9c:	008000c4 	movi	r2,3
 4009ca0:	f800283a 	ret
 4009ca4:	10c00226 	beq	r2,r3,4009cb0 <__fpclassifyd+0x6c>
 4009ca8:	0005883a 	mov	r2,zero
 4009cac:	f800283a 	ret
 4009cb0:	2005003a 	cmpeq	r2,r4,zero
 4009cb4:	f800283a 	ret

04009cb8 <_sbrk_r>:
 4009cb8:	defffd04 	addi	sp,sp,-12
 4009cbc:	dc000015 	stw	r16,0(sp)
 4009cc0:	04010074 	movhi	r16,1025
 4009cc4:	dc400115 	stw	r17,4(sp)
 4009cc8:	84104c04 	addi	r16,r16,16688
 4009ccc:	2023883a 	mov	r17,r4
 4009cd0:	2809883a 	mov	r4,r5
 4009cd4:	dfc00215 	stw	ra,8(sp)
 4009cd8:	80000015 	stw	zero,0(r16)
 4009cdc:	400e7300 	call	400e730 <sbrk>
 4009ce0:	00ffffc4 	movi	r3,-1
 4009ce4:	10c00526 	beq	r2,r3,4009cfc <_sbrk_r+0x44>
 4009ce8:	dfc00217 	ldw	ra,8(sp)
 4009cec:	dc400117 	ldw	r17,4(sp)
 4009cf0:	dc000017 	ldw	r16,0(sp)
 4009cf4:	dec00304 	addi	sp,sp,12
 4009cf8:	f800283a 	ret
 4009cfc:	80c00017 	ldw	r3,0(r16)
 4009d00:	183ff926 	beq	r3,zero,4009ce8 <__alt_data_end+0xfc009ce8>
 4009d04:	88c00015 	stw	r3,0(r17)
 4009d08:	003ff706 	br	4009ce8 <__alt_data_end+0xfc009ce8>

04009d0c <__sread>:
 4009d0c:	defffe04 	addi	sp,sp,-8
 4009d10:	dc000015 	stw	r16,0(sp)
 4009d14:	2821883a 	mov	r16,r5
 4009d18:	2940038f 	ldh	r5,14(r5)
 4009d1c:	dfc00115 	stw	ra,4(sp)
 4009d20:	400bc580 	call	400bc58 <_read_r>
 4009d24:	10000716 	blt	r2,zero,4009d44 <__sread+0x38>
 4009d28:	80c01417 	ldw	r3,80(r16)
 4009d2c:	1887883a 	add	r3,r3,r2
 4009d30:	80c01415 	stw	r3,80(r16)
 4009d34:	dfc00117 	ldw	ra,4(sp)
 4009d38:	dc000017 	ldw	r16,0(sp)
 4009d3c:	dec00204 	addi	sp,sp,8
 4009d40:	f800283a 	ret
 4009d44:	80c0030b 	ldhu	r3,12(r16)
 4009d48:	18fbffcc 	andi	r3,r3,61439
 4009d4c:	80c0030d 	sth	r3,12(r16)
 4009d50:	dfc00117 	ldw	ra,4(sp)
 4009d54:	dc000017 	ldw	r16,0(sp)
 4009d58:	dec00204 	addi	sp,sp,8
 4009d5c:	f800283a 	ret

04009d60 <__seofread>:
 4009d60:	0005883a 	mov	r2,zero
 4009d64:	f800283a 	ret

04009d68 <__swrite>:
 4009d68:	2880030b 	ldhu	r2,12(r5)
 4009d6c:	defffb04 	addi	sp,sp,-20
 4009d70:	dcc00315 	stw	r19,12(sp)
 4009d74:	dc800215 	stw	r18,8(sp)
 4009d78:	dc400115 	stw	r17,4(sp)
 4009d7c:	dc000015 	stw	r16,0(sp)
 4009d80:	dfc00415 	stw	ra,16(sp)
 4009d84:	10c0400c 	andi	r3,r2,256
 4009d88:	2821883a 	mov	r16,r5
 4009d8c:	2023883a 	mov	r17,r4
 4009d90:	3025883a 	mov	r18,r6
 4009d94:	3827883a 	mov	r19,r7
 4009d98:	18000526 	beq	r3,zero,4009db0 <__swrite+0x48>
 4009d9c:	2940038f 	ldh	r5,14(r5)
 4009da0:	01c00084 	movi	r7,2
 4009da4:	000d883a 	mov	r6,zero
 4009da8:	400bbf80 	call	400bbf8 <_lseek_r>
 4009dac:	8080030b 	ldhu	r2,12(r16)
 4009db0:	8140038f 	ldh	r5,14(r16)
 4009db4:	10bbffcc 	andi	r2,r2,61439
 4009db8:	980f883a 	mov	r7,r19
 4009dbc:	900d883a 	mov	r6,r18
 4009dc0:	8809883a 	mov	r4,r17
 4009dc4:	8080030d 	sth	r2,12(r16)
 4009dc8:	dfc00417 	ldw	ra,16(sp)
 4009dcc:	dcc00317 	ldw	r19,12(sp)
 4009dd0:	dc800217 	ldw	r18,8(sp)
 4009dd4:	dc400117 	ldw	r17,4(sp)
 4009dd8:	dc000017 	ldw	r16,0(sp)
 4009ddc:	dec00504 	addi	sp,sp,20
 4009de0:	400b6c41 	jmpi	400b6c4 <_write_r>

04009de4 <__sseek>:
 4009de4:	defffe04 	addi	sp,sp,-8
 4009de8:	dc000015 	stw	r16,0(sp)
 4009dec:	2821883a 	mov	r16,r5
 4009df0:	2940038f 	ldh	r5,14(r5)
 4009df4:	dfc00115 	stw	ra,4(sp)
 4009df8:	400bbf80 	call	400bbf8 <_lseek_r>
 4009dfc:	00ffffc4 	movi	r3,-1
 4009e00:	10c00826 	beq	r2,r3,4009e24 <__sseek+0x40>
 4009e04:	80c0030b 	ldhu	r3,12(r16)
 4009e08:	80801415 	stw	r2,80(r16)
 4009e0c:	18c40014 	ori	r3,r3,4096
 4009e10:	80c0030d 	sth	r3,12(r16)
 4009e14:	dfc00117 	ldw	ra,4(sp)
 4009e18:	dc000017 	ldw	r16,0(sp)
 4009e1c:	dec00204 	addi	sp,sp,8
 4009e20:	f800283a 	ret
 4009e24:	80c0030b 	ldhu	r3,12(r16)
 4009e28:	18fbffcc 	andi	r3,r3,61439
 4009e2c:	80c0030d 	sth	r3,12(r16)
 4009e30:	dfc00117 	ldw	ra,4(sp)
 4009e34:	dc000017 	ldw	r16,0(sp)
 4009e38:	dec00204 	addi	sp,sp,8
 4009e3c:	f800283a 	ret

04009e40 <__sclose>:
 4009e40:	2940038f 	ldh	r5,14(r5)
 4009e44:	400b7241 	jmpi	400b724 <_close_r>

04009e48 <strcmp>:
 4009e48:	2144b03a 	or	r2,r4,r5
 4009e4c:	108000cc 	andi	r2,r2,3
 4009e50:	1000171e 	bne	r2,zero,4009eb0 <strcmp+0x68>
 4009e54:	20800017 	ldw	r2,0(r4)
 4009e58:	28c00017 	ldw	r3,0(r5)
 4009e5c:	10c0141e 	bne	r2,r3,4009eb0 <strcmp+0x68>
 4009e60:	027fbff4 	movhi	r9,65279
 4009e64:	4a7fbfc4 	addi	r9,r9,-257
 4009e68:	0086303a 	nor	r3,zero,r2
 4009e6c:	02202074 	movhi	r8,32897
 4009e70:	1245883a 	add	r2,r2,r9
 4009e74:	42202004 	addi	r8,r8,-32640
 4009e78:	10c4703a 	and	r2,r2,r3
 4009e7c:	1204703a 	and	r2,r2,r8
 4009e80:	10000226 	beq	r2,zero,4009e8c <strcmp+0x44>
 4009e84:	00002306 	br	4009f14 <strcmp+0xcc>
 4009e88:	1000221e 	bne	r2,zero,4009f14 <strcmp+0xcc>
 4009e8c:	21000104 	addi	r4,r4,4
 4009e90:	20c00017 	ldw	r3,0(r4)
 4009e94:	29400104 	addi	r5,r5,4
 4009e98:	29800017 	ldw	r6,0(r5)
 4009e9c:	1a4f883a 	add	r7,r3,r9
 4009ea0:	00c4303a 	nor	r2,zero,r3
 4009ea4:	3884703a 	and	r2,r7,r2
 4009ea8:	1204703a 	and	r2,r2,r8
 4009eac:	19bff626 	beq	r3,r6,4009e88 <__alt_data_end+0xfc009e88>
 4009eb0:	20800003 	ldbu	r2,0(r4)
 4009eb4:	10c03fcc 	andi	r3,r2,255
 4009eb8:	18c0201c 	xori	r3,r3,128
 4009ebc:	18ffe004 	addi	r3,r3,-128
 4009ec0:	18000c26 	beq	r3,zero,4009ef4 <strcmp+0xac>
 4009ec4:	29800007 	ldb	r6,0(r5)
 4009ec8:	19800326 	beq	r3,r6,4009ed8 <strcmp+0x90>
 4009ecc:	00001306 	br	4009f1c <strcmp+0xd4>
 4009ed0:	29800007 	ldb	r6,0(r5)
 4009ed4:	11800b1e 	bne	r2,r6,4009f04 <strcmp+0xbc>
 4009ed8:	21000044 	addi	r4,r4,1
 4009edc:	20c00003 	ldbu	r3,0(r4)
 4009ee0:	29400044 	addi	r5,r5,1
 4009ee4:	18803fcc 	andi	r2,r3,255
 4009ee8:	1080201c 	xori	r2,r2,128
 4009eec:	10bfe004 	addi	r2,r2,-128
 4009ef0:	103ff71e 	bne	r2,zero,4009ed0 <__alt_data_end+0xfc009ed0>
 4009ef4:	0007883a 	mov	r3,zero
 4009ef8:	28800003 	ldbu	r2,0(r5)
 4009efc:	1885c83a 	sub	r2,r3,r2
 4009f00:	f800283a 	ret
 4009f04:	28800003 	ldbu	r2,0(r5)
 4009f08:	18c03fcc 	andi	r3,r3,255
 4009f0c:	1885c83a 	sub	r2,r3,r2
 4009f10:	f800283a 	ret
 4009f14:	0005883a 	mov	r2,zero
 4009f18:	f800283a 	ret
 4009f1c:	10c03fcc 	andi	r3,r2,255
 4009f20:	003ff506 	br	4009ef8 <__alt_data_end+0xfc009ef8>

04009f24 <__sprint_r.part.0>:
 4009f24:	28801917 	ldw	r2,100(r5)
 4009f28:	defff604 	addi	sp,sp,-40
 4009f2c:	dd400515 	stw	r21,20(sp)
 4009f30:	dfc00915 	stw	ra,36(sp)
 4009f34:	df000815 	stw	fp,32(sp)
 4009f38:	ddc00715 	stw	r23,28(sp)
 4009f3c:	dd800615 	stw	r22,24(sp)
 4009f40:	dd000415 	stw	r20,16(sp)
 4009f44:	dcc00315 	stw	r19,12(sp)
 4009f48:	dc800215 	stw	r18,8(sp)
 4009f4c:	dc400115 	stw	r17,4(sp)
 4009f50:	dc000015 	stw	r16,0(sp)
 4009f54:	1088000c 	andi	r2,r2,8192
 4009f58:	302b883a 	mov	r21,r6
 4009f5c:	10002e26 	beq	r2,zero,400a018 <__sprint_r.part.0+0xf4>
 4009f60:	30800217 	ldw	r2,8(r6)
 4009f64:	35800017 	ldw	r22,0(r6)
 4009f68:	10002926 	beq	r2,zero,400a010 <__sprint_r.part.0+0xec>
 4009f6c:	2827883a 	mov	r19,r5
 4009f70:	2029883a 	mov	r20,r4
 4009f74:	b5c00104 	addi	r23,r22,4
 4009f78:	04bfffc4 	movi	r18,-1
 4009f7c:	bc400017 	ldw	r17,0(r23)
 4009f80:	b4000017 	ldw	r16,0(r22)
 4009f84:	0039883a 	mov	fp,zero
 4009f88:	8822d0ba 	srli	r17,r17,2
 4009f8c:	8800031e 	bne	r17,zero,4009f9c <__sprint_r.part.0+0x78>
 4009f90:	00001806 	br	4009ff4 <__sprint_r.part.0+0xd0>
 4009f94:	84000104 	addi	r16,r16,4
 4009f98:	8f001526 	beq	r17,fp,4009ff0 <__sprint_r.part.0+0xcc>
 4009f9c:	81400017 	ldw	r5,0(r16)
 4009fa0:	980d883a 	mov	r6,r19
 4009fa4:	a009883a 	mov	r4,r20
 4009fa8:	400baa40 	call	400baa4 <_fputwc_r>
 4009fac:	e7000044 	addi	fp,fp,1
 4009fb0:	14bff81e 	bne	r2,r18,4009f94 <__alt_data_end+0xfc009f94>
 4009fb4:	9005883a 	mov	r2,r18
 4009fb8:	a8000215 	stw	zero,8(r21)
 4009fbc:	a8000115 	stw	zero,4(r21)
 4009fc0:	dfc00917 	ldw	ra,36(sp)
 4009fc4:	df000817 	ldw	fp,32(sp)
 4009fc8:	ddc00717 	ldw	r23,28(sp)
 4009fcc:	dd800617 	ldw	r22,24(sp)
 4009fd0:	dd400517 	ldw	r21,20(sp)
 4009fd4:	dd000417 	ldw	r20,16(sp)
 4009fd8:	dcc00317 	ldw	r19,12(sp)
 4009fdc:	dc800217 	ldw	r18,8(sp)
 4009fe0:	dc400117 	ldw	r17,4(sp)
 4009fe4:	dc000017 	ldw	r16,0(sp)
 4009fe8:	dec00a04 	addi	sp,sp,40
 4009fec:	f800283a 	ret
 4009ff0:	a8800217 	ldw	r2,8(r21)
 4009ff4:	8c63883a 	add	r17,r17,r17
 4009ff8:	8c63883a 	add	r17,r17,r17
 4009ffc:	1445c83a 	sub	r2,r2,r17
 400a000:	a8800215 	stw	r2,8(r21)
 400a004:	b5800204 	addi	r22,r22,8
 400a008:	bdc00204 	addi	r23,r23,8
 400a00c:	103fdb1e 	bne	r2,zero,4009f7c <__alt_data_end+0xfc009f7c>
 400a010:	0005883a 	mov	r2,zero
 400a014:	003fe806 	br	4009fb8 <__alt_data_end+0xfc009fb8>
 400a018:	4006fe40 	call	4006fe4 <__sfvwrite_r>
 400a01c:	003fe606 	br	4009fb8 <__alt_data_end+0xfc009fb8>

0400a020 <__sprint_r>:
 400a020:	30c00217 	ldw	r3,8(r6)
 400a024:	18000126 	beq	r3,zero,400a02c <__sprint_r+0xc>
 400a028:	4009f241 	jmpi	4009f24 <__sprint_r.part.0>
 400a02c:	30000115 	stw	zero,4(r6)
 400a030:	0005883a 	mov	r2,zero
 400a034:	f800283a 	ret

0400a038 <___vfiprintf_internal_r>:
 400a038:	deffc904 	addi	sp,sp,-220
 400a03c:	df003515 	stw	fp,212(sp)
 400a040:	dd003115 	stw	r20,196(sp)
 400a044:	dfc03615 	stw	ra,216(sp)
 400a048:	ddc03415 	stw	r23,208(sp)
 400a04c:	dd803315 	stw	r22,204(sp)
 400a050:	dd403215 	stw	r21,200(sp)
 400a054:	dcc03015 	stw	r19,192(sp)
 400a058:	dc802f15 	stw	r18,188(sp)
 400a05c:	dc402e15 	stw	r17,184(sp)
 400a060:	dc002d15 	stw	r16,180(sp)
 400a064:	d9002015 	stw	r4,128(sp)
 400a068:	d9c02215 	stw	r7,136(sp)
 400a06c:	2829883a 	mov	r20,r5
 400a070:	3039883a 	mov	fp,r6
 400a074:	20000226 	beq	r4,zero,400a080 <___vfiprintf_internal_r+0x48>
 400a078:	20800e17 	ldw	r2,56(r4)
 400a07c:	1000cf26 	beq	r2,zero,400a3bc <___vfiprintf_internal_r+0x384>
 400a080:	a080030b 	ldhu	r2,12(r20)
 400a084:	10c8000c 	andi	r3,r2,8192
 400a088:	1800061e 	bne	r3,zero,400a0a4 <___vfiprintf_internal_r+0x6c>
 400a08c:	a1001917 	ldw	r4,100(r20)
 400a090:	00f7ffc4 	movi	r3,-8193
 400a094:	10880014 	ori	r2,r2,8192
 400a098:	20c6703a 	and	r3,r4,r3
 400a09c:	a080030d 	sth	r2,12(r20)
 400a0a0:	a0c01915 	stw	r3,100(r20)
 400a0a4:	10c0020c 	andi	r3,r2,8
 400a0a8:	1800a926 	beq	r3,zero,400a350 <___vfiprintf_internal_r+0x318>
 400a0ac:	a0c00417 	ldw	r3,16(r20)
 400a0b0:	1800a726 	beq	r3,zero,400a350 <___vfiprintf_internal_r+0x318>
 400a0b4:	1080068c 	andi	r2,r2,26
 400a0b8:	00c00284 	movi	r3,10
 400a0bc:	10c0ac26 	beq	r2,r3,400a370 <___vfiprintf_internal_r+0x338>
 400a0c0:	da801a04 	addi	r10,sp,104
 400a0c4:	da801e15 	stw	r10,120(sp)
 400a0c8:	d8801e17 	ldw	r2,120(sp)
 400a0cc:	da8019c4 	addi	r10,sp,103
 400a0d0:	05810074 	movhi	r22,1025
 400a0d4:	05c10074 	movhi	r23,1025
 400a0d8:	da801f15 	stw	r10,124(sp)
 400a0dc:	1295c83a 	sub	r10,r2,r10
 400a0e0:	b582bb04 	addi	r22,r22,2796
 400a0e4:	bdc2b704 	addi	r23,r23,2780
 400a0e8:	dec01a15 	stw	sp,104(sp)
 400a0ec:	d8001c15 	stw	zero,112(sp)
 400a0f0:	d8001b15 	stw	zero,108(sp)
 400a0f4:	d8002615 	stw	zero,152(sp)
 400a0f8:	d8002315 	stw	zero,140(sp)
 400a0fc:	da802715 	stw	r10,156(sp)
 400a100:	d811883a 	mov	r8,sp
 400a104:	dd002115 	stw	r20,132(sp)
 400a108:	e021883a 	mov	r16,fp
 400a10c:	80800007 	ldb	r2,0(r16)
 400a110:	1003ea26 	beq	r2,zero,400b0bc <___vfiprintf_internal_r+0x1084>
 400a114:	00c00944 	movi	r3,37
 400a118:	8025883a 	mov	r18,r16
 400a11c:	10c0021e 	bne	r2,r3,400a128 <___vfiprintf_internal_r+0xf0>
 400a120:	00001606 	br	400a17c <___vfiprintf_internal_r+0x144>
 400a124:	10c00326 	beq	r2,r3,400a134 <___vfiprintf_internal_r+0xfc>
 400a128:	94800044 	addi	r18,r18,1
 400a12c:	90800007 	ldb	r2,0(r18)
 400a130:	103ffc1e 	bne	r2,zero,400a124 <__alt_data_end+0xfc00a124>
 400a134:	9423c83a 	sub	r17,r18,r16
 400a138:	88001026 	beq	r17,zero,400a17c <___vfiprintf_internal_r+0x144>
 400a13c:	d8c01c17 	ldw	r3,112(sp)
 400a140:	d8801b17 	ldw	r2,108(sp)
 400a144:	44000015 	stw	r16,0(r8)
 400a148:	88c7883a 	add	r3,r17,r3
 400a14c:	10800044 	addi	r2,r2,1
 400a150:	44400115 	stw	r17,4(r8)
 400a154:	d8c01c15 	stw	r3,112(sp)
 400a158:	d8801b15 	stw	r2,108(sp)
 400a15c:	010001c4 	movi	r4,7
 400a160:	2080760e 	bge	r4,r2,400a33c <___vfiprintf_internal_r+0x304>
 400a164:	1803821e 	bne	r3,zero,400af70 <___vfiprintf_internal_r+0xf38>
 400a168:	da802317 	ldw	r10,140(sp)
 400a16c:	d8001b15 	stw	zero,108(sp)
 400a170:	d811883a 	mov	r8,sp
 400a174:	5455883a 	add	r10,r10,r17
 400a178:	da802315 	stw	r10,140(sp)
 400a17c:	90800007 	ldb	r2,0(r18)
 400a180:	10044626 	beq	r2,zero,400b29c <___vfiprintf_internal_r+0x1264>
 400a184:	90c00047 	ldb	r3,1(r18)
 400a188:	94000044 	addi	r16,r18,1
 400a18c:	d8001d85 	stb	zero,118(sp)
 400a190:	0009883a 	mov	r4,zero
 400a194:	000f883a 	mov	r7,zero
 400a198:	027fffc4 	movi	r9,-1
 400a19c:	0023883a 	mov	r17,zero
 400a1a0:	0029883a 	mov	r20,zero
 400a1a4:	01401604 	movi	r5,88
 400a1a8:	01800244 	movi	r6,9
 400a1ac:	03400a84 	movi	r13,42
 400a1b0:	03001b04 	movi	r12,108
 400a1b4:	84000044 	addi	r16,r16,1
 400a1b8:	18bff804 	addi	r2,r3,-32
 400a1bc:	28827336 	bltu	r5,r2,400ab8c <___vfiprintf_internal_r+0xb54>
 400a1c0:	100490ba 	slli	r2,r2,2
 400a1c4:	02810074 	movhi	r10,1025
 400a1c8:	52a87604 	addi	r10,r10,-24104
 400a1cc:	1285883a 	add	r2,r2,r10
 400a1d0:	10800017 	ldw	r2,0(r2)
 400a1d4:	1000683a 	jmp	r2
 400a1d8:	0400a8c0 	call	400a8c <__alt_mem_new_sdram_controller_0-0x3bff574>
 400a1dc:	0400ab8c 	andi	r16,zero,686
 400a1e0:	0400ab8c 	andi	r16,zero,686
 400a1e4:	0400a8e0 	cmpeqi	r16,zero,675
 400a1e8:	0400ab8c 	andi	r16,zero,686
 400a1ec:	0400ab8c 	andi	r16,zero,686
 400a1f0:	0400ab8c 	andi	r16,zero,686
 400a1f4:	0400ab8c 	andi	r16,zero,686
 400a1f8:	0400ab8c 	andi	r16,zero,686
 400a1fc:	0400ab8c 	andi	r16,zero,686
 400a200:	0400aac8 	cmpgei	r16,zero,683
 400a204:	0400aae4 	muli	r16,zero,683
 400a208:	0400ab8c 	andi	r16,zero,686
 400a20c:	0400a3cc 	andi	r16,zero,655
 400a210:	0400aaf4 	movhi	r16,683
 400a214:	0400ab8c 	andi	r16,zero,686
 400a218:	0400a8ec 	andhi	r16,zero,675
 400a21c:	0400a8f8 	rdprs	r16,zero,675
 400a220:	0400a8f8 	rdprs	r16,zero,675
 400a224:	0400a8f8 	rdprs	r16,zero,675
 400a228:	0400a8f8 	rdprs	r16,zero,675
 400a22c:	0400a8f8 	rdprs	r16,zero,675
 400a230:	0400a8f8 	rdprs	r16,zero,675
 400a234:	0400a8f8 	rdprs	r16,zero,675
 400a238:	0400a8f8 	rdprs	r16,zero,675
 400a23c:	0400a8f8 	rdprs	r16,zero,675
 400a240:	0400ab8c 	andi	r16,zero,686
 400a244:	0400ab8c 	andi	r16,zero,686
 400a248:	0400ab8c 	andi	r16,zero,686
 400a24c:	0400ab8c 	andi	r16,zero,686
 400a250:	0400ab8c 	andi	r16,zero,686
 400a254:	0400ab8c 	andi	r16,zero,686
 400a258:	0400ab8c 	andi	r16,zero,686
 400a25c:	0400ab8c 	andi	r16,zero,686
 400a260:	0400ab8c 	andi	r16,zero,686
 400a264:	0400ab8c 	andi	r16,zero,686
 400a268:	0400a924 	muli	r16,zero,676
 400a26c:	0400ab8c 	andi	r16,zero,686
 400a270:	0400ab8c 	andi	r16,zero,686
 400a274:	0400ab8c 	andi	r16,zero,686
 400a278:	0400ab8c 	andi	r16,zero,686
 400a27c:	0400ab8c 	andi	r16,zero,686
 400a280:	0400ab8c 	andi	r16,zero,686
 400a284:	0400ab8c 	andi	r16,zero,686
 400a288:	0400ab8c 	andi	r16,zero,686
 400a28c:	0400ab8c 	andi	r16,zero,686
 400a290:	0400ab8c 	andi	r16,zero,686
 400a294:	0400a95c 	xori	r16,zero,677
 400a298:	0400ab8c 	andi	r16,zero,686
 400a29c:	0400ab8c 	andi	r16,zero,686
 400a2a0:	0400ab8c 	andi	r16,zero,686
 400a2a4:	0400ab8c 	andi	r16,zero,686
 400a2a8:	0400ab8c 	andi	r16,zero,686
 400a2ac:	0400a9b4 	movhi	r16,678
 400a2b0:	0400ab8c 	andi	r16,zero,686
 400a2b4:	0400ab8c 	andi	r16,zero,686
 400a2b8:	0400aa24 	muli	r16,zero,680
 400a2bc:	0400ab8c 	andi	r16,zero,686
 400a2c0:	0400ab8c 	andi	r16,zero,686
 400a2c4:	0400ab8c 	andi	r16,zero,686
 400a2c8:	0400ab8c 	andi	r16,zero,686
 400a2cc:	0400ab8c 	andi	r16,zero,686
 400a2d0:	0400ab8c 	andi	r16,zero,686
 400a2d4:	0400ab8c 	andi	r16,zero,686
 400a2d8:	0400ab8c 	andi	r16,zero,686
 400a2dc:	0400ab8c 	andi	r16,zero,686
 400a2e0:	0400ab8c 	andi	r16,zero,686
 400a2e4:	0400a7d0 	cmplti	r16,zero,671
 400a2e8:	0400a7fc 	xorhi	r16,zero,671
 400a2ec:	0400ab8c 	andi	r16,zero,686
 400a2f0:	0400ab8c 	andi	r16,zero,686
 400a2f4:	0400ab8c 	andi	r16,zero,686
 400a2f8:	0400ab34 	movhi	r16,684
 400a2fc:	0400a7fc 	xorhi	r16,zero,671
 400a300:	0400ab8c 	andi	r16,zero,686
 400a304:	0400ab8c 	andi	r16,zero,686
 400a308:	0400a690 	cmplti	r16,zero,666
 400a30c:	0400ab8c 	andi	r16,zero,686
 400a310:	0400a6a0 	cmpeqi	r16,zero,666
 400a314:	0400a6dc 	xori	r16,zero,667
 400a318:	0400a3d8 	cmpnei	r16,zero,655
 400a31c:	0400a684 	movi	r16,666
 400a320:	0400ab8c 	andi	r16,zero,686
 400a324:	0400aa60 	cmpeqi	r16,zero,681
 400a328:	0400ab8c 	andi	r16,zero,686
 400a32c:	0400aab8 	rdprs	r16,zero,682
 400a330:	0400ab8c 	andi	r16,zero,686
 400a334:	0400ab8c 	andi	r16,zero,686
 400a338:	0400a77c 	xorhi	r16,zero,669
 400a33c:	42000204 	addi	r8,r8,8
 400a340:	da802317 	ldw	r10,140(sp)
 400a344:	5455883a 	add	r10,r10,r17
 400a348:	da802315 	stw	r10,140(sp)
 400a34c:	003f8b06 	br	400a17c <__alt_data_end+0xfc00a17c>
 400a350:	d9002017 	ldw	r4,128(sp)
 400a354:	a00b883a 	mov	r5,r20
 400a358:	4004b8c0 	call	4004b8c <__swsetup_r>
 400a35c:	1003b11e 	bne	r2,zero,400b224 <___vfiprintf_internal_r+0x11ec>
 400a360:	a080030b 	ldhu	r2,12(r20)
 400a364:	00c00284 	movi	r3,10
 400a368:	1080068c 	andi	r2,r2,26
 400a36c:	10ff541e 	bne	r2,r3,400a0c0 <__alt_data_end+0xfc00a0c0>
 400a370:	a080038f 	ldh	r2,14(r20)
 400a374:	103f5216 	blt	r2,zero,400a0c0 <__alt_data_end+0xfc00a0c0>
 400a378:	d9c02217 	ldw	r7,136(sp)
 400a37c:	d9002017 	ldw	r4,128(sp)
 400a380:	e00d883a 	mov	r6,fp
 400a384:	a00b883a 	mov	r5,r20
 400a388:	400b4b00 	call	400b4b0 <__sbprintf>
 400a38c:	dfc03617 	ldw	ra,216(sp)
 400a390:	df003517 	ldw	fp,212(sp)
 400a394:	ddc03417 	ldw	r23,208(sp)
 400a398:	dd803317 	ldw	r22,204(sp)
 400a39c:	dd403217 	ldw	r21,200(sp)
 400a3a0:	dd003117 	ldw	r20,196(sp)
 400a3a4:	dcc03017 	ldw	r19,192(sp)
 400a3a8:	dc802f17 	ldw	r18,188(sp)
 400a3ac:	dc402e17 	ldw	r17,184(sp)
 400a3b0:	dc002d17 	ldw	r16,180(sp)
 400a3b4:	dec03704 	addi	sp,sp,220
 400a3b8:	f800283a 	ret
 400a3bc:	4006b600 	call	4006b60 <__sinit>
 400a3c0:	003f2f06 	br	400a080 <__alt_data_end+0xfc00a080>
 400a3c4:	0463c83a 	sub	r17,zero,r17
 400a3c8:	d8802215 	stw	r2,136(sp)
 400a3cc:	a5000114 	ori	r20,r20,4
 400a3d0:	80c00007 	ldb	r3,0(r16)
 400a3d4:	003f7706 	br	400a1b4 <__alt_data_end+0xfc00a1b4>
 400a3d8:	00800c04 	movi	r2,48
 400a3dc:	da802217 	ldw	r10,136(sp)
 400a3e0:	d8801d05 	stb	r2,116(sp)
 400a3e4:	00801e04 	movi	r2,120
 400a3e8:	d8801d45 	stb	r2,117(sp)
 400a3ec:	d8001d85 	stb	zero,118(sp)
 400a3f0:	50c00104 	addi	r3,r10,4
 400a3f4:	54800017 	ldw	r18,0(r10)
 400a3f8:	0027883a 	mov	r19,zero
 400a3fc:	a0800094 	ori	r2,r20,2
 400a400:	48030b16 	blt	r9,zero,400b030 <___vfiprintf_internal_r+0xff8>
 400a404:	00bfdfc4 	movi	r2,-129
 400a408:	a096703a 	and	r11,r20,r2
 400a40c:	d8c02215 	stw	r3,136(sp)
 400a410:	5d000094 	ori	r20,r11,2
 400a414:	90032b1e 	bne	r18,zero,400b0c4 <___vfiprintf_internal_r+0x108c>
 400a418:	00810074 	movhi	r2,1025
 400a41c:	10825604 	addi	r2,r2,2392
 400a420:	d8802615 	stw	r2,152(sp)
 400a424:	0039883a 	mov	fp,zero
 400a428:	48017b1e 	bne	r9,zero,400aa18 <___vfiprintf_internal_r+0x9e0>
 400a42c:	0013883a 	mov	r9,zero
 400a430:	0027883a 	mov	r19,zero
 400a434:	dd401a04 	addi	r21,sp,104
 400a438:	4825883a 	mov	r18,r9
 400a43c:	4cc0010e 	bge	r9,r19,400a444 <___vfiprintf_internal_r+0x40c>
 400a440:	9825883a 	mov	r18,r19
 400a444:	e7003fcc 	andi	fp,fp,255
 400a448:	e700201c 	xori	fp,fp,128
 400a44c:	e73fe004 	addi	fp,fp,-128
 400a450:	e0000126 	beq	fp,zero,400a458 <___vfiprintf_internal_r+0x420>
 400a454:	94800044 	addi	r18,r18,1
 400a458:	a380008c 	andi	r14,r20,2
 400a45c:	70000126 	beq	r14,zero,400a464 <___vfiprintf_internal_r+0x42c>
 400a460:	94800084 	addi	r18,r18,2
 400a464:	a700210c 	andi	fp,r20,132
 400a468:	e001df1e 	bne	fp,zero,400abe8 <___vfiprintf_internal_r+0xbb0>
 400a46c:	8c87c83a 	sub	r3,r17,r18
 400a470:	00c1dd0e 	bge	zero,r3,400abe8 <___vfiprintf_internal_r+0xbb0>
 400a474:	01c00404 	movi	r7,16
 400a478:	d8801c17 	ldw	r2,112(sp)
 400a47c:	38c3ad0e 	bge	r7,r3,400b334 <___vfiprintf_internal_r+0x12fc>
 400a480:	02810074 	movhi	r10,1025
 400a484:	5282bb04 	addi	r10,r10,2796
 400a488:	dc002915 	stw	r16,164(sp)
 400a48c:	d9801b17 	ldw	r6,108(sp)
 400a490:	da802415 	stw	r10,144(sp)
 400a494:	03c001c4 	movi	r15,7
 400a498:	da402515 	stw	r9,148(sp)
 400a49c:	db802815 	stw	r14,160(sp)
 400a4a0:	1821883a 	mov	r16,r3
 400a4a4:	00000506 	br	400a4bc <___vfiprintf_internal_r+0x484>
 400a4a8:	31400084 	addi	r5,r6,2
 400a4ac:	42000204 	addi	r8,r8,8
 400a4b0:	200d883a 	mov	r6,r4
 400a4b4:	843ffc04 	addi	r16,r16,-16
 400a4b8:	3c000d0e 	bge	r7,r16,400a4f0 <___vfiprintf_internal_r+0x4b8>
 400a4bc:	10800404 	addi	r2,r2,16
 400a4c0:	31000044 	addi	r4,r6,1
 400a4c4:	45800015 	stw	r22,0(r8)
 400a4c8:	41c00115 	stw	r7,4(r8)
 400a4cc:	d8801c15 	stw	r2,112(sp)
 400a4d0:	d9001b15 	stw	r4,108(sp)
 400a4d4:	793ff40e 	bge	r15,r4,400a4a8 <__alt_data_end+0xfc00a4a8>
 400a4d8:	1001b51e 	bne	r2,zero,400abb0 <___vfiprintf_internal_r+0xb78>
 400a4dc:	843ffc04 	addi	r16,r16,-16
 400a4e0:	000d883a 	mov	r6,zero
 400a4e4:	01400044 	movi	r5,1
 400a4e8:	d811883a 	mov	r8,sp
 400a4ec:	3c3ff316 	blt	r7,r16,400a4bc <__alt_data_end+0xfc00a4bc>
 400a4f0:	8007883a 	mov	r3,r16
 400a4f4:	da402517 	ldw	r9,148(sp)
 400a4f8:	db802817 	ldw	r14,160(sp)
 400a4fc:	dc002917 	ldw	r16,164(sp)
 400a500:	da802417 	ldw	r10,144(sp)
 400a504:	1885883a 	add	r2,r3,r2
 400a508:	40c00115 	stw	r3,4(r8)
 400a50c:	42800015 	stw	r10,0(r8)
 400a510:	d8801c15 	stw	r2,112(sp)
 400a514:	d9401b15 	stw	r5,108(sp)
 400a518:	00c001c4 	movi	r3,7
 400a51c:	19426016 	blt	r3,r5,400aea0 <___vfiprintf_internal_r+0xe68>
 400a520:	d8c01d87 	ldb	r3,118(sp)
 400a524:	42000204 	addi	r8,r8,8
 400a528:	29000044 	addi	r4,r5,1
 400a52c:	1801b31e 	bne	r3,zero,400abfc <___vfiprintf_internal_r+0xbc4>
 400a530:	7001c026 	beq	r14,zero,400ac34 <___vfiprintf_internal_r+0xbfc>
 400a534:	d8c01d04 	addi	r3,sp,116
 400a538:	10800084 	addi	r2,r2,2
 400a53c:	40c00015 	stw	r3,0(r8)
 400a540:	00c00084 	movi	r3,2
 400a544:	40c00115 	stw	r3,4(r8)
 400a548:	d8801c15 	stw	r2,112(sp)
 400a54c:	d9001b15 	stw	r4,108(sp)
 400a550:	00c001c4 	movi	r3,7
 400a554:	1902650e 	bge	r3,r4,400aeec <___vfiprintf_internal_r+0xeb4>
 400a558:	10029a1e 	bne	r2,zero,400afc4 <___vfiprintf_internal_r+0xf8c>
 400a55c:	00c02004 	movi	r3,128
 400a560:	01000044 	movi	r4,1
 400a564:	000b883a 	mov	r5,zero
 400a568:	d811883a 	mov	r8,sp
 400a56c:	e0c1b31e 	bne	fp,r3,400ac3c <___vfiprintf_internal_r+0xc04>
 400a570:	8cb9c83a 	sub	fp,r17,r18
 400a574:	0701b10e 	bge	zero,fp,400ac3c <___vfiprintf_internal_r+0xc04>
 400a578:	01c00404 	movi	r7,16
 400a57c:	3f03890e 	bge	r7,fp,400b3a4 <___vfiprintf_internal_r+0x136c>
 400a580:	00c10074 	movhi	r3,1025
 400a584:	18c2b704 	addi	r3,r3,2780
 400a588:	d8c02415 	stw	r3,144(sp)
 400a58c:	8007883a 	mov	r3,r16
 400a590:	034001c4 	movi	r13,7
 400a594:	e021883a 	mov	r16,fp
 400a598:	da402515 	stw	r9,148(sp)
 400a59c:	1839883a 	mov	fp,r3
 400a5a0:	00000506 	br	400a5b8 <___vfiprintf_internal_r+0x580>
 400a5a4:	29800084 	addi	r6,r5,2
 400a5a8:	42000204 	addi	r8,r8,8
 400a5ac:	180b883a 	mov	r5,r3
 400a5b0:	843ffc04 	addi	r16,r16,-16
 400a5b4:	3c000d0e 	bge	r7,r16,400a5ec <___vfiprintf_internal_r+0x5b4>
 400a5b8:	10800404 	addi	r2,r2,16
 400a5bc:	28c00044 	addi	r3,r5,1
 400a5c0:	45c00015 	stw	r23,0(r8)
 400a5c4:	41c00115 	stw	r7,4(r8)
 400a5c8:	d8801c15 	stw	r2,112(sp)
 400a5cc:	d8c01b15 	stw	r3,108(sp)
 400a5d0:	68fff40e 	bge	r13,r3,400a5a4 <__alt_data_end+0xfc00a5a4>
 400a5d4:	1002241e 	bne	r2,zero,400ae68 <___vfiprintf_internal_r+0xe30>
 400a5d8:	843ffc04 	addi	r16,r16,-16
 400a5dc:	01800044 	movi	r6,1
 400a5e0:	000b883a 	mov	r5,zero
 400a5e4:	d811883a 	mov	r8,sp
 400a5e8:	3c3ff316 	blt	r7,r16,400a5b8 <__alt_data_end+0xfc00a5b8>
 400a5ec:	da402517 	ldw	r9,148(sp)
 400a5f0:	e007883a 	mov	r3,fp
 400a5f4:	8039883a 	mov	fp,r16
 400a5f8:	1821883a 	mov	r16,r3
 400a5fc:	d8c02417 	ldw	r3,144(sp)
 400a600:	1705883a 	add	r2,r2,fp
 400a604:	47000115 	stw	fp,4(r8)
 400a608:	40c00015 	stw	r3,0(r8)
 400a60c:	d8801c15 	stw	r2,112(sp)
 400a610:	d9801b15 	stw	r6,108(sp)
 400a614:	00c001c4 	movi	r3,7
 400a618:	19827616 	blt	r3,r6,400aff4 <___vfiprintf_internal_r+0xfbc>
 400a61c:	4cf9c83a 	sub	fp,r9,r19
 400a620:	42000204 	addi	r8,r8,8
 400a624:	31000044 	addi	r4,r6,1
 400a628:	300b883a 	mov	r5,r6
 400a62c:	07018516 	blt	zero,fp,400ac44 <___vfiprintf_internal_r+0xc0c>
 400a630:	9885883a 	add	r2,r19,r2
 400a634:	45400015 	stw	r21,0(r8)
 400a638:	44c00115 	stw	r19,4(r8)
 400a63c:	d8801c15 	stw	r2,112(sp)
 400a640:	d9001b15 	stw	r4,108(sp)
 400a644:	00c001c4 	movi	r3,7
 400a648:	1901dd0e 	bge	r3,r4,400adc0 <___vfiprintf_internal_r+0xd88>
 400a64c:	1002401e 	bne	r2,zero,400af50 <___vfiprintf_internal_r+0xf18>
 400a650:	d8001b15 	stw	zero,108(sp)
 400a654:	a2c0010c 	andi	r11,r20,4
 400a658:	58000226 	beq	r11,zero,400a664 <___vfiprintf_internal_r+0x62c>
 400a65c:	8ca7c83a 	sub	r19,r17,r18
 400a660:	04c2f216 	blt	zero,r19,400b22c <___vfiprintf_internal_r+0x11f4>
 400a664:	8c80010e 	bge	r17,r18,400a66c <___vfiprintf_internal_r+0x634>
 400a668:	9023883a 	mov	r17,r18
 400a66c:	da802317 	ldw	r10,140(sp)
 400a670:	5455883a 	add	r10,r10,r17
 400a674:	da802315 	stw	r10,140(sp)
 400a678:	d8001b15 	stw	zero,108(sp)
 400a67c:	d811883a 	mov	r8,sp
 400a680:	003ea206 	br	400a10c <__alt_data_end+0xfc00a10c>
 400a684:	a5000814 	ori	r20,r20,32
 400a688:	80c00007 	ldb	r3,0(r16)
 400a68c:	003ec906 	br	400a1b4 <__alt_data_end+0xfc00a1b4>
 400a690:	80c00007 	ldb	r3,0(r16)
 400a694:	1b030926 	beq	r3,r12,400b2bc <___vfiprintf_internal_r+0x1284>
 400a698:	a5000414 	ori	r20,r20,16
 400a69c:	003ec506 	br	400a1b4 <__alt_data_end+0xfc00a1b4>
 400a6a0:	21003fcc 	andi	r4,r4,255
 400a6a4:	20035e1e 	bne	r4,zero,400b420 <___vfiprintf_internal_r+0x13e8>
 400a6a8:	a080080c 	andi	r2,r20,32
 400a6ac:	1002a526 	beq	r2,zero,400b144 <___vfiprintf_internal_r+0x110c>
 400a6b0:	da802217 	ldw	r10,136(sp)
 400a6b4:	50800017 	ldw	r2,0(r10)
 400a6b8:	da802317 	ldw	r10,140(sp)
 400a6bc:	5007d7fa 	srai	r3,r10,31
 400a6c0:	da802217 	ldw	r10,136(sp)
 400a6c4:	10c00115 	stw	r3,4(r2)
 400a6c8:	52800104 	addi	r10,r10,4
 400a6cc:	da802215 	stw	r10,136(sp)
 400a6d0:	da802317 	ldw	r10,140(sp)
 400a6d4:	12800015 	stw	r10,0(r2)
 400a6d8:	003e8c06 	br	400a10c <__alt_data_end+0xfc00a10c>
 400a6dc:	21003fcc 	andi	r4,r4,255
 400a6e0:	2003511e 	bne	r4,zero,400b428 <___vfiprintf_internal_r+0x13f0>
 400a6e4:	a080080c 	andi	r2,r20,32
 400a6e8:	1000a126 	beq	r2,zero,400a970 <___vfiprintf_internal_r+0x938>
 400a6ec:	da802217 	ldw	r10,136(sp)
 400a6f0:	d8001d85 	stb	zero,118(sp)
 400a6f4:	50800204 	addi	r2,r10,8
 400a6f8:	54800017 	ldw	r18,0(r10)
 400a6fc:	54c00117 	ldw	r19,4(r10)
 400a700:	4802b416 	blt	r9,zero,400b1d4 <___vfiprintf_internal_r+0x119c>
 400a704:	013fdfc4 	movi	r4,-129
 400a708:	94c6b03a 	or	r3,r18,r19
 400a70c:	d8802215 	stw	r2,136(sp)
 400a710:	a128703a 	and	r20,r20,r4
 400a714:	1800a226 	beq	r3,zero,400a9a0 <___vfiprintf_internal_r+0x968>
 400a718:	0039883a 	mov	fp,zero
 400a71c:	dd401a04 	addi	r21,sp,104
 400a720:	9006d0fa 	srli	r3,r18,3
 400a724:	9808977a 	slli	r4,r19,29
 400a728:	9826d0fa 	srli	r19,r19,3
 400a72c:	948001cc 	andi	r18,r18,7
 400a730:	90800c04 	addi	r2,r18,48
 400a734:	ad7fffc4 	addi	r21,r21,-1
 400a738:	20e4b03a 	or	r18,r4,r3
 400a73c:	a8800005 	stb	r2,0(r21)
 400a740:	94c6b03a 	or	r3,r18,r19
 400a744:	183ff61e 	bne	r3,zero,400a720 <__alt_data_end+0xfc00a720>
 400a748:	a0c0004c 	andi	r3,r20,1
 400a74c:	18005926 	beq	r3,zero,400a8b4 <___vfiprintf_internal_r+0x87c>
 400a750:	10803fcc 	andi	r2,r2,255
 400a754:	1080201c 	xori	r2,r2,128
 400a758:	10bfe004 	addi	r2,r2,-128
 400a75c:	00c00c04 	movi	r3,48
 400a760:	10c05426 	beq	r2,r3,400a8b4 <___vfiprintf_internal_r+0x87c>
 400a764:	da801e17 	ldw	r10,120(sp)
 400a768:	a8bfffc4 	addi	r2,r21,-1
 400a76c:	a8ffffc5 	stb	r3,-1(r21)
 400a770:	50a7c83a 	sub	r19,r10,r2
 400a774:	102b883a 	mov	r21,r2
 400a778:	003f2f06 	br	400a438 <__alt_data_end+0xfc00a438>
 400a77c:	21003fcc 	andi	r4,r4,255
 400a780:	2003421e 	bne	r4,zero,400b48c <___vfiprintf_internal_r+0x1454>
 400a784:	00810074 	movhi	r2,1025
 400a788:	10825604 	addi	r2,r2,2392
 400a78c:	d8802615 	stw	r2,152(sp)
 400a790:	a080080c 	andi	r2,r20,32
 400a794:	1000aa26 	beq	r2,zero,400aa40 <___vfiprintf_internal_r+0xa08>
 400a798:	da802217 	ldw	r10,136(sp)
 400a79c:	54800017 	ldw	r18,0(r10)
 400a7a0:	54c00117 	ldw	r19,4(r10)
 400a7a4:	52800204 	addi	r10,r10,8
 400a7a8:	da802215 	stw	r10,136(sp)
 400a7ac:	a080004c 	andi	r2,r20,1
 400a7b0:	1001d226 	beq	r2,zero,400aefc <___vfiprintf_internal_r+0xec4>
 400a7b4:	94c4b03a 	or	r2,r18,r19
 400a7b8:	1002351e 	bne	r2,zero,400b090 <___vfiprintf_internal_r+0x1058>
 400a7bc:	d8001d85 	stb	zero,118(sp)
 400a7c0:	48022216 	blt	r9,zero,400b04c <___vfiprintf_internal_r+0x1014>
 400a7c4:	00bfdfc4 	movi	r2,-129
 400a7c8:	a0a8703a 	and	r20,r20,r2
 400a7cc:	003f1506 	br	400a424 <__alt_data_end+0xfc00a424>
 400a7d0:	da802217 	ldw	r10,136(sp)
 400a7d4:	04800044 	movi	r18,1
 400a7d8:	d8001d85 	stb	zero,118(sp)
 400a7dc:	50800017 	ldw	r2,0(r10)
 400a7e0:	52800104 	addi	r10,r10,4
 400a7e4:	da802215 	stw	r10,136(sp)
 400a7e8:	d8801005 	stb	r2,64(sp)
 400a7ec:	9027883a 	mov	r19,r18
 400a7f0:	dd401004 	addi	r21,sp,64
 400a7f4:	0013883a 	mov	r9,zero
 400a7f8:	003f1706 	br	400a458 <__alt_data_end+0xfc00a458>
 400a7fc:	21003fcc 	andi	r4,r4,255
 400a800:	2003201e 	bne	r4,zero,400b484 <___vfiprintf_internal_r+0x144c>
 400a804:	a080080c 	andi	r2,r20,32
 400a808:	10004b26 	beq	r2,zero,400a938 <___vfiprintf_internal_r+0x900>
 400a80c:	da802217 	ldw	r10,136(sp)
 400a810:	50800117 	ldw	r2,4(r10)
 400a814:	54800017 	ldw	r18,0(r10)
 400a818:	52800204 	addi	r10,r10,8
 400a81c:	da802215 	stw	r10,136(sp)
 400a820:	1027883a 	mov	r19,r2
 400a824:	10022c16 	blt	r2,zero,400b0d8 <___vfiprintf_internal_r+0x10a0>
 400a828:	df001d83 	ldbu	fp,118(sp)
 400a82c:	48007216 	blt	r9,zero,400a9f8 <___vfiprintf_internal_r+0x9c0>
 400a830:	00ffdfc4 	movi	r3,-129
 400a834:	94c4b03a 	or	r2,r18,r19
 400a838:	a0e8703a 	and	r20,r20,r3
 400a83c:	1000cc26 	beq	r2,zero,400ab70 <___vfiprintf_internal_r+0xb38>
 400a840:	98021026 	beq	r19,zero,400b084 <___vfiprintf_internal_r+0x104c>
 400a844:	dc402415 	stw	r17,144(sp)
 400a848:	dc002515 	stw	r16,148(sp)
 400a84c:	9823883a 	mov	r17,r19
 400a850:	9021883a 	mov	r16,r18
 400a854:	dd401a04 	addi	r21,sp,104
 400a858:	4825883a 	mov	r18,r9
 400a85c:	4027883a 	mov	r19,r8
 400a860:	8009883a 	mov	r4,r16
 400a864:	880b883a 	mov	r5,r17
 400a868:	01800284 	movi	r6,10
 400a86c:	000f883a 	mov	r7,zero
 400a870:	400c4180 	call	400c418 <__umoddi3>
 400a874:	10800c04 	addi	r2,r2,48
 400a878:	ad7fffc4 	addi	r21,r21,-1
 400a87c:	8009883a 	mov	r4,r16
 400a880:	880b883a 	mov	r5,r17
 400a884:	a8800005 	stb	r2,0(r21)
 400a888:	01800284 	movi	r6,10
 400a88c:	000f883a 	mov	r7,zero
 400a890:	400bea00 	call	400bea0 <__udivdi3>
 400a894:	1021883a 	mov	r16,r2
 400a898:	10c4b03a 	or	r2,r2,r3
 400a89c:	1823883a 	mov	r17,r3
 400a8a0:	103fef1e 	bne	r2,zero,400a860 <__alt_data_end+0xfc00a860>
 400a8a4:	dc402417 	ldw	r17,144(sp)
 400a8a8:	dc002517 	ldw	r16,148(sp)
 400a8ac:	9013883a 	mov	r9,r18
 400a8b0:	9811883a 	mov	r8,r19
 400a8b4:	da801e17 	ldw	r10,120(sp)
 400a8b8:	5567c83a 	sub	r19,r10,r21
 400a8bc:	003ede06 	br	400a438 <__alt_data_end+0xfc00a438>
 400a8c0:	38803fcc 	andi	r2,r7,255
 400a8c4:	1080201c 	xori	r2,r2,128
 400a8c8:	10bfe004 	addi	r2,r2,-128
 400a8cc:	1002371e 	bne	r2,zero,400b1ac <___vfiprintf_internal_r+0x1174>
 400a8d0:	01000044 	movi	r4,1
 400a8d4:	01c00804 	movi	r7,32
 400a8d8:	80c00007 	ldb	r3,0(r16)
 400a8dc:	003e3506 	br	400a1b4 <__alt_data_end+0xfc00a1b4>
 400a8e0:	a5000054 	ori	r20,r20,1
 400a8e4:	80c00007 	ldb	r3,0(r16)
 400a8e8:	003e3206 	br	400a1b4 <__alt_data_end+0xfc00a1b4>
 400a8ec:	a5002014 	ori	r20,r20,128
 400a8f0:	80c00007 	ldb	r3,0(r16)
 400a8f4:	003e2f06 	br	400a1b4 <__alt_data_end+0xfc00a1b4>
 400a8f8:	8015883a 	mov	r10,r16
 400a8fc:	0023883a 	mov	r17,zero
 400a900:	18bff404 	addi	r2,r3,-48
 400a904:	50c00007 	ldb	r3,0(r10)
 400a908:	8c4002a4 	muli	r17,r17,10
 400a90c:	84000044 	addi	r16,r16,1
 400a910:	8015883a 	mov	r10,r16
 400a914:	1463883a 	add	r17,r2,r17
 400a918:	18bff404 	addi	r2,r3,-48
 400a91c:	30bff92e 	bgeu	r6,r2,400a904 <__alt_data_end+0xfc00a904>
 400a920:	003e2506 	br	400a1b8 <__alt_data_end+0xfc00a1b8>
 400a924:	21003fcc 	andi	r4,r4,255
 400a928:	2002d41e 	bne	r4,zero,400b47c <___vfiprintf_internal_r+0x1444>
 400a92c:	a5000414 	ori	r20,r20,16
 400a930:	a080080c 	andi	r2,r20,32
 400a934:	103fb51e 	bne	r2,zero,400a80c <__alt_data_end+0xfc00a80c>
 400a938:	a080040c 	andi	r2,r20,16
 400a93c:	1001f826 	beq	r2,zero,400b120 <___vfiprintf_internal_r+0x10e8>
 400a940:	da802217 	ldw	r10,136(sp)
 400a944:	54800017 	ldw	r18,0(r10)
 400a948:	52800104 	addi	r10,r10,4
 400a94c:	da802215 	stw	r10,136(sp)
 400a950:	9027d7fa 	srai	r19,r18,31
 400a954:	9805883a 	mov	r2,r19
 400a958:	003fb206 	br	400a824 <__alt_data_end+0xfc00a824>
 400a95c:	21003fcc 	andi	r4,r4,255
 400a960:	2002c41e 	bne	r4,zero,400b474 <___vfiprintf_internal_r+0x143c>
 400a964:	a5000414 	ori	r20,r20,16
 400a968:	a080080c 	andi	r2,r20,32
 400a96c:	103f5f1e 	bne	r2,zero,400a6ec <__alt_data_end+0xfc00a6ec>
 400a970:	a080040c 	andi	r2,r20,16
 400a974:	10020f26 	beq	r2,zero,400b1b4 <___vfiprintf_internal_r+0x117c>
 400a978:	da802217 	ldw	r10,136(sp)
 400a97c:	d8001d85 	stb	zero,118(sp)
 400a980:	0027883a 	mov	r19,zero
 400a984:	50800104 	addi	r2,r10,4
 400a988:	54800017 	ldw	r18,0(r10)
 400a98c:	48021116 	blt	r9,zero,400b1d4 <___vfiprintf_internal_r+0x119c>
 400a990:	00ffdfc4 	movi	r3,-129
 400a994:	d8802215 	stw	r2,136(sp)
 400a998:	a0e8703a 	and	r20,r20,r3
 400a99c:	903f5e1e 	bne	r18,zero,400a718 <__alt_data_end+0xfc00a718>
 400a9a0:	0039883a 	mov	fp,zero
 400a9a4:	4802a626 	beq	r9,zero,400b440 <___vfiprintf_internal_r+0x1408>
 400a9a8:	0025883a 	mov	r18,zero
 400a9ac:	0027883a 	mov	r19,zero
 400a9b0:	003f5a06 	br	400a71c <__alt_data_end+0xfc00a71c>
 400a9b4:	21003fcc 	andi	r4,r4,255
 400a9b8:	20029f1e 	bne	r4,zero,400b438 <___vfiprintf_internal_r+0x1400>
 400a9bc:	a5000414 	ori	r20,r20,16
 400a9c0:	a080080c 	andi	r2,r20,32
 400a9c4:	10005e1e 	bne	r2,zero,400ab40 <___vfiprintf_internal_r+0xb08>
 400a9c8:	a080040c 	andi	r2,r20,16
 400a9cc:	1001a21e 	bne	r2,zero,400b058 <___vfiprintf_internal_r+0x1020>
 400a9d0:	a080100c 	andi	r2,r20,64
 400a9d4:	d8001d85 	stb	zero,118(sp)
 400a9d8:	da802217 	ldw	r10,136(sp)
 400a9dc:	1002231e 	bne	r2,zero,400b26c <___vfiprintf_internal_r+0x1234>
 400a9e0:	50800104 	addi	r2,r10,4
 400a9e4:	54800017 	ldw	r18,0(r10)
 400a9e8:	0027883a 	mov	r19,zero
 400a9ec:	4801a00e 	bge	r9,zero,400b070 <___vfiprintf_internal_r+0x1038>
 400a9f0:	d8802215 	stw	r2,136(sp)
 400a9f4:	0039883a 	mov	fp,zero
 400a9f8:	94c4b03a 	or	r2,r18,r19
 400a9fc:	103f901e 	bne	r2,zero,400a840 <__alt_data_end+0xfc00a840>
 400aa00:	00800044 	movi	r2,1
 400aa04:	10803fcc 	andi	r2,r2,255
 400aa08:	00c00044 	movi	r3,1
 400aa0c:	10c05926 	beq	r2,r3,400ab74 <___vfiprintf_internal_r+0xb3c>
 400aa10:	00c00084 	movi	r3,2
 400aa14:	10ffe41e 	bne	r2,r3,400a9a8 <__alt_data_end+0xfc00a9a8>
 400aa18:	0025883a 	mov	r18,zero
 400aa1c:	0027883a 	mov	r19,zero
 400aa20:	00013d06 	br	400af18 <___vfiprintf_internal_r+0xee0>
 400aa24:	21003fcc 	andi	r4,r4,255
 400aa28:	2002811e 	bne	r4,zero,400b430 <___vfiprintf_internal_r+0x13f8>
 400aa2c:	00810074 	movhi	r2,1025
 400aa30:	10825104 	addi	r2,r2,2372
 400aa34:	d8802615 	stw	r2,152(sp)
 400aa38:	a080080c 	andi	r2,r20,32
 400aa3c:	103f561e 	bne	r2,zero,400a798 <__alt_data_end+0xfc00a798>
 400aa40:	a080040c 	andi	r2,r20,16
 400aa44:	1001d126 	beq	r2,zero,400b18c <___vfiprintf_internal_r+0x1154>
 400aa48:	da802217 	ldw	r10,136(sp)
 400aa4c:	0027883a 	mov	r19,zero
 400aa50:	54800017 	ldw	r18,0(r10)
 400aa54:	52800104 	addi	r10,r10,4
 400aa58:	da802215 	stw	r10,136(sp)
 400aa5c:	003f5306 	br	400a7ac <__alt_data_end+0xfc00a7ac>
 400aa60:	da802217 	ldw	r10,136(sp)
 400aa64:	d8001d85 	stb	zero,118(sp)
 400aa68:	55400017 	ldw	r21,0(r10)
 400aa6c:	50c00104 	addi	r3,r10,4
 400aa70:	a8024226 	beq	r21,zero,400b37c <___vfiprintf_internal_r+0x1344>
 400aa74:	48021816 	blt	r9,zero,400b2d8 <___vfiprintf_internal_r+0x12a0>
 400aa78:	480d883a 	mov	r6,r9
 400aa7c:	000b883a 	mov	r5,zero
 400aa80:	a809883a 	mov	r4,r21
 400aa84:	d8c02a15 	stw	r3,168(sp)
 400aa88:	da002b15 	stw	r8,172(sp)
 400aa8c:	da402c15 	stw	r9,176(sp)
 400aa90:	40080cc0 	call	40080cc <memchr>
 400aa94:	d8c02a17 	ldw	r3,168(sp)
 400aa98:	da002b17 	ldw	r8,172(sp)
 400aa9c:	da402c17 	ldw	r9,176(sp)
 400aaa0:	10024826 	beq	r2,zero,400b3c4 <___vfiprintf_internal_r+0x138c>
 400aaa4:	1567c83a 	sub	r19,r2,r21
 400aaa8:	df001d83 	ldbu	fp,118(sp)
 400aaac:	d8c02215 	stw	r3,136(sp)
 400aab0:	0013883a 	mov	r9,zero
 400aab4:	003e6006 	br	400a438 <__alt_data_end+0xfc00a438>
 400aab8:	21003fcc 	andi	r4,r4,255
 400aabc:	203fc026 	beq	r4,zero,400a9c0 <__alt_data_end+0xfc00a9c0>
 400aac0:	d9c01d85 	stb	r7,118(sp)
 400aac4:	003fbe06 	br	400a9c0 <__alt_data_end+0xfc00a9c0>
 400aac8:	da802217 	ldw	r10,136(sp)
 400aacc:	54400017 	ldw	r17,0(r10)
 400aad0:	50800104 	addi	r2,r10,4
 400aad4:	883e3b16 	blt	r17,zero,400a3c4 <__alt_data_end+0xfc00a3c4>
 400aad8:	d8802215 	stw	r2,136(sp)
 400aadc:	80c00007 	ldb	r3,0(r16)
 400aae0:	003db406 	br	400a1b4 <__alt_data_end+0xfc00a1b4>
 400aae4:	01000044 	movi	r4,1
 400aae8:	01c00ac4 	movi	r7,43
 400aaec:	80c00007 	ldb	r3,0(r16)
 400aaf0:	003db006 	br	400a1b4 <__alt_data_end+0xfc00a1b4>
 400aaf4:	80c00007 	ldb	r3,0(r16)
 400aaf8:	82800044 	addi	r10,r16,1
 400aafc:	1b423c26 	beq	r3,r13,400b3f0 <___vfiprintf_internal_r+0x13b8>
 400ab00:	18bff404 	addi	r2,r3,-48
 400ab04:	0013883a 	mov	r9,zero
 400ab08:	30822b36 	bltu	r6,r2,400b3b8 <___vfiprintf_internal_r+0x1380>
 400ab0c:	50c00007 	ldb	r3,0(r10)
 400ab10:	4a4002a4 	muli	r9,r9,10
 400ab14:	54000044 	addi	r16,r10,1
 400ab18:	8015883a 	mov	r10,r16
 400ab1c:	4893883a 	add	r9,r9,r2
 400ab20:	18bff404 	addi	r2,r3,-48
 400ab24:	30bff92e 	bgeu	r6,r2,400ab0c <__alt_data_end+0xfc00ab0c>
 400ab28:	483da30e 	bge	r9,zero,400a1b8 <__alt_data_end+0xfc00a1b8>
 400ab2c:	027fffc4 	movi	r9,-1
 400ab30:	003da106 	br	400a1b8 <__alt_data_end+0xfc00a1b8>
 400ab34:	a5001014 	ori	r20,r20,64
 400ab38:	80c00007 	ldb	r3,0(r16)
 400ab3c:	003d9d06 	br	400a1b4 <__alt_data_end+0xfc00a1b4>
 400ab40:	da802217 	ldw	r10,136(sp)
 400ab44:	d8001d85 	stb	zero,118(sp)
 400ab48:	50c00204 	addi	r3,r10,8
 400ab4c:	54800017 	ldw	r18,0(r10)
 400ab50:	54c00117 	ldw	r19,4(r10)
 400ab54:	4801ca16 	blt	r9,zero,400b280 <___vfiprintf_internal_r+0x1248>
 400ab58:	013fdfc4 	movi	r4,-129
 400ab5c:	94c4b03a 	or	r2,r18,r19
 400ab60:	d8c02215 	stw	r3,136(sp)
 400ab64:	a128703a 	and	r20,r20,r4
 400ab68:	0039883a 	mov	fp,zero
 400ab6c:	103f341e 	bne	r2,zero,400a840 <__alt_data_end+0xfc00a840>
 400ab70:	483e2e26 	beq	r9,zero,400a42c <__alt_data_end+0xfc00a42c>
 400ab74:	0025883a 	mov	r18,zero
 400ab78:	94800c04 	addi	r18,r18,48
 400ab7c:	dc8019c5 	stb	r18,103(sp)
 400ab80:	dcc02717 	ldw	r19,156(sp)
 400ab84:	dd4019c4 	addi	r21,sp,103
 400ab88:	003e2b06 	br	400a438 <__alt_data_end+0xfc00a438>
 400ab8c:	21003fcc 	andi	r4,r4,255
 400ab90:	2002361e 	bne	r4,zero,400b46c <___vfiprintf_internal_r+0x1434>
 400ab94:	1801c126 	beq	r3,zero,400b29c <___vfiprintf_internal_r+0x1264>
 400ab98:	04800044 	movi	r18,1
 400ab9c:	d8c01005 	stb	r3,64(sp)
 400aba0:	d8001d85 	stb	zero,118(sp)
 400aba4:	9027883a 	mov	r19,r18
 400aba8:	dd401004 	addi	r21,sp,64
 400abac:	003f1106 	br	400a7f4 <__alt_data_end+0xfc00a7f4>
 400abb0:	d9402117 	ldw	r5,132(sp)
 400abb4:	d9002017 	ldw	r4,128(sp)
 400abb8:	d9801a04 	addi	r6,sp,104
 400abbc:	d9c02b15 	stw	r7,172(sp)
 400abc0:	dbc02a15 	stw	r15,168(sp)
 400abc4:	4009f240 	call	4009f24 <__sprint_r.part.0>
 400abc8:	d9c02b17 	ldw	r7,172(sp)
 400abcc:	dbc02a17 	ldw	r15,168(sp)
 400abd0:	10006d1e 	bne	r2,zero,400ad88 <___vfiprintf_internal_r+0xd50>
 400abd4:	d9801b17 	ldw	r6,108(sp)
 400abd8:	d8801c17 	ldw	r2,112(sp)
 400abdc:	d811883a 	mov	r8,sp
 400abe0:	31400044 	addi	r5,r6,1
 400abe4:	003e3306 	br	400a4b4 <__alt_data_end+0xfc00a4b4>
 400abe8:	d9401b17 	ldw	r5,108(sp)
 400abec:	d8801c17 	ldw	r2,112(sp)
 400abf0:	29000044 	addi	r4,r5,1
 400abf4:	d8c01d87 	ldb	r3,118(sp)
 400abf8:	183e4d26 	beq	r3,zero,400a530 <__alt_data_end+0xfc00a530>
 400abfc:	00c00044 	movi	r3,1
 400ac00:	d9401d84 	addi	r5,sp,118
 400ac04:	10c5883a 	add	r2,r2,r3
 400ac08:	41400015 	stw	r5,0(r8)
 400ac0c:	40c00115 	stw	r3,4(r8)
 400ac10:	d8801c15 	stw	r2,112(sp)
 400ac14:	d9001b15 	stw	r4,108(sp)
 400ac18:	014001c4 	movi	r5,7
 400ac1c:	2900a90e 	bge	r5,r4,400aec4 <___vfiprintf_internal_r+0xe8c>
 400ac20:	1000da1e 	bne	r2,zero,400af8c <___vfiprintf_internal_r+0xf54>
 400ac24:	7000ab1e 	bne	r14,zero,400aed4 <___vfiprintf_internal_r+0xe9c>
 400ac28:	000b883a 	mov	r5,zero
 400ac2c:	1809883a 	mov	r4,r3
 400ac30:	d811883a 	mov	r8,sp
 400ac34:	00c02004 	movi	r3,128
 400ac38:	e0fe4d26 	beq	fp,r3,400a570 <__alt_data_end+0xfc00a570>
 400ac3c:	4cf9c83a 	sub	fp,r9,r19
 400ac40:	073e7b0e 	bge	zero,fp,400a630 <__alt_data_end+0xfc00a630>
 400ac44:	01c00404 	movi	r7,16
 400ac48:	3f01900e 	bge	r7,fp,400b28c <___vfiprintf_internal_r+0x1254>
 400ac4c:	00c10074 	movhi	r3,1025
 400ac50:	18c2b704 	addi	r3,r3,2780
 400ac54:	d8c02415 	stw	r3,144(sp)
 400ac58:	034001c4 	movi	r13,7
 400ac5c:	00000506 	br	400ac74 <___vfiprintf_internal_r+0xc3c>
 400ac60:	29000084 	addi	r4,r5,2
 400ac64:	42000204 	addi	r8,r8,8
 400ac68:	180b883a 	mov	r5,r3
 400ac6c:	e73ffc04 	addi	fp,fp,-16
 400ac70:	3f000d0e 	bge	r7,fp,400aca8 <___vfiprintf_internal_r+0xc70>
 400ac74:	10800404 	addi	r2,r2,16
 400ac78:	28c00044 	addi	r3,r5,1
 400ac7c:	45c00015 	stw	r23,0(r8)
 400ac80:	41c00115 	stw	r7,4(r8)
 400ac84:	d8801c15 	stw	r2,112(sp)
 400ac88:	d8c01b15 	stw	r3,108(sp)
 400ac8c:	68fff40e 	bge	r13,r3,400ac60 <__alt_data_end+0xfc00ac60>
 400ac90:	1000101e 	bne	r2,zero,400acd4 <___vfiprintf_internal_r+0xc9c>
 400ac94:	e73ffc04 	addi	fp,fp,-16
 400ac98:	01000044 	movi	r4,1
 400ac9c:	000b883a 	mov	r5,zero
 400aca0:	d811883a 	mov	r8,sp
 400aca4:	3f3ff316 	blt	r7,fp,400ac74 <__alt_data_end+0xfc00ac74>
 400aca8:	da802417 	ldw	r10,144(sp)
 400acac:	1705883a 	add	r2,r2,fp
 400acb0:	47000115 	stw	fp,4(r8)
 400acb4:	42800015 	stw	r10,0(r8)
 400acb8:	d8801c15 	stw	r2,112(sp)
 400acbc:	d9001b15 	stw	r4,108(sp)
 400acc0:	00c001c4 	movi	r3,7
 400acc4:	19003616 	blt	r3,r4,400ada0 <___vfiprintf_internal_r+0xd68>
 400acc8:	42000204 	addi	r8,r8,8
 400accc:	21000044 	addi	r4,r4,1
 400acd0:	003e5706 	br	400a630 <__alt_data_end+0xfc00a630>
 400acd4:	d9402117 	ldw	r5,132(sp)
 400acd8:	d9002017 	ldw	r4,128(sp)
 400acdc:	d9801a04 	addi	r6,sp,104
 400ace0:	d9c02b15 	stw	r7,172(sp)
 400ace4:	db402a15 	stw	r13,168(sp)
 400ace8:	4009f240 	call	4009f24 <__sprint_r.part.0>
 400acec:	d9c02b17 	ldw	r7,172(sp)
 400acf0:	db402a17 	ldw	r13,168(sp)
 400acf4:	1000241e 	bne	r2,zero,400ad88 <___vfiprintf_internal_r+0xd50>
 400acf8:	d9401b17 	ldw	r5,108(sp)
 400acfc:	d8801c17 	ldw	r2,112(sp)
 400ad00:	d811883a 	mov	r8,sp
 400ad04:	29000044 	addi	r4,r5,1
 400ad08:	003fd806 	br	400ac6c <__alt_data_end+0xfc00ac6c>
 400ad0c:	d9401b17 	ldw	r5,108(sp)
 400ad10:	00c10074 	movhi	r3,1025
 400ad14:	18c2bb04 	addi	r3,r3,2796
 400ad18:	d8c02415 	stw	r3,144(sp)
 400ad1c:	29400044 	addi	r5,r5,1
 400ad20:	d8c02417 	ldw	r3,144(sp)
 400ad24:	14c5883a 	add	r2,r2,r19
 400ad28:	44c00115 	stw	r19,4(r8)
 400ad2c:	40c00015 	stw	r3,0(r8)
 400ad30:	d8801c15 	stw	r2,112(sp)
 400ad34:	d9401b15 	stw	r5,108(sp)
 400ad38:	00c001c4 	movi	r3,7
 400ad3c:	1940070e 	bge	r3,r5,400ad5c <___vfiprintf_internal_r+0xd24>
 400ad40:	103e4826 	beq	r2,zero,400a664 <__alt_data_end+0xfc00a664>
 400ad44:	d9402117 	ldw	r5,132(sp)
 400ad48:	d9002017 	ldw	r4,128(sp)
 400ad4c:	d9801a04 	addi	r6,sp,104
 400ad50:	4009f240 	call	4009f24 <__sprint_r.part.0>
 400ad54:	10000c1e 	bne	r2,zero,400ad88 <___vfiprintf_internal_r+0xd50>
 400ad58:	d8801c17 	ldw	r2,112(sp)
 400ad5c:	8c80010e 	bge	r17,r18,400ad64 <___vfiprintf_internal_r+0xd2c>
 400ad60:	9023883a 	mov	r17,r18
 400ad64:	da802317 	ldw	r10,140(sp)
 400ad68:	5455883a 	add	r10,r10,r17
 400ad6c:	da802315 	stw	r10,140(sp)
 400ad70:	103e4126 	beq	r2,zero,400a678 <__alt_data_end+0xfc00a678>
 400ad74:	d9402117 	ldw	r5,132(sp)
 400ad78:	d9002017 	ldw	r4,128(sp)
 400ad7c:	d9801a04 	addi	r6,sp,104
 400ad80:	4009f240 	call	4009f24 <__sprint_r.part.0>
 400ad84:	103e3c26 	beq	r2,zero,400a678 <__alt_data_end+0xfc00a678>
 400ad88:	dd002117 	ldw	r20,132(sp)
 400ad8c:	a080030b 	ldhu	r2,12(r20)
 400ad90:	1080100c 	andi	r2,r2,64
 400ad94:	1001231e 	bne	r2,zero,400b224 <___vfiprintf_internal_r+0x11ec>
 400ad98:	d8802317 	ldw	r2,140(sp)
 400ad9c:	003d7b06 	br	400a38c <__alt_data_end+0xfc00a38c>
 400ada0:	1000991e 	bne	r2,zero,400b008 <___vfiprintf_internal_r+0xfd0>
 400ada4:	00c00044 	movi	r3,1
 400ada8:	9805883a 	mov	r2,r19
 400adac:	dd400015 	stw	r21,0(sp)
 400adb0:	dcc00115 	stw	r19,4(sp)
 400adb4:	dcc01c15 	stw	r19,112(sp)
 400adb8:	d8c01b15 	stw	r3,108(sp)
 400adbc:	d811883a 	mov	r8,sp
 400adc0:	42000204 	addi	r8,r8,8
 400adc4:	a2c0010c 	andi	r11,r20,4
 400adc8:	583fe426 	beq	r11,zero,400ad5c <__alt_data_end+0xfc00ad5c>
 400adcc:	8ca7c83a 	sub	r19,r17,r18
 400add0:	04ffe20e 	bge	zero,r19,400ad5c <__alt_data_end+0xfc00ad5c>
 400add4:	01c00404 	movi	r7,16
 400add8:	3cffcc0e 	bge	r7,r19,400ad0c <__alt_data_end+0xfc00ad0c>
 400addc:	02810074 	movhi	r10,1025
 400ade0:	5282bb04 	addi	r10,r10,2796
 400ade4:	d9001b17 	ldw	r4,108(sp)
 400ade8:	da802415 	stw	r10,144(sp)
 400adec:	382b883a 	mov	r21,r7
 400adf0:	050001c4 	movi	r20,7
 400adf4:	df002017 	ldw	fp,128(sp)
 400adf8:	00000506 	br	400ae10 <___vfiprintf_internal_r+0xdd8>
 400adfc:	21400084 	addi	r5,r4,2
 400ae00:	42000204 	addi	r8,r8,8
 400ae04:	1809883a 	mov	r4,r3
 400ae08:	9cfffc04 	addi	r19,r19,-16
 400ae0c:	acffc40e 	bge	r21,r19,400ad20 <__alt_data_end+0xfc00ad20>
 400ae10:	10800404 	addi	r2,r2,16
 400ae14:	20c00044 	addi	r3,r4,1
 400ae18:	45800015 	stw	r22,0(r8)
 400ae1c:	45400115 	stw	r21,4(r8)
 400ae20:	d8801c15 	stw	r2,112(sp)
 400ae24:	d8c01b15 	stw	r3,108(sp)
 400ae28:	a0fff40e 	bge	r20,r3,400adfc <__alt_data_end+0xfc00adfc>
 400ae2c:	1000041e 	bne	r2,zero,400ae40 <___vfiprintf_internal_r+0xe08>
 400ae30:	01400044 	movi	r5,1
 400ae34:	0009883a 	mov	r4,zero
 400ae38:	d811883a 	mov	r8,sp
 400ae3c:	003ff206 	br	400ae08 <__alt_data_end+0xfc00ae08>
 400ae40:	d9402117 	ldw	r5,132(sp)
 400ae44:	d9801a04 	addi	r6,sp,104
 400ae48:	e009883a 	mov	r4,fp
 400ae4c:	4009f240 	call	4009f24 <__sprint_r.part.0>
 400ae50:	103fcd1e 	bne	r2,zero,400ad88 <__alt_data_end+0xfc00ad88>
 400ae54:	d9001b17 	ldw	r4,108(sp)
 400ae58:	d8801c17 	ldw	r2,112(sp)
 400ae5c:	d811883a 	mov	r8,sp
 400ae60:	21400044 	addi	r5,r4,1
 400ae64:	003fe806 	br	400ae08 <__alt_data_end+0xfc00ae08>
 400ae68:	d9402117 	ldw	r5,132(sp)
 400ae6c:	d9002017 	ldw	r4,128(sp)
 400ae70:	d9801a04 	addi	r6,sp,104
 400ae74:	d9c02b15 	stw	r7,172(sp)
 400ae78:	db402a15 	stw	r13,168(sp)
 400ae7c:	4009f240 	call	4009f24 <__sprint_r.part.0>
 400ae80:	d9c02b17 	ldw	r7,172(sp)
 400ae84:	db402a17 	ldw	r13,168(sp)
 400ae88:	103fbf1e 	bne	r2,zero,400ad88 <__alt_data_end+0xfc00ad88>
 400ae8c:	d9401b17 	ldw	r5,108(sp)
 400ae90:	d8801c17 	ldw	r2,112(sp)
 400ae94:	d811883a 	mov	r8,sp
 400ae98:	29800044 	addi	r6,r5,1
 400ae9c:	003dc406 	br	400a5b0 <__alt_data_end+0xfc00a5b0>
 400aea0:	1000d21e 	bne	r2,zero,400b1ec <___vfiprintf_internal_r+0x11b4>
 400aea4:	d8c01d87 	ldb	r3,118(sp)
 400aea8:	18009526 	beq	r3,zero,400b100 <___vfiprintf_internal_r+0x10c8>
 400aeac:	00800044 	movi	r2,1
 400aeb0:	d8c01d84 	addi	r3,sp,118
 400aeb4:	1009883a 	mov	r4,r2
 400aeb8:	d8c00015 	stw	r3,0(sp)
 400aebc:	d8800115 	stw	r2,4(sp)
 400aec0:	d811883a 	mov	r8,sp
 400aec4:	200b883a 	mov	r5,r4
 400aec8:	42000204 	addi	r8,r8,8
 400aecc:	21000044 	addi	r4,r4,1
 400aed0:	003d9706 	br	400a530 <__alt_data_end+0xfc00a530>
 400aed4:	d9001d04 	addi	r4,sp,116
 400aed8:	00800084 	movi	r2,2
 400aedc:	d9000015 	stw	r4,0(sp)
 400aee0:	d8800115 	stw	r2,4(sp)
 400aee4:	1809883a 	mov	r4,r3
 400aee8:	d811883a 	mov	r8,sp
 400aeec:	200b883a 	mov	r5,r4
 400aef0:	42000204 	addi	r8,r8,8
 400aef4:	21000044 	addi	r4,r4,1
 400aef8:	003f4e06 	br	400ac34 <__alt_data_end+0xfc00ac34>
 400aefc:	d8001d85 	stb	zero,118(sp)
 400af00:	48005016 	blt	r9,zero,400b044 <___vfiprintf_internal_r+0x100c>
 400af04:	00ffdfc4 	movi	r3,-129
 400af08:	94c4b03a 	or	r2,r18,r19
 400af0c:	a0e8703a 	and	r20,r20,r3
 400af10:	103d4426 	beq	r2,zero,400a424 <__alt_data_end+0xfc00a424>
 400af14:	0039883a 	mov	fp,zero
 400af18:	d9002617 	ldw	r4,152(sp)
 400af1c:	dd401a04 	addi	r21,sp,104
 400af20:	908003cc 	andi	r2,r18,15
 400af24:	9806973a 	slli	r3,r19,28
 400af28:	2085883a 	add	r2,r4,r2
 400af2c:	9024d13a 	srli	r18,r18,4
 400af30:	10800003 	ldbu	r2,0(r2)
 400af34:	9826d13a 	srli	r19,r19,4
 400af38:	ad7fffc4 	addi	r21,r21,-1
 400af3c:	1ca4b03a 	or	r18,r3,r18
 400af40:	a8800005 	stb	r2,0(r21)
 400af44:	94c4b03a 	or	r2,r18,r19
 400af48:	103ff51e 	bne	r2,zero,400af20 <__alt_data_end+0xfc00af20>
 400af4c:	003e5906 	br	400a8b4 <__alt_data_end+0xfc00a8b4>
 400af50:	d9402117 	ldw	r5,132(sp)
 400af54:	d9002017 	ldw	r4,128(sp)
 400af58:	d9801a04 	addi	r6,sp,104
 400af5c:	4009f240 	call	4009f24 <__sprint_r.part.0>
 400af60:	103f891e 	bne	r2,zero,400ad88 <__alt_data_end+0xfc00ad88>
 400af64:	d8801c17 	ldw	r2,112(sp)
 400af68:	d811883a 	mov	r8,sp
 400af6c:	003f9506 	br	400adc4 <__alt_data_end+0xfc00adc4>
 400af70:	d9402117 	ldw	r5,132(sp)
 400af74:	d9002017 	ldw	r4,128(sp)
 400af78:	d9801a04 	addi	r6,sp,104
 400af7c:	4009f240 	call	4009f24 <__sprint_r.part.0>
 400af80:	103f811e 	bne	r2,zero,400ad88 <__alt_data_end+0xfc00ad88>
 400af84:	d811883a 	mov	r8,sp
 400af88:	003ced06 	br	400a340 <__alt_data_end+0xfc00a340>
 400af8c:	d9402117 	ldw	r5,132(sp)
 400af90:	d9002017 	ldw	r4,128(sp)
 400af94:	d9801a04 	addi	r6,sp,104
 400af98:	da402c15 	stw	r9,176(sp)
 400af9c:	db802a15 	stw	r14,168(sp)
 400afa0:	4009f240 	call	4009f24 <__sprint_r.part.0>
 400afa4:	da402c17 	ldw	r9,176(sp)
 400afa8:	db802a17 	ldw	r14,168(sp)
 400afac:	103f761e 	bne	r2,zero,400ad88 <__alt_data_end+0xfc00ad88>
 400afb0:	d9401b17 	ldw	r5,108(sp)
 400afb4:	d8801c17 	ldw	r2,112(sp)
 400afb8:	d811883a 	mov	r8,sp
 400afbc:	29000044 	addi	r4,r5,1
 400afc0:	003d5b06 	br	400a530 <__alt_data_end+0xfc00a530>
 400afc4:	d9402117 	ldw	r5,132(sp)
 400afc8:	d9002017 	ldw	r4,128(sp)
 400afcc:	d9801a04 	addi	r6,sp,104
 400afd0:	da402c15 	stw	r9,176(sp)
 400afd4:	4009f240 	call	4009f24 <__sprint_r.part.0>
 400afd8:	da402c17 	ldw	r9,176(sp)
 400afdc:	103f6a1e 	bne	r2,zero,400ad88 <__alt_data_end+0xfc00ad88>
 400afe0:	d9401b17 	ldw	r5,108(sp)
 400afe4:	d8801c17 	ldw	r2,112(sp)
 400afe8:	d811883a 	mov	r8,sp
 400afec:	29000044 	addi	r4,r5,1
 400aff0:	003f1006 	br	400ac34 <__alt_data_end+0xfc00ac34>
 400aff4:	1000c31e 	bne	r2,zero,400b304 <___vfiprintf_internal_r+0x12cc>
 400aff8:	01000044 	movi	r4,1
 400affc:	000b883a 	mov	r5,zero
 400b000:	d811883a 	mov	r8,sp
 400b004:	003f0d06 	br	400ac3c <__alt_data_end+0xfc00ac3c>
 400b008:	d9402117 	ldw	r5,132(sp)
 400b00c:	d9002017 	ldw	r4,128(sp)
 400b010:	d9801a04 	addi	r6,sp,104
 400b014:	4009f240 	call	4009f24 <__sprint_r.part.0>
 400b018:	103f5b1e 	bne	r2,zero,400ad88 <__alt_data_end+0xfc00ad88>
 400b01c:	d9001b17 	ldw	r4,108(sp)
 400b020:	d8801c17 	ldw	r2,112(sp)
 400b024:	d811883a 	mov	r8,sp
 400b028:	21000044 	addi	r4,r4,1
 400b02c:	003d8006 	br	400a630 <__alt_data_end+0xfc00a630>
 400b030:	01010074 	movhi	r4,1025
 400b034:	21025604 	addi	r4,r4,2392
 400b038:	d9002615 	stw	r4,152(sp)
 400b03c:	d8c02215 	stw	r3,136(sp)
 400b040:	1029883a 	mov	r20,r2
 400b044:	94c4b03a 	or	r2,r18,r19
 400b048:	103fb21e 	bne	r2,zero,400af14 <__alt_data_end+0xfc00af14>
 400b04c:	0039883a 	mov	fp,zero
 400b050:	00800084 	movi	r2,2
 400b054:	003e6b06 	br	400aa04 <__alt_data_end+0xfc00aa04>
 400b058:	da802217 	ldw	r10,136(sp)
 400b05c:	d8001d85 	stb	zero,118(sp)
 400b060:	0027883a 	mov	r19,zero
 400b064:	50800104 	addi	r2,r10,4
 400b068:	54800017 	ldw	r18,0(r10)
 400b06c:	483e6016 	blt	r9,zero,400a9f0 <__alt_data_end+0xfc00a9f0>
 400b070:	00ffdfc4 	movi	r3,-129
 400b074:	d8802215 	stw	r2,136(sp)
 400b078:	a0e8703a 	and	r20,r20,r3
 400b07c:	0039883a 	mov	fp,zero
 400b080:	903ebb26 	beq	r18,zero,400ab70 <__alt_data_end+0xfc00ab70>
 400b084:	00800244 	movi	r2,9
 400b088:	14bdee36 	bltu	r2,r18,400a844 <__alt_data_end+0xfc00a844>
 400b08c:	003eba06 	br	400ab78 <__alt_data_end+0xfc00ab78>
 400b090:	00800c04 	movi	r2,48
 400b094:	d8c01d45 	stb	r3,117(sp)
 400b098:	d8801d05 	stb	r2,116(sp)
 400b09c:	d8001d85 	stb	zero,118(sp)
 400b0a0:	a0c00094 	ori	r3,r20,2
 400b0a4:	4800a916 	blt	r9,zero,400b34c <___vfiprintf_internal_r+0x1314>
 400b0a8:	00bfdfc4 	movi	r2,-129
 400b0ac:	a096703a 	and	r11,r20,r2
 400b0b0:	5d000094 	ori	r20,r11,2
 400b0b4:	0039883a 	mov	fp,zero
 400b0b8:	003f9706 	br	400af18 <__alt_data_end+0xfc00af18>
 400b0bc:	8025883a 	mov	r18,r16
 400b0c0:	003c2e06 	br	400a17c <__alt_data_end+0xfc00a17c>
 400b0c4:	00810074 	movhi	r2,1025
 400b0c8:	10825604 	addi	r2,r2,2392
 400b0cc:	0039883a 	mov	fp,zero
 400b0d0:	d8802615 	stw	r2,152(sp)
 400b0d4:	003f9006 	br	400af18 <__alt_data_end+0xfc00af18>
 400b0d8:	04a5c83a 	sub	r18,zero,r18
 400b0dc:	07000b44 	movi	fp,45
 400b0e0:	9004c03a 	cmpne	r2,r18,zero
 400b0e4:	04e7c83a 	sub	r19,zero,r19
 400b0e8:	df001d85 	stb	fp,118(sp)
 400b0ec:	98a7c83a 	sub	r19,r19,r2
 400b0f0:	48009f16 	blt	r9,zero,400b370 <___vfiprintf_internal_r+0x1338>
 400b0f4:	00bfdfc4 	movi	r2,-129
 400b0f8:	a0a8703a 	and	r20,r20,r2
 400b0fc:	003dd006 	br	400a840 <__alt_data_end+0xfc00a840>
 400b100:	70004c26 	beq	r14,zero,400b234 <___vfiprintf_internal_r+0x11fc>
 400b104:	00800084 	movi	r2,2
 400b108:	d8c01d04 	addi	r3,sp,116
 400b10c:	d8c00015 	stw	r3,0(sp)
 400b110:	d8800115 	stw	r2,4(sp)
 400b114:	01000044 	movi	r4,1
 400b118:	d811883a 	mov	r8,sp
 400b11c:	003f7306 	br	400aeec <__alt_data_end+0xfc00aeec>
 400b120:	a080100c 	andi	r2,r20,64
 400b124:	da802217 	ldw	r10,136(sp)
 400b128:	103e0626 	beq	r2,zero,400a944 <__alt_data_end+0xfc00a944>
 400b12c:	5480000f 	ldh	r18,0(r10)
 400b130:	52800104 	addi	r10,r10,4
 400b134:	da802215 	stw	r10,136(sp)
 400b138:	9027d7fa 	srai	r19,r18,31
 400b13c:	9805883a 	mov	r2,r19
 400b140:	003db806 	br	400a824 <__alt_data_end+0xfc00a824>
 400b144:	a080040c 	andi	r2,r20,16
 400b148:	1000091e 	bne	r2,zero,400b170 <___vfiprintf_internal_r+0x1138>
 400b14c:	a2c0100c 	andi	r11,r20,64
 400b150:	58000726 	beq	r11,zero,400b170 <___vfiprintf_internal_r+0x1138>
 400b154:	da802217 	ldw	r10,136(sp)
 400b158:	50800017 	ldw	r2,0(r10)
 400b15c:	52800104 	addi	r10,r10,4
 400b160:	da802215 	stw	r10,136(sp)
 400b164:	da802317 	ldw	r10,140(sp)
 400b168:	1280000d 	sth	r10,0(r2)
 400b16c:	003be706 	br	400a10c <__alt_data_end+0xfc00a10c>
 400b170:	da802217 	ldw	r10,136(sp)
 400b174:	50800017 	ldw	r2,0(r10)
 400b178:	52800104 	addi	r10,r10,4
 400b17c:	da802215 	stw	r10,136(sp)
 400b180:	da802317 	ldw	r10,140(sp)
 400b184:	12800015 	stw	r10,0(r2)
 400b188:	003be006 	br	400a10c <__alt_data_end+0xfc00a10c>
 400b18c:	a080100c 	andi	r2,r20,64
 400b190:	da802217 	ldw	r10,136(sp)
 400b194:	10003026 	beq	r2,zero,400b258 <___vfiprintf_internal_r+0x1220>
 400b198:	5480000b 	ldhu	r18,0(r10)
 400b19c:	52800104 	addi	r10,r10,4
 400b1a0:	0027883a 	mov	r19,zero
 400b1a4:	da802215 	stw	r10,136(sp)
 400b1a8:	003d8006 	br	400a7ac <__alt_data_end+0xfc00a7ac>
 400b1ac:	80c00007 	ldb	r3,0(r16)
 400b1b0:	003c0006 	br	400a1b4 <__alt_data_end+0xfc00a1b4>
 400b1b4:	a080100c 	andi	r2,r20,64
 400b1b8:	d8001d85 	stb	zero,118(sp)
 400b1bc:	da802217 	ldw	r10,136(sp)
 400b1c0:	1000201e 	bne	r2,zero,400b244 <___vfiprintf_internal_r+0x120c>
 400b1c4:	50800104 	addi	r2,r10,4
 400b1c8:	54800017 	ldw	r18,0(r10)
 400b1cc:	0027883a 	mov	r19,zero
 400b1d0:	483def0e 	bge	r9,zero,400a990 <__alt_data_end+0xfc00a990>
 400b1d4:	94c6b03a 	or	r3,r18,r19
 400b1d8:	d8802215 	stw	r2,136(sp)
 400b1dc:	183d4e1e 	bne	r3,zero,400a718 <__alt_data_end+0xfc00a718>
 400b1e0:	0039883a 	mov	fp,zero
 400b1e4:	0005883a 	mov	r2,zero
 400b1e8:	003e0606 	br	400aa04 <__alt_data_end+0xfc00aa04>
 400b1ec:	d9402117 	ldw	r5,132(sp)
 400b1f0:	d9002017 	ldw	r4,128(sp)
 400b1f4:	d9801a04 	addi	r6,sp,104
 400b1f8:	da402c15 	stw	r9,176(sp)
 400b1fc:	db802a15 	stw	r14,168(sp)
 400b200:	4009f240 	call	4009f24 <__sprint_r.part.0>
 400b204:	da402c17 	ldw	r9,176(sp)
 400b208:	db802a17 	ldw	r14,168(sp)
 400b20c:	103ede1e 	bne	r2,zero,400ad88 <__alt_data_end+0xfc00ad88>
 400b210:	d9401b17 	ldw	r5,108(sp)
 400b214:	d8801c17 	ldw	r2,112(sp)
 400b218:	d811883a 	mov	r8,sp
 400b21c:	29000044 	addi	r4,r5,1
 400b220:	003e7406 	br	400abf4 <__alt_data_end+0xfc00abf4>
 400b224:	00bfffc4 	movi	r2,-1
 400b228:	003c5806 	br	400a38c <__alt_data_end+0xfc00a38c>
 400b22c:	d811883a 	mov	r8,sp
 400b230:	003ee806 	br	400add4 <__alt_data_end+0xfc00add4>
 400b234:	000b883a 	mov	r5,zero
 400b238:	01000044 	movi	r4,1
 400b23c:	d811883a 	mov	r8,sp
 400b240:	003e7c06 	br	400ac34 <__alt_data_end+0xfc00ac34>
 400b244:	50800104 	addi	r2,r10,4
 400b248:	5480000b 	ldhu	r18,0(r10)
 400b24c:	0027883a 	mov	r19,zero
 400b250:	483dcf0e 	bge	r9,zero,400a990 <__alt_data_end+0xfc00a990>
 400b254:	003fdf06 	br	400b1d4 <__alt_data_end+0xfc00b1d4>
 400b258:	54800017 	ldw	r18,0(r10)
 400b25c:	52800104 	addi	r10,r10,4
 400b260:	0027883a 	mov	r19,zero
 400b264:	da802215 	stw	r10,136(sp)
 400b268:	003d5006 	br	400a7ac <__alt_data_end+0xfc00a7ac>
 400b26c:	50800104 	addi	r2,r10,4
 400b270:	5480000b 	ldhu	r18,0(r10)
 400b274:	0027883a 	mov	r19,zero
 400b278:	483f7d0e 	bge	r9,zero,400b070 <__alt_data_end+0xfc00b070>
 400b27c:	003ddc06 	br	400a9f0 <__alt_data_end+0xfc00a9f0>
 400b280:	d8c02215 	stw	r3,136(sp)
 400b284:	0039883a 	mov	fp,zero
 400b288:	003ddb06 	br	400a9f8 <__alt_data_end+0xfc00a9f8>
 400b28c:	02810074 	movhi	r10,1025
 400b290:	5282b704 	addi	r10,r10,2780
 400b294:	da802415 	stw	r10,144(sp)
 400b298:	003e8306 	br	400aca8 <__alt_data_end+0xfc00aca8>
 400b29c:	d8801c17 	ldw	r2,112(sp)
 400b2a0:	dd002117 	ldw	r20,132(sp)
 400b2a4:	103eb926 	beq	r2,zero,400ad8c <__alt_data_end+0xfc00ad8c>
 400b2a8:	d9002017 	ldw	r4,128(sp)
 400b2ac:	d9801a04 	addi	r6,sp,104
 400b2b0:	a00b883a 	mov	r5,r20
 400b2b4:	4009f240 	call	4009f24 <__sprint_r.part.0>
 400b2b8:	003eb406 	br	400ad8c <__alt_data_end+0xfc00ad8c>
 400b2bc:	80c00043 	ldbu	r3,1(r16)
 400b2c0:	a5000814 	ori	r20,r20,32
 400b2c4:	84000044 	addi	r16,r16,1
 400b2c8:	18c03fcc 	andi	r3,r3,255
 400b2cc:	18c0201c 	xori	r3,r3,128
 400b2d0:	18ffe004 	addi	r3,r3,-128
 400b2d4:	003bb706 	br	400a1b4 <__alt_data_end+0xfc00a1b4>
 400b2d8:	a809883a 	mov	r4,r21
 400b2dc:	d8c02a15 	stw	r3,168(sp)
 400b2e0:	da002b15 	stw	r8,172(sp)
 400b2e4:	40028240 	call	4002824 <strlen>
 400b2e8:	d8c02a17 	ldw	r3,168(sp)
 400b2ec:	1027883a 	mov	r19,r2
 400b2f0:	df001d83 	ldbu	fp,118(sp)
 400b2f4:	d8c02215 	stw	r3,136(sp)
 400b2f8:	0013883a 	mov	r9,zero
 400b2fc:	da002b17 	ldw	r8,172(sp)
 400b300:	003c4d06 	br	400a438 <__alt_data_end+0xfc00a438>
 400b304:	d9402117 	ldw	r5,132(sp)
 400b308:	d9002017 	ldw	r4,128(sp)
 400b30c:	d9801a04 	addi	r6,sp,104
 400b310:	da402c15 	stw	r9,176(sp)
 400b314:	4009f240 	call	4009f24 <__sprint_r.part.0>
 400b318:	da402c17 	ldw	r9,176(sp)
 400b31c:	103e9a1e 	bne	r2,zero,400ad88 <__alt_data_end+0xfc00ad88>
 400b320:	d9401b17 	ldw	r5,108(sp)
 400b324:	d8801c17 	ldw	r2,112(sp)
 400b328:	d811883a 	mov	r8,sp
 400b32c:	29000044 	addi	r4,r5,1
 400b330:	003e4206 	br	400ac3c <__alt_data_end+0xfc00ac3c>
 400b334:	d9401b17 	ldw	r5,108(sp)
 400b338:	01010074 	movhi	r4,1025
 400b33c:	2102bb04 	addi	r4,r4,2796
 400b340:	d9002415 	stw	r4,144(sp)
 400b344:	29400044 	addi	r5,r5,1
 400b348:	003c6d06 	br	400a500 <__alt_data_end+0xfc00a500>
 400b34c:	0039883a 	mov	fp,zero
 400b350:	00800084 	movi	r2,2
 400b354:	10803fcc 	andi	r2,r2,255
 400b358:	01000044 	movi	r4,1
 400b35c:	11001e26 	beq	r2,r4,400b3d8 <___vfiprintf_internal_r+0x13a0>
 400b360:	01000084 	movi	r4,2
 400b364:	11001e1e 	bne	r2,r4,400b3e0 <___vfiprintf_internal_r+0x13a8>
 400b368:	1829883a 	mov	r20,r3
 400b36c:	003eea06 	br	400af18 <__alt_data_end+0xfc00af18>
 400b370:	a007883a 	mov	r3,r20
 400b374:	00800044 	movi	r2,1
 400b378:	003ff606 	br	400b354 <__alt_data_end+0xfc00b354>
 400b37c:	00800184 	movi	r2,6
 400b380:	1240012e 	bgeu	r2,r9,400b388 <___vfiprintf_internal_r+0x1350>
 400b384:	1013883a 	mov	r9,r2
 400b388:	4827883a 	mov	r19,r9
 400b38c:	4825883a 	mov	r18,r9
 400b390:	48001516 	blt	r9,zero,400b3e8 <___vfiprintf_internal_r+0x13b0>
 400b394:	05410074 	movhi	r21,1025
 400b398:	d8c02215 	stw	r3,136(sp)
 400b39c:	ad425b04 	addi	r21,r21,2412
 400b3a0:	003d1406 	br	400a7f4 <__alt_data_end+0xfc00a7f4>
 400b3a4:	02810074 	movhi	r10,1025
 400b3a8:	5282b704 	addi	r10,r10,2780
 400b3ac:	da802415 	stw	r10,144(sp)
 400b3b0:	200d883a 	mov	r6,r4
 400b3b4:	003c9106 	br	400a5fc <__alt_data_end+0xfc00a5fc>
 400b3b8:	5021883a 	mov	r16,r10
 400b3bc:	0013883a 	mov	r9,zero
 400b3c0:	003b7d06 	br	400a1b8 <__alt_data_end+0xfc00a1b8>
 400b3c4:	4827883a 	mov	r19,r9
 400b3c8:	df001d83 	ldbu	fp,118(sp)
 400b3cc:	d8c02215 	stw	r3,136(sp)
 400b3d0:	0013883a 	mov	r9,zero
 400b3d4:	003c1806 	br	400a438 <__alt_data_end+0xfc00a438>
 400b3d8:	1829883a 	mov	r20,r3
 400b3dc:	003d1806 	br	400a840 <__alt_data_end+0xfc00a840>
 400b3e0:	1829883a 	mov	r20,r3
 400b3e4:	003ccd06 	br	400a71c <__alt_data_end+0xfc00a71c>
 400b3e8:	0025883a 	mov	r18,zero
 400b3ec:	003fe906 	br	400b394 <__alt_data_end+0xfc00b394>
 400b3f0:	d8802217 	ldw	r2,136(sp)
 400b3f4:	80c00043 	ldbu	r3,1(r16)
 400b3f8:	5021883a 	mov	r16,r10
 400b3fc:	12400017 	ldw	r9,0(r2)
 400b400:	10800104 	addi	r2,r2,4
 400b404:	d8802215 	stw	r2,136(sp)
 400b408:	483faf0e 	bge	r9,zero,400b2c8 <__alt_data_end+0xfc00b2c8>
 400b40c:	18c03fcc 	andi	r3,r3,255
 400b410:	18c0201c 	xori	r3,r3,128
 400b414:	027fffc4 	movi	r9,-1
 400b418:	18ffe004 	addi	r3,r3,-128
 400b41c:	003b6506 	br	400a1b4 <__alt_data_end+0xfc00a1b4>
 400b420:	d9c01d85 	stb	r7,118(sp)
 400b424:	003ca006 	br	400a6a8 <__alt_data_end+0xfc00a6a8>
 400b428:	d9c01d85 	stb	r7,118(sp)
 400b42c:	003cad06 	br	400a6e4 <__alt_data_end+0xfc00a6e4>
 400b430:	d9c01d85 	stb	r7,118(sp)
 400b434:	003d7d06 	br	400aa2c <__alt_data_end+0xfc00aa2c>
 400b438:	d9c01d85 	stb	r7,118(sp)
 400b43c:	003d5f06 	br	400a9bc <__alt_data_end+0xfc00a9bc>
 400b440:	a080004c 	andi	r2,r20,1
 400b444:	0039883a 	mov	fp,zero
 400b448:	10000526 	beq	r2,zero,400b460 <___vfiprintf_internal_r+0x1428>
 400b44c:	00800c04 	movi	r2,48
 400b450:	d88019c5 	stb	r2,103(sp)
 400b454:	dcc02717 	ldw	r19,156(sp)
 400b458:	dd4019c4 	addi	r21,sp,103
 400b45c:	003bf606 	br	400a438 <__alt_data_end+0xfc00a438>
 400b460:	0027883a 	mov	r19,zero
 400b464:	dd401a04 	addi	r21,sp,104
 400b468:	003bf306 	br	400a438 <__alt_data_end+0xfc00a438>
 400b46c:	d9c01d85 	stb	r7,118(sp)
 400b470:	003dc806 	br	400ab94 <__alt_data_end+0xfc00ab94>
 400b474:	d9c01d85 	stb	r7,118(sp)
 400b478:	003d3a06 	br	400a964 <__alt_data_end+0xfc00a964>
 400b47c:	d9c01d85 	stb	r7,118(sp)
 400b480:	003d2a06 	br	400a92c <__alt_data_end+0xfc00a92c>
 400b484:	d9c01d85 	stb	r7,118(sp)
 400b488:	003cde06 	br	400a804 <__alt_data_end+0xfc00a804>
 400b48c:	d9c01d85 	stb	r7,118(sp)
 400b490:	003cbc06 	br	400a784 <__alt_data_end+0xfc00a784>

0400b494 <__vfiprintf_internal>:
 400b494:	00810074 	movhi	r2,1025
 400b498:	10897804 	addi	r2,r2,9696
 400b49c:	300f883a 	mov	r7,r6
 400b4a0:	280d883a 	mov	r6,r5
 400b4a4:	200b883a 	mov	r5,r4
 400b4a8:	11000017 	ldw	r4,0(r2)
 400b4ac:	400a0381 	jmpi	400a038 <___vfiprintf_internal_r>

0400b4b0 <__sbprintf>:
 400b4b0:	2880030b 	ldhu	r2,12(r5)
 400b4b4:	2ac01917 	ldw	r11,100(r5)
 400b4b8:	2a80038b 	ldhu	r10,14(r5)
 400b4bc:	2a400717 	ldw	r9,28(r5)
 400b4c0:	2a000917 	ldw	r8,36(r5)
 400b4c4:	defee204 	addi	sp,sp,-1144
 400b4c8:	00c10004 	movi	r3,1024
 400b4cc:	dc011a15 	stw	r16,1128(sp)
 400b4d0:	10bfff4c 	andi	r2,r2,65533
 400b4d4:	2821883a 	mov	r16,r5
 400b4d8:	d8cb883a 	add	r5,sp,r3
 400b4dc:	dc811c15 	stw	r18,1136(sp)
 400b4e0:	dc411b15 	stw	r17,1132(sp)
 400b4e4:	dfc11d15 	stw	ra,1140(sp)
 400b4e8:	2025883a 	mov	r18,r4
 400b4ec:	d881030d 	sth	r2,1036(sp)
 400b4f0:	dac11915 	stw	r11,1124(sp)
 400b4f4:	da81038d 	sth	r10,1038(sp)
 400b4f8:	da410715 	stw	r9,1052(sp)
 400b4fc:	da010915 	stw	r8,1060(sp)
 400b500:	dec10015 	stw	sp,1024(sp)
 400b504:	dec10415 	stw	sp,1040(sp)
 400b508:	d8c10215 	stw	r3,1032(sp)
 400b50c:	d8c10515 	stw	r3,1044(sp)
 400b510:	d8010615 	stw	zero,1048(sp)
 400b514:	400a0380 	call	400a038 <___vfiprintf_internal_r>
 400b518:	1023883a 	mov	r17,r2
 400b51c:	10000416 	blt	r2,zero,400b530 <__sbprintf+0x80>
 400b520:	d9410004 	addi	r5,sp,1024
 400b524:	9009883a 	mov	r4,r18
 400b528:	40067840 	call	4006784 <_fflush_r>
 400b52c:	10000d1e 	bne	r2,zero,400b564 <__sbprintf+0xb4>
 400b530:	d881030b 	ldhu	r2,1036(sp)
 400b534:	1080100c 	andi	r2,r2,64
 400b538:	10000326 	beq	r2,zero,400b548 <__sbprintf+0x98>
 400b53c:	8080030b 	ldhu	r2,12(r16)
 400b540:	10801014 	ori	r2,r2,64
 400b544:	8080030d 	sth	r2,12(r16)
 400b548:	8805883a 	mov	r2,r17
 400b54c:	dfc11d17 	ldw	ra,1140(sp)
 400b550:	dc811c17 	ldw	r18,1136(sp)
 400b554:	dc411b17 	ldw	r17,1132(sp)
 400b558:	dc011a17 	ldw	r16,1128(sp)
 400b55c:	dec11e04 	addi	sp,sp,1144
 400b560:	f800283a 	ret
 400b564:	047fffc4 	movi	r17,-1
 400b568:	003ff106 	br	400b530 <__alt_data_end+0xfc00b530>

0400b56c <__swbuf_r>:
 400b56c:	defffb04 	addi	sp,sp,-20
 400b570:	dcc00315 	stw	r19,12(sp)
 400b574:	dc800215 	stw	r18,8(sp)
 400b578:	dc000015 	stw	r16,0(sp)
 400b57c:	dfc00415 	stw	ra,16(sp)
 400b580:	dc400115 	stw	r17,4(sp)
 400b584:	2025883a 	mov	r18,r4
 400b588:	2827883a 	mov	r19,r5
 400b58c:	3021883a 	mov	r16,r6
 400b590:	20000226 	beq	r4,zero,400b59c <__swbuf_r+0x30>
 400b594:	20800e17 	ldw	r2,56(r4)
 400b598:	10004226 	beq	r2,zero,400b6a4 <__swbuf_r+0x138>
 400b59c:	80800617 	ldw	r2,24(r16)
 400b5a0:	8100030b 	ldhu	r4,12(r16)
 400b5a4:	80800215 	stw	r2,8(r16)
 400b5a8:	2080020c 	andi	r2,r4,8
 400b5ac:	10003626 	beq	r2,zero,400b688 <__swbuf_r+0x11c>
 400b5b0:	80c00417 	ldw	r3,16(r16)
 400b5b4:	18003426 	beq	r3,zero,400b688 <__swbuf_r+0x11c>
 400b5b8:	2088000c 	andi	r2,r4,8192
 400b5bc:	9c403fcc 	andi	r17,r19,255
 400b5c0:	10001a26 	beq	r2,zero,400b62c <__swbuf_r+0xc0>
 400b5c4:	80800017 	ldw	r2,0(r16)
 400b5c8:	81000517 	ldw	r4,20(r16)
 400b5cc:	10c7c83a 	sub	r3,r2,r3
 400b5d0:	1900200e 	bge	r3,r4,400b654 <__swbuf_r+0xe8>
 400b5d4:	18c00044 	addi	r3,r3,1
 400b5d8:	81000217 	ldw	r4,8(r16)
 400b5dc:	11400044 	addi	r5,r2,1
 400b5e0:	81400015 	stw	r5,0(r16)
 400b5e4:	213fffc4 	addi	r4,r4,-1
 400b5e8:	81000215 	stw	r4,8(r16)
 400b5ec:	14c00005 	stb	r19,0(r2)
 400b5f0:	80800517 	ldw	r2,20(r16)
 400b5f4:	10c01e26 	beq	r2,r3,400b670 <__swbuf_r+0x104>
 400b5f8:	8080030b 	ldhu	r2,12(r16)
 400b5fc:	1080004c 	andi	r2,r2,1
 400b600:	10000226 	beq	r2,zero,400b60c <__swbuf_r+0xa0>
 400b604:	00800284 	movi	r2,10
 400b608:	88801926 	beq	r17,r2,400b670 <__swbuf_r+0x104>
 400b60c:	8805883a 	mov	r2,r17
 400b610:	dfc00417 	ldw	ra,16(sp)
 400b614:	dcc00317 	ldw	r19,12(sp)
 400b618:	dc800217 	ldw	r18,8(sp)
 400b61c:	dc400117 	ldw	r17,4(sp)
 400b620:	dc000017 	ldw	r16,0(sp)
 400b624:	dec00504 	addi	sp,sp,20
 400b628:	f800283a 	ret
 400b62c:	81401917 	ldw	r5,100(r16)
 400b630:	00b7ffc4 	movi	r2,-8193
 400b634:	21080014 	ori	r4,r4,8192
 400b638:	2884703a 	and	r2,r5,r2
 400b63c:	80801915 	stw	r2,100(r16)
 400b640:	80800017 	ldw	r2,0(r16)
 400b644:	8100030d 	sth	r4,12(r16)
 400b648:	81000517 	ldw	r4,20(r16)
 400b64c:	10c7c83a 	sub	r3,r2,r3
 400b650:	193fe016 	blt	r3,r4,400b5d4 <__alt_data_end+0xfc00b5d4>
 400b654:	800b883a 	mov	r5,r16
 400b658:	9009883a 	mov	r4,r18
 400b65c:	40067840 	call	4006784 <_fflush_r>
 400b660:	1000071e 	bne	r2,zero,400b680 <__swbuf_r+0x114>
 400b664:	80800017 	ldw	r2,0(r16)
 400b668:	00c00044 	movi	r3,1
 400b66c:	003fda06 	br	400b5d8 <__alt_data_end+0xfc00b5d8>
 400b670:	800b883a 	mov	r5,r16
 400b674:	9009883a 	mov	r4,r18
 400b678:	40067840 	call	4006784 <_fflush_r>
 400b67c:	103fe326 	beq	r2,zero,400b60c <__alt_data_end+0xfc00b60c>
 400b680:	00bfffc4 	movi	r2,-1
 400b684:	003fe206 	br	400b610 <__alt_data_end+0xfc00b610>
 400b688:	800b883a 	mov	r5,r16
 400b68c:	9009883a 	mov	r4,r18
 400b690:	4004b8c0 	call	4004b8c <__swsetup_r>
 400b694:	103ffa1e 	bne	r2,zero,400b680 <__alt_data_end+0xfc00b680>
 400b698:	8100030b 	ldhu	r4,12(r16)
 400b69c:	80c00417 	ldw	r3,16(r16)
 400b6a0:	003fc506 	br	400b5b8 <__alt_data_end+0xfc00b5b8>
 400b6a4:	4006b600 	call	4006b60 <__sinit>
 400b6a8:	003fbc06 	br	400b59c <__alt_data_end+0xfc00b59c>

0400b6ac <__swbuf>:
 400b6ac:	00810074 	movhi	r2,1025
 400b6b0:	10897804 	addi	r2,r2,9696
 400b6b4:	280d883a 	mov	r6,r5
 400b6b8:	200b883a 	mov	r5,r4
 400b6bc:	11000017 	ldw	r4,0(r2)
 400b6c0:	400b56c1 	jmpi	400b56c <__swbuf_r>

0400b6c4 <_write_r>:
 400b6c4:	defffd04 	addi	sp,sp,-12
 400b6c8:	2805883a 	mov	r2,r5
 400b6cc:	dc000015 	stw	r16,0(sp)
 400b6d0:	04010074 	movhi	r16,1025
 400b6d4:	dc400115 	stw	r17,4(sp)
 400b6d8:	300b883a 	mov	r5,r6
 400b6dc:	84104c04 	addi	r16,r16,16688
 400b6e0:	2023883a 	mov	r17,r4
 400b6e4:	380d883a 	mov	r6,r7
 400b6e8:	1009883a 	mov	r4,r2
 400b6ec:	dfc00215 	stw	ra,8(sp)
 400b6f0:	80000015 	stw	zero,0(r16)
 400b6f4:	400e81c0 	call	400e81c <write>
 400b6f8:	00ffffc4 	movi	r3,-1
 400b6fc:	10c00526 	beq	r2,r3,400b714 <_write_r+0x50>
 400b700:	dfc00217 	ldw	ra,8(sp)
 400b704:	dc400117 	ldw	r17,4(sp)
 400b708:	dc000017 	ldw	r16,0(sp)
 400b70c:	dec00304 	addi	sp,sp,12
 400b710:	f800283a 	ret
 400b714:	80c00017 	ldw	r3,0(r16)
 400b718:	183ff926 	beq	r3,zero,400b700 <__alt_data_end+0xfc00b700>
 400b71c:	88c00015 	stw	r3,0(r17)
 400b720:	003ff706 	br	400b700 <__alt_data_end+0xfc00b700>

0400b724 <_close_r>:
 400b724:	defffd04 	addi	sp,sp,-12
 400b728:	dc000015 	stw	r16,0(sp)
 400b72c:	04010074 	movhi	r16,1025
 400b730:	dc400115 	stw	r17,4(sp)
 400b734:	84104c04 	addi	r16,r16,16688
 400b738:	2023883a 	mov	r17,r4
 400b73c:	2809883a 	mov	r4,r5
 400b740:	dfc00215 	stw	ra,8(sp)
 400b744:	80000015 	stw	zero,0(r16)
 400b748:	400df900 	call	400df90 <close>
 400b74c:	00ffffc4 	movi	r3,-1
 400b750:	10c00526 	beq	r2,r3,400b768 <_close_r+0x44>
 400b754:	dfc00217 	ldw	ra,8(sp)
 400b758:	dc400117 	ldw	r17,4(sp)
 400b75c:	dc000017 	ldw	r16,0(sp)
 400b760:	dec00304 	addi	sp,sp,12
 400b764:	f800283a 	ret
 400b768:	80c00017 	ldw	r3,0(r16)
 400b76c:	183ff926 	beq	r3,zero,400b754 <__alt_data_end+0xfc00b754>
 400b770:	88c00015 	stw	r3,0(r17)
 400b774:	003ff706 	br	400b754 <__alt_data_end+0xfc00b754>

0400b778 <_calloc_r>:
 400b778:	298b383a 	mul	r5,r5,r6
 400b77c:	defffe04 	addi	sp,sp,-8
 400b780:	dfc00115 	stw	ra,4(sp)
 400b784:	dc000015 	stw	r16,0(sp)
 400b788:	40078c00 	call	40078c0 <_malloc_r>
 400b78c:	10002926 	beq	r2,zero,400b834 <_calloc_r+0xbc>
 400b790:	11bfff17 	ldw	r6,-4(r2)
 400b794:	1021883a 	mov	r16,r2
 400b798:	00bfff04 	movi	r2,-4
 400b79c:	308c703a 	and	r6,r6,r2
 400b7a0:	00c00904 	movi	r3,36
 400b7a4:	308d883a 	add	r6,r6,r2
 400b7a8:	19801636 	bltu	r3,r6,400b804 <_calloc_r+0x8c>
 400b7ac:	008004c4 	movi	r2,19
 400b7b0:	11800b2e 	bgeu	r2,r6,400b7e0 <_calloc_r+0x68>
 400b7b4:	80000015 	stw	zero,0(r16)
 400b7b8:	80000115 	stw	zero,4(r16)
 400b7bc:	008006c4 	movi	r2,27
 400b7c0:	11801a2e 	bgeu	r2,r6,400b82c <_calloc_r+0xb4>
 400b7c4:	80000215 	stw	zero,8(r16)
 400b7c8:	80000315 	stw	zero,12(r16)
 400b7cc:	30c0151e 	bne	r6,r3,400b824 <_calloc_r+0xac>
 400b7d0:	80000415 	stw	zero,16(r16)
 400b7d4:	80800604 	addi	r2,r16,24
 400b7d8:	80000515 	stw	zero,20(r16)
 400b7dc:	00000106 	br	400b7e4 <_calloc_r+0x6c>
 400b7e0:	8005883a 	mov	r2,r16
 400b7e4:	10000015 	stw	zero,0(r2)
 400b7e8:	10000115 	stw	zero,4(r2)
 400b7ec:	10000215 	stw	zero,8(r2)
 400b7f0:	8005883a 	mov	r2,r16
 400b7f4:	dfc00117 	ldw	ra,4(sp)
 400b7f8:	dc000017 	ldw	r16,0(sp)
 400b7fc:	dec00204 	addi	sp,sp,8
 400b800:	f800283a 	ret
 400b804:	000b883a 	mov	r5,zero
 400b808:	8009883a 	mov	r4,r16
 400b80c:	40084540 	call	4008454 <memset>
 400b810:	8005883a 	mov	r2,r16
 400b814:	dfc00117 	ldw	ra,4(sp)
 400b818:	dc000017 	ldw	r16,0(sp)
 400b81c:	dec00204 	addi	sp,sp,8
 400b820:	f800283a 	ret
 400b824:	80800404 	addi	r2,r16,16
 400b828:	003fee06 	br	400b7e4 <__alt_data_end+0xfc00b7e4>
 400b82c:	80800204 	addi	r2,r16,8
 400b830:	003fec06 	br	400b7e4 <__alt_data_end+0xfc00b7e4>
 400b834:	0005883a 	mov	r2,zero
 400b838:	003fee06 	br	400b7f4 <__alt_data_end+0xfc00b7f4>

0400b83c <_fclose_r>:
 400b83c:	28003926 	beq	r5,zero,400b924 <_fclose_r+0xe8>
 400b840:	defffc04 	addi	sp,sp,-16
 400b844:	dc400115 	stw	r17,4(sp)
 400b848:	dc000015 	stw	r16,0(sp)
 400b84c:	dfc00315 	stw	ra,12(sp)
 400b850:	dc800215 	stw	r18,8(sp)
 400b854:	2023883a 	mov	r17,r4
 400b858:	2821883a 	mov	r16,r5
 400b85c:	20000226 	beq	r4,zero,400b868 <_fclose_r+0x2c>
 400b860:	20800e17 	ldw	r2,56(r4)
 400b864:	10002726 	beq	r2,zero,400b904 <_fclose_r+0xc8>
 400b868:	8080030f 	ldh	r2,12(r16)
 400b86c:	1000071e 	bne	r2,zero,400b88c <_fclose_r+0x50>
 400b870:	0005883a 	mov	r2,zero
 400b874:	dfc00317 	ldw	ra,12(sp)
 400b878:	dc800217 	ldw	r18,8(sp)
 400b87c:	dc400117 	ldw	r17,4(sp)
 400b880:	dc000017 	ldw	r16,0(sp)
 400b884:	dec00404 	addi	sp,sp,16
 400b888:	f800283a 	ret
 400b88c:	800b883a 	mov	r5,r16
 400b890:	8809883a 	mov	r4,r17
 400b894:	40065680 	call	4006568 <__sflush_r>
 400b898:	1025883a 	mov	r18,r2
 400b89c:	80800b17 	ldw	r2,44(r16)
 400b8a0:	10000426 	beq	r2,zero,400b8b4 <_fclose_r+0x78>
 400b8a4:	81400717 	ldw	r5,28(r16)
 400b8a8:	8809883a 	mov	r4,r17
 400b8ac:	103ee83a 	callr	r2
 400b8b0:	10001616 	blt	r2,zero,400b90c <_fclose_r+0xd0>
 400b8b4:	8080030b 	ldhu	r2,12(r16)
 400b8b8:	1080200c 	andi	r2,r2,128
 400b8bc:	1000151e 	bne	r2,zero,400b914 <_fclose_r+0xd8>
 400b8c0:	81400c17 	ldw	r5,48(r16)
 400b8c4:	28000526 	beq	r5,zero,400b8dc <_fclose_r+0xa0>
 400b8c8:	80801004 	addi	r2,r16,64
 400b8cc:	28800226 	beq	r5,r2,400b8d8 <_fclose_r+0x9c>
 400b8d0:	8809883a 	mov	r4,r17
 400b8d4:	4006cd40 	call	4006cd4 <_free_r>
 400b8d8:	80000c15 	stw	zero,48(r16)
 400b8dc:	81401117 	ldw	r5,68(r16)
 400b8e0:	28000326 	beq	r5,zero,400b8f0 <_fclose_r+0xb4>
 400b8e4:	8809883a 	mov	r4,r17
 400b8e8:	4006cd40 	call	4006cd4 <_free_r>
 400b8ec:	80001115 	stw	zero,68(r16)
 400b8f0:	4006b700 	call	4006b70 <__sfp_lock_acquire>
 400b8f4:	8000030d 	sth	zero,12(r16)
 400b8f8:	4006b740 	call	4006b74 <__sfp_lock_release>
 400b8fc:	9005883a 	mov	r2,r18
 400b900:	003fdc06 	br	400b874 <__alt_data_end+0xfc00b874>
 400b904:	4006b600 	call	4006b60 <__sinit>
 400b908:	003fd706 	br	400b868 <__alt_data_end+0xfc00b868>
 400b90c:	04bfffc4 	movi	r18,-1
 400b910:	003fe806 	br	400b8b4 <__alt_data_end+0xfc00b8b4>
 400b914:	81400417 	ldw	r5,16(r16)
 400b918:	8809883a 	mov	r4,r17
 400b91c:	4006cd40 	call	4006cd4 <_free_r>
 400b920:	003fe706 	br	400b8c0 <__alt_data_end+0xfc00b8c0>
 400b924:	0005883a 	mov	r2,zero
 400b928:	f800283a 	ret

0400b92c <fclose>:
 400b92c:	00810074 	movhi	r2,1025
 400b930:	10897804 	addi	r2,r2,9696
 400b934:	200b883a 	mov	r5,r4
 400b938:	11000017 	ldw	r4,0(r2)
 400b93c:	400b83c1 	jmpi	400b83c <_fclose_r>

0400b940 <__fputwc>:
 400b940:	defff804 	addi	sp,sp,-32
 400b944:	dcc00415 	stw	r19,16(sp)
 400b948:	dc800315 	stw	r18,12(sp)
 400b94c:	dc000115 	stw	r16,4(sp)
 400b950:	dfc00715 	stw	ra,28(sp)
 400b954:	dd400615 	stw	r21,24(sp)
 400b958:	dd000515 	stw	r20,20(sp)
 400b95c:	dc400215 	stw	r17,8(sp)
 400b960:	2027883a 	mov	r19,r4
 400b964:	2825883a 	mov	r18,r5
 400b968:	3021883a 	mov	r16,r6
 400b96c:	40076b00 	call	40076b0 <__locale_mb_cur_max>
 400b970:	00c00044 	movi	r3,1
 400b974:	10c03e26 	beq	r2,r3,400ba70 <__fputwc+0x130>
 400b978:	81c01704 	addi	r7,r16,92
 400b97c:	900d883a 	mov	r6,r18
 400b980:	d80b883a 	mov	r5,sp
 400b984:	9809883a 	mov	r4,r19
 400b988:	400bcb80 	call	400bcb8 <_wcrtomb_r>
 400b98c:	1029883a 	mov	r20,r2
 400b990:	00bfffc4 	movi	r2,-1
 400b994:	a0802026 	beq	r20,r2,400ba18 <__fputwc+0xd8>
 400b998:	d9400003 	ldbu	r5,0(sp)
 400b99c:	a0001c26 	beq	r20,zero,400ba10 <__fputwc+0xd0>
 400b9a0:	0023883a 	mov	r17,zero
 400b9a4:	05400284 	movi	r21,10
 400b9a8:	00000906 	br	400b9d0 <__fputwc+0x90>
 400b9ac:	80800017 	ldw	r2,0(r16)
 400b9b0:	11400005 	stb	r5,0(r2)
 400b9b4:	80c00017 	ldw	r3,0(r16)
 400b9b8:	18c00044 	addi	r3,r3,1
 400b9bc:	80c00015 	stw	r3,0(r16)
 400b9c0:	8c400044 	addi	r17,r17,1
 400b9c4:	dc45883a 	add	r2,sp,r17
 400b9c8:	8d00112e 	bgeu	r17,r20,400ba10 <__fputwc+0xd0>
 400b9cc:	11400003 	ldbu	r5,0(r2)
 400b9d0:	80c00217 	ldw	r3,8(r16)
 400b9d4:	18ffffc4 	addi	r3,r3,-1
 400b9d8:	80c00215 	stw	r3,8(r16)
 400b9dc:	183ff30e 	bge	r3,zero,400b9ac <__alt_data_end+0xfc00b9ac>
 400b9e0:	80800617 	ldw	r2,24(r16)
 400b9e4:	18801916 	blt	r3,r2,400ba4c <__fputwc+0x10c>
 400b9e8:	80800017 	ldw	r2,0(r16)
 400b9ec:	11400005 	stb	r5,0(r2)
 400b9f0:	80800017 	ldw	r2,0(r16)
 400b9f4:	10c00003 	ldbu	r3,0(r2)
 400b9f8:	10800044 	addi	r2,r2,1
 400b9fc:	1d402326 	beq	r3,r21,400ba8c <__fputwc+0x14c>
 400ba00:	80800015 	stw	r2,0(r16)
 400ba04:	8c400044 	addi	r17,r17,1
 400ba08:	dc45883a 	add	r2,sp,r17
 400ba0c:	8d3fef36 	bltu	r17,r20,400b9cc <__alt_data_end+0xfc00b9cc>
 400ba10:	9005883a 	mov	r2,r18
 400ba14:	00000406 	br	400ba28 <__fputwc+0xe8>
 400ba18:	80c0030b 	ldhu	r3,12(r16)
 400ba1c:	a005883a 	mov	r2,r20
 400ba20:	18c01014 	ori	r3,r3,64
 400ba24:	80c0030d 	sth	r3,12(r16)
 400ba28:	dfc00717 	ldw	ra,28(sp)
 400ba2c:	dd400617 	ldw	r21,24(sp)
 400ba30:	dd000517 	ldw	r20,20(sp)
 400ba34:	dcc00417 	ldw	r19,16(sp)
 400ba38:	dc800317 	ldw	r18,12(sp)
 400ba3c:	dc400217 	ldw	r17,8(sp)
 400ba40:	dc000117 	ldw	r16,4(sp)
 400ba44:	dec00804 	addi	sp,sp,32
 400ba48:	f800283a 	ret
 400ba4c:	800d883a 	mov	r6,r16
 400ba50:	29403fcc 	andi	r5,r5,255
 400ba54:	9809883a 	mov	r4,r19
 400ba58:	400b56c0 	call	400b56c <__swbuf_r>
 400ba5c:	10bfffe0 	cmpeqi	r2,r2,-1
 400ba60:	10803fcc 	andi	r2,r2,255
 400ba64:	103fd626 	beq	r2,zero,400b9c0 <__alt_data_end+0xfc00b9c0>
 400ba68:	00bfffc4 	movi	r2,-1
 400ba6c:	003fee06 	br	400ba28 <__alt_data_end+0xfc00ba28>
 400ba70:	90ffffc4 	addi	r3,r18,-1
 400ba74:	01003f84 	movi	r4,254
 400ba78:	20ffbf36 	bltu	r4,r3,400b978 <__alt_data_end+0xfc00b978>
 400ba7c:	900b883a 	mov	r5,r18
 400ba80:	dc800005 	stb	r18,0(sp)
 400ba84:	1029883a 	mov	r20,r2
 400ba88:	003fc506 	br	400b9a0 <__alt_data_end+0xfc00b9a0>
 400ba8c:	800d883a 	mov	r6,r16
 400ba90:	a80b883a 	mov	r5,r21
 400ba94:	9809883a 	mov	r4,r19
 400ba98:	400b56c0 	call	400b56c <__swbuf_r>
 400ba9c:	10bfffe0 	cmpeqi	r2,r2,-1
 400baa0:	003fef06 	br	400ba60 <__alt_data_end+0xfc00ba60>

0400baa4 <_fputwc_r>:
 400baa4:	3080030b 	ldhu	r2,12(r6)
 400baa8:	10c8000c 	andi	r3,r2,8192
 400baac:	1800051e 	bne	r3,zero,400bac4 <_fputwc_r+0x20>
 400bab0:	30c01917 	ldw	r3,100(r6)
 400bab4:	10880014 	ori	r2,r2,8192
 400bab8:	3080030d 	sth	r2,12(r6)
 400babc:	18880014 	ori	r2,r3,8192
 400bac0:	30801915 	stw	r2,100(r6)
 400bac4:	400b9401 	jmpi	400b940 <__fputwc>

0400bac8 <fputwc>:
 400bac8:	00810074 	movhi	r2,1025
 400bacc:	defffc04 	addi	sp,sp,-16
 400bad0:	10897804 	addi	r2,r2,9696
 400bad4:	dc000115 	stw	r16,4(sp)
 400bad8:	14000017 	ldw	r16,0(r2)
 400badc:	dc400215 	stw	r17,8(sp)
 400bae0:	dfc00315 	stw	ra,12(sp)
 400bae4:	2023883a 	mov	r17,r4
 400bae8:	80000226 	beq	r16,zero,400baf4 <fputwc+0x2c>
 400baec:	80800e17 	ldw	r2,56(r16)
 400baf0:	10001026 	beq	r2,zero,400bb34 <fputwc+0x6c>
 400baf4:	2880030b 	ldhu	r2,12(r5)
 400baf8:	10c8000c 	andi	r3,r2,8192
 400bafc:	1800051e 	bne	r3,zero,400bb14 <fputwc+0x4c>
 400bb00:	28c01917 	ldw	r3,100(r5)
 400bb04:	10880014 	ori	r2,r2,8192
 400bb08:	2880030d 	sth	r2,12(r5)
 400bb0c:	18880014 	ori	r2,r3,8192
 400bb10:	28801915 	stw	r2,100(r5)
 400bb14:	280d883a 	mov	r6,r5
 400bb18:	8009883a 	mov	r4,r16
 400bb1c:	880b883a 	mov	r5,r17
 400bb20:	dfc00317 	ldw	ra,12(sp)
 400bb24:	dc400217 	ldw	r17,8(sp)
 400bb28:	dc000117 	ldw	r16,4(sp)
 400bb2c:	dec00404 	addi	sp,sp,16
 400bb30:	400b9401 	jmpi	400b940 <__fputwc>
 400bb34:	8009883a 	mov	r4,r16
 400bb38:	d9400015 	stw	r5,0(sp)
 400bb3c:	4006b600 	call	4006b60 <__sinit>
 400bb40:	d9400017 	ldw	r5,0(sp)
 400bb44:	003feb06 	br	400baf4 <__alt_data_end+0xfc00baf4>

0400bb48 <_fstat_r>:
 400bb48:	defffd04 	addi	sp,sp,-12
 400bb4c:	2805883a 	mov	r2,r5
 400bb50:	dc000015 	stw	r16,0(sp)
 400bb54:	04010074 	movhi	r16,1025
 400bb58:	dc400115 	stw	r17,4(sp)
 400bb5c:	84104c04 	addi	r16,r16,16688
 400bb60:	2023883a 	mov	r17,r4
 400bb64:	300b883a 	mov	r5,r6
 400bb68:	1009883a 	mov	r4,r2
 400bb6c:	dfc00215 	stw	ra,8(sp)
 400bb70:	80000015 	stw	zero,0(r16)
 400bb74:	400e1100 	call	400e110 <fstat>
 400bb78:	00ffffc4 	movi	r3,-1
 400bb7c:	10c00526 	beq	r2,r3,400bb94 <_fstat_r+0x4c>
 400bb80:	dfc00217 	ldw	ra,8(sp)
 400bb84:	dc400117 	ldw	r17,4(sp)
 400bb88:	dc000017 	ldw	r16,0(sp)
 400bb8c:	dec00304 	addi	sp,sp,12
 400bb90:	f800283a 	ret
 400bb94:	80c00017 	ldw	r3,0(r16)
 400bb98:	183ff926 	beq	r3,zero,400bb80 <__alt_data_end+0xfc00bb80>
 400bb9c:	88c00015 	stw	r3,0(r17)
 400bba0:	003ff706 	br	400bb80 <__alt_data_end+0xfc00bb80>

0400bba4 <_isatty_r>:
 400bba4:	defffd04 	addi	sp,sp,-12
 400bba8:	dc000015 	stw	r16,0(sp)
 400bbac:	04010074 	movhi	r16,1025
 400bbb0:	dc400115 	stw	r17,4(sp)
 400bbb4:	84104c04 	addi	r16,r16,16688
 400bbb8:	2023883a 	mov	r17,r4
 400bbbc:	2809883a 	mov	r4,r5
 400bbc0:	dfc00215 	stw	ra,8(sp)
 400bbc4:	80000015 	stw	zero,0(r16)
 400bbc8:	400e2300 	call	400e230 <isatty>
 400bbcc:	00ffffc4 	movi	r3,-1
 400bbd0:	10c00526 	beq	r2,r3,400bbe8 <_isatty_r+0x44>
 400bbd4:	dfc00217 	ldw	ra,8(sp)
 400bbd8:	dc400117 	ldw	r17,4(sp)
 400bbdc:	dc000017 	ldw	r16,0(sp)
 400bbe0:	dec00304 	addi	sp,sp,12
 400bbe4:	f800283a 	ret
 400bbe8:	80c00017 	ldw	r3,0(r16)
 400bbec:	183ff926 	beq	r3,zero,400bbd4 <__alt_data_end+0xfc00bbd4>
 400bbf0:	88c00015 	stw	r3,0(r17)
 400bbf4:	003ff706 	br	400bbd4 <__alt_data_end+0xfc00bbd4>

0400bbf8 <_lseek_r>:
 400bbf8:	defffd04 	addi	sp,sp,-12
 400bbfc:	2805883a 	mov	r2,r5
 400bc00:	dc000015 	stw	r16,0(sp)
 400bc04:	04010074 	movhi	r16,1025
 400bc08:	dc400115 	stw	r17,4(sp)
 400bc0c:	300b883a 	mov	r5,r6
 400bc10:	84104c04 	addi	r16,r16,16688
 400bc14:	2023883a 	mov	r17,r4
 400bc18:	380d883a 	mov	r6,r7
 400bc1c:	1009883a 	mov	r4,r2
 400bc20:	dfc00215 	stw	ra,8(sp)
 400bc24:	80000015 	stw	zero,0(r16)
 400bc28:	400e3fc0 	call	400e3fc <lseek>
 400bc2c:	00ffffc4 	movi	r3,-1
 400bc30:	10c00526 	beq	r2,r3,400bc48 <_lseek_r+0x50>
 400bc34:	dfc00217 	ldw	ra,8(sp)
 400bc38:	dc400117 	ldw	r17,4(sp)
 400bc3c:	dc000017 	ldw	r16,0(sp)
 400bc40:	dec00304 	addi	sp,sp,12
 400bc44:	f800283a 	ret
 400bc48:	80c00017 	ldw	r3,0(r16)
 400bc4c:	183ff926 	beq	r3,zero,400bc34 <__alt_data_end+0xfc00bc34>
 400bc50:	88c00015 	stw	r3,0(r17)
 400bc54:	003ff706 	br	400bc34 <__alt_data_end+0xfc00bc34>

0400bc58 <_read_r>:
 400bc58:	defffd04 	addi	sp,sp,-12
 400bc5c:	2805883a 	mov	r2,r5
 400bc60:	dc000015 	stw	r16,0(sp)
 400bc64:	04010074 	movhi	r16,1025
 400bc68:	dc400115 	stw	r17,4(sp)
 400bc6c:	300b883a 	mov	r5,r6
 400bc70:	84104c04 	addi	r16,r16,16688
 400bc74:	2023883a 	mov	r17,r4
 400bc78:	380d883a 	mov	r6,r7
 400bc7c:	1009883a 	mov	r4,r2
 400bc80:	dfc00215 	stw	ra,8(sp)
 400bc84:	80000015 	stw	zero,0(r16)
 400bc88:	400e5d00 	call	400e5d0 <read>
 400bc8c:	00ffffc4 	movi	r3,-1
 400bc90:	10c00526 	beq	r2,r3,400bca8 <_read_r+0x50>
 400bc94:	dfc00217 	ldw	ra,8(sp)
 400bc98:	dc400117 	ldw	r17,4(sp)
 400bc9c:	dc000017 	ldw	r16,0(sp)
 400bca0:	dec00304 	addi	sp,sp,12
 400bca4:	f800283a 	ret
 400bca8:	80c00017 	ldw	r3,0(r16)
 400bcac:	183ff926 	beq	r3,zero,400bc94 <__alt_data_end+0xfc00bc94>
 400bcb0:	88c00015 	stw	r3,0(r17)
 400bcb4:	003ff706 	br	400bc94 <__alt_data_end+0xfc00bc94>

0400bcb8 <_wcrtomb_r>:
 400bcb8:	defff604 	addi	sp,sp,-40
 400bcbc:	00810074 	movhi	r2,1025
 400bcc0:	dc800815 	stw	r18,32(sp)
 400bcc4:	dc400715 	stw	r17,28(sp)
 400bcc8:	dc000615 	stw	r16,24(sp)
 400bccc:	10897c04 	addi	r2,r2,9712
 400bcd0:	dfc00915 	stw	ra,36(sp)
 400bcd4:	2021883a 	mov	r16,r4
 400bcd8:	3823883a 	mov	r17,r7
 400bcdc:	14800017 	ldw	r18,0(r2)
 400bce0:	28001426 	beq	r5,zero,400bd34 <_wcrtomb_r+0x7c>
 400bce4:	d9400415 	stw	r5,16(sp)
 400bce8:	d9800515 	stw	r6,20(sp)
 400bcec:	40076a40 	call	40076a4 <__locale_charset>
 400bcf0:	d9800517 	ldw	r6,20(sp)
 400bcf4:	d9400417 	ldw	r5,16(sp)
 400bcf8:	100f883a 	mov	r7,r2
 400bcfc:	dc400015 	stw	r17,0(sp)
 400bd00:	8009883a 	mov	r4,r16
 400bd04:	903ee83a 	callr	r18
 400bd08:	00ffffc4 	movi	r3,-1
 400bd0c:	10c0031e 	bne	r2,r3,400bd1c <_wcrtomb_r+0x64>
 400bd10:	88000015 	stw	zero,0(r17)
 400bd14:	00c02284 	movi	r3,138
 400bd18:	80c00015 	stw	r3,0(r16)
 400bd1c:	dfc00917 	ldw	ra,36(sp)
 400bd20:	dc800817 	ldw	r18,32(sp)
 400bd24:	dc400717 	ldw	r17,28(sp)
 400bd28:	dc000617 	ldw	r16,24(sp)
 400bd2c:	dec00a04 	addi	sp,sp,40
 400bd30:	f800283a 	ret
 400bd34:	40076a40 	call	40076a4 <__locale_charset>
 400bd38:	100f883a 	mov	r7,r2
 400bd3c:	dc400015 	stw	r17,0(sp)
 400bd40:	000d883a 	mov	r6,zero
 400bd44:	d9400104 	addi	r5,sp,4
 400bd48:	8009883a 	mov	r4,r16
 400bd4c:	903ee83a 	callr	r18
 400bd50:	003fed06 	br	400bd08 <__alt_data_end+0xfc00bd08>

0400bd54 <wcrtomb>:
 400bd54:	defff604 	addi	sp,sp,-40
 400bd58:	00810074 	movhi	r2,1025
 400bd5c:	dc800615 	stw	r18,24(sp)
 400bd60:	dc400515 	stw	r17,20(sp)
 400bd64:	10897804 	addi	r2,r2,9696
 400bd68:	dfc00915 	stw	ra,36(sp)
 400bd6c:	dd000815 	stw	r20,32(sp)
 400bd70:	dcc00715 	stw	r19,28(sp)
 400bd74:	dc000415 	stw	r16,16(sp)
 400bd78:	3025883a 	mov	r18,r6
 400bd7c:	14400017 	ldw	r17,0(r2)
 400bd80:	20001926 	beq	r4,zero,400bde8 <wcrtomb+0x94>
 400bd84:	00810074 	movhi	r2,1025
 400bd88:	10897c04 	addi	r2,r2,9712
 400bd8c:	15000017 	ldw	r20,0(r2)
 400bd90:	2021883a 	mov	r16,r4
 400bd94:	2827883a 	mov	r19,r5
 400bd98:	40076a40 	call	40076a4 <__locale_charset>
 400bd9c:	100f883a 	mov	r7,r2
 400bda0:	dc800015 	stw	r18,0(sp)
 400bda4:	980d883a 	mov	r6,r19
 400bda8:	800b883a 	mov	r5,r16
 400bdac:	8809883a 	mov	r4,r17
 400bdb0:	a03ee83a 	callr	r20
 400bdb4:	00ffffc4 	movi	r3,-1
 400bdb8:	10c0031e 	bne	r2,r3,400bdc8 <wcrtomb+0x74>
 400bdbc:	90000015 	stw	zero,0(r18)
 400bdc0:	00c02284 	movi	r3,138
 400bdc4:	88c00015 	stw	r3,0(r17)
 400bdc8:	dfc00917 	ldw	ra,36(sp)
 400bdcc:	dd000817 	ldw	r20,32(sp)
 400bdd0:	dcc00717 	ldw	r19,28(sp)
 400bdd4:	dc800617 	ldw	r18,24(sp)
 400bdd8:	dc400517 	ldw	r17,20(sp)
 400bddc:	dc000417 	ldw	r16,16(sp)
 400bde0:	dec00a04 	addi	sp,sp,40
 400bde4:	f800283a 	ret
 400bde8:	00810074 	movhi	r2,1025
 400bdec:	10897c04 	addi	r2,r2,9712
 400bdf0:	14000017 	ldw	r16,0(r2)
 400bdf4:	40076a40 	call	40076a4 <__locale_charset>
 400bdf8:	100f883a 	mov	r7,r2
 400bdfc:	dc800015 	stw	r18,0(sp)
 400be00:	000d883a 	mov	r6,zero
 400be04:	d9400104 	addi	r5,sp,4
 400be08:	8809883a 	mov	r4,r17
 400be0c:	803ee83a 	callr	r16
 400be10:	003fe806 	br	400bdb4 <__alt_data_end+0xfc00bdb4>

0400be14 <__ascii_wctomb>:
 400be14:	28000526 	beq	r5,zero,400be2c <__ascii_wctomb+0x18>
 400be18:	00803fc4 	movi	r2,255
 400be1c:	11800536 	bltu	r2,r6,400be34 <__ascii_wctomb+0x20>
 400be20:	29800005 	stb	r6,0(r5)
 400be24:	00800044 	movi	r2,1
 400be28:	f800283a 	ret
 400be2c:	0005883a 	mov	r2,zero
 400be30:	f800283a 	ret
 400be34:	00802284 	movi	r2,138
 400be38:	20800015 	stw	r2,0(r4)
 400be3c:	00bfffc4 	movi	r2,-1
 400be40:	f800283a 	ret

0400be44 <_wctomb_r>:
 400be44:	00810074 	movhi	r2,1025
 400be48:	defff904 	addi	sp,sp,-28
 400be4c:	10897c04 	addi	r2,r2,9712
 400be50:	dfc00615 	stw	ra,24(sp)
 400be54:	dc400515 	stw	r17,20(sp)
 400be58:	dc000415 	stw	r16,16(sp)
 400be5c:	3823883a 	mov	r17,r7
 400be60:	14000017 	ldw	r16,0(r2)
 400be64:	d9000115 	stw	r4,4(sp)
 400be68:	d9400215 	stw	r5,8(sp)
 400be6c:	d9800315 	stw	r6,12(sp)
 400be70:	40076a40 	call	40076a4 <__locale_charset>
 400be74:	d9800317 	ldw	r6,12(sp)
 400be78:	d9400217 	ldw	r5,8(sp)
 400be7c:	d9000117 	ldw	r4,4(sp)
 400be80:	100f883a 	mov	r7,r2
 400be84:	dc400015 	stw	r17,0(sp)
 400be88:	803ee83a 	callr	r16
 400be8c:	dfc00617 	ldw	ra,24(sp)
 400be90:	dc400517 	ldw	r17,20(sp)
 400be94:	dc000417 	ldw	r16,16(sp)
 400be98:	dec00704 	addi	sp,sp,28
 400be9c:	f800283a 	ret

0400bea0 <__udivdi3>:
 400bea0:	defff504 	addi	sp,sp,-44
 400bea4:	dcc00415 	stw	r19,16(sp)
 400bea8:	dc000115 	stw	r16,4(sp)
 400beac:	dfc00a15 	stw	ra,40(sp)
 400beb0:	df000915 	stw	fp,36(sp)
 400beb4:	ddc00815 	stw	r23,32(sp)
 400beb8:	dd800715 	stw	r22,28(sp)
 400bebc:	dd400615 	stw	r21,24(sp)
 400bec0:	dd000515 	stw	r20,20(sp)
 400bec4:	dc800315 	stw	r18,12(sp)
 400bec8:	dc400215 	stw	r17,8(sp)
 400becc:	2027883a 	mov	r19,r4
 400bed0:	2821883a 	mov	r16,r5
 400bed4:	3800411e 	bne	r7,zero,400bfdc <__udivdi3+0x13c>
 400bed8:	3023883a 	mov	r17,r6
 400bedc:	2025883a 	mov	r18,r4
 400bee0:	2980522e 	bgeu	r5,r6,400c02c <__udivdi3+0x18c>
 400bee4:	00bfffd4 	movui	r2,65535
 400bee8:	282d883a 	mov	r22,r5
 400beec:	1180a836 	bltu	r2,r6,400c190 <__udivdi3+0x2f0>
 400bef0:	00803fc4 	movi	r2,255
 400bef4:	1185803a 	cmpltu	r2,r2,r6
 400bef8:	100490fa 	slli	r2,r2,3
 400befc:	3086d83a 	srl	r3,r6,r2
 400bf00:	01010074 	movhi	r4,1025
 400bf04:	21020b84 	addi	r4,r4,2094
 400bf08:	20c7883a 	add	r3,r4,r3
 400bf0c:	18c00003 	ldbu	r3,0(r3)
 400bf10:	1885883a 	add	r2,r3,r2
 400bf14:	00c00804 	movi	r3,32
 400bf18:	1887c83a 	sub	r3,r3,r2
 400bf1c:	18000526 	beq	r3,zero,400bf34 <__udivdi3+0x94>
 400bf20:	80e0983a 	sll	r16,r16,r3
 400bf24:	9884d83a 	srl	r2,r19,r2
 400bf28:	30e2983a 	sll	r17,r6,r3
 400bf2c:	98e4983a 	sll	r18,r19,r3
 400bf30:	142cb03a 	or	r22,r2,r16
 400bf34:	882ad43a 	srli	r21,r17,16
 400bf38:	b009883a 	mov	r4,r22
 400bf3c:	8d3fffcc 	andi	r20,r17,65535
 400bf40:	a80b883a 	mov	r5,r21
 400bf44:	4000aa80 	call	4000aa8 <__umodsi3>
 400bf48:	b009883a 	mov	r4,r22
 400bf4c:	a80b883a 	mov	r5,r21
 400bf50:	1027883a 	mov	r19,r2
 400bf54:	4000a440 	call	4000a44 <__udivsi3>
 400bf58:	102d883a 	mov	r22,r2
 400bf5c:	9826943a 	slli	r19,r19,16
 400bf60:	9004d43a 	srli	r2,r18,16
 400bf64:	a5a1383a 	mul	r16,r20,r22
 400bf68:	14c4b03a 	or	r2,r2,r19
 400bf6c:	1400052e 	bgeu	r2,r16,400bf84 <__udivdi3+0xe4>
 400bf70:	1445883a 	add	r2,r2,r17
 400bf74:	b0ffffc4 	addi	r3,r22,-1
 400bf78:	14400136 	bltu	r2,r17,400bf80 <__udivdi3+0xe0>
 400bf7c:	14012336 	bltu	r2,r16,400c40c <__udivdi3+0x56c>
 400bf80:	182d883a 	mov	r22,r3
 400bf84:	1421c83a 	sub	r16,r2,r16
 400bf88:	a80b883a 	mov	r5,r21
 400bf8c:	8009883a 	mov	r4,r16
 400bf90:	4000aa80 	call	4000aa8 <__umodsi3>
 400bf94:	1027883a 	mov	r19,r2
 400bf98:	a80b883a 	mov	r5,r21
 400bf9c:	8009883a 	mov	r4,r16
 400bfa0:	4000a440 	call	4000a44 <__udivsi3>
 400bfa4:	9826943a 	slli	r19,r19,16
 400bfa8:	a0a9383a 	mul	r20,r20,r2
 400bfac:	94bfffcc 	andi	r18,r18,65535
 400bfb0:	94e4b03a 	or	r18,r18,r19
 400bfb4:	9500052e 	bgeu	r18,r20,400bfcc <__udivdi3+0x12c>
 400bfb8:	8ca5883a 	add	r18,r17,r18
 400bfbc:	10ffffc4 	addi	r3,r2,-1
 400bfc0:	9440f136 	bltu	r18,r17,400c388 <__udivdi3+0x4e8>
 400bfc4:	9500f02e 	bgeu	r18,r20,400c388 <__udivdi3+0x4e8>
 400bfc8:	10bfff84 	addi	r2,r2,-2
 400bfcc:	b00c943a 	slli	r6,r22,16
 400bfd0:	0007883a 	mov	r3,zero
 400bfd4:	3084b03a 	or	r2,r6,r2
 400bfd8:	00005906 	br	400c140 <__udivdi3+0x2a0>
 400bfdc:	29c05636 	bltu	r5,r7,400c138 <__udivdi3+0x298>
 400bfe0:	00bfffd4 	movui	r2,65535
 400bfe4:	11c0622e 	bgeu	r2,r7,400c170 <__udivdi3+0x2d0>
 400bfe8:	00804034 	movhi	r2,256
 400bfec:	10bfffc4 	addi	r2,r2,-1
 400bff0:	11c0ee36 	bltu	r2,r7,400c3ac <__udivdi3+0x50c>
 400bff4:	00800404 	movi	r2,16
 400bff8:	3886d83a 	srl	r3,r7,r2
 400bffc:	01010074 	movhi	r4,1025
 400c000:	21020b84 	addi	r4,r4,2094
 400c004:	20c7883a 	add	r3,r4,r3
 400c008:	18c00003 	ldbu	r3,0(r3)
 400c00c:	05400804 	movi	r21,32
 400c010:	1885883a 	add	r2,r3,r2
 400c014:	a8abc83a 	sub	r21,r21,r2
 400c018:	a800621e 	bne	r21,zero,400c1a4 <__udivdi3+0x304>
 400c01c:	3c00e936 	bltu	r7,r16,400c3c4 <__udivdi3+0x524>
 400c020:	9985403a 	cmpgeu	r2,r19,r6
 400c024:	0007883a 	mov	r3,zero
 400c028:	00004506 	br	400c140 <__udivdi3+0x2a0>
 400c02c:	3000041e 	bne	r6,zero,400c040 <__udivdi3+0x1a0>
 400c030:	000b883a 	mov	r5,zero
 400c034:	01000044 	movi	r4,1
 400c038:	4000a440 	call	4000a44 <__udivsi3>
 400c03c:	1023883a 	mov	r17,r2
 400c040:	00bfffd4 	movui	r2,65535
 400c044:	14404e2e 	bgeu	r2,r17,400c180 <__udivdi3+0x2e0>
 400c048:	00804034 	movhi	r2,256
 400c04c:	10bfffc4 	addi	r2,r2,-1
 400c050:	1440d836 	bltu	r2,r17,400c3b4 <__udivdi3+0x514>
 400c054:	00800404 	movi	r2,16
 400c058:	8886d83a 	srl	r3,r17,r2
 400c05c:	01010074 	movhi	r4,1025
 400c060:	21020b84 	addi	r4,r4,2094
 400c064:	20c7883a 	add	r3,r4,r3
 400c068:	18c00003 	ldbu	r3,0(r3)
 400c06c:	1885883a 	add	r2,r3,r2
 400c070:	00c00804 	movi	r3,32
 400c074:	1887c83a 	sub	r3,r3,r2
 400c078:	18008f1e 	bne	r3,zero,400c2b8 <__udivdi3+0x418>
 400c07c:	882ad43a 	srli	r21,r17,16
 400c080:	8461c83a 	sub	r16,r16,r17
 400c084:	8d3fffcc 	andi	r20,r17,65535
 400c088:	00c00044 	movi	r3,1
 400c08c:	8009883a 	mov	r4,r16
 400c090:	a80b883a 	mov	r5,r21
 400c094:	d8c00015 	stw	r3,0(sp)
 400c098:	4000aa80 	call	4000aa8 <__umodsi3>
 400c09c:	8009883a 	mov	r4,r16
 400c0a0:	a80b883a 	mov	r5,r21
 400c0a4:	1027883a 	mov	r19,r2
 400c0a8:	4000a440 	call	4000a44 <__udivsi3>
 400c0ac:	9826943a 	slli	r19,r19,16
 400c0b0:	9008d43a 	srli	r4,r18,16
 400c0b4:	1521383a 	mul	r16,r2,r20
 400c0b8:	102d883a 	mov	r22,r2
 400c0bc:	24c8b03a 	or	r4,r4,r19
 400c0c0:	d8c00017 	ldw	r3,0(sp)
 400c0c4:	2400052e 	bgeu	r4,r16,400c0dc <__udivdi3+0x23c>
 400c0c8:	2449883a 	add	r4,r4,r17
 400c0cc:	b0bfffc4 	addi	r2,r22,-1
 400c0d0:	24400136 	bltu	r4,r17,400c0d8 <__udivdi3+0x238>
 400c0d4:	2400ca36 	bltu	r4,r16,400c400 <__udivdi3+0x560>
 400c0d8:	102d883a 	mov	r22,r2
 400c0dc:	2421c83a 	sub	r16,r4,r16
 400c0e0:	a80b883a 	mov	r5,r21
 400c0e4:	8009883a 	mov	r4,r16
 400c0e8:	d8c00015 	stw	r3,0(sp)
 400c0ec:	4000aa80 	call	4000aa8 <__umodsi3>
 400c0f0:	1027883a 	mov	r19,r2
 400c0f4:	a80b883a 	mov	r5,r21
 400c0f8:	8009883a 	mov	r4,r16
 400c0fc:	4000a440 	call	4000a44 <__udivsi3>
 400c100:	9826943a 	slli	r19,r19,16
 400c104:	1529383a 	mul	r20,r2,r20
 400c108:	94bfffcc 	andi	r18,r18,65535
 400c10c:	94e4b03a 	or	r18,r18,r19
 400c110:	d8c00017 	ldw	r3,0(sp)
 400c114:	9500052e 	bgeu	r18,r20,400c12c <__udivdi3+0x28c>
 400c118:	8ca5883a 	add	r18,r17,r18
 400c11c:	113fffc4 	addi	r4,r2,-1
 400c120:	94409736 	bltu	r18,r17,400c380 <__udivdi3+0x4e0>
 400c124:	9500962e 	bgeu	r18,r20,400c380 <__udivdi3+0x4e0>
 400c128:	10bfff84 	addi	r2,r2,-2
 400c12c:	b00c943a 	slli	r6,r22,16
 400c130:	3084b03a 	or	r2,r6,r2
 400c134:	00000206 	br	400c140 <__udivdi3+0x2a0>
 400c138:	0007883a 	mov	r3,zero
 400c13c:	0005883a 	mov	r2,zero
 400c140:	dfc00a17 	ldw	ra,40(sp)
 400c144:	df000917 	ldw	fp,36(sp)
 400c148:	ddc00817 	ldw	r23,32(sp)
 400c14c:	dd800717 	ldw	r22,28(sp)
 400c150:	dd400617 	ldw	r21,24(sp)
 400c154:	dd000517 	ldw	r20,20(sp)
 400c158:	dcc00417 	ldw	r19,16(sp)
 400c15c:	dc800317 	ldw	r18,12(sp)
 400c160:	dc400217 	ldw	r17,8(sp)
 400c164:	dc000117 	ldw	r16,4(sp)
 400c168:	dec00b04 	addi	sp,sp,44
 400c16c:	f800283a 	ret
 400c170:	00803fc4 	movi	r2,255
 400c174:	11c5803a 	cmpltu	r2,r2,r7
 400c178:	100490fa 	slli	r2,r2,3
 400c17c:	003f9e06 	br	400bff8 <__alt_data_end+0xfc00bff8>
 400c180:	00803fc4 	movi	r2,255
 400c184:	1445803a 	cmpltu	r2,r2,r17
 400c188:	100490fa 	slli	r2,r2,3
 400c18c:	003fb206 	br	400c058 <__alt_data_end+0xfc00c058>
 400c190:	00804034 	movhi	r2,256
 400c194:	10bfffc4 	addi	r2,r2,-1
 400c198:	11808836 	bltu	r2,r6,400c3bc <__udivdi3+0x51c>
 400c19c:	00800404 	movi	r2,16
 400c1a0:	003f5606 	br	400befc <__alt_data_end+0xfc00befc>
 400c1a4:	30aed83a 	srl	r23,r6,r2
 400c1a8:	3d4e983a 	sll	r7,r7,r21
 400c1ac:	80acd83a 	srl	r22,r16,r2
 400c1b0:	9884d83a 	srl	r2,r19,r2
 400c1b4:	3deeb03a 	or	r23,r7,r23
 400c1b8:	b824d43a 	srli	r18,r23,16
 400c1bc:	8560983a 	sll	r16,r16,r21
 400c1c0:	b009883a 	mov	r4,r22
 400c1c4:	900b883a 	mov	r5,r18
 400c1c8:	3568983a 	sll	r20,r6,r21
 400c1cc:	1420b03a 	or	r16,r2,r16
 400c1d0:	4000aa80 	call	4000aa8 <__umodsi3>
 400c1d4:	b009883a 	mov	r4,r22
 400c1d8:	900b883a 	mov	r5,r18
 400c1dc:	1023883a 	mov	r17,r2
 400c1e0:	4000a440 	call	4000a44 <__udivsi3>
 400c1e4:	8808943a 	slli	r4,r17,16
 400c1e8:	bf3fffcc 	andi	fp,r23,65535
 400c1ec:	8006d43a 	srli	r3,r16,16
 400c1f0:	e0a3383a 	mul	r17,fp,r2
 400c1f4:	100d883a 	mov	r6,r2
 400c1f8:	1906b03a 	or	r3,r3,r4
 400c1fc:	1c40042e 	bgeu	r3,r17,400c210 <__udivdi3+0x370>
 400c200:	1dc7883a 	add	r3,r3,r23
 400c204:	10bfffc4 	addi	r2,r2,-1
 400c208:	1dc0752e 	bgeu	r3,r23,400c3e0 <__udivdi3+0x540>
 400c20c:	100d883a 	mov	r6,r2
 400c210:	1c63c83a 	sub	r17,r3,r17
 400c214:	900b883a 	mov	r5,r18
 400c218:	8809883a 	mov	r4,r17
 400c21c:	d9800015 	stw	r6,0(sp)
 400c220:	4000aa80 	call	4000aa8 <__umodsi3>
 400c224:	102d883a 	mov	r22,r2
 400c228:	8809883a 	mov	r4,r17
 400c22c:	900b883a 	mov	r5,r18
 400c230:	4000a440 	call	4000a44 <__udivsi3>
 400c234:	b02c943a 	slli	r22,r22,16
 400c238:	e089383a 	mul	r4,fp,r2
 400c23c:	843fffcc 	andi	r16,r16,65535
 400c240:	85a0b03a 	or	r16,r16,r22
 400c244:	d9800017 	ldw	r6,0(sp)
 400c248:	8100042e 	bgeu	r16,r4,400c25c <__udivdi3+0x3bc>
 400c24c:	85e1883a 	add	r16,r16,r23
 400c250:	10ffffc4 	addi	r3,r2,-1
 400c254:	85c05e2e 	bgeu	r16,r23,400c3d0 <__udivdi3+0x530>
 400c258:	1805883a 	mov	r2,r3
 400c25c:	300c943a 	slli	r6,r6,16
 400c260:	a17fffcc 	andi	r5,r20,65535
 400c264:	a028d43a 	srli	r20,r20,16
 400c268:	3084b03a 	or	r2,r6,r2
 400c26c:	10ffffcc 	andi	r3,r2,65535
 400c270:	100cd43a 	srli	r6,r2,16
 400c274:	194f383a 	mul	r7,r3,r5
 400c278:	1d07383a 	mul	r3,r3,r20
 400c27c:	314b383a 	mul	r5,r6,r5
 400c280:	3810d43a 	srli	r8,r7,16
 400c284:	8121c83a 	sub	r16,r16,r4
 400c288:	1947883a 	add	r3,r3,r5
 400c28c:	40c7883a 	add	r3,r8,r3
 400c290:	350d383a 	mul	r6,r6,r20
 400c294:	1940022e 	bgeu	r3,r5,400c2a0 <__udivdi3+0x400>
 400c298:	01000074 	movhi	r4,1
 400c29c:	310d883a 	add	r6,r6,r4
 400c2a0:	1828d43a 	srli	r20,r3,16
 400c2a4:	a18d883a 	add	r6,r20,r6
 400c2a8:	81803e36 	bltu	r16,r6,400c3a4 <__udivdi3+0x504>
 400c2ac:	81803826 	beq	r16,r6,400c390 <__udivdi3+0x4f0>
 400c2b0:	0007883a 	mov	r3,zero
 400c2b4:	003fa206 	br	400c140 <__alt_data_end+0xfc00c140>
 400c2b8:	88e2983a 	sll	r17,r17,r3
 400c2bc:	80a8d83a 	srl	r20,r16,r2
 400c2c0:	80e0983a 	sll	r16,r16,r3
 400c2c4:	882ad43a 	srli	r21,r17,16
 400c2c8:	9884d83a 	srl	r2,r19,r2
 400c2cc:	a009883a 	mov	r4,r20
 400c2d0:	a80b883a 	mov	r5,r21
 400c2d4:	142eb03a 	or	r23,r2,r16
 400c2d8:	98e4983a 	sll	r18,r19,r3
 400c2dc:	4000aa80 	call	4000aa8 <__umodsi3>
 400c2e0:	a009883a 	mov	r4,r20
 400c2e4:	a80b883a 	mov	r5,r21
 400c2e8:	1021883a 	mov	r16,r2
 400c2ec:	4000a440 	call	4000a44 <__udivsi3>
 400c2f0:	1039883a 	mov	fp,r2
 400c2f4:	8d3fffcc 	andi	r20,r17,65535
 400c2f8:	8020943a 	slli	r16,r16,16
 400c2fc:	b804d43a 	srli	r2,r23,16
 400c300:	a72d383a 	mul	r22,r20,fp
 400c304:	1404b03a 	or	r2,r2,r16
 400c308:	1580062e 	bgeu	r2,r22,400c324 <__udivdi3+0x484>
 400c30c:	1445883a 	add	r2,r2,r17
 400c310:	e0ffffc4 	addi	r3,fp,-1
 400c314:	14403836 	bltu	r2,r17,400c3f8 <__udivdi3+0x558>
 400c318:	1580372e 	bgeu	r2,r22,400c3f8 <__udivdi3+0x558>
 400c31c:	e73fff84 	addi	fp,fp,-2
 400c320:	1445883a 	add	r2,r2,r17
 400c324:	15adc83a 	sub	r22,r2,r22
 400c328:	a80b883a 	mov	r5,r21
 400c32c:	b009883a 	mov	r4,r22
 400c330:	4000aa80 	call	4000aa8 <__umodsi3>
 400c334:	1027883a 	mov	r19,r2
 400c338:	b009883a 	mov	r4,r22
 400c33c:	a80b883a 	mov	r5,r21
 400c340:	4000a440 	call	4000a44 <__udivsi3>
 400c344:	9826943a 	slli	r19,r19,16
 400c348:	a0a1383a 	mul	r16,r20,r2
 400c34c:	b93fffcc 	andi	r4,r23,65535
 400c350:	24c8b03a 	or	r4,r4,r19
 400c354:	2400062e 	bgeu	r4,r16,400c370 <__udivdi3+0x4d0>
 400c358:	2449883a 	add	r4,r4,r17
 400c35c:	10ffffc4 	addi	r3,r2,-1
 400c360:	24402336 	bltu	r4,r17,400c3f0 <__udivdi3+0x550>
 400c364:	2400222e 	bgeu	r4,r16,400c3f0 <__udivdi3+0x550>
 400c368:	10bfff84 	addi	r2,r2,-2
 400c36c:	2449883a 	add	r4,r4,r17
 400c370:	e038943a 	slli	fp,fp,16
 400c374:	2421c83a 	sub	r16,r4,r16
 400c378:	e086b03a 	or	r3,fp,r2
 400c37c:	003f4306 	br	400c08c <__alt_data_end+0xfc00c08c>
 400c380:	2005883a 	mov	r2,r4
 400c384:	003f6906 	br	400c12c <__alt_data_end+0xfc00c12c>
 400c388:	1805883a 	mov	r2,r3
 400c38c:	003f0f06 	br	400bfcc <__alt_data_end+0xfc00bfcc>
 400c390:	1806943a 	slli	r3,r3,16
 400c394:	9d66983a 	sll	r19,r19,r21
 400c398:	39ffffcc 	andi	r7,r7,65535
 400c39c:	19c7883a 	add	r3,r3,r7
 400c3a0:	98ffc32e 	bgeu	r19,r3,400c2b0 <__alt_data_end+0xfc00c2b0>
 400c3a4:	10bfffc4 	addi	r2,r2,-1
 400c3a8:	003fc106 	br	400c2b0 <__alt_data_end+0xfc00c2b0>
 400c3ac:	00800604 	movi	r2,24
 400c3b0:	003f1106 	br	400bff8 <__alt_data_end+0xfc00bff8>
 400c3b4:	00800604 	movi	r2,24
 400c3b8:	003f2706 	br	400c058 <__alt_data_end+0xfc00c058>
 400c3bc:	00800604 	movi	r2,24
 400c3c0:	003ece06 	br	400befc <__alt_data_end+0xfc00befc>
 400c3c4:	0007883a 	mov	r3,zero
 400c3c8:	00800044 	movi	r2,1
 400c3cc:	003f5c06 	br	400c140 <__alt_data_end+0xfc00c140>
 400c3d0:	813fa12e 	bgeu	r16,r4,400c258 <__alt_data_end+0xfc00c258>
 400c3d4:	10bfff84 	addi	r2,r2,-2
 400c3d8:	85e1883a 	add	r16,r16,r23
 400c3dc:	003f9f06 	br	400c25c <__alt_data_end+0xfc00c25c>
 400c3e0:	1c7f8a2e 	bgeu	r3,r17,400c20c <__alt_data_end+0xfc00c20c>
 400c3e4:	31bfff84 	addi	r6,r6,-2
 400c3e8:	1dc7883a 	add	r3,r3,r23
 400c3ec:	003f8806 	br	400c210 <__alt_data_end+0xfc00c210>
 400c3f0:	1805883a 	mov	r2,r3
 400c3f4:	003fde06 	br	400c370 <__alt_data_end+0xfc00c370>
 400c3f8:	1839883a 	mov	fp,r3
 400c3fc:	003fc906 	br	400c324 <__alt_data_end+0xfc00c324>
 400c400:	b5bfff84 	addi	r22,r22,-2
 400c404:	2449883a 	add	r4,r4,r17
 400c408:	003f3406 	br	400c0dc <__alt_data_end+0xfc00c0dc>
 400c40c:	b5bfff84 	addi	r22,r22,-2
 400c410:	1445883a 	add	r2,r2,r17
 400c414:	003edb06 	br	400bf84 <__alt_data_end+0xfc00bf84>

0400c418 <__umoddi3>:
 400c418:	defff404 	addi	sp,sp,-48
 400c41c:	df000a15 	stw	fp,40(sp)
 400c420:	dc400315 	stw	r17,12(sp)
 400c424:	dc000215 	stw	r16,8(sp)
 400c428:	dfc00b15 	stw	ra,44(sp)
 400c42c:	ddc00915 	stw	r23,36(sp)
 400c430:	dd800815 	stw	r22,32(sp)
 400c434:	dd400715 	stw	r21,28(sp)
 400c438:	dd000615 	stw	r20,24(sp)
 400c43c:	dcc00515 	stw	r19,20(sp)
 400c440:	dc800415 	stw	r18,16(sp)
 400c444:	2021883a 	mov	r16,r4
 400c448:	2823883a 	mov	r17,r5
 400c44c:	2839883a 	mov	fp,r5
 400c450:	38003c1e 	bne	r7,zero,400c544 <__umoddi3+0x12c>
 400c454:	3027883a 	mov	r19,r6
 400c458:	2029883a 	mov	r20,r4
 400c45c:	2980512e 	bgeu	r5,r6,400c5a4 <__umoddi3+0x18c>
 400c460:	00bfffd4 	movui	r2,65535
 400c464:	11809a36 	bltu	r2,r6,400c6d0 <__umoddi3+0x2b8>
 400c468:	01003fc4 	movi	r4,255
 400c46c:	2189803a 	cmpltu	r4,r4,r6
 400c470:	200890fa 	slli	r4,r4,3
 400c474:	3104d83a 	srl	r2,r6,r4
 400c478:	00c10074 	movhi	r3,1025
 400c47c:	18c20b84 	addi	r3,r3,2094
 400c480:	1885883a 	add	r2,r3,r2
 400c484:	10c00003 	ldbu	r3,0(r2)
 400c488:	00800804 	movi	r2,32
 400c48c:	1909883a 	add	r4,r3,r4
 400c490:	1125c83a 	sub	r18,r2,r4
 400c494:	90000526 	beq	r18,zero,400c4ac <__umoddi3+0x94>
 400c498:	8ca2983a 	sll	r17,r17,r18
 400c49c:	8108d83a 	srl	r4,r16,r4
 400c4a0:	34a6983a 	sll	r19,r6,r18
 400c4a4:	84a8983a 	sll	r20,r16,r18
 400c4a8:	2478b03a 	or	fp,r4,r17
 400c4ac:	982ed43a 	srli	r23,r19,16
 400c4b0:	e009883a 	mov	r4,fp
 400c4b4:	9dbfffcc 	andi	r22,r19,65535
 400c4b8:	b80b883a 	mov	r5,r23
 400c4bc:	4000aa80 	call	4000aa8 <__umodsi3>
 400c4c0:	e009883a 	mov	r4,fp
 400c4c4:	b80b883a 	mov	r5,r23
 400c4c8:	102b883a 	mov	r21,r2
 400c4cc:	4000a440 	call	4000a44 <__udivsi3>
 400c4d0:	a806943a 	slli	r3,r21,16
 400c4d4:	a008d43a 	srli	r4,r20,16
 400c4d8:	b085383a 	mul	r2,r22,r2
 400c4dc:	20c8b03a 	or	r4,r4,r3
 400c4e0:	2080032e 	bgeu	r4,r2,400c4f0 <__umoddi3+0xd8>
 400c4e4:	24c9883a 	add	r4,r4,r19
 400c4e8:	24c00136 	bltu	r4,r19,400c4f0 <__umoddi3+0xd8>
 400c4ec:	20811036 	bltu	r4,r2,400c930 <__umoddi3+0x518>
 400c4f0:	20abc83a 	sub	r21,r4,r2
 400c4f4:	b80b883a 	mov	r5,r23
 400c4f8:	a809883a 	mov	r4,r21
 400c4fc:	4000aa80 	call	4000aa8 <__umodsi3>
 400c500:	1023883a 	mov	r17,r2
 400c504:	b80b883a 	mov	r5,r23
 400c508:	a809883a 	mov	r4,r21
 400c50c:	4000a440 	call	4000a44 <__udivsi3>
 400c510:	8822943a 	slli	r17,r17,16
 400c514:	b085383a 	mul	r2,r22,r2
 400c518:	a0ffffcc 	andi	r3,r20,65535
 400c51c:	1c46b03a 	or	r3,r3,r17
 400c520:	1880042e 	bgeu	r3,r2,400c534 <__umoddi3+0x11c>
 400c524:	1cc7883a 	add	r3,r3,r19
 400c528:	1cc00236 	bltu	r3,r19,400c534 <__umoddi3+0x11c>
 400c52c:	1880012e 	bgeu	r3,r2,400c534 <__umoddi3+0x11c>
 400c530:	1cc7883a 	add	r3,r3,r19
 400c534:	1885c83a 	sub	r2,r3,r2
 400c538:	1484d83a 	srl	r2,r2,r18
 400c53c:	0007883a 	mov	r3,zero
 400c540:	00004f06 	br	400c680 <__umoddi3+0x268>
 400c544:	29c04c36 	bltu	r5,r7,400c678 <__umoddi3+0x260>
 400c548:	00bfffd4 	movui	r2,65535
 400c54c:	11c0582e 	bgeu	r2,r7,400c6b0 <__umoddi3+0x298>
 400c550:	00804034 	movhi	r2,256
 400c554:	10bfffc4 	addi	r2,r2,-1
 400c558:	11c0e736 	bltu	r2,r7,400c8f8 <__umoddi3+0x4e0>
 400c55c:	01000404 	movi	r4,16
 400c560:	3904d83a 	srl	r2,r7,r4
 400c564:	00c10074 	movhi	r3,1025
 400c568:	18c20b84 	addi	r3,r3,2094
 400c56c:	1885883a 	add	r2,r3,r2
 400c570:	14c00003 	ldbu	r19,0(r2)
 400c574:	00c00804 	movi	r3,32
 400c578:	9927883a 	add	r19,r19,r4
 400c57c:	1ce9c83a 	sub	r20,r3,r19
 400c580:	a000581e 	bne	r20,zero,400c6e4 <__umoddi3+0x2cc>
 400c584:	3c400136 	bltu	r7,r17,400c58c <__umoddi3+0x174>
 400c588:	8180eb36 	bltu	r16,r6,400c938 <__umoddi3+0x520>
 400c58c:	8185c83a 	sub	r2,r16,r6
 400c590:	89e3c83a 	sub	r17,r17,r7
 400c594:	8089803a 	cmpltu	r4,r16,r2
 400c598:	8939c83a 	sub	fp,r17,r4
 400c59c:	e007883a 	mov	r3,fp
 400c5a0:	00003706 	br	400c680 <__umoddi3+0x268>
 400c5a4:	3000041e 	bne	r6,zero,400c5b8 <__umoddi3+0x1a0>
 400c5a8:	000b883a 	mov	r5,zero
 400c5ac:	01000044 	movi	r4,1
 400c5b0:	4000a440 	call	4000a44 <__udivsi3>
 400c5b4:	1027883a 	mov	r19,r2
 400c5b8:	00bfffd4 	movui	r2,65535
 400c5bc:	14c0402e 	bgeu	r2,r19,400c6c0 <__umoddi3+0x2a8>
 400c5c0:	00804034 	movhi	r2,256
 400c5c4:	10bfffc4 	addi	r2,r2,-1
 400c5c8:	14c0cd36 	bltu	r2,r19,400c900 <__umoddi3+0x4e8>
 400c5cc:	00800404 	movi	r2,16
 400c5d0:	9886d83a 	srl	r3,r19,r2
 400c5d4:	01010074 	movhi	r4,1025
 400c5d8:	21020b84 	addi	r4,r4,2094
 400c5dc:	20c7883a 	add	r3,r4,r3
 400c5e0:	18c00003 	ldbu	r3,0(r3)
 400c5e4:	1887883a 	add	r3,r3,r2
 400c5e8:	00800804 	movi	r2,32
 400c5ec:	10e5c83a 	sub	r18,r2,r3
 400c5f0:	9000901e 	bne	r18,zero,400c834 <__umoddi3+0x41c>
 400c5f4:	982cd43a 	srli	r22,r19,16
 400c5f8:	8ce3c83a 	sub	r17,r17,r19
 400c5fc:	9d7fffcc 	andi	r21,r19,65535
 400c600:	b00b883a 	mov	r5,r22
 400c604:	8809883a 	mov	r4,r17
 400c608:	4000aa80 	call	4000aa8 <__umodsi3>
 400c60c:	8809883a 	mov	r4,r17
 400c610:	b00b883a 	mov	r5,r22
 400c614:	1021883a 	mov	r16,r2
 400c618:	4000a440 	call	4000a44 <__udivsi3>
 400c61c:	8006943a 	slli	r3,r16,16
 400c620:	a008d43a 	srli	r4,r20,16
 400c624:	1545383a 	mul	r2,r2,r21
 400c628:	20c8b03a 	or	r4,r4,r3
 400c62c:	2080042e 	bgeu	r4,r2,400c640 <__umoddi3+0x228>
 400c630:	24c9883a 	add	r4,r4,r19
 400c634:	24c00236 	bltu	r4,r19,400c640 <__umoddi3+0x228>
 400c638:	2080012e 	bgeu	r4,r2,400c640 <__umoddi3+0x228>
 400c63c:	24c9883a 	add	r4,r4,r19
 400c640:	20a1c83a 	sub	r16,r4,r2
 400c644:	b00b883a 	mov	r5,r22
 400c648:	8009883a 	mov	r4,r16
 400c64c:	4000aa80 	call	4000aa8 <__umodsi3>
 400c650:	1023883a 	mov	r17,r2
 400c654:	b00b883a 	mov	r5,r22
 400c658:	8009883a 	mov	r4,r16
 400c65c:	4000a440 	call	4000a44 <__udivsi3>
 400c660:	8822943a 	slli	r17,r17,16
 400c664:	1545383a 	mul	r2,r2,r21
 400c668:	a53fffcc 	andi	r20,r20,65535
 400c66c:	a446b03a 	or	r3,r20,r17
 400c670:	18bfb02e 	bgeu	r3,r2,400c534 <__alt_data_end+0xfc00c534>
 400c674:	003fab06 	br	400c524 <__alt_data_end+0xfc00c524>
 400c678:	2005883a 	mov	r2,r4
 400c67c:	2807883a 	mov	r3,r5
 400c680:	dfc00b17 	ldw	ra,44(sp)
 400c684:	df000a17 	ldw	fp,40(sp)
 400c688:	ddc00917 	ldw	r23,36(sp)
 400c68c:	dd800817 	ldw	r22,32(sp)
 400c690:	dd400717 	ldw	r21,28(sp)
 400c694:	dd000617 	ldw	r20,24(sp)
 400c698:	dcc00517 	ldw	r19,20(sp)
 400c69c:	dc800417 	ldw	r18,16(sp)
 400c6a0:	dc400317 	ldw	r17,12(sp)
 400c6a4:	dc000217 	ldw	r16,8(sp)
 400c6a8:	dec00c04 	addi	sp,sp,48
 400c6ac:	f800283a 	ret
 400c6b0:	04c03fc4 	movi	r19,255
 400c6b4:	99c9803a 	cmpltu	r4,r19,r7
 400c6b8:	200890fa 	slli	r4,r4,3
 400c6bc:	003fa806 	br	400c560 <__alt_data_end+0xfc00c560>
 400c6c0:	00803fc4 	movi	r2,255
 400c6c4:	14c5803a 	cmpltu	r2,r2,r19
 400c6c8:	100490fa 	slli	r2,r2,3
 400c6cc:	003fc006 	br	400c5d0 <__alt_data_end+0xfc00c5d0>
 400c6d0:	00804034 	movhi	r2,256
 400c6d4:	10bfffc4 	addi	r2,r2,-1
 400c6d8:	11808b36 	bltu	r2,r6,400c908 <__umoddi3+0x4f0>
 400c6dc:	01000404 	movi	r4,16
 400c6e0:	003f6406 	br	400c474 <__alt_data_end+0xfc00c474>
 400c6e4:	34c4d83a 	srl	r2,r6,r19
 400c6e8:	3d0e983a 	sll	r7,r7,r20
 400c6ec:	8cf8d83a 	srl	fp,r17,r19
 400c6f0:	8d10983a 	sll	r8,r17,r20
 400c6f4:	38aab03a 	or	r21,r7,r2
 400c6f8:	a82cd43a 	srli	r22,r21,16
 400c6fc:	84e2d83a 	srl	r17,r16,r19
 400c700:	e009883a 	mov	r4,fp
 400c704:	b00b883a 	mov	r5,r22
 400c708:	8a22b03a 	or	r17,r17,r8
 400c70c:	3524983a 	sll	r18,r6,r20
 400c710:	4000aa80 	call	4000aa8 <__umodsi3>
 400c714:	e009883a 	mov	r4,fp
 400c718:	b00b883a 	mov	r5,r22
 400c71c:	102f883a 	mov	r23,r2
 400c720:	4000a440 	call	4000a44 <__udivsi3>
 400c724:	100d883a 	mov	r6,r2
 400c728:	b808943a 	slli	r4,r23,16
 400c72c:	aa3fffcc 	andi	r8,r21,65535
 400c730:	8804d43a 	srli	r2,r17,16
 400c734:	41af383a 	mul	r23,r8,r6
 400c738:	8520983a 	sll	r16,r16,r20
 400c73c:	1104b03a 	or	r2,r2,r4
 400c740:	15c0042e 	bgeu	r2,r23,400c754 <__umoddi3+0x33c>
 400c744:	1545883a 	add	r2,r2,r21
 400c748:	30ffffc4 	addi	r3,r6,-1
 400c74c:	1540742e 	bgeu	r2,r21,400c920 <__umoddi3+0x508>
 400c750:	180d883a 	mov	r6,r3
 400c754:	15efc83a 	sub	r23,r2,r23
 400c758:	b00b883a 	mov	r5,r22
 400c75c:	b809883a 	mov	r4,r23
 400c760:	d9800115 	stw	r6,4(sp)
 400c764:	da000015 	stw	r8,0(sp)
 400c768:	4000aa80 	call	4000aa8 <__umodsi3>
 400c76c:	b00b883a 	mov	r5,r22
 400c770:	b809883a 	mov	r4,r23
 400c774:	1039883a 	mov	fp,r2
 400c778:	4000a440 	call	4000a44 <__udivsi3>
 400c77c:	da000017 	ldw	r8,0(sp)
 400c780:	e038943a 	slli	fp,fp,16
 400c784:	100b883a 	mov	r5,r2
 400c788:	4089383a 	mul	r4,r8,r2
 400c78c:	8a3fffcc 	andi	r8,r17,65535
 400c790:	4710b03a 	or	r8,r8,fp
 400c794:	d9800117 	ldw	r6,4(sp)
 400c798:	4100042e 	bgeu	r8,r4,400c7ac <__umoddi3+0x394>
 400c79c:	4551883a 	add	r8,r8,r21
 400c7a0:	10bfffc4 	addi	r2,r2,-1
 400c7a4:	45405a2e 	bgeu	r8,r21,400c910 <__umoddi3+0x4f8>
 400c7a8:	100b883a 	mov	r5,r2
 400c7ac:	300c943a 	slli	r6,r6,16
 400c7b0:	91ffffcc 	andi	r7,r18,65535
 400c7b4:	9004d43a 	srli	r2,r18,16
 400c7b8:	314cb03a 	or	r6,r6,r5
 400c7bc:	317fffcc 	andi	r5,r6,65535
 400c7c0:	300cd43a 	srli	r6,r6,16
 400c7c4:	29d3383a 	mul	r9,r5,r7
 400c7c8:	288b383a 	mul	r5,r5,r2
 400c7cc:	31cf383a 	mul	r7,r6,r7
 400c7d0:	4806d43a 	srli	r3,r9,16
 400c7d4:	4111c83a 	sub	r8,r8,r4
 400c7d8:	29cb883a 	add	r5,r5,r7
 400c7dc:	194b883a 	add	r5,r3,r5
 400c7e0:	3085383a 	mul	r2,r6,r2
 400c7e4:	29c0022e 	bgeu	r5,r7,400c7f0 <__umoddi3+0x3d8>
 400c7e8:	00c00074 	movhi	r3,1
 400c7ec:	10c5883a 	add	r2,r2,r3
 400c7f0:	2808d43a 	srli	r4,r5,16
 400c7f4:	280a943a 	slli	r5,r5,16
 400c7f8:	4a7fffcc 	andi	r9,r9,65535
 400c7fc:	2085883a 	add	r2,r4,r2
 400c800:	2a4b883a 	add	r5,r5,r9
 400c804:	40803636 	bltu	r8,r2,400c8e0 <__umoddi3+0x4c8>
 400c808:	40804d26 	beq	r8,r2,400c940 <__umoddi3+0x528>
 400c80c:	4089c83a 	sub	r4,r8,r2
 400c810:	280f883a 	mov	r7,r5
 400c814:	81cfc83a 	sub	r7,r16,r7
 400c818:	81c7803a 	cmpltu	r3,r16,r7
 400c81c:	20c7c83a 	sub	r3,r4,r3
 400c820:	1cc4983a 	sll	r2,r3,r19
 400c824:	3d0ed83a 	srl	r7,r7,r20
 400c828:	1d06d83a 	srl	r3,r3,r20
 400c82c:	11c4b03a 	or	r2,r2,r7
 400c830:	003f9306 	br	400c680 <__alt_data_end+0xfc00c680>
 400c834:	9ca6983a 	sll	r19,r19,r18
 400c838:	88e8d83a 	srl	r20,r17,r3
 400c83c:	80c4d83a 	srl	r2,r16,r3
 400c840:	982cd43a 	srli	r22,r19,16
 400c844:	8ca2983a 	sll	r17,r17,r18
 400c848:	a009883a 	mov	r4,r20
 400c84c:	b00b883a 	mov	r5,r22
 400c850:	1478b03a 	or	fp,r2,r17
 400c854:	4000aa80 	call	4000aa8 <__umodsi3>
 400c858:	a009883a 	mov	r4,r20
 400c85c:	b00b883a 	mov	r5,r22
 400c860:	1023883a 	mov	r17,r2
 400c864:	4000a440 	call	4000a44 <__udivsi3>
 400c868:	9d7fffcc 	andi	r21,r19,65535
 400c86c:	880a943a 	slli	r5,r17,16
 400c870:	e008d43a 	srli	r4,fp,16
 400c874:	a885383a 	mul	r2,r21,r2
 400c878:	84a8983a 	sll	r20,r16,r18
 400c87c:	2148b03a 	or	r4,r4,r5
 400c880:	2080042e 	bgeu	r4,r2,400c894 <__umoddi3+0x47c>
 400c884:	24c9883a 	add	r4,r4,r19
 400c888:	24c00236 	bltu	r4,r19,400c894 <__umoddi3+0x47c>
 400c88c:	2080012e 	bgeu	r4,r2,400c894 <__umoddi3+0x47c>
 400c890:	24c9883a 	add	r4,r4,r19
 400c894:	20a3c83a 	sub	r17,r4,r2
 400c898:	b00b883a 	mov	r5,r22
 400c89c:	8809883a 	mov	r4,r17
 400c8a0:	4000aa80 	call	4000aa8 <__umodsi3>
 400c8a4:	102f883a 	mov	r23,r2
 400c8a8:	8809883a 	mov	r4,r17
 400c8ac:	b00b883a 	mov	r5,r22
 400c8b0:	4000a440 	call	4000a44 <__udivsi3>
 400c8b4:	b82e943a 	slli	r23,r23,16
 400c8b8:	a885383a 	mul	r2,r21,r2
 400c8bc:	e13fffcc 	andi	r4,fp,65535
 400c8c0:	25c8b03a 	or	r4,r4,r23
 400c8c4:	2080042e 	bgeu	r4,r2,400c8d8 <__umoddi3+0x4c0>
 400c8c8:	24c9883a 	add	r4,r4,r19
 400c8cc:	24c00236 	bltu	r4,r19,400c8d8 <__umoddi3+0x4c0>
 400c8d0:	2080012e 	bgeu	r4,r2,400c8d8 <__umoddi3+0x4c0>
 400c8d4:	24c9883a 	add	r4,r4,r19
 400c8d8:	20a3c83a 	sub	r17,r4,r2
 400c8dc:	003f4806 	br	400c600 <__alt_data_end+0xfc00c600>
 400c8e0:	2c8fc83a 	sub	r7,r5,r18
 400c8e4:	1545c83a 	sub	r2,r2,r21
 400c8e8:	29cb803a 	cmpltu	r5,r5,r7
 400c8ec:	1145c83a 	sub	r2,r2,r5
 400c8f0:	4089c83a 	sub	r4,r8,r2
 400c8f4:	003fc706 	br	400c814 <__alt_data_end+0xfc00c814>
 400c8f8:	01000604 	movi	r4,24
 400c8fc:	003f1806 	br	400c560 <__alt_data_end+0xfc00c560>
 400c900:	00800604 	movi	r2,24
 400c904:	003f3206 	br	400c5d0 <__alt_data_end+0xfc00c5d0>
 400c908:	01000604 	movi	r4,24
 400c90c:	003ed906 	br	400c474 <__alt_data_end+0xfc00c474>
 400c910:	413fa52e 	bgeu	r8,r4,400c7a8 <__alt_data_end+0xfc00c7a8>
 400c914:	297fff84 	addi	r5,r5,-2
 400c918:	4551883a 	add	r8,r8,r21
 400c91c:	003fa306 	br	400c7ac <__alt_data_end+0xfc00c7ac>
 400c920:	15ff8b2e 	bgeu	r2,r23,400c750 <__alt_data_end+0xfc00c750>
 400c924:	31bfff84 	addi	r6,r6,-2
 400c928:	1545883a 	add	r2,r2,r21
 400c92c:	003f8906 	br	400c754 <__alt_data_end+0xfc00c754>
 400c930:	24c9883a 	add	r4,r4,r19
 400c934:	003eee06 	br	400c4f0 <__alt_data_end+0xfc00c4f0>
 400c938:	8005883a 	mov	r2,r16
 400c93c:	003f1706 	br	400c59c <__alt_data_end+0xfc00c59c>
 400c940:	817fe736 	bltu	r16,r5,400c8e0 <__alt_data_end+0xfc00c8e0>
 400c944:	280f883a 	mov	r7,r5
 400c948:	0009883a 	mov	r4,zero
 400c94c:	003fb106 	br	400c814 <__alt_data_end+0xfc00c814>

0400c950 <__adddf3>:
 400c950:	02c00434 	movhi	r11,16
 400c954:	5affffc4 	addi	r11,r11,-1
 400c958:	2806d7fa 	srli	r3,r5,31
 400c95c:	2ad4703a 	and	r10,r5,r11
 400c960:	3ad2703a 	and	r9,r7,r11
 400c964:	3804d53a 	srli	r2,r7,20
 400c968:	3018d77a 	srli	r12,r6,29
 400c96c:	280ad53a 	srli	r5,r5,20
 400c970:	501490fa 	slli	r10,r10,3
 400c974:	2010d77a 	srli	r8,r4,29
 400c978:	481290fa 	slli	r9,r9,3
 400c97c:	380ed7fa 	srli	r7,r7,31
 400c980:	defffb04 	addi	sp,sp,-20
 400c984:	dc800215 	stw	r18,8(sp)
 400c988:	dc400115 	stw	r17,4(sp)
 400c98c:	dc000015 	stw	r16,0(sp)
 400c990:	dfc00415 	stw	ra,16(sp)
 400c994:	dcc00315 	stw	r19,12(sp)
 400c998:	1c803fcc 	andi	r18,r3,255
 400c99c:	2c01ffcc 	andi	r16,r5,2047
 400c9a0:	5210b03a 	or	r8,r10,r8
 400c9a4:	202290fa 	slli	r17,r4,3
 400c9a8:	1081ffcc 	andi	r2,r2,2047
 400c9ac:	4b12b03a 	or	r9,r9,r12
 400c9b0:	300c90fa 	slli	r6,r6,3
 400c9b4:	91c07526 	beq	r18,r7,400cb8c <__adddf3+0x23c>
 400c9b8:	8087c83a 	sub	r3,r16,r2
 400c9bc:	00c0ab0e 	bge	zero,r3,400cc6c <__adddf3+0x31c>
 400c9c0:	10002a1e 	bne	r2,zero,400ca6c <__adddf3+0x11c>
 400c9c4:	4984b03a 	or	r2,r9,r6
 400c9c8:	1000961e 	bne	r2,zero,400cc24 <__adddf3+0x2d4>
 400c9cc:	888001cc 	andi	r2,r17,7
 400c9d0:	10000726 	beq	r2,zero,400c9f0 <__adddf3+0xa0>
 400c9d4:	888003cc 	andi	r2,r17,15
 400c9d8:	00c00104 	movi	r3,4
 400c9dc:	10c00426 	beq	r2,r3,400c9f0 <__adddf3+0xa0>
 400c9e0:	88c7883a 	add	r3,r17,r3
 400c9e4:	1c63803a 	cmpltu	r17,r3,r17
 400c9e8:	4451883a 	add	r8,r8,r17
 400c9ec:	1823883a 	mov	r17,r3
 400c9f0:	4080202c 	andhi	r2,r8,128
 400c9f4:	10005926 	beq	r2,zero,400cb5c <__adddf3+0x20c>
 400c9f8:	84000044 	addi	r16,r16,1
 400c9fc:	0081ffc4 	movi	r2,2047
 400ca00:	8080ba26 	beq	r16,r2,400ccec <__adddf3+0x39c>
 400ca04:	00bfe034 	movhi	r2,65408
 400ca08:	10bfffc4 	addi	r2,r2,-1
 400ca0c:	4090703a 	and	r8,r8,r2
 400ca10:	4004977a 	slli	r2,r8,29
 400ca14:	4010927a 	slli	r8,r8,9
 400ca18:	8822d0fa 	srli	r17,r17,3
 400ca1c:	8401ffcc 	andi	r16,r16,2047
 400ca20:	4010d33a 	srli	r8,r8,12
 400ca24:	9007883a 	mov	r3,r18
 400ca28:	1444b03a 	or	r2,r2,r17
 400ca2c:	8401ffcc 	andi	r16,r16,2047
 400ca30:	8020953a 	slli	r16,r16,20
 400ca34:	18c03fcc 	andi	r3,r3,255
 400ca38:	01000434 	movhi	r4,16
 400ca3c:	213fffc4 	addi	r4,r4,-1
 400ca40:	180697fa 	slli	r3,r3,31
 400ca44:	4110703a 	and	r8,r8,r4
 400ca48:	4410b03a 	or	r8,r8,r16
 400ca4c:	40c6b03a 	or	r3,r8,r3
 400ca50:	dfc00417 	ldw	ra,16(sp)
 400ca54:	dcc00317 	ldw	r19,12(sp)
 400ca58:	dc800217 	ldw	r18,8(sp)
 400ca5c:	dc400117 	ldw	r17,4(sp)
 400ca60:	dc000017 	ldw	r16,0(sp)
 400ca64:	dec00504 	addi	sp,sp,20
 400ca68:	f800283a 	ret
 400ca6c:	0081ffc4 	movi	r2,2047
 400ca70:	80bfd626 	beq	r16,r2,400c9cc <__alt_data_end+0xfc00c9cc>
 400ca74:	4a402034 	orhi	r9,r9,128
 400ca78:	00800e04 	movi	r2,56
 400ca7c:	10c09f16 	blt	r2,r3,400ccfc <__adddf3+0x3ac>
 400ca80:	008007c4 	movi	r2,31
 400ca84:	10c0c216 	blt	r2,r3,400cd90 <__adddf3+0x440>
 400ca88:	00800804 	movi	r2,32
 400ca8c:	10c5c83a 	sub	r2,r2,r3
 400ca90:	488a983a 	sll	r5,r9,r2
 400ca94:	30c8d83a 	srl	r4,r6,r3
 400ca98:	3084983a 	sll	r2,r6,r2
 400ca9c:	48c6d83a 	srl	r3,r9,r3
 400caa0:	290cb03a 	or	r6,r5,r4
 400caa4:	1004c03a 	cmpne	r2,r2,zero
 400caa8:	308cb03a 	or	r6,r6,r2
 400caac:	898dc83a 	sub	r6,r17,r6
 400cab0:	89a3803a 	cmpltu	r17,r17,r6
 400cab4:	40d1c83a 	sub	r8,r8,r3
 400cab8:	4451c83a 	sub	r8,r8,r17
 400cabc:	3023883a 	mov	r17,r6
 400cac0:	4080202c 	andhi	r2,r8,128
 400cac4:	10002326 	beq	r2,zero,400cb54 <__adddf3+0x204>
 400cac8:	04c02034 	movhi	r19,128
 400cacc:	9cffffc4 	addi	r19,r19,-1
 400cad0:	44e6703a 	and	r19,r8,r19
 400cad4:	98007626 	beq	r19,zero,400ccb0 <__adddf3+0x360>
 400cad8:	9809883a 	mov	r4,r19
 400cadc:	40026600 	call	4002660 <__clzsi2>
 400cae0:	10fffe04 	addi	r3,r2,-8
 400cae4:	010007c4 	movi	r4,31
 400cae8:	20c07716 	blt	r4,r3,400ccc8 <__adddf3+0x378>
 400caec:	00800804 	movi	r2,32
 400caf0:	10c5c83a 	sub	r2,r2,r3
 400caf4:	8884d83a 	srl	r2,r17,r2
 400caf8:	98d0983a 	sll	r8,r19,r3
 400cafc:	88e2983a 	sll	r17,r17,r3
 400cb00:	1204b03a 	or	r2,r2,r8
 400cb04:	1c007416 	blt	r3,r16,400ccd8 <__adddf3+0x388>
 400cb08:	1c21c83a 	sub	r16,r3,r16
 400cb0c:	82000044 	addi	r8,r16,1
 400cb10:	00c007c4 	movi	r3,31
 400cb14:	1a009116 	blt	r3,r8,400cd5c <__adddf3+0x40c>
 400cb18:	00c00804 	movi	r3,32
 400cb1c:	1a07c83a 	sub	r3,r3,r8
 400cb20:	8a08d83a 	srl	r4,r17,r8
 400cb24:	88e2983a 	sll	r17,r17,r3
 400cb28:	10c6983a 	sll	r3,r2,r3
 400cb2c:	1210d83a 	srl	r8,r2,r8
 400cb30:	8804c03a 	cmpne	r2,r17,zero
 400cb34:	1906b03a 	or	r3,r3,r4
 400cb38:	18a2b03a 	or	r17,r3,r2
 400cb3c:	0021883a 	mov	r16,zero
 400cb40:	003fa206 	br	400c9cc <__alt_data_end+0xfc00c9cc>
 400cb44:	1890b03a 	or	r8,r3,r2
 400cb48:	40017d26 	beq	r8,zero,400d140 <__adddf3+0x7f0>
 400cb4c:	1011883a 	mov	r8,r2
 400cb50:	1823883a 	mov	r17,r3
 400cb54:	888001cc 	andi	r2,r17,7
 400cb58:	103f9e1e 	bne	r2,zero,400c9d4 <__alt_data_end+0xfc00c9d4>
 400cb5c:	4004977a 	slli	r2,r8,29
 400cb60:	8822d0fa 	srli	r17,r17,3
 400cb64:	4010d0fa 	srli	r8,r8,3
 400cb68:	9007883a 	mov	r3,r18
 400cb6c:	1444b03a 	or	r2,r2,r17
 400cb70:	0101ffc4 	movi	r4,2047
 400cb74:	81002426 	beq	r16,r4,400cc08 <__adddf3+0x2b8>
 400cb78:	8120703a 	and	r16,r16,r4
 400cb7c:	01000434 	movhi	r4,16
 400cb80:	213fffc4 	addi	r4,r4,-1
 400cb84:	4110703a 	and	r8,r8,r4
 400cb88:	003fa806 	br	400ca2c <__alt_data_end+0xfc00ca2c>
 400cb8c:	8089c83a 	sub	r4,r16,r2
 400cb90:	01005e0e 	bge	zero,r4,400cd0c <__adddf3+0x3bc>
 400cb94:	10002b26 	beq	r2,zero,400cc44 <__adddf3+0x2f4>
 400cb98:	0081ffc4 	movi	r2,2047
 400cb9c:	80bf8b26 	beq	r16,r2,400c9cc <__alt_data_end+0xfc00c9cc>
 400cba0:	4a402034 	orhi	r9,r9,128
 400cba4:	00800e04 	movi	r2,56
 400cba8:	1100a40e 	bge	r2,r4,400ce3c <__adddf3+0x4ec>
 400cbac:	498cb03a 	or	r6,r9,r6
 400cbb0:	300ac03a 	cmpne	r5,r6,zero
 400cbb4:	0013883a 	mov	r9,zero
 400cbb8:	2c4b883a 	add	r5,r5,r17
 400cbbc:	2c63803a 	cmpltu	r17,r5,r17
 400cbc0:	4a11883a 	add	r8,r9,r8
 400cbc4:	8a11883a 	add	r8,r17,r8
 400cbc8:	2823883a 	mov	r17,r5
 400cbcc:	4080202c 	andhi	r2,r8,128
 400cbd0:	103fe026 	beq	r2,zero,400cb54 <__alt_data_end+0xfc00cb54>
 400cbd4:	84000044 	addi	r16,r16,1
 400cbd8:	0081ffc4 	movi	r2,2047
 400cbdc:	8080d226 	beq	r16,r2,400cf28 <__adddf3+0x5d8>
 400cbe0:	00bfe034 	movhi	r2,65408
 400cbe4:	10bfffc4 	addi	r2,r2,-1
 400cbe8:	4090703a 	and	r8,r8,r2
 400cbec:	880ad07a 	srli	r5,r17,1
 400cbf0:	400897fa 	slli	r4,r8,31
 400cbf4:	88c0004c 	andi	r3,r17,1
 400cbf8:	28e2b03a 	or	r17,r5,r3
 400cbfc:	4010d07a 	srli	r8,r8,1
 400cc00:	2462b03a 	or	r17,r4,r17
 400cc04:	003f7106 	br	400c9cc <__alt_data_end+0xfc00c9cc>
 400cc08:	4088b03a 	or	r4,r8,r2
 400cc0c:	20014526 	beq	r4,zero,400d124 <__adddf3+0x7d4>
 400cc10:	01000434 	movhi	r4,16
 400cc14:	42000234 	orhi	r8,r8,8
 400cc18:	213fffc4 	addi	r4,r4,-1
 400cc1c:	4110703a 	and	r8,r8,r4
 400cc20:	003f8206 	br	400ca2c <__alt_data_end+0xfc00ca2c>
 400cc24:	18ffffc4 	addi	r3,r3,-1
 400cc28:	1800491e 	bne	r3,zero,400cd50 <__adddf3+0x400>
 400cc2c:	898bc83a 	sub	r5,r17,r6
 400cc30:	8963803a 	cmpltu	r17,r17,r5
 400cc34:	4251c83a 	sub	r8,r8,r9
 400cc38:	4451c83a 	sub	r8,r8,r17
 400cc3c:	2823883a 	mov	r17,r5
 400cc40:	003f9f06 	br	400cac0 <__alt_data_end+0xfc00cac0>
 400cc44:	4984b03a 	or	r2,r9,r6
 400cc48:	103f6026 	beq	r2,zero,400c9cc <__alt_data_end+0xfc00c9cc>
 400cc4c:	213fffc4 	addi	r4,r4,-1
 400cc50:	2000931e 	bne	r4,zero,400cea0 <__adddf3+0x550>
 400cc54:	898d883a 	add	r6,r17,r6
 400cc58:	3463803a 	cmpltu	r17,r6,r17
 400cc5c:	4251883a 	add	r8,r8,r9
 400cc60:	8a11883a 	add	r8,r17,r8
 400cc64:	3023883a 	mov	r17,r6
 400cc68:	003fd806 	br	400cbcc <__alt_data_end+0xfc00cbcc>
 400cc6c:	1800541e 	bne	r3,zero,400cdc0 <__adddf3+0x470>
 400cc70:	80800044 	addi	r2,r16,1
 400cc74:	1081ffcc 	andi	r2,r2,2047
 400cc78:	00c00044 	movi	r3,1
 400cc7c:	1880a00e 	bge	r3,r2,400cf00 <__adddf3+0x5b0>
 400cc80:	8989c83a 	sub	r4,r17,r6
 400cc84:	8905803a 	cmpltu	r2,r17,r4
 400cc88:	4267c83a 	sub	r19,r8,r9
 400cc8c:	98a7c83a 	sub	r19,r19,r2
 400cc90:	9880202c 	andhi	r2,r19,128
 400cc94:	10006326 	beq	r2,zero,400ce24 <__adddf3+0x4d4>
 400cc98:	3463c83a 	sub	r17,r6,r17
 400cc9c:	4a07c83a 	sub	r3,r9,r8
 400cca0:	344d803a 	cmpltu	r6,r6,r17
 400cca4:	19a7c83a 	sub	r19,r3,r6
 400cca8:	3825883a 	mov	r18,r7
 400ccac:	983f8a1e 	bne	r19,zero,400cad8 <__alt_data_end+0xfc00cad8>
 400ccb0:	8809883a 	mov	r4,r17
 400ccb4:	40026600 	call	4002660 <__clzsi2>
 400ccb8:	10800804 	addi	r2,r2,32
 400ccbc:	10fffe04 	addi	r3,r2,-8
 400ccc0:	010007c4 	movi	r4,31
 400ccc4:	20ff890e 	bge	r4,r3,400caec <__alt_data_end+0xfc00caec>
 400ccc8:	10bff604 	addi	r2,r2,-40
 400cccc:	8884983a 	sll	r2,r17,r2
 400ccd0:	0023883a 	mov	r17,zero
 400ccd4:	1c3f8c0e 	bge	r3,r16,400cb08 <__alt_data_end+0xfc00cb08>
 400ccd8:	023fe034 	movhi	r8,65408
 400ccdc:	423fffc4 	addi	r8,r8,-1
 400cce0:	80e1c83a 	sub	r16,r16,r3
 400cce4:	1210703a 	and	r8,r2,r8
 400cce8:	003f3806 	br	400c9cc <__alt_data_end+0xfc00c9cc>
 400ccec:	9007883a 	mov	r3,r18
 400ccf0:	0011883a 	mov	r8,zero
 400ccf4:	0005883a 	mov	r2,zero
 400ccf8:	003f4c06 	br	400ca2c <__alt_data_end+0xfc00ca2c>
 400ccfc:	498cb03a 	or	r6,r9,r6
 400cd00:	300cc03a 	cmpne	r6,r6,zero
 400cd04:	0007883a 	mov	r3,zero
 400cd08:	003f6806 	br	400caac <__alt_data_end+0xfc00caac>
 400cd0c:	20009c1e 	bne	r4,zero,400cf80 <__adddf3+0x630>
 400cd10:	80800044 	addi	r2,r16,1
 400cd14:	1141ffcc 	andi	r5,r2,2047
 400cd18:	01000044 	movi	r4,1
 400cd1c:	2140670e 	bge	r4,r5,400cebc <__adddf3+0x56c>
 400cd20:	0101ffc4 	movi	r4,2047
 400cd24:	11007f26 	beq	r2,r4,400cf24 <__adddf3+0x5d4>
 400cd28:	898d883a 	add	r6,r17,r6
 400cd2c:	4247883a 	add	r3,r8,r9
 400cd30:	3451803a 	cmpltu	r8,r6,r17
 400cd34:	40d1883a 	add	r8,r8,r3
 400cd38:	402297fa 	slli	r17,r8,31
 400cd3c:	300cd07a 	srli	r6,r6,1
 400cd40:	4010d07a 	srli	r8,r8,1
 400cd44:	1021883a 	mov	r16,r2
 400cd48:	89a2b03a 	or	r17,r17,r6
 400cd4c:	003f1f06 	br	400c9cc <__alt_data_end+0xfc00c9cc>
 400cd50:	0081ffc4 	movi	r2,2047
 400cd54:	80bf481e 	bne	r16,r2,400ca78 <__alt_data_end+0xfc00ca78>
 400cd58:	003f1c06 	br	400c9cc <__alt_data_end+0xfc00c9cc>
 400cd5c:	843ff844 	addi	r16,r16,-31
 400cd60:	01000804 	movi	r4,32
 400cd64:	1406d83a 	srl	r3,r2,r16
 400cd68:	41005026 	beq	r8,r4,400ceac <__adddf3+0x55c>
 400cd6c:	01001004 	movi	r4,64
 400cd70:	2211c83a 	sub	r8,r4,r8
 400cd74:	1204983a 	sll	r2,r2,r8
 400cd78:	88a2b03a 	or	r17,r17,r2
 400cd7c:	8822c03a 	cmpne	r17,r17,zero
 400cd80:	1c62b03a 	or	r17,r3,r17
 400cd84:	0011883a 	mov	r8,zero
 400cd88:	0021883a 	mov	r16,zero
 400cd8c:	003f7106 	br	400cb54 <__alt_data_end+0xfc00cb54>
 400cd90:	193ff804 	addi	r4,r3,-32
 400cd94:	00800804 	movi	r2,32
 400cd98:	4908d83a 	srl	r4,r9,r4
 400cd9c:	18804526 	beq	r3,r2,400ceb4 <__adddf3+0x564>
 400cda0:	00801004 	movi	r2,64
 400cda4:	10c5c83a 	sub	r2,r2,r3
 400cda8:	4886983a 	sll	r3,r9,r2
 400cdac:	198cb03a 	or	r6,r3,r6
 400cdb0:	300cc03a 	cmpne	r6,r6,zero
 400cdb4:	218cb03a 	or	r6,r4,r6
 400cdb8:	0007883a 	mov	r3,zero
 400cdbc:	003f3b06 	br	400caac <__alt_data_end+0xfc00caac>
 400cdc0:	80002a26 	beq	r16,zero,400ce6c <__adddf3+0x51c>
 400cdc4:	0101ffc4 	movi	r4,2047
 400cdc8:	11006826 	beq	r2,r4,400cf6c <__adddf3+0x61c>
 400cdcc:	00c7c83a 	sub	r3,zero,r3
 400cdd0:	42002034 	orhi	r8,r8,128
 400cdd4:	01000e04 	movi	r4,56
 400cdd8:	20c07c16 	blt	r4,r3,400cfcc <__adddf3+0x67c>
 400cddc:	010007c4 	movi	r4,31
 400cde0:	20c0da16 	blt	r4,r3,400d14c <__adddf3+0x7fc>
 400cde4:	01000804 	movi	r4,32
 400cde8:	20c9c83a 	sub	r4,r4,r3
 400cdec:	4114983a 	sll	r10,r8,r4
 400cdf0:	88cad83a 	srl	r5,r17,r3
 400cdf4:	8908983a 	sll	r4,r17,r4
 400cdf8:	40c6d83a 	srl	r3,r8,r3
 400cdfc:	5162b03a 	or	r17,r10,r5
 400ce00:	2008c03a 	cmpne	r4,r4,zero
 400ce04:	8922b03a 	or	r17,r17,r4
 400ce08:	3463c83a 	sub	r17,r6,r17
 400ce0c:	48c7c83a 	sub	r3,r9,r3
 400ce10:	344d803a 	cmpltu	r6,r6,r17
 400ce14:	1991c83a 	sub	r8,r3,r6
 400ce18:	1021883a 	mov	r16,r2
 400ce1c:	3825883a 	mov	r18,r7
 400ce20:	003f2706 	br	400cac0 <__alt_data_end+0xfc00cac0>
 400ce24:	24d0b03a 	or	r8,r4,r19
 400ce28:	40001b1e 	bne	r8,zero,400ce98 <__adddf3+0x548>
 400ce2c:	0005883a 	mov	r2,zero
 400ce30:	0007883a 	mov	r3,zero
 400ce34:	0021883a 	mov	r16,zero
 400ce38:	003f4d06 	br	400cb70 <__alt_data_end+0xfc00cb70>
 400ce3c:	008007c4 	movi	r2,31
 400ce40:	11003c16 	blt	r2,r4,400cf34 <__adddf3+0x5e4>
 400ce44:	00800804 	movi	r2,32
 400ce48:	1105c83a 	sub	r2,r2,r4
 400ce4c:	488e983a 	sll	r7,r9,r2
 400ce50:	310ad83a 	srl	r5,r6,r4
 400ce54:	3084983a 	sll	r2,r6,r2
 400ce58:	4912d83a 	srl	r9,r9,r4
 400ce5c:	394ab03a 	or	r5,r7,r5
 400ce60:	1004c03a 	cmpne	r2,r2,zero
 400ce64:	288ab03a 	or	r5,r5,r2
 400ce68:	003f5306 	br	400cbb8 <__alt_data_end+0xfc00cbb8>
 400ce6c:	4448b03a 	or	r4,r8,r17
 400ce70:	20003e26 	beq	r4,zero,400cf6c <__adddf3+0x61c>
 400ce74:	00c6303a 	nor	r3,zero,r3
 400ce78:	18003a1e 	bne	r3,zero,400cf64 <__adddf3+0x614>
 400ce7c:	3463c83a 	sub	r17,r6,r17
 400ce80:	4a07c83a 	sub	r3,r9,r8
 400ce84:	344d803a 	cmpltu	r6,r6,r17
 400ce88:	1991c83a 	sub	r8,r3,r6
 400ce8c:	1021883a 	mov	r16,r2
 400ce90:	3825883a 	mov	r18,r7
 400ce94:	003f0a06 	br	400cac0 <__alt_data_end+0xfc00cac0>
 400ce98:	2023883a 	mov	r17,r4
 400ce9c:	003f0d06 	br	400cad4 <__alt_data_end+0xfc00cad4>
 400cea0:	0081ffc4 	movi	r2,2047
 400cea4:	80bf3f1e 	bne	r16,r2,400cba4 <__alt_data_end+0xfc00cba4>
 400cea8:	003ec806 	br	400c9cc <__alt_data_end+0xfc00c9cc>
 400ceac:	0005883a 	mov	r2,zero
 400ceb0:	003fb106 	br	400cd78 <__alt_data_end+0xfc00cd78>
 400ceb4:	0007883a 	mov	r3,zero
 400ceb8:	003fbc06 	br	400cdac <__alt_data_end+0xfc00cdac>
 400cebc:	4444b03a 	or	r2,r8,r17
 400cec0:	8000871e 	bne	r16,zero,400d0e0 <__adddf3+0x790>
 400cec4:	1000ba26 	beq	r2,zero,400d1b0 <__adddf3+0x860>
 400cec8:	4984b03a 	or	r2,r9,r6
 400cecc:	103ebf26 	beq	r2,zero,400c9cc <__alt_data_end+0xfc00c9cc>
 400ced0:	8985883a 	add	r2,r17,r6
 400ced4:	4247883a 	add	r3,r8,r9
 400ced8:	1451803a 	cmpltu	r8,r2,r17
 400cedc:	40d1883a 	add	r8,r8,r3
 400cee0:	40c0202c 	andhi	r3,r8,128
 400cee4:	1023883a 	mov	r17,r2
 400cee8:	183f1a26 	beq	r3,zero,400cb54 <__alt_data_end+0xfc00cb54>
 400ceec:	00bfe034 	movhi	r2,65408
 400cef0:	10bfffc4 	addi	r2,r2,-1
 400cef4:	2021883a 	mov	r16,r4
 400cef8:	4090703a 	and	r8,r8,r2
 400cefc:	003eb306 	br	400c9cc <__alt_data_end+0xfc00c9cc>
 400cf00:	4444b03a 	or	r2,r8,r17
 400cf04:	8000291e 	bne	r16,zero,400cfac <__adddf3+0x65c>
 400cf08:	10004b1e 	bne	r2,zero,400d038 <__adddf3+0x6e8>
 400cf0c:	4990b03a 	or	r8,r9,r6
 400cf10:	40008b26 	beq	r8,zero,400d140 <__adddf3+0x7f0>
 400cf14:	4811883a 	mov	r8,r9
 400cf18:	3023883a 	mov	r17,r6
 400cf1c:	3825883a 	mov	r18,r7
 400cf20:	003eaa06 	br	400c9cc <__alt_data_end+0xfc00c9cc>
 400cf24:	1021883a 	mov	r16,r2
 400cf28:	0011883a 	mov	r8,zero
 400cf2c:	0005883a 	mov	r2,zero
 400cf30:	003f0f06 	br	400cb70 <__alt_data_end+0xfc00cb70>
 400cf34:	217ff804 	addi	r5,r4,-32
 400cf38:	00800804 	movi	r2,32
 400cf3c:	494ad83a 	srl	r5,r9,r5
 400cf40:	20807d26 	beq	r4,r2,400d138 <__adddf3+0x7e8>
 400cf44:	00801004 	movi	r2,64
 400cf48:	1109c83a 	sub	r4,r2,r4
 400cf4c:	4912983a 	sll	r9,r9,r4
 400cf50:	498cb03a 	or	r6,r9,r6
 400cf54:	300cc03a 	cmpne	r6,r6,zero
 400cf58:	298ab03a 	or	r5,r5,r6
 400cf5c:	0013883a 	mov	r9,zero
 400cf60:	003f1506 	br	400cbb8 <__alt_data_end+0xfc00cbb8>
 400cf64:	0101ffc4 	movi	r4,2047
 400cf68:	113f9a1e 	bne	r2,r4,400cdd4 <__alt_data_end+0xfc00cdd4>
 400cf6c:	4811883a 	mov	r8,r9
 400cf70:	3023883a 	mov	r17,r6
 400cf74:	1021883a 	mov	r16,r2
 400cf78:	3825883a 	mov	r18,r7
 400cf7c:	003e9306 	br	400c9cc <__alt_data_end+0xfc00c9cc>
 400cf80:	8000161e 	bne	r16,zero,400cfdc <__adddf3+0x68c>
 400cf84:	444ab03a 	or	r5,r8,r17
 400cf88:	28005126 	beq	r5,zero,400d0d0 <__adddf3+0x780>
 400cf8c:	0108303a 	nor	r4,zero,r4
 400cf90:	20004d1e 	bne	r4,zero,400d0c8 <__adddf3+0x778>
 400cf94:	89a3883a 	add	r17,r17,r6
 400cf98:	4253883a 	add	r9,r8,r9
 400cf9c:	898d803a 	cmpltu	r6,r17,r6
 400cfa0:	3251883a 	add	r8,r6,r9
 400cfa4:	1021883a 	mov	r16,r2
 400cfa8:	003f0806 	br	400cbcc <__alt_data_end+0xfc00cbcc>
 400cfac:	1000301e 	bne	r2,zero,400d070 <__adddf3+0x720>
 400cfb0:	4984b03a 	or	r2,r9,r6
 400cfb4:	10007126 	beq	r2,zero,400d17c <__adddf3+0x82c>
 400cfb8:	4811883a 	mov	r8,r9
 400cfbc:	3023883a 	mov	r17,r6
 400cfc0:	3825883a 	mov	r18,r7
 400cfc4:	0401ffc4 	movi	r16,2047
 400cfc8:	003e8006 	br	400c9cc <__alt_data_end+0xfc00c9cc>
 400cfcc:	4462b03a 	or	r17,r8,r17
 400cfd0:	8822c03a 	cmpne	r17,r17,zero
 400cfd4:	0007883a 	mov	r3,zero
 400cfd8:	003f8b06 	br	400ce08 <__alt_data_end+0xfc00ce08>
 400cfdc:	0141ffc4 	movi	r5,2047
 400cfe0:	11403b26 	beq	r2,r5,400d0d0 <__adddf3+0x780>
 400cfe4:	0109c83a 	sub	r4,zero,r4
 400cfe8:	42002034 	orhi	r8,r8,128
 400cfec:	01400e04 	movi	r5,56
 400cff0:	29006716 	blt	r5,r4,400d190 <__adddf3+0x840>
 400cff4:	014007c4 	movi	r5,31
 400cff8:	29007016 	blt	r5,r4,400d1bc <__adddf3+0x86c>
 400cffc:	01400804 	movi	r5,32
 400d000:	290bc83a 	sub	r5,r5,r4
 400d004:	4154983a 	sll	r10,r8,r5
 400d008:	890ed83a 	srl	r7,r17,r4
 400d00c:	894a983a 	sll	r5,r17,r5
 400d010:	4108d83a 	srl	r4,r8,r4
 400d014:	51e2b03a 	or	r17,r10,r7
 400d018:	280ac03a 	cmpne	r5,r5,zero
 400d01c:	8962b03a 	or	r17,r17,r5
 400d020:	89a3883a 	add	r17,r17,r6
 400d024:	2253883a 	add	r9,r4,r9
 400d028:	898d803a 	cmpltu	r6,r17,r6
 400d02c:	3251883a 	add	r8,r6,r9
 400d030:	1021883a 	mov	r16,r2
 400d034:	003ee506 	br	400cbcc <__alt_data_end+0xfc00cbcc>
 400d038:	4984b03a 	or	r2,r9,r6
 400d03c:	103e6326 	beq	r2,zero,400c9cc <__alt_data_end+0xfc00c9cc>
 400d040:	8987c83a 	sub	r3,r17,r6
 400d044:	88c9803a 	cmpltu	r4,r17,r3
 400d048:	4245c83a 	sub	r2,r8,r9
 400d04c:	1105c83a 	sub	r2,r2,r4
 400d050:	1100202c 	andhi	r4,r2,128
 400d054:	203ebb26 	beq	r4,zero,400cb44 <__alt_data_end+0xfc00cb44>
 400d058:	3463c83a 	sub	r17,r6,r17
 400d05c:	4a07c83a 	sub	r3,r9,r8
 400d060:	344d803a 	cmpltu	r6,r6,r17
 400d064:	1991c83a 	sub	r8,r3,r6
 400d068:	3825883a 	mov	r18,r7
 400d06c:	003e5706 	br	400c9cc <__alt_data_end+0xfc00c9cc>
 400d070:	4984b03a 	or	r2,r9,r6
 400d074:	10002e26 	beq	r2,zero,400d130 <__adddf3+0x7e0>
 400d078:	4004d0fa 	srli	r2,r8,3
 400d07c:	8822d0fa 	srli	r17,r17,3
 400d080:	4010977a 	slli	r8,r8,29
 400d084:	10c0022c 	andhi	r3,r2,8
 400d088:	4462b03a 	or	r17,r8,r17
 400d08c:	18000826 	beq	r3,zero,400d0b0 <__adddf3+0x760>
 400d090:	4808d0fa 	srli	r4,r9,3
 400d094:	20c0022c 	andhi	r3,r4,8
 400d098:	1800051e 	bne	r3,zero,400d0b0 <__adddf3+0x760>
 400d09c:	300cd0fa 	srli	r6,r6,3
 400d0a0:	4806977a 	slli	r3,r9,29
 400d0a4:	2005883a 	mov	r2,r4
 400d0a8:	3825883a 	mov	r18,r7
 400d0ac:	19a2b03a 	or	r17,r3,r6
 400d0b0:	8810d77a 	srli	r8,r17,29
 400d0b4:	100490fa 	slli	r2,r2,3
 400d0b8:	882290fa 	slli	r17,r17,3
 400d0bc:	0401ffc4 	movi	r16,2047
 400d0c0:	4090b03a 	or	r8,r8,r2
 400d0c4:	003e4106 	br	400c9cc <__alt_data_end+0xfc00c9cc>
 400d0c8:	0141ffc4 	movi	r5,2047
 400d0cc:	117fc71e 	bne	r2,r5,400cfec <__alt_data_end+0xfc00cfec>
 400d0d0:	4811883a 	mov	r8,r9
 400d0d4:	3023883a 	mov	r17,r6
 400d0d8:	1021883a 	mov	r16,r2
 400d0dc:	003e3b06 	br	400c9cc <__alt_data_end+0xfc00c9cc>
 400d0e0:	10002f26 	beq	r2,zero,400d1a0 <__adddf3+0x850>
 400d0e4:	4984b03a 	or	r2,r9,r6
 400d0e8:	10001126 	beq	r2,zero,400d130 <__adddf3+0x7e0>
 400d0ec:	4004d0fa 	srli	r2,r8,3
 400d0f0:	8822d0fa 	srli	r17,r17,3
 400d0f4:	4010977a 	slli	r8,r8,29
 400d0f8:	10c0022c 	andhi	r3,r2,8
 400d0fc:	4462b03a 	or	r17,r8,r17
 400d100:	183feb26 	beq	r3,zero,400d0b0 <__alt_data_end+0xfc00d0b0>
 400d104:	4808d0fa 	srli	r4,r9,3
 400d108:	20c0022c 	andhi	r3,r4,8
 400d10c:	183fe81e 	bne	r3,zero,400d0b0 <__alt_data_end+0xfc00d0b0>
 400d110:	300cd0fa 	srli	r6,r6,3
 400d114:	4806977a 	slli	r3,r9,29
 400d118:	2005883a 	mov	r2,r4
 400d11c:	19a2b03a 	or	r17,r3,r6
 400d120:	003fe306 	br	400d0b0 <__alt_data_end+0xfc00d0b0>
 400d124:	0011883a 	mov	r8,zero
 400d128:	0005883a 	mov	r2,zero
 400d12c:	003e3f06 	br	400ca2c <__alt_data_end+0xfc00ca2c>
 400d130:	0401ffc4 	movi	r16,2047
 400d134:	003e2506 	br	400c9cc <__alt_data_end+0xfc00c9cc>
 400d138:	0013883a 	mov	r9,zero
 400d13c:	003f8406 	br	400cf50 <__alt_data_end+0xfc00cf50>
 400d140:	0005883a 	mov	r2,zero
 400d144:	0007883a 	mov	r3,zero
 400d148:	003e8906 	br	400cb70 <__alt_data_end+0xfc00cb70>
 400d14c:	197ff804 	addi	r5,r3,-32
 400d150:	01000804 	movi	r4,32
 400d154:	414ad83a 	srl	r5,r8,r5
 400d158:	19002426 	beq	r3,r4,400d1ec <__adddf3+0x89c>
 400d15c:	01001004 	movi	r4,64
 400d160:	20c7c83a 	sub	r3,r4,r3
 400d164:	40c6983a 	sll	r3,r8,r3
 400d168:	1c46b03a 	or	r3,r3,r17
 400d16c:	1806c03a 	cmpne	r3,r3,zero
 400d170:	28e2b03a 	or	r17,r5,r3
 400d174:	0007883a 	mov	r3,zero
 400d178:	003f2306 	br	400ce08 <__alt_data_end+0xfc00ce08>
 400d17c:	0007883a 	mov	r3,zero
 400d180:	5811883a 	mov	r8,r11
 400d184:	00bfffc4 	movi	r2,-1
 400d188:	0401ffc4 	movi	r16,2047
 400d18c:	003e7806 	br	400cb70 <__alt_data_end+0xfc00cb70>
 400d190:	4462b03a 	or	r17,r8,r17
 400d194:	8822c03a 	cmpne	r17,r17,zero
 400d198:	0009883a 	mov	r4,zero
 400d19c:	003fa006 	br	400d020 <__alt_data_end+0xfc00d020>
 400d1a0:	4811883a 	mov	r8,r9
 400d1a4:	3023883a 	mov	r17,r6
 400d1a8:	0401ffc4 	movi	r16,2047
 400d1ac:	003e0706 	br	400c9cc <__alt_data_end+0xfc00c9cc>
 400d1b0:	4811883a 	mov	r8,r9
 400d1b4:	3023883a 	mov	r17,r6
 400d1b8:	003e0406 	br	400c9cc <__alt_data_end+0xfc00c9cc>
 400d1bc:	21fff804 	addi	r7,r4,-32
 400d1c0:	01400804 	movi	r5,32
 400d1c4:	41ced83a 	srl	r7,r8,r7
 400d1c8:	21400a26 	beq	r4,r5,400d1f4 <__adddf3+0x8a4>
 400d1cc:	01401004 	movi	r5,64
 400d1d0:	2909c83a 	sub	r4,r5,r4
 400d1d4:	4108983a 	sll	r4,r8,r4
 400d1d8:	2448b03a 	or	r4,r4,r17
 400d1dc:	2008c03a 	cmpne	r4,r4,zero
 400d1e0:	3922b03a 	or	r17,r7,r4
 400d1e4:	0009883a 	mov	r4,zero
 400d1e8:	003f8d06 	br	400d020 <__alt_data_end+0xfc00d020>
 400d1ec:	0007883a 	mov	r3,zero
 400d1f0:	003fdd06 	br	400d168 <__alt_data_end+0xfc00d168>
 400d1f4:	0009883a 	mov	r4,zero
 400d1f8:	003ff706 	br	400d1d8 <__alt_data_end+0xfc00d1d8>

0400d1fc <__eqdf2>:
 400d1fc:	2804d53a 	srli	r2,r5,20
 400d200:	3806d53a 	srli	r3,r7,20
 400d204:	02000434 	movhi	r8,16
 400d208:	423fffc4 	addi	r8,r8,-1
 400d20c:	1081ffcc 	andi	r2,r2,2047
 400d210:	0281ffc4 	movi	r10,2047
 400d214:	2a12703a 	and	r9,r5,r8
 400d218:	18c1ffcc 	andi	r3,r3,2047
 400d21c:	3a10703a 	and	r8,r7,r8
 400d220:	280ad7fa 	srli	r5,r5,31
 400d224:	380ed7fa 	srli	r7,r7,31
 400d228:	12801026 	beq	r2,r10,400d26c <__eqdf2+0x70>
 400d22c:	0281ffc4 	movi	r10,2047
 400d230:	1a800a26 	beq	r3,r10,400d25c <__eqdf2+0x60>
 400d234:	10c00226 	beq	r2,r3,400d240 <__eqdf2+0x44>
 400d238:	00800044 	movi	r2,1
 400d23c:	f800283a 	ret
 400d240:	4a3ffd1e 	bne	r9,r8,400d238 <__alt_data_end+0xfc00d238>
 400d244:	21bffc1e 	bne	r4,r6,400d238 <__alt_data_end+0xfc00d238>
 400d248:	29c00c26 	beq	r5,r7,400d27c <__eqdf2+0x80>
 400d24c:	103ffa1e 	bne	r2,zero,400d238 <__alt_data_end+0xfc00d238>
 400d250:	2244b03a 	or	r2,r4,r9
 400d254:	1004c03a 	cmpne	r2,r2,zero
 400d258:	f800283a 	ret
 400d25c:	3214b03a 	or	r10,r6,r8
 400d260:	503ff426 	beq	r10,zero,400d234 <__alt_data_end+0xfc00d234>
 400d264:	00800044 	movi	r2,1
 400d268:	f800283a 	ret
 400d26c:	2254b03a 	or	r10,r4,r9
 400d270:	503fee26 	beq	r10,zero,400d22c <__alt_data_end+0xfc00d22c>
 400d274:	00800044 	movi	r2,1
 400d278:	f800283a 	ret
 400d27c:	0005883a 	mov	r2,zero
 400d280:	f800283a 	ret

0400d284 <__gedf2>:
 400d284:	2804d53a 	srli	r2,r5,20
 400d288:	3806d53a 	srli	r3,r7,20
 400d28c:	02000434 	movhi	r8,16
 400d290:	423fffc4 	addi	r8,r8,-1
 400d294:	1081ffcc 	andi	r2,r2,2047
 400d298:	0241ffc4 	movi	r9,2047
 400d29c:	2a14703a 	and	r10,r5,r8
 400d2a0:	18c1ffcc 	andi	r3,r3,2047
 400d2a4:	3a10703a 	and	r8,r7,r8
 400d2a8:	280ad7fa 	srli	r5,r5,31
 400d2ac:	380ed7fa 	srli	r7,r7,31
 400d2b0:	12401d26 	beq	r2,r9,400d328 <__gedf2+0xa4>
 400d2b4:	0241ffc4 	movi	r9,2047
 400d2b8:	1a401226 	beq	r3,r9,400d304 <__gedf2+0x80>
 400d2bc:	1000081e 	bne	r2,zero,400d2e0 <__gedf2+0x5c>
 400d2c0:	2296b03a 	or	r11,r4,r10
 400d2c4:	5813003a 	cmpeq	r9,r11,zero
 400d2c8:	1800091e 	bne	r3,zero,400d2f0 <__gedf2+0x6c>
 400d2cc:	3218b03a 	or	r12,r6,r8
 400d2d0:	6000071e 	bne	r12,zero,400d2f0 <__gedf2+0x6c>
 400d2d4:	0005883a 	mov	r2,zero
 400d2d8:	5800101e 	bne	r11,zero,400d31c <__gedf2+0x98>
 400d2dc:	f800283a 	ret
 400d2e0:	18000c1e 	bne	r3,zero,400d314 <__gedf2+0x90>
 400d2e4:	3212b03a 	or	r9,r6,r8
 400d2e8:	48000c26 	beq	r9,zero,400d31c <__gedf2+0x98>
 400d2ec:	0013883a 	mov	r9,zero
 400d2f0:	39c03fcc 	andi	r7,r7,255
 400d2f4:	48000826 	beq	r9,zero,400d318 <__gedf2+0x94>
 400d2f8:	38000926 	beq	r7,zero,400d320 <__gedf2+0x9c>
 400d2fc:	00800044 	movi	r2,1
 400d300:	f800283a 	ret
 400d304:	3212b03a 	or	r9,r6,r8
 400d308:	483fec26 	beq	r9,zero,400d2bc <__alt_data_end+0xfc00d2bc>
 400d30c:	00bfff84 	movi	r2,-2
 400d310:	f800283a 	ret
 400d314:	39c03fcc 	andi	r7,r7,255
 400d318:	29c00626 	beq	r5,r7,400d334 <__gedf2+0xb0>
 400d31c:	283ff726 	beq	r5,zero,400d2fc <__alt_data_end+0xfc00d2fc>
 400d320:	00bfffc4 	movi	r2,-1
 400d324:	f800283a 	ret
 400d328:	2292b03a 	or	r9,r4,r10
 400d32c:	483fe126 	beq	r9,zero,400d2b4 <__alt_data_end+0xfc00d2b4>
 400d330:	003ff606 	br	400d30c <__alt_data_end+0xfc00d30c>
 400d334:	18bff916 	blt	r3,r2,400d31c <__alt_data_end+0xfc00d31c>
 400d338:	10c00316 	blt	r2,r3,400d348 <__gedf2+0xc4>
 400d33c:	42bff736 	bltu	r8,r10,400d31c <__alt_data_end+0xfc00d31c>
 400d340:	52000326 	beq	r10,r8,400d350 <__gedf2+0xcc>
 400d344:	5200042e 	bgeu	r10,r8,400d358 <__gedf2+0xd4>
 400d348:	283fec1e 	bne	r5,zero,400d2fc <__alt_data_end+0xfc00d2fc>
 400d34c:	003ff406 	br	400d320 <__alt_data_end+0xfc00d320>
 400d350:	313ff236 	bltu	r6,r4,400d31c <__alt_data_end+0xfc00d31c>
 400d354:	21bffc36 	bltu	r4,r6,400d348 <__alt_data_end+0xfc00d348>
 400d358:	0005883a 	mov	r2,zero
 400d35c:	f800283a 	ret

0400d360 <__ledf2>:
 400d360:	2804d53a 	srli	r2,r5,20
 400d364:	3810d53a 	srli	r8,r7,20
 400d368:	00c00434 	movhi	r3,16
 400d36c:	18ffffc4 	addi	r3,r3,-1
 400d370:	1081ffcc 	andi	r2,r2,2047
 400d374:	0241ffc4 	movi	r9,2047
 400d378:	28d4703a 	and	r10,r5,r3
 400d37c:	4201ffcc 	andi	r8,r8,2047
 400d380:	38c6703a 	and	r3,r7,r3
 400d384:	280ad7fa 	srli	r5,r5,31
 400d388:	380ed7fa 	srli	r7,r7,31
 400d38c:	12401f26 	beq	r2,r9,400d40c <__ledf2+0xac>
 400d390:	0241ffc4 	movi	r9,2047
 400d394:	42401426 	beq	r8,r9,400d3e8 <__ledf2+0x88>
 400d398:	1000091e 	bne	r2,zero,400d3c0 <__ledf2+0x60>
 400d39c:	2296b03a 	or	r11,r4,r10
 400d3a0:	5813003a 	cmpeq	r9,r11,zero
 400d3a4:	29403fcc 	andi	r5,r5,255
 400d3a8:	40000a1e 	bne	r8,zero,400d3d4 <__ledf2+0x74>
 400d3ac:	30d8b03a 	or	r12,r6,r3
 400d3b0:	6000081e 	bne	r12,zero,400d3d4 <__ledf2+0x74>
 400d3b4:	0005883a 	mov	r2,zero
 400d3b8:	5800111e 	bne	r11,zero,400d400 <__ledf2+0xa0>
 400d3bc:	f800283a 	ret
 400d3c0:	29403fcc 	andi	r5,r5,255
 400d3c4:	40000c1e 	bne	r8,zero,400d3f8 <__ledf2+0x98>
 400d3c8:	30d2b03a 	or	r9,r6,r3
 400d3cc:	48000c26 	beq	r9,zero,400d400 <__ledf2+0xa0>
 400d3d0:	0013883a 	mov	r9,zero
 400d3d4:	39c03fcc 	andi	r7,r7,255
 400d3d8:	48000826 	beq	r9,zero,400d3fc <__ledf2+0x9c>
 400d3dc:	38001126 	beq	r7,zero,400d424 <__ledf2+0xc4>
 400d3e0:	00800044 	movi	r2,1
 400d3e4:	f800283a 	ret
 400d3e8:	30d2b03a 	or	r9,r6,r3
 400d3ec:	483fea26 	beq	r9,zero,400d398 <__alt_data_end+0xfc00d398>
 400d3f0:	00800084 	movi	r2,2
 400d3f4:	f800283a 	ret
 400d3f8:	39c03fcc 	andi	r7,r7,255
 400d3fc:	39400726 	beq	r7,r5,400d41c <__ledf2+0xbc>
 400d400:	2800081e 	bne	r5,zero,400d424 <__ledf2+0xc4>
 400d404:	00800044 	movi	r2,1
 400d408:	f800283a 	ret
 400d40c:	2292b03a 	or	r9,r4,r10
 400d410:	483fdf26 	beq	r9,zero,400d390 <__alt_data_end+0xfc00d390>
 400d414:	00800084 	movi	r2,2
 400d418:	f800283a 	ret
 400d41c:	4080030e 	bge	r8,r2,400d42c <__ledf2+0xcc>
 400d420:	383fef26 	beq	r7,zero,400d3e0 <__alt_data_end+0xfc00d3e0>
 400d424:	00bfffc4 	movi	r2,-1
 400d428:	f800283a 	ret
 400d42c:	123feb16 	blt	r2,r8,400d3dc <__alt_data_end+0xfc00d3dc>
 400d430:	1abff336 	bltu	r3,r10,400d400 <__alt_data_end+0xfc00d400>
 400d434:	50c00326 	beq	r10,r3,400d444 <__ledf2+0xe4>
 400d438:	50c0042e 	bgeu	r10,r3,400d44c <__ledf2+0xec>
 400d43c:	283fe81e 	bne	r5,zero,400d3e0 <__alt_data_end+0xfc00d3e0>
 400d440:	003ff806 	br	400d424 <__alt_data_end+0xfc00d424>
 400d444:	313fee36 	bltu	r6,r4,400d400 <__alt_data_end+0xfc00d400>
 400d448:	21bffc36 	bltu	r4,r6,400d43c <__alt_data_end+0xfc00d43c>
 400d44c:	0005883a 	mov	r2,zero
 400d450:	f800283a 	ret

0400d454 <__subdf3>:
 400d454:	02000434 	movhi	r8,16
 400d458:	423fffc4 	addi	r8,r8,-1
 400d45c:	defffb04 	addi	sp,sp,-20
 400d460:	2a14703a 	and	r10,r5,r8
 400d464:	3812d53a 	srli	r9,r7,20
 400d468:	3a10703a 	and	r8,r7,r8
 400d46c:	2006d77a 	srli	r3,r4,29
 400d470:	3004d77a 	srli	r2,r6,29
 400d474:	dc000015 	stw	r16,0(sp)
 400d478:	501490fa 	slli	r10,r10,3
 400d47c:	2820d53a 	srli	r16,r5,20
 400d480:	401090fa 	slli	r8,r8,3
 400d484:	dc800215 	stw	r18,8(sp)
 400d488:	dc400115 	stw	r17,4(sp)
 400d48c:	dfc00415 	stw	ra,16(sp)
 400d490:	202290fa 	slli	r17,r4,3
 400d494:	dcc00315 	stw	r19,12(sp)
 400d498:	4a41ffcc 	andi	r9,r9,2047
 400d49c:	0101ffc4 	movi	r4,2047
 400d4a0:	2824d7fa 	srli	r18,r5,31
 400d4a4:	8401ffcc 	andi	r16,r16,2047
 400d4a8:	50c6b03a 	or	r3,r10,r3
 400d4ac:	380ed7fa 	srli	r7,r7,31
 400d4b0:	408ab03a 	or	r5,r8,r2
 400d4b4:	300c90fa 	slli	r6,r6,3
 400d4b8:	49009626 	beq	r9,r4,400d714 <__subdf3+0x2c0>
 400d4bc:	39c0005c 	xori	r7,r7,1
 400d4c0:	8245c83a 	sub	r2,r16,r9
 400d4c4:	3c807426 	beq	r7,r18,400d698 <__subdf3+0x244>
 400d4c8:	0080af0e 	bge	zero,r2,400d788 <__subdf3+0x334>
 400d4cc:	48002a1e 	bne	r9,zero,400d578 <__subdf3+0x124>
 400d4d0:	2988b03a 	or	r4,r5,r6
 400d4d4:	20009a1e 	bne	r4,zero,400d740 <__subdf3+0x2ec>
 400d4d8:	888001cc 	andi	r2,r17,7
 400d4dc:	10000726 	beq	r2,zero,400d4fc <__subdf3+0xa8>
 400d4e0:	888003cc 	andi	r2,r17,15
 400d4e4:	01000104 	movi	r4,4
 400d4e8:	11000426 	beq	r2,r4,400d4fc <__subdf3+0xa8>
 400d4ec:	890b883a 	add	r5,r17,r4
 400d4f0:	2c63803a 	cmpltu	r17,r5,r17
 400d4f4:	1c47883a 	add	r3,r3,r17
 400d4f8:	2823883a 	mov	r17,r5
 400d4fc:	1880202c 	andhi	r2,r3,128
 400d500:	10005926 	beq	r2,zero,400d668 <__subdf3+0x214>
 400d504:	84000044 	addi	r16,r16,1
 400d508:	0081ffc4 	movi	r2,2047
 400d50c:	8080be26 	beq	r16,r2,400d808 <__subdf3+0x3b4>
 400d510:	017fe034 	movhi	r5,65408
 400d514:	297fffc4 	addi	r5,r5,-1
 400d518:	1946703a 	and	r3,r3,r5
 400d51c:	1804977a 	slli	r2,r3,29
 400d520:	1806927a 	slli	r3,r3,9
 400d524:	8822d0fa 	srli	r17,r17,3
 400d528:	8401ffcc 	andi	r16,r16,2047
 400d52c:	180ad33a 	srli	r5,r3,12
 400d530:	9100004c 	andi	r4,r18,1
 400d534:	1444b03a 	or	r2,r2,r17
 400d538:	80c1ffcc 	andi	r3,r16,2047
 400d53c:	1820953a 	slli	r16,r3,20
 400d540:	20c03fcc 	andi	r3,r4,255
 400d544:	180897fa 	slli	r4,r3,31
 400d548:	00c00434 	movhi	r3,16
 400d54c:	18ffffc4 	addi	r3,r3,-1
 400d550:	28c6703a 	and	r3,r5,r3
 400d554:	1c06b03a 	or	r3,r3,r16
 400d558:	1906b03a 	or	r3,r3,r4
 400d55c:	dfc00417 	ldw	ra,16(sp)
 400d560:	dcc00317 	ldw	r19,12(sp)
 400d564:	dc800217 	ldw	r18,8(sp)
 400d568:	dc400117 	ldw	r17,4(sp)
 400d56c:	dc000017 	ldw	r16,0(sp)
 400d570:	dec00504 	addi	sp,sp,20
 400d574:	f800283a 	ret
 400d578:	0101ffc4 	movi	r4,2047
 400d57c:	813fd626 	beq	r16,r4,400d4d8 <__alt_data_end+0xfc00d4d8>
 400d580:	29402034 	orhi	r5,r5,128
 400d584:	01000e04 	movi	r4,56
 400d588:	2080a316 	blt	r4,r2,400d818 <__subdf3+0x3c4>
 400d58c:	010007c4 	movi	r4,31
 400d590:	2080c616 	blt	r4,r2,400d8ac <__subdf3+0x458>
 400d594:	01000804 	movi	r4,32
 400d598:	2089c83a 	sub	r4,r4,r2
 400d59c:	2910983a 	sll	r8,r5,r4
 400d5a0:	308ed83a 	srl	r7,r6,r2
 400d5a4:	3108983a 	sll	r4,r6,r4
 400d5a8:	2884d83a 	srl	r2,r5,r2
 400d5ac:	41ccb03a 	or	r6,r8,r7
 400d5b0:	2008c03a 	cmpne	r4,r4,zero
 400d5b4:	310cb03a 	or	r6,r6,r4
 400d5b8:	898dc83a 	sub	r6,r17,r6
 400d5bc:	89a3803a 	cmpltu	r17,r17,r6
 400d5c0:	1887c83a 	sub	r3,r3,r2
 400d5c4:	1c47c83a 	sub	r3,r3,r17
 400d5c8:	3023883a 	mov	r17,r6
 400d5cc:	1880202c 	andhi	r2,r3,128
 400d5d0:	10002326 	beq	r2,zero,400d660 <__subdf3+0x20c>
 400d5d4:	04c02034 	movhi	r19,128
 400d5d8:	9cffffc4 	addi	r19,r19,-1
 400d5dc:	1ce6703a 	and	r19,r3,r19
 400d5e0:	98007a26 	beq	r19,zero,400d7cc <__subdf3+0x378>
 400d5e4:	9809883a 	mov	r4,r19
 400d5e8:	40026600 	call	4002660 <__clzsi2>
 400d5ec:	113ffe04 	addi	r4,r2,-8
 400d5f0:	00c007c4 	movi	r3,31
 400d5f4:	19007b16 	blt	r3,r4,400d7e4 <__subdf3+0x390>
 400d5f8:	00800804 	movi	r2,32
 400d5fc:	1105c83a 	sub	r2,r2,r4
 400d600:	8884d83a 	srl	r2,r17,r2
 400d604:	9906983a 	sll	r3,r19,r4
 400d608:	8922983a 	sll	r17,r17,r4
 400d60c:	10c4b03a 	or	r2,r2,r3
 400d610:	24007816 	blt	r4,r16,400d7f4 <__subdf3+0x3a0>
 400d614:	2421c83a 	sub	r16,r4,r16
 400d618:	80c00044 	addi	r3,r16,1
 400d61c:	010007c4 	movi	r4,31
 400d620:	20c09516 	blt	r4,r3,400d878 <__subdf3+0x424>
 400d624:	01400804 	movi	r5,32
 400d628:	28cbc83a 	sub	r5,r5,r3
 400d62c:	88c8d83a 	srl	r4,r17,r3
 400d630:	8962983a 	sll	r17,r17,r5
 400d634:	114a983a 	sll	r5,r2,r5
 400d638:	10c6d83a 	srl	r3,r2,r3
 400d63c:	8804c03a 	cmpne	r2,r17,zero
 400d640:	290ab03a 	or	r5,r5,r4
 400d644:	28a2b03a 	or	r17,r5,r2
 400d648:	0021883a 	mov	r16,zero
 400d64c:	003fa206 	br	400d4d8 <__alt_data_end+0xfc00d4d8>
 400d650:	2090b03a 	or	r8,r4,r2
 400d654:	40018e26 	beq	r8,zero,400dc90 <__subdf3+0x83c>
 400d658:	1007883a 	mov	r3,r2
 400d65c:	2023883a 	mov	r17,r4
 400d660:	888001cc 	andi	r2,r17,7
 400d664:	103f9e1e 	bne	r2,zero,400d4e0 <__alt_data_end+0xfc00d4e0>
 400d668:	1804977a 	slli	r2,r3,29
 400d66c:	8822d0fa 	srli	r17,r17,3
 400d670:	1810d0fa 	srli	r8,r3,3
 400d674:	9100004c 	andi	r4,r18,1
 400d678:	1444b03a 	or	r2,r2,r17
 400d67c:	00c1ffc4 	movi	r3,2047
 400d680:	80c02826 	beq	r16,r3,400d724 <__subdf3+0x2d0>
 400d684:	01400434 	movhi	r5,16
 400d688:	297fffc4 	addi	r5,r5,-1
 400d68c:	80e0703a 	and	r16,r16,r3
 400d690:	414a703a 	and	r5,r8,r5
 400d694:	003fa806 	br	400d538 <__alt_data_end+0xfc00d538>
 400d698:	0080630e 	bge	zero,r2,400d828 <__subdf3+0x3d4>
 400d69c:	48003026 	beq	r9,zero,400d760 <__subdf3+0x30c>
 400d6a0:	0101ffc4 	movi	r4,2047
 400d6a4:	813f8c26 	beq	r16,r4,400d4d8 <__alt_data_end+0xfc00d4d8>
 400d6a8:	29402034 	orhi	r5,r5,128
 400d6ac:	01000e04 	movi	r4,56
 400d6b0:	2080a90e 	bge	r4,r2,400d958 <__subdf3+0x504>
 400d6b4:	298cb03a 	or	r6,r5,r6
 400d6b8:	3012c03a 	cmpne	r9,r6,zero
 400d6bc:	0005883a 	mov	r2,zero
 400d6c0:	4c53883a 	add	r9,r9,r17
 400d6c4:	4c63803a 	cmpltu	r17,r9,r17
 400d6c8:	10c7883a 	add	r3,r2,r3
 400d6cc:	88c7883a 	add	r3,r17,r3
 400d6d0:	4823883a 	mov	r17,r9
 400d6d4:	1880202c 	andhi	r2,r3,128
 400d6d8:	1000d026 	beq	r2,zero,400da1c <__subdf3+0x5c8>
 400d6dc:	84000044 	addi	r16,r16,1
 400d6e0:	0081ffc4 	movi	r2,2047
 400d6e4:	8080fe26 	beq	r16,r2,400dae0 <__subdf3+0x68c>
 400d6e8:	00bfe034 	movhi	r2,65408
 400d6ec:	10bfffc4 	addi	r2,r2,-1
 400d6f0:	1886703a 	and	r3,r3,r2
 400d6f4:	880ad07a 	srli	r5,r17,1
 400d6f8:	180497fa 	slli	r2,r3,31
 400d6fc:	8900004c 	andi	r4,r17,1
 400d700:	2922b03a 	or	r17,r5,r4
 400d704:	1806d07a 	srli	r3,r3,1
 400d708:	1462b03a 	or	r17,r2,r17
 400d70c:	3825883a 	mov	r18,r7
 400d710:	003f7106 	br	400d4d8 <__alt_data_end+0xfc00d4d8>
 400d714:	2984b03a 	or	r2,r5,r6
 400d718:	103f6826 	beq	r2,zero,400d4bc <__alt_data_end+0xfc00d4bc>
 400d71c:	39c03fcc 	andi	r7,r7,255
 400d720:	003f6706 	br	400d4c0 <__alt_data_end+0xfc00d4c0>
 400d724:	4086b03a 	or	r3,r8,r2
 400d728:	18015226 	beq	r3,zero,400dc74 <__subdf3+0x820>
 400d72c:	00c00434 	movhi	r3,16
 400d730:	41400234 	orhi	r5,r8,8
 400d734:	18ffffc4 	addi	r3,r3,-1
 400d738:	28ca703a 	and	r5,r5,r3
 400d73c:	003f7e06 	br	400d538 <__alt_data_end+0xfc00d538>
 400d740:	10bfffc4 	addi	r2,r2,-1
 400d744:	1000491e 	bne	r2,zero,400d86c <__subdf3+0x418>
 400d748:	898fc83a 	sub	r7,r17,r6
 400d74c:	89e3803a 	cmpltu	r17,r17,r7
 400d750:	1947c83a 	sub	r3,r3,r5
 400d754:	1c47c83a 	sub	r3,r3,r17
 400d758:	3823883a 	mov	r17,r7
 400d75c:	003f9b06 	br	400d5cc <__alt_data_end+0xfc00d5cc>
 400d760:	2988b03a 	or	r4,r5,r6
 400d764:	203f5c26 	beq	r4,zero,400d4d8 <__alt_data_end+0xfc00d4d8>
 400d768:	10bfffc4 	addi	r2,r2,-1
 400d76c:	1000931e 	bne	r2,zero,400d9bc <__subdf3+0x568>
 400d770:	898d883a 	add	r6,r17,r6
 400d774:	3463803a 	cmpltu	r17,r6,r17
 400d778:	1947883a 	add	r3,r3,r5
 400d77c:	88c7883a 	add	r3,r17,r3
 400d780:	3023883a 	mov	r17,r6
 400d784:	003fd306 	br	400d6d4 <__alt_data_end+0xfc00d6d4>
 400d788:	1000541e 	bne	r2,zero,400d8dc <__subdf3+0x488>
 400d78c:	80800044 	addi	r2,r16,1
 400d790:	1081ffcc 	andi	r2,r2,2047
 400d794:	01000044 	movi	r4,1
 400d798:	2080a20e 	bge	r4,r2,400da24 <__subdf3+0x5d0>
 400d79c:	8989c83a 	sub	r4,r17,r6
 400d7a0:	8905803a 	cmpltu	r2,r17,r4
 400d7a4:	1967c83a 	sub	r19,r3,r5
 400d7a8:	98a7c83a 	sub	r19,r19,r2
 400d7ac:	9880202c 	andhi	r2,r19,128
 400d7b0:	10006326 	beq	r2,zero,400d940 <__subdf3+0x4ec>
 400d7b4:	3463c83a 	sub	r17,r6,r17
 400d7b8:	28c7c83a 	sub	r3,r5,r3
 400d7bc:	344d803a 	cmpltu	r6,r6,r17
 400d7c0:	19a7c83a 	sub	r19,r3,r6
 400d7c4:	3825883a 	mov	r18,r7
 400d7c8:	983f861e 	bne	r19,zero,400d5e4 <__alt_data_end+0xfc00d5e4>
 400d7cc:	8809883a 	mov	r4,r17
 400d7d0:	40026600 	call	4002660 <__clzsi2>
 400d7d4:	10800804 	addi	r2,r2,32
 400d7d8:	113ffe04 	addi	r4,r2,-8
 400d7dc:	00c007c4 	movi	r3,31
 400d7e0:	193f850e 	bge	r3,r4,400d5f8 <__alt_data_end+0xfc00d5f8>
 400d7e4:	10bff604 	addi	r2,r2,-40
 400d7e8:	8884983a 	sll	r2,r17,r2
 400d7ec:	0023883a 	mov	r17,zero
 400d7f0:	243f880e 	bge	r4,r16,400d614 <__alt_data_end+0xfc00d614>
 400d7f4:	00ffe034 	movhi	r3,65408
 400d7f8:	18ffffc4 	addi	r3,r3,-1
 400d7fc:	8121c83a 	sub	r16,r16,r4
 400d800:	10c6703a 	and	r3,r2,r3
 400d804:	003f3406 	br	400d4d8 <__alt_data_end+0xfc00d4d8>
 400d808:	9100004c 	andi	r4,r18,1
 400d80c:	000b883a 	mov	r5,zero
 400d810:	0005883a 	mov	r2,zero
 400d814:	003f4806 	br	400d538 <__alt_data_end+0xfc00d538>
 400d818:	298cb03a 	or	r6,r5,r6
 400d81c:	300cc03a 	cmpne	r6,r6,zero
 400d820:	0005883a 	mov	r2,zero
 400d824:	003f6406 	br	400d5b8 <__alt_data_end+0xfc00d5b8>
 400d828:	10009a1e 	bne	r2,zero,400da94 <__subdf3+0x640>
 400d82c:	82400044 	addi	r9,r16,1
 400d830:	4881ffcc 	andi	r2,r9,2047
 400d834:	02800044 	movi	r10,1
 400d838:	5080670e 	bge	r10,r2,400d9d8 <__subdf3+0x584>
 400d83c:	0081ffc4 	movi	r2,2047
 400d840:	4880af26 	beq	r9,r2,400db00 <__subdf3+0x6ac>
 400d844:	898d883a 	add	r6,r17,r6
 400d848:	1945883a 	add	r2,r3,r5
 400d84c:	3447803a 	cmpltu	r3,r6,r17
 400d850:	1887883a 	add	r3,r3,r2
 400d854:	182297fa 	slli	r17,r3,31
 400d858:	300cd07a 	srli	r6,r6,1
 400d85c:	1806d07a 	srli	r3,r3,1
 400d860:	4821883a 	mov	r16,r9
 400d864:	89a2b03a 	or	r17,r17,r6
 400d868:	003f1b06 	br	400d4d8 <__alt_data_end+0xfc00d4d8>
 400d86c:	0101ffc4 	movi	r4,2047
 400d870:	813f441e 	bne	r16,r4,400d584 <__alt_data_end+0xfc00d584>
 400d874:	003f1806 	br	400d4d8 <__alt_data_end+0xfc00d4d8>
 400d878:	843ff844 	addi	r16,r16,-31
 400d87c:	01400804 	movi	r5,32
 400d880:	1408d83a 	srl	r4,r2,r16
 400d884:	19405026 	beq	r3,r5,400d9c8 <__subdf3+0x574>
 400d888:	01401004 	movi	r5,64
 400d88c:	28c7c83a 	sub	r3,r5,r3
 400d890:	10c4983a 	sll	r2,r2,r3
 400d894:	88a2b03a 	or	r17,r17,r2
 400d898:	8822c03a 	cmpne	r17,r17,zero
 400d89c:	2462b03a 	or	r17,r4,r17
 400d8a0:	0007883a 	mov	r3,zero
 400d8a4:	0021883a 	mov	r16,zero
 400d8a8:	003f6d06 	br	400d660 <__alt_data_end+0xfc00d660>
 400d8ac:	11fff804 	addi	r7,r2,-32
 400d8b0:	01000804 	movi	r4,32
 400d8b4:	29ced83a 	srl	r7,r5,r7
 400d8b8:	11004526 	beq	r2,r4,400d9d0 <__subdf3+0x57c>
 400d8bc:	01001004 	movi	r4,64
 400d8c0:	2089c83a 	sub	r4,r4,r2
 400d8c4:	2904983a 	sll	r2,r5,r4
 400d8c8:	118cb03a 	or	r6,r2,r6
 400d8cc:	300cc03a 	cmpne	r6,r6,zero
 400d8d0:	398cb03a 	or	r6,r7,r6
 400d8d4:	0005883a 	mov	r2,zero
 400d8d8:	003f3706 	br	400d5b8 <__alt_data_end+0xfc00d5b8>
 400d8dc:	80002a26 	beq	r16,zero,400d988 <__subdf3+0x534>
 400d8e0:	0101ffc4 	movi	r4,2047
 400d8e4:	49006626 	beq	r9,r4,400da80 <__subdf3+0x62c>
 400d8e8:	0085c83a 	sub	r2,zero,r2
 400d8ec:	18c02034 	orhi	r3,r3,128
 400d8f0:	01000e04 	movi	r4,56
 400d8f4:	20807e16 	blt	r4,r2,400daf0 <__subdf3+0x69c>
 400d8f8:	010007c4 	movi	r4,31
 400d8fc:	2080e716 	blt	r4,r2,400dc9c <__subdf3+0x848>
 400d900:	01000804 	movi	r4,32
 400d904:	2089c83a 	sub	r4,r4,r2
 400d908:	1914983a 	sll	r10,r3,r4
 400d90c:	8890d83a 	srl	r8,r17,r2
 400d910:	8908983a 	sll	r4,r17,r4
 400d914:	1884d83a 	srl	r2,r3,r2
 400d918:	5222b03a 	or	r17,r10,r8
 400d91c:	2006c03a 	cmpne	r3,r4,zero
 400d920:	88e2b03a 	or	r17,r17,r3
 400d924:	3463c83a 	sub	r17,r6,r17
 400d928:	2885c83a 	sub	r2,r5,r2
 400d92c:	344d803a 	cmpltu	r6,r6,r17
 400d930:	1187c83a 	sub	r3,r2,r6
 400d934:	4821883a 	mov	r16,r9
 400d938:	3825883a 	mov	r18,r7
 400d93c:	003f2306 	br	400d5cc <__alt_data_end+0xfc00d5cc>
 400d940:	24d0b03a 	or	r8,r4,r19
 400d944:	40001b1e 	bne	r8,zero,400d9b4 <__subdf3+0x560>
 400d948:	0005883a 	mov	r2,zero
 400d94c:	0009883a 	mov	r4,zero
 400d950:	0021883a 	mov	r16,zero
 400d954:	003f4906 	br	400d67c <__alt_data_end+0xfc00d67c>
 400d958:	010007c4 	movi	r4,31
 400d95c:	20803a16 	blt	r4,r2,400da48 <__subdf3+0x5f4>
 400d960:	01000804 	movi	r4,32
 400d964:	2089c83a 	sub	r4,r4,r2
 400d968:	2912983a 	sll	r9,r5,r4
 400d96c:	3090d83a 	srl	r8,r6,r2
 400d970:	3108983a 	sll	r4,r6,r4
 400d974:	2884d83a 	srl	r2,r5,r2
 400d978:	4a12b03a 	or	r9,r9,r8
 400d97c:	2008c03a 	cmpne	r4,r4,zero
 400d980:	4912b03a 	or	r9,r9,r4
 400d984:	003f4e06 	br	400d6c0 <__alt_data_end+0xfc00d6c0>
 400d988:	1c48b03a 	or	r4,r3,r17
 400d98c:	20003c26 	beq	r4,zero,400da80 <__subdf3+0x62c>
 400d990:	0084303a 	nor	r2,zero,r2
 400d994:	1000381e 	bne	r2,zero,400da78 <__subdf3+0x624>
 400d998:	3463c83a 	sub	r17,r6,r17
 400d99c:	28c5c83a 	sub	r2,r5,r3
 400d9a0:	344d803a 	cmpltu	r6,r6,r17
 400d9a4:	1187c83a 	sub	r3,r2,r6
 400d9a8:	4821883a 	mov	r16,r9
 400d9ac:	3825883a 	mov	r18,r7
 400d9b0:	003f0606 	br	400d5cc <__alt_data_end+0xfc00d5cc>
 400d9b4:	2023883a 	mov	r17,r4
 400d9b8:	003f0906 	br	400d5e0 <__alt_data_end+0xfc00d5e0>
 400d9bc:	0101ffc4 	movi	r4,2047
 400d9c0:	813f3a1e 	bne	r16,r4,400d6ac <__alt_data_end+0xfc00d6ac>
 400d9c4:	003ec406 	br	400d4d8 <__alt_data_end+0xfc00d4d8>
 400d9c8:	0005883a 	mov	r2,zero
 400d9cc:	003fb106 	br	400d894 <__alt_data_end+0xfc00d894>
 400d9d0:	0005883a 	mov	r2,zero
 400d9d4:	003fbc06 	br	400d8c8 <__alt_data_end+0xfc00d8c8>
 400d9d8:	1c44b03a 	or	r2,r3,r17
 400d9dc:	80008e1e 	bne	r16,zero,400dc18 <__subdf3+0x7c4>
 400d9e0:	1000c826 	beq	r2,zero,400dd04 <__subdf3+0x8b0>
 400d9e4:	2984b03a 	or	r2,r5,r6
 400d9e8:	103ebb26 	beq	r2,zero,400d4d8 <__alt_data_end+0xfc00d4d8>
 400d9ec:	8989883a 	add	r4,r17,r6
 400d9f0:	1945883a 	add	r2,r3,r5
 400d9f4:	2447803a 	cmpltu	r3,r4,r17
 400d9f8:	1887883a 	add	r3,r3,r2
 400d9fc:	1880202c 	andhi	r2,r3,128
 400da00:	2023883a 	mov	r17,r4
 400da04:	103f1626 	beq	r2,zero,400d660 <__alt_data_end+0xfc00d660>
 400da08:	00bfe034 	movhi	r2,65408
 400da0c:	10bfffc4 	addi	r2,r2,-1
 400da10:	5021883a 	mov	r16,r10
 400da14:	1886703a 	and	r3,r3,r2
 400da18:	003eaf06 	br	400d4d8 <__alt_data_end+0xfc00d4d8>
 400da1c:	3825883a 	mov	r18,r7
 400da20:	003f0f06 	br	400d660 <__alt_data_end+0xfc00d660>
 400da24:	1c44b03a 	or	r2,r3,r17
 400da28:	8000251e 	bne	r16,zero,400dac0 <__subdf3+0x66c>
 400da2c:	1000661e 	bne	r2,zero,400dbc8 <__subdf3+0x774>
 400da30:	2990b03a 	or	r8,r5,r6
 400da34:	40009626 	beq	r8,zero,400dc90 <__subdf3+0x83c>
 400da38:	2807883a 	mov	r3,r5
 400da3c:	3023883a 	mov	r17,r6
 400da40:	3825883a 	mov	r18,r7
 400da44:	003ea406 	br	400d4d8 <__alt_data_end+0xfc00d4d8>
 400da48:	127ff804 	addi	r9,r2,-32
 400da4c:	01000804 	movi	r4,32
 400da50:	2a52d83a 	srl	r9,r5,r9
 400da54:	11008c26 	beq	r2,r4,400dc88 <__subdf3+0x834>
 400da58:	01001004 	movi	r4,64
 400da5c:	2085c83a 	sub	r2,r4,r2
 400da60:	2884983a 	sll	r2,r5,r2
 400da64:	118cb03a 	or	r6,r2,r6
 400da68:	300cc03a 	cmpne	r6,r6,zero
 400da6c:	4992b03a 	or	r9,r9,r6
 400da70:	0005883a 	mov	r2,zero
 400da74:	003f1206 	br	400d6c0 <__alt_data_end+0xfc00d6c0>
 400da78:	0101ffc4 	movi	r4,2047
 400da7c:	493f9c1e 	bne	r9,r4,400d8f0 <__alt_data_end+0xfc00d8f0>
 400da80:	2807883a 	mov	r3,r5
 400da84:	3023883a 	mov	r17,r6
 400da88:	4821883a 	mov	r16,r9
 400da8c:	3825883a 	mov	r18,r7
 400da90:	003e9106 	br	400d4d8 <__alt_data_end+0xfc00d4d8>
 400da94:	80001f1e 	bne	r16,zero,400db14 <__subdf3+0x6c0>
 400da98:	1c48b03a 	or	r4,r3,r17
 400da9c:	20005a26 	beq	r4,zero,400dc08 <__subdf3+0x7b4>
 400daa0:	0084303a 	nor	r2,zero,r2
 400daa4:	1000561e 	bne	r2,zero,400dc00 <__subdf3+0x7ac>
 400daa8:	89a3883a 	add	r17,r17,r6
 400daac:	1945883a 	add	r2,r3,r5
 400dab0:	898d803a 	cmpltu	r6,r17,r6
 400dab4:	3087883a 	add	r3,r6,r2
 400dab8:	4821883a 	mov	r16,r9
 400dabc:	003f0506 	br	400d6d4 <__alt_data_end+0xfc00d6d4>
 400dac0:	10002b1e 	bne	r2,zero,400db70 <__subdf3+0x71c>
 400dac4:	2984b03a 	or	r2,r5,r6
 400dac8:	10008026 	beq	r2,zero,400dccc <__subdf3+0x878>
 400dacc:	2807883a 	mov	r3,r5
 400dad0:	3023883a 	mov	r17,r6
 400dad4:	3825883a 	mov	r18,r7
 400dad8:	0401ffc4 	movi	r16,2047
 400dadc:	003e7e06 	br	400d4d8 <__alt_data_end+0xfc00d4d8>
 400dae0:	3809883a 	mov	r4,r7
 400dae4:	0011883a 	mov	r8,zero
 400dae8:	0005883a 	mov	r2,zero
 400daec:	003ee306 	br	400d67c <__alt_data_end+0xfc00d67c>
 400daf0:	1c62b03a 	or	r17,r3,r17
 400daf4:	8822c03a 	cmpne	r17,r17,zero
 400daf8:	0005883a 	mov	r2,zero
 400dafc:	003f8906 	br	400d924 <__alt_data_end+0xfc00d924>
 400db00:	3809883a 	mov	r4,r7
 400db04:	4821883a 	mov	r16,r9
 400db08:	0011883a 	mov	r8,zero
 400db0c:	0005883a 	mov	r2,zero
 400db10:	003eda06 	br	400d67c <__alt_data_end+0xfc00d67c>
 400db14:	0101ffc4 	movi	r4,2047
 400db18:	49003b26 	beq	r9,r4,400dc08 <__subdf3+0x7b4>
 400db1c:	0085c83a 	sub	r2,zero,r2
 400db20:	18c02034 	orhi	r3,r3,128
 400db24:	01000e04 	movi	r4,56
 400db28:	20806e16 	blt	r4,r2,400dce4 <__subdf3+0x890>
 400db2c:	010007c4 	movi	r4,31
 400db30:	20807716 	blt	r4,r2,400dd10 <__subdf3+0x8bc>
 400db34:	01000804 	movi	r4,32
 400db38:	2089c83a 	sub	r4,r4,r2
 400db3c:	1914983a 	sll	r10,r3,r4
 400db40:	8890d83a 	srl	r8,r17,r2
 400db44:	8908983a 	sll	r4,r17,r4
 400db48:	1884d83a 	srl	r2,r3,r2
 400db4c:	5222b03a 	or	r17,r10,r8
 400db50:	2006c03a 	cmpne	r3,r4,zero
 400db54:	88e2b03a 	or	r17,r17,r3
 400db58:	89a3883a 	add	r17,r17,r6
 400db5c:	1145883a 	add	r2,r2,r5
 400db60:	898d803a 	cmpltu	r6,r17,r6
 400db64:	3087883a 	add	r3,r6,r2
 400db68:	4821883a 	mov	r16,r9
 400db6c:	003ed906 	br	400d6d4 <__alt_data_end+0xfc00d6d4>
 400db70:	2984b03a 	or	r2,r5,r6
 400db74:	10004226 	beq	r2,zero,400dc80 <__subdf3+0x82c>
 400db78:	1808d0fa 	srli	r4,r3,3
 400db7c:	8822d0fa 	srli	r17,r17,3
 400db80:	1806977a 	slli	r3,r3,29
 400db84:	2080022c 	andhi	r2,r4,8
 400db88:	1c62b03a 	or	r17,r3,r17
 400db8c:	10000826 	beq	r2,zero,400dbb0 <__subdf3+0x75c>
 400db90:	2812d0fa 	srli	r9,r5,3
 400db94:	4880022c 	andhi	r2,r9,8
 400db98:	1000051e 	bne	r2,zero,400dbb0 <__subdf3+0x75c>
 400db9c:	300cd0fa 	srli	r6,r6,3
 400dba0:	2804977a 	slli	r2,r5,29
 400dba4:	4809883a 	mov	r4,r9
 400dba8:	3825883a 	mov	r18,r7
 400dbac:	11a2b03a 	or	r17,r2,r6
 400dbb0:	8806d77a 	srli	r3,r17,29
 400dbb4:	200890fa 	slli	r4,r4,3
 400dbb8:	882290fa 	slli	r17,r17,3
 400dbbc:	0401ffc4 	movi	r16,2047
 400dbc0:	1906b03a 	or	r3,r3,r4
 400dbc4:	003e4406 	br	400d4d8 <__alt_data_end+0xfc00d4d8>
 400dbc8:	2984b03a 	or	r2,r5,r6
 400dbcc:	103e4226 	beq	r2,zero,400d4d8 <__alt_data_end+0xfc00d4d8>
 400dbd0:	8989c83a 	sub	r4,r17,r6
 400dbd4:	8911803a 	cmpltu	r8,r17,r4
 400dbd8:	1945c83a 	sub	r2,r3,r5
 400dbdc:	1205c83a 	sub	r2,r2,r8
 400dbe0:	1200202c 	andhi	r8,r2,128
 400dbe4:	403e9a26 	beq	r8,zero,400d650 <__alt_data_end+0xfc00d650>
 400dbe8:	3463c83a 	sub	r17,r6,r17
 400dbec:	28c5c83a 	sub	r2,r5,r3
 400dbf0:	344d803a 	cmpltu	r6,r6,r17
 400dbf4:	1187c83a 	sub	r3,r2,r6
 400dbf8:	3825883a 	mov	r18,r7
 400dbfc:	003e3606 	br	400d4d8 <__alt_data_end+0xfc00d4d8>
 400dc00:	0101ffc4 	movi	r4,2047
 400dc04:	493fc71e 	bne	r9,r4,400db24 <__alt_data_end+0xfc00db24>
 400dc08:	2807883a 	mov	r3,r5
 400dc0c:	3023883a 	mov	r17,r6
 400dc10:	4821883a 	mov	r16,r9
 400dc14:	003e3006 	br	400d4d8 <__alt_data_end+0xfc00d4d8>
 400dc18:	10003626 	beq	r2,zero,400dcf4 <__subdf3+0x8a0>
 400dc1c:	2984b03a 	or	r2,r5,r6
 400dc20:	10001726 	beq	r2,zero,400dc80 <__subdf3+0x82c>
 400dc24:	1808d0fa 	srli	r4,r3,3
 400dc28:	8822d0fa 	srli	r17,r17,3
 400dc2c:	1806977a 	slli	r3,r3,29
 400dc30:	2080022c 	andhi	r2,r4,8
 400dc34:	1c62b03a 	or	r17,r3,r17
 400dc38:	10000726 	beq	r2,zero,400dc58 <__subdf3+0x804>
 400dc3c:	2812d0fa 	srli	r9,r5,3
 400dc40:	4880022c 	andhi	r2,r9,8
 400dc44:	1000041e 	bne	r2,zero,400dc58 <__subdf3+0x804>
 400dc48:	300cd0fa 	srli	r6,r6,3
 400dc4c:	2804977a 	slli	r2,r5,29
 400dc50:	4809883a 	mov	r4,r9
 400dc54:	11a2b03a 	or	r17,r2,r6
 400dc58:	8806d77a 	srli	r3,r17,29
 400dc5c:	200890fa 	slli	r4,r4,3
 400dc60:	882290fa 	slli	r17,r17,3
 400dc64:	3825883a 	mov	r18,r7
 400dc68:	1906b03a 	or	r3,r3,r4
 400dc6c:	0401ffc4 	movi	r16,2047
 400dc70:	003e1906 	br	400d4d8 <__alt_data_end+0xfc00d4d8>
 400dc74:	000b883a 	mov	r5,zero
 400dc78:	0005883a 	mov	r2,zero
 400dc7c:	003e2e06 	br	400d538 <__alt_data_end+0xfc00d538>
 400dc80:	0401ffc4 	movi	r16,2047
 400dc84:	003e1406 	br	400d4d8 <__alt_data_end+0xfc00d4d8>
 400dc88:	0005883a 	mov	r2,zero
 400dc8c:	003f7506 	br	400da64 <__alt_data_end+0xfc00da64>
 400dc90:	0005883a 	mov	r2,zero
 400dc94:	0009883a 	mov	r4,zero
 400dc98:	003e7806 	br	400d67c <__alt_data_end+0xfc00d67c>
 400dc9c:	123ff804 	addi	r8,r2,-32
 400dca0:	01000804 	movi	r4,32
 400dca4:	1a10d83a 	srl	r8,r3,r8
 400dca8:	11002526 	beq	r2,r4,400dd40 <__subdf3+0x8ec>
 400dcac:	01001004 	movi	r4,64
 400dcb0:	2085c83a 	sub	r2,r4,r2
 400dcb4:	1884983a 	sll	r2,r3,r2
 400dcb8:	1444b03a 	or	r2,r2,r17
 400dcbc:	1004c03a 	cmpne	r2,r2,zero
 400dcc0:	40a2b03a 	or	r17,r8,r2
 400dcc4:	0005883a 	mov	r2,zero
 400dcc8:	003f1606 	br	400d924 <__alt_data_end+0xfc00d924>
 400dccc:	02000434 	movhi	r8,16
 400dcd0:	0009883a 	mov	r4,zero
 400dcd4:	423fffc4 	addi	r8,r8,-1
 400dcd8:	00bfffc4 	movi	r2,-1
 400dcdc:	0401ffc4 	movi	r16,2047
 400dce0:	003e6606 	br	400d67c <__alt_data_end+0xfc00d67c>
 400dce4:	1c62b03a 	or	r17,r3,r17
 400dce8:	8822c03a 	cmpne	r17,r17,zero
 400dcec:	0005883a 	mov	r2,zero
 400dcf0:	003f9906 	br	400db58 <__alt_data_end+0xfc00db58>
 400dcf4:	2807883a 	mov	r3,r5
 400dcf8:	3023883a 	mov	r17,r6
 400dcfc:	0401ffc4 	movi	r16,2047
 400dd00:	003df506 	br	400d4d8 <__alt_data_end+0xfc00d4d8>
 400dd04:	2807883a 	mov	r3,r5
 400dd08:	3023883a 	mov	r17,r6
 400dd0c:	003df206 	br	400d4d8 <__alt_data_end+0xfc00d4d8>
 400dd10:	123ff804 	addi	r8,r2,-32
 400dd14:	01000804 	movi	r4,32
 400dd18:	1a10d83a 	srl	r8,r3,r8
 400dd1c:	11000a26 	beq	r2,r4,400dd48 <__subdf3+0x8f4>
 400dd20:	01001004 	movi	r4,64
 400dd24:	2085c83a 	sub	r2,r4,r2
 400dd28:	1884983a 	sll	r2,r3,r2
 400dd2c:	1444b03a 	or	r2,r2,r17
 400dd30:	1004c03a 	cmpne	r2,r2,zero
 400dd34:	40a2b03a 	or	r17,r8,r2
 400dd38:	0005883a 	mov	r2,zero
 400dd3c:	003f8606 	br	400db58 <__alt_data_end+0xfc00db58>
 400dd40:	0005883a 	mov	r2,zero
 400dd44:	003fdc06 	br	400dcb8 <__alt_data_end+0xfc00dcb8>
 400dd48:	0005883a 	mov	r2,zero
 400dd4c:	003ff706 	br	400dd2c <__alt_data_end+0xfc00dd2c>

0400dd50 <__fixdfsi>:
 400dd50:	280cd53a 	srli	r6,r5,20
 400dd54:	00c00434 	movhi	r3,16
 400dd58:	18ffffc4 	addi	r3,r3,-1
 400dd5c:	3181ffcc 	andi	r6,r6,2047
 400dd60:	01c0ff84 	movi	r7,1022
 400dd64:	28c6703a 	and	r3,r5,r3
 400dd68:	280ad7fa 	srli	r5,r5,31
 400dd6c:	3980120e 	bge	r7,r6,400ddb8 <__fixdfsi+0x68>
 400dd70:	00810744 	movi	r2,1053
 400dd74:	11800c16 	blt	r2,r6,400dda8 <__fixdfsi+0x58>
 400dd78:	00810cc4 	movi	r2,1075
 400dd7c:	1185c83a 	sub	r2,r2,r6
 400dd80:	01c007c4 	movi	r7,31
 400dd84:	18c00434 	orhi	r3,r3,16
 400dd88:	38800d16 	blt	r7,r2,400ddc0 <__fixdfsi+0x70>
 400dd8c:	31befb44 	addi	r6,r6,-1043
 400dd90:	2084d83a 	srl	r2,r4,r2
 400dd94:	1986983a 	sll	r3,r3,r6
 400dd98:	1884b03a 	or	r2,r3,r2
 400dd9c:	28000726 	beq	r5,zero,400ddbc <__fixdfsi+0x6c>
 400dda0:	0085c83a 	sub	r2,zero,r2
 400dda4:	f800283a 	ret
 400dda8:	00a00034 	movhi	r2,32768
 400ddac:	10bfffc4 	addi	r2,r2,-1
 400ddb0:	2885883a 	add	r2,r5,r2
 400ddb4:	f800283a 	ret
 400ddb8:	0005883a 	mov	r2,zero
 400ddbc:	f800283a 	ret
 400ddc0:	008104c4 	movi	r2,1043
 400ddc4:	1185c83a 	sub	r2,r2,r6
 400ddc8:	1884d83a 	srl	r2,r3,r2
 400ddcc:	003ff306 	br	400dd9c <__alt_data_end+0xfc00dd9c>

0400ddd0 <__floatsidf>:
 400ddd0:	defffd04 	addi	sp,sp,-12
 400ddd4:	dfc00215 	stw	ra,8(sp)
 400ddd8:	dc400115 	stw	r17,4(sp)
 400dddc:	dc000015 	stw	r16,0(sp)
 400dde0:	20002b26 	beq	r4,zero,400de90 <__floatsidf+0xc0>
 400dde4:	2023883a 	mov	r17,r4
 400dde8:	2020d7fa 	srli	r16,r4,31
 400ddec:	20002d16 	blt	r4,zero,400dea4 <__floatsidf+0xd4>
 400ddf0:	8809883a 	mov	r4,r17
 400ddf4:	40026600 	call	4002660 <__clzsi2>
 400ddf8:	01410784 	movi	r5,1054
 400ddfc:	288bc83a 	sub	r5,r5,r2
 400de00:	01010cc4 	movi	r4,1075
 400de04:	2149c83a 	sub	r4,r4,r5
 400de08:	00c007c4 	movi	r3,31
 400de0c:	1900160e 	bge	r3,r4,400de68 <__floatsidf+0x98>
 400de10:	00c104c4 	movi	r3,1043
 400de14:	1947c83a 	sub	r3,r3,r5
 400de18:	88c6983a 	sll	r3,r17,r3
 400de1c:	00800434 	movhi	r2,16
 400de20:	10bfffc4 	addi	r2,r2,-1
 400de24:	1886703a 	and	r3,r3,r2
 400de28:	2941ffcc 	andi	r5,r5,2047
 400de2c:	800d883a 	mov	r6,r16
 400de30:	0005883a 	mov	r2,zero
 400de34:	280a953a 	slli	r5,r5,20
 400de38:	31803fcc 	andi	r6,r6,255
 400de3c:	01000434 	movhi	r4,16
 400de40:	300c97fa 	slli	r6,r6,31
 400de44:	213fffc4 	addi	r4,r4,-1
 400de48:	1906703a 	and	r3,r3,r4
 400de4c:	1946b03a 	or	r3,r3,r5
 400de50:	1986b03a 	or	r3,r3,r6
 400de54:	dfc00217 	ldw	ra,8(sp)
 400de58:	dc400117 	ldw	r17,4(sp)
 400de5c:	dc000017 	ldw	r16,0(sp)
 400de60:	dec00304 	addi	sp,sp,12
 400de64:	f800283a 	ret
 400de68:	00c002c4 	movi	r3,11
 400de6c:	1887c83a 	sub	r3,r3,r2
 400de70:	88c6d83a 	srl	r3,r17,r3
 400de74:	8904983a 	sll	r2,r17,r4
 400de78:	01000434 	movhi	r4,16
 400de7c:	213fffc4 	addi	r4,r4,-1
 400de80:	2941ffcc 	andi	r5,r5,2047
 400de84:	1906703a 	and	r3,r3,r4
 400de88:	800d883a 	mov	r6,r16
 400de8c:	003fe906 	br	400de34 <__alt_data_end+0xfc00de34>
 400de90:	000d883a 	mov	r6,zero
 400de94:	000b883a 	mov	r5,zero
 400de98:	0007883a 	mov	r3,zero
 400de9c:	0005883a 	mov	r2,zero
 400dea0:	003fe406 	br	400de34 <__alt_data_end+0xfc00de34>
 400dea4:	0123c83a 	sub	r17,zero,r4
 400dea8:	003fd106 	br	400ddf0 <__alt_data_end+0xfc00ddf0>

0400deac <__floatunsidf>:
 400deac:	defffe04 	addi	sp,sp,-8
 400deb0:	dc000015 	stw	r16,0(sp)
 400deb4:	dfc00115 	stw	ra,4(sp)
 400deb8:	2021883a 	mov	r16,r4
 400debc:	20002226 	beq	r4,zero,400df48 <__floatunsidf+0x9c>
 400dec0:	40026600 	call	4002660 <__clzsi2>
 400dec4:	01010784 	movi	r4,1054
 400dec8:	2089c83a 	sub	r4,r4,r2
 400decc:	01810cc4 	movi	r6,1075
 400ded0:	310dc83a 	sub	r6,r6,r4
 400ded4:	00c007c4 	movi	r3,31
 400ded8:	1980120e 	bge	r3,r6,400df24 <__floatunsidf+0x78>
 400dedc:	00c104c4 	movi	r3,1043
 400dee0:	1907c83a 	sub	r3,r3,r4
 400dee4:	80ca983a 	sll	r5,r16,r3
 400dee8:	00800434 	movhi	r2,16
 400deec:	10bfffc4 	addi	r2,r2,-1
 400def0:	2101ffcc 	andi	r4,r4,2047
 400def4:	0021883a 	mov	r16,zero
 400def8:	288a703a 	and	r5,r5,r2
 400defc:	2008953a 	slli	r4,r4,20
 400df00:	00c00434 	movhi	r3,16
 400df04:	18ffffc4 	addi	r3,r3,-1
 400df08:	28c6703a 	and	r3,r5,r3
 400df0c:	8005883a 	mov	r2,r16
 400df10:	1906b03a 	or	r3,r3,r4
 400df14:	dfc00117 	ldw	ra,4(sp)
 400df18:	dc000017 	ldw	r16,0(sp)
 400df1c:	dec00204 	addi	sp,sp,8
 400df20:	f800283a 	ret
 400df24:	00c002c4 	movi	r3,11
 400df28:	188bc83a 	sub	r5,r3,r2
 400df2c:	814ad83a 	srl	r5,r16,r5
 400df30:	00c00434 	movhi	r3,16
 400df34:	18ffffc4 	addi	r3,r3,-1
 400df38:	81a0983a 	sll	r16,r16,r6
 400df3c:	2101ffcc 	andi	r4,r4,2047
 400df40:	28ca703a 	and	r5,r5,r3
 400df44:	003fed06 	br	400defc <__alt_data_end+0xfc00defc>
 400df48:	0009883a 	mov	r4,zero
 400df4c:	000b883a 	mov	r5,zero
 400df50:	003fea06 	br	400defc <__alt_data_end+0xfc00defc>

0400df54 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400df54:	defffe04 	addi	sp,sp,-8
 400df58:	dfc00115 	stw	ra,4(sp)
 400df5c:	df000015 	stw	fp,0(sp)
 400df60:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400df64:	d0a00b17 	ldw	r2,-32724(gp)
 400df68:	10000326 	beq	r2,zero,400df78 <alt_get_errno+0x24>
 400df6c:	d0a00b17 	ldw	r2,-32724(gp)
 400df70:	103ee83a 	callr	r2
 400df74:	00000106 	br	400df7c <alt_get_errno+0x28>
 400df78:	d0a6d504 	addi	r2,gp,-25772
}
 400df7c:	e037883a 	mov	sp,fp
 400df80:	dfc00117 	ldw	ra,4(sp)
 400df84:	df000017 	ldw	fp,0(sp)
 400df88:	dec00204 	addi	sp,sp,8
 400df8c:	f800283a 	ret

0400df90 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 400df90:	defffb04 	addi	sp,sp,-20
 400df94:	dfc00415 	stw	ra,16(sp)
 400df98:	df000315 	stw	fp,12(sp)
 400df9c:	df000304 	addi	fp,sp,12
 400dfa0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 400dfa4:	e0bfff17 	ldw	r2,-4(fp)
 400dfa8:	10000616 	blt	r2,zero,400dfc4 <close+0x34>
 400dfac:	e0bfff17 	ldw	r2,-4(fp)
 400dfb0:	10c00324 	muli	r3,r2,12
 400dfb4:	00810074 	movhi	r2,1025
 400dfb8:	1084ff04 	addi	r2,r2,5116
 400dfbc:	1885883a 	add	r2,r3,r2
 400dfc0:	00000106 	br	400dfc8 <close+0x38>
 400dfc4:	0005883a 	mov	r2,zero
 400dfc8:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 400dfcc:	e0bffd17 	ldw	r2,-12(fp)
 400dfd0:	10001926 	beq	r2,zero,400e038 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 400dfd4:	e0bffd17 	ldw	r2,-12(fp)
 400dfd8:	10800017 	ldw	r2,0(r2)
 400dfdc:	10800417 	ldw	r2,16(r2)
 400dfe0:	10000626 	beq	r2,zero,400dffc <close+0x6c>
 400dfe4:	e0bffd17 	ldw	r2,-12(fp)
 400dfe8:	10800017 	ldw	r2,0(r2)
 400dfec:	10800417 	ldw	r2,16(r2)
 400dff0:	e13ffd17 	ldw	r4,-12(fp)
 400dff4:	103ee83a 	callr	r2
 400dff8:	00000106 	br	400e000 <close+0x70>
 400dffc:	0005883a 	mov	r2,zero
 400e000:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 400e004:	e13fff17 	ldw	r4,-4(fp)
 400e008:	400e6cc0 	call	400e6cc <alt_release_fd>
    if (rval < 0)
 400e00c:	e0bffe17 	ldw	r2,-8(fp)
 400e010:	1000070e 	bge	r2,zero,400e030 <close+0xa0>
    {
      ALT_ERRNO = -rval;
 400e014:	400df540 	call	400df54 <alt_get_errno>
 400e018:	1007883a 	mov	r3,r2
 400e01c:	e0bffe17 	ldw	r2,-8(fp)
 400e020:	0085c83a 	sub	r2,zero,r2
 400e024:	18800015 	stw	r2,0(r3)
      return -1;
 400e028:	00bfffc4 	movi	r2,-1
 400e02c:	00000706 	br	400e04c <close+0xbc>
    }
    return 0;
 400e030:	0005883a 	mov	r2,zero
 400e034:	00000506 	br	400e04c <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 400e038:	400df540 	call	400df54 <alt_get_errno>
 400e03c:	1007883a 	mov	r3,r2
 400e040:	00801444 	movi	r2,81
 400e044:	18800015 	stw	r2,0(r3)
    return -1;
 400e048:	00bfffc4 	movi	r2,-1
  }
}
 400e04c:	e037883a 	mov	sp,fp
 400e050:	dfc00117 	ldw	ra,4(sp)
 400e054:	df000017 	ldw	fp,0(sp)
 400e058:	dec00204 	addi	sp,sp,8
 400e05c:	f800283a 	ret

0400e060 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 400e060:	defffe04 	addi	sp,sp,-8
 400e064:	df000115 	stw	fp,4(sp)
 400e068:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 400e06c:	e03fff15 	stw	zero,-4(fp)
 400e070:	00000506 	br	400e088 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
 400e074:	e0bfff17 	ldw	r2,-4(fp)
 400e078:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 400e07c:	e0bfff17 	ldw	r2,-4(fp)
 400e080:	10800804 	addi	r2,r2,32
 400e084:	e0bfff15 	stw	r2,-4(fp)
 400e088:	e0bfff17 	ldw	r2,-4(fp)
 400e08c:	10808030 	cmpltui	r2,r2,512
 400e090:	103ff81e 	bne	r2,zero,400e074 <__alt_data_end+0xfc00e074>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 400e094:	0001883a 	nop
 400e098:	e037883a 	mov	sp,fp
 400e09c:	df000017 	ldw	fp,0(sp)
 400e0a0:	dec00104 	addi	sp,sp,4
 400e0a4:	f800283a 	ret

0400e0a8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 400e0a8:	defffc04 	addi	sp,sp,-16
 400e0ac:	df000315 	stw	fp,12(sp)
 400e0b0:	df000304 	addi	fp,sp,12
 400e0b4:	e13ffd15 	stw	r4,-12(fp)
 400e0b8:	e17ffe15 	stw	r5,-8(fp)
 400e0bc:	e1bfff15 	stw	r6,-4(fp)
  return len;
 400e0c0:	e0bfff17 	ldw	r2,-4(fp)
}
 400e0c4:	e037883a 	mov	sp,fp
 400e0c8:	df000017 	ldw	fp,0(sp)
 400e0cc:	dec00104 	addi	sp,sp,4
 400e0d0:	f800283a 	ret

0400e0d4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400e0d4:	defffe04 	addi	sp,sp,-8
 400e0d8:	dfc00115 	stw	ra,4(sp)
 400e0dc:	df000015 	stw	fp,0(sp)
 400e0e0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400e0e4:	d0a00b17 	ldw	r2,-32724(gp)
 400e0e8:	10000326 	beq	r2,zero,400e0f8 <alt_get_errno+0x24>
 400e0ec:	d0a00b17 	ldw	r2,-32724(gp)
 400e0f0:	103ee83a 	callr	r2
 400e0f4:	00000106 	br	400e0fc <alt_get_errno+0x28>
 400e0f8:	d0a6d504 	addi	r2,gp,-25772
}
 400e0fc:	e037883a 	mov	sp,fp
 400e100:	dfc00117 	ldw	ra,4(sp)
 400e104:	df000017 	ldw	fp,0(sp)
 400e108:	dec00204 	addi	sp,sp,8
 400e10c:	f800283a 	ret

0400e110 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 400e110:	defffb04 	addi	sp,sp,-20
 400e114:	dfc00415 	stw	ra,16(sp)
 400e118:	df000315 	stw	fp,12(sp)
 400e11c:	df000304 	addi	fp,sp,12
 400e120:	e13ffe15 	stw	r4,-8(fp)
 400e124:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400e128:	e0bffe17 	ldw	r2,-8(fp)
 400e12c:	10000616 	blt	r2,zero,400e148 <fstat+0x38>
 400e130:	e0bffe17 	ldw	r2,-8(fp)
 400e134:	10c00324 	muli	r3,r2,12
 400e138:	00810074 	movhi	r2,1025
 400e13c:	1084ff04 	addi	r2,r2,5116
 400e140:	1885883a 	add	r2,r3,r2
 400e144:	00000106 	br	400e14c <fstat+0x3c>
 400e148:	0005883a 	mov	r2,zero
 400e14c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 400e150:	e0bffd17 	ldw	r2,-12(fp)
 400e154:	10001026 	beq	r2,zero,400e198 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 400e158:	e0bffd17 	ldw	r2,-12(fp)
 400e15c:	10800017 	ldw	r2,0(r2)
 400e160:	10800817 	ldw	r2,32(r2)
 400e164:	10000726 	beq	r2,zero,400e184 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
 400e168:	e0bffd17 	ldw	r2,-12(fp)
 400e16c:	10800017 	ldw	r2,0(r2)
 400e170:	10800817 	ldw	r2,32(r2)
 400e174:	e17fff17 	ldw	r5,-4(fp)
 400e178:	e13ffd17 	ldw	r4,-12(fp)
 400e17c:	103ee83a 	callr	r2
 400e180:	00000a06 	br	400e1ac <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 400e184:	e0bfff17 	ldw	r2,-4(fp)
 400e188:	00c80004 	movi	r3,8192
 400e18c:	10c00115 	stw	r3,4(r2)
      return 0;
 400e190:	0005883a 	mov	r2,zero
 400e194:	00000506 	br	400e1ac <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 400e198:	400e0d40 	call	400e0d4 <alt_get_errno>
 400e19c:	1007883a 	mov	r3,r2
 400e1a0:	00801444 	movi	r2,81
 400e1a4:	18800015 	stw	r2,0(r3)
    return -1;
 400e1a8:	00bfffc4 	movi	r2,-1
  }
}
 400e1ac:	e037883a 	mov	sp,fp
 400e1b0:	dfc00117 	ldw	ra,4(sp)
 400e1b4:	df000017 	ldw	fp,0(sp)
 400e1b8:	dec00204 	addi	sp,sp,8
 400e1bc:	f800283a 	ret

0400e1c0 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 400e1c0:	defffe04 	addi	sp,sp,-8
 400e1c4:	dfc00115 	stw	ra,4(sp)
 400e1c8:	df000015 	stw	fp,0(sp)
 400e1cc:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 400e1d0:	01408004 	movi	r5,512
 400e1d4:	0009883a 	mov	r4,zero
 400e1d8:	400f8300 	call	400f830 <alt_icache_flush>
#endif
}
 400e1dc:	0001883a 	nop
 400e1e0:	e037883a 	mov	sp,fp
 400e1e4:	dfc00117 	ldw	ra,4(sp)
 400e1e8:	df000017 	ldw	fp,0(sp)
 400e1ec:	dec00204 	addi	sp,sp,8
 400e1f0:	f800283a 	ret

0400e1f4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400e1f4:	defffe04 	addi	sp,sp,-8
 400e1f8:	dfc00115 	stw	ra,4(sp)
 400e1fc:	df000015 	stw	fp,0(sp)
 400e200:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400e204:	d0a00b17 	ldw	r2,-32724(gp)
 400e208:	10000326 	beq	r2,zero,400e218 <alt_get_errno+0x24>
 400e20c:	d0a00b17 	ldw	r2,-32724(gp)
 400e210:	103ee83a 	callr	r2
 400e214:	00000106 	br	400e21c <alt_get_errno+0x28>
 400e218:	d0a6d504 	addi	r2,gp,-25772
}
 400e21c:	e037883a 	mov	sp,fp
 400e220:	dfc00117 	ldw	ra,4(sp)
 400e224:	df000017 	ldw	fp,0(sp)
 400e228:	dec00204 	addi	sp,sp,8
 400e22c:	f800283a 	ret

0400e230 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 400e230:	deffed04 	addi	sp,sp,-76
 400e234:	dfc01215 	stw	ra,72(sp)
 400e238:	df001115 	stw	fp,68(sp)
 400e23c:	df001104 	addi	fp,sp,68
 400e240:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400e244:	e0bfff17 	ldw	r2,-4(fp)
 400e248:	10000616 	blt	r2,zero,400e264 <isatty+0x34>
 400e24c:	e0bfff17 	ldw	r2,-4(fp)
 400e250:	10c00324 	muli	r3,r2,12
 400e254:	00810074 	movhi	r2,1025
 400e258:	1084ff04 	addi	r2,r2,5116
 400e25c:	1885883a 	add	r2,r3,r2
 400e260:	00000106 	br	400e268 <isatty+0x38>
 400e264:	0005883a 	mov	r2,zero
 400e268:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 400e26c:	e0bfef17 	ldw	r2,-68(fp)
 400e270:	10000e26 	beq	r2,zero,400e2ac <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 400e274:	e0bfef17 	ldw	r2,-68(fp)
 400e278:	10800017 	ldw	r2,0(r2)
 400e27c:	10800817 	ldw	r2,32(r2)
 400e280:	1000021e 	bne	r2,zero,400e28c <isatty+0x5c>
    {
      return 1;
 400e284:	00800044 	movi	r2,1
 400e288:	00000d06 	br	400e2c0 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 400e28c:	e0bff004 	addi	r2,fp,-64
 400e290:	100b883a 	mov	r5,r2
 400e294:	e13fff17 	ldw	r4,-4(fp)
 400e298:	400e1100 	call	400e110 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 400e29c:	e0bff117 	ldw	r2,-60(fp)
 400e2a0:	10880020 	cmpeqi	r2,r2,8192
 400e2a4:	10803fcc 	andi	r2,r2,255
 400e2a8:	00000506 	br	400e2c0 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 400e2ac:	400e1f40 	call	400e1f4 <alt_get_errno>
 400e2b0:	1007883a 	mov	r3,r2
 400e2b4:	00801444 	movi	r2,81
 400e2b8:	18800015 	stw	r2,0(r3)
    return 0;
 400e2bc:	0005883a 	mov	r2,zero
  }
}
 400e2c0:	e037883a 	mov	sp,fp
 400e2c4:	dfc00117 	ldw	ra,4(sp)
 400e2c8:	df000017 	ldw	fp,0(sp)
 400e2cc:	dec00204 	addi	sp,sp,8
 400e2d0:	f800283a 	ret

0400e2d4 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 400e2d4:	defffc04 	addi	sp,sp,-16
 400e2d8:	df000315 	stw	fp,12(sp)
 400e2dc:	df000304 	addi	fp,sp,12
 400e2e0:	e13ffd15 	stw	r4,-12(fp)
 400e2e4:	e17ffe15 	stw	r5,-8(fp)
 400e2e8:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 400e2ec:	e0fffe17 	ldw	r3,-8(fp)
 400e2f0:	e0bffd17 	ldw	r2,-12(fp)
 400e2f4:	18800c26 	beq	r3,r2,400e328 <alt_load_section+0x54>
  {
    while( to != end )
 400e2f8:	00000806 	br	400e31c <alt_load_section+0x48>
    {
      *to++ = *from++;
 400e2fc:	e0bffe17 	ldw	r2,-8(fp)
 400e300:	10c00104 	addi	r3,r2,4
 400e304:	e0fffe15 	stw	r3,-8(fp)
 400e308:	e0fffd17 	ldw	r3,-12(fp)
 400e30c:	19000104 	addi	r4,r3,4
 400e310:	e13ffd15 	stw	r4,-12(fp)
 400e314:	18c00017 	ldw	r3,0(r3)
 400e318:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 400e31c:	e0fffe17 	ldw	r3,-8(fp)
 400e320:	e0bfff17 	ldw	r2,-4(fp)
 400e324:	18bff51e 	bne	r3,r2,400e2fc <__alt_data_end+0xfc00e2fc>
    {
      *to++ = *from++;
    }
  }
}
 400e328:	0001883a 	nop
 400e32c:	e037883a 	mov	sp,fp
 400e330:	df000017 	ldw	fp,0(sp)
 400e334:	dec00104 	addi	sp,sp,4
 400e338:	f800283a 	ret

0400e33c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 400e33c:	defffe04 	addi	sp,sp,-8
 400e340:	dfc00115 	stw	ra,4(sp)
 400e344:	df000015 	stw	fp,0(sp)
 400e348:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 400e34c:	01810074 	movhi	r6,1025
 400e350:	31898704 	addi	r6,r6,9756
 400e354:	01410074 	movhi	r5,1025
 400e358:	2942cc04 	addi	r5,r5,2864
 400e35c:	01010074 	movhi	r4,1025
 400e360:	21098704 	addi	r4,r4,9756
 400e364:	400e2d40 	call	400e2d4 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 400e368:	01810034 	movhi	r6,1024
 400e36c:	31807004 	addi	r6,r6,448
 400e370:	01410034 	movhi	r5,1024
 400e374:	29400804 	addi	r5,r5,32
 400e378:	01010034 	movhi	r4,1024
 400e37c:	21000804 	addi	r4,r4,32
 400e380:	400e2d40 	call	400e2d4 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 400e384:	01810074 	movhi	r6,1025
 400e388:	3182cc04 	addi	r6,r6,2864
 400e38c:	01410074 	movhi	r5,1025
 400e390:	2941a304 	addi	r5,r5,1676
 400e394:	01010074 	movhi	r4,1025
 400e398:	2101a304 	addi	r4,r4,1676
 400e39c:	400e2d40 	call	400e2d4 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 400e3a0:	400e0600 	call	400e060 <alt_dcache_flush_all>
  alt_icache_flush_all();
 400e3a4:	400e1c00 	call	400e1c0 <alt_icache_flush_all>
}
 400e3a8:	0001883a 	nop
 400e3ac:	e037883a 	mov	sp,fp
 400e3b0:	dfc00117 	ldw	ra,4(sp)
 400e3b4:	df000017 	ldw	fp,0(sp)
 400e3b8:	dec00204 	addi	sp,sp,8
 400e3bc:	f800283a 	ret

0400e3c0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400e3c0:	defffe04 	addi	sp,sp,-8
 400e3c4:	dfc00115 	stw	ra,4(sp)
 400e3c8:	df000015 	stw	fp,0(sp)
 400e3cc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400e3d0:	d0a00b17 	ldw	r2,-32724(gp)
 400e3d4:	10000326 	beq	r2,zero,400e3e4 <alt_get_errno+0x24>
 400e3d8:	d0a00b17 	ldw	r2,-32724(gp)
 400e3dc:	103ee83a 	callr	r2
 400e3e0:	00000106 	br	400e3e8 <alt_get_errno+0x28>
 400e3e4:	d0a6d504 	addi	r2,gp,-25772
}
 400e3e8:	e037883a 	mov	sp,fp
 400e3ec:	dfc00117 	ldw	ra,4(sp)
 400e3f0:	df000017 	ldw	fp,0(sp)
 400e3f4:	dec00204 	addi	sp,sp,8
 400e3f8:	f800283a 	ret

0400e3fc <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 400e3fc:	defff904 	addi	sp,sp,-28
 400e400:	dfc00615 	stw	ra,24(sp)
 400e404:	df000515 	stw	fp,20(sp)
 400e408:	df000504 	addi	fp,sp,20
 400e40c:	e13ffd15 	stw	r4,-12(fp)
 400e410:	e17ffe15 	stw	r5,-8(fp)
 400e414:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 400e418:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400e41c:	e0bffd17 	ldw	r2,-12(fp)
 400e420:	10000616 	blt	r2,zero,400e43c <lseek+0x40>
 400e424:	e0bffd17 	ldw	r2,-12(fp)
 400e428:	10c00324 	muli	r3,r2,12
 400e42c:	00810074 	movhi	r2,1025
 400e430:	1084ff04 	addi	r2,r2,5116
 400e434:	1885883a 	add	r2,r3,r2
 400e438:	00000106 	br	400e440 <lseek+0x44>
 400e43c:	0005883a 	mov	r2,zero
 400e440:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 400e444:	e0bffc17 	ldw	r2,-16(fp)
 400e448:	10001026 	beq	r2,zero,400e48c <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 400e44c:	e0bffc17 	ldw	r2,-16(fp)
 400e450:	10800017 	ldw	r2,0(r2)
 400e454:	10800717 	ldw	r2,28(r2)
 400e458:	10000926 	beq	r2,zero,400e480 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 400e45c:	e0bffc17 	ldw	r2,-16(fp)
 400e460:	10800017 	ldw	r2,0(r2)
 400e464:	10800717 	ldw	r2,28(r2)
 400e468:	e1bfff17 	ldw	r6,-4(fp)
 400e46c:	e17ffe17 	ldw	r5,-8(fp)
 400e470:	e13ffc17 	ldw	r4,-16(fp)
 400e474:	103ee83a 	callr	r2
 400e478:	e0bffb15 	stw	r2,-20(fp)
 400e47c:	00000506 	br	400e494 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 400e480:	00bfde84 	movi	r2,-134
 400e484:	e0bffb15 	stw	r2,-20(fp)
 400e488:	00000206 	br	400e494 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
 400e48c:	00bfebc4 	movi	r2,-81
 400e490:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 400e494:	e0bffb17 	ldw	r2,-20(fp)
 400e498:	1000070e 	bge	r2,zero,400e4b8 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
 400e49c:	400e3c00 	call	400e3c0 <alt_get_errno>
 400e4a0:	1007883a 	mov	r3,r2
 400e4a4:	e0bffb17 	ldw	r2,-20(fp)
 400e4a8:	0085c83a 	sub	r2,zero,r2
 400e4ac:	18800015 	stw	r2,0(r3)
    rc = -1;
 400e4b0:	00bfffc4 	movi	r2,-1
 400e4b4:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 400e4b8:	e0bffb17 	ldw	r2,-20(fp)
}
 400e4bc:	e037883a 	mov	sp,fp
 400e4c0:	dfc00117 	ldw	ra,4(sp)
 400e4c4:	df000017 	ldw	fp,0(sp)
 400e4c8:	dec00204 	addi	sp,sp,8
 400e4cc:	f800283a 	ret

0400e4d0 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 400e4d0:	defffd04 	addi	sp,sp,-12
 400e4d4:	dfc00215 	stw	ra,8(sp)
 400e4d8:	df000115 	stw	fp,4(sp)
 400e4dc:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 400e4e0:	0009883a 	mov	r4,zero
 400e4e4:	400e9480 	call	400e948 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 400e4e8:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 400e4ec:	400e9800 	call	400e980 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 400e4f0:	01810074 	movhi	r6,1025
 400e4f4:	3182c204 	addi	r6,r6,2824
 400e4f8:	01410074 	movhi	r5,1025
 400e4fc:	2942c204 	addi	r5,r5,2824
 400e500:	01010074 	movhi	r4,1025
 400e504:	2102c204 	addi	r4,r4,2824
 400e508:	400fc240 	call	400fc24 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 400e50c:	400f7700 	call	400f770 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 400e510:	01010074 	movhi	r4,1025
 400e514:	213df404 	addi	r4,r4,-2096
 400e518:	40102f80 	call	40102f8 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 400e51c:	d0a6d617 	ldw	r2,-25768(gp)
 400e520:	d0e6d717 	ldw	r3,-25764(gp)
 400e524:	d126d817 	ldw	r4,-25760(gp)
 400e528:	200d883a 	mov	r6,r4
 400e52c:	180b883a 	mov	r5,r3
 400e530:	1009883a 	mov	r4,r2
 400e534:	400036c0 	call	400036c <main>
 400e538:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 400e53c:	01000044 	movi	r4,1
 400e540:	400df900 	call	400df90 <close>
  exit (result);
 400e544:	e13fff17 	ldw	r4,-4(fp)
 400e548:	401030c0 	call	401030c <exit>

0400e54c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 400e54c:	defffe04 	addi	sp,sp,-8
 400e550:	df000115 	stw	fp,4(sp)
 400e554:	df000104 	addi	fp,sp,4
 400e558:	e13fff15 	stw	r4,-4(fp)
}
 400e55c:	0001883a 	nop
 400e560:	e037883a 	mov	sp,fp
 400e564:	df000017 	ldw	fp,0(sp)
 400e568:	dec00104 	addi	sp,sp,4
 400e56c:	f800283a 	ret

0400e570 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 400e570:	defffe04 	addi	sp,sp,-8
 400e574:	df000115 	stw	fp,4(sp)
 400e578:	df000104 	addi	fp,sp,4
 400e57c:	e13fff15 	stw	r4,-4(fp)
}
 400e580:	0001883a 	nop
 400e584:	e037883a 	mov	sp,fp
 400e588:	df000017 	ldw	fp,0(sp)
 400e58c:	dec00104 	addi	sp,sp,4
 400e590:	f800283a 	ret

0400e594 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400e594:	defffe04 	addi	sp,sp,-8
 400e598:	dfc00115 	stw	ra,4(sp)
 400e59c:	df000015 	stw	fp,0(sp)
 400e5a0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400e5a4:	d0a00b17 	ldw	r2,-32724(gp)
 400e5a8:	10000326 	beq	r2,zero,400e5b8 <alt_get_errno+0x24>
 400e5ac:	d0a00b17 	ldw	r2,-32724(gp)
 400e5b0:	103ee83a 	callr	r2
 400e5b4:	00000106 	br	400e5bc <alt_get_errno+0x28>
 400e5b8:	d0a6d504 	addi	r2,gp,-25772
}
 400e5bc:	e037883a 	mov	sp,fp
 400e5c0:	dfc00117 	ldw	ra,4(sp)
 400e5c4:	df000017 	ldw	fp,0(sp)
 400e5c8:	dec00204 	addi	sp,sp,8
 400e5cc:	f800283a 	ret

0400e5d0 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 400e5d0:	defff904 	addi	sp,sp,-28
 400e5d4:	dfc00615 	stw	ra,24(sp)
 400e5d8:	df000515 	stw	fp,20(sp)
 400e5dc:	df000504 	addi	fp,sp,20
 400e5e0:	e13ffd15 	stw	r4,-12(fp)
 400e5e4:	e17ffe15 	stw	r5,-8(fp)
 400e5e8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400e5ec:	e0bffd17 	ldw	r2,-12(fp)
 400e5f0:	10000616 	blt	r2,zero,400e60c <read+0x3c>
 400e5f4:	e0bffd17 	ldw	r2,-12(fp)
 400e5f8:	10c00324 	muli	r3,r2,12
 400e5fc:	00810074 	movhi	r2,1025
 400e600:	1084ff04 	addi	r2,r2,5116
 400e604:	1885883a 	add	r2,r3,r2
 400e608:	00000106 	br	400e610 <read+0x40>
 400e60c:	0005883a 	mov	r2,zero
 400e610:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 400e614:	e0bffb17 	ldw	r2,-20(fp)
 400e618:	10002226 	beq	r2,zero,400e6a4 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 400e61c:	e0bffb17 	ldw	r2,-20(fp)
 400e620:	10800217 	ldw	r2,8(r2)
 400e624:	108000cc 	andi	r2,r2,3
 400e628:	10800060 	cmpeqi	r2,r2,1
 400e62c:	1000181e 	bne	r2,zero,400e690 <read+0xc0>
        (fd->dev->read))
 400e630:	e0bffb17 	ldw	r2,-20(fp)
 400e634:	10800017 	ldw	r2,0(r2)
 400e638:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 400e63c:	10001426 	beq	r2,zero,400e690 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 400e640:	e0bffb17 	ldw	r2,-20(fp)
 400e644:	10800017 	ldw	r2,0(r2)
 400e648:	10800517 	ldw	r2,20(r2)
 400e64c:	e0ffff17 	ldw	r3,-4(fp)
 400e650:	180d883a 	mov	r6,r3
 400e654:	e17ffe17 	ldw	r5,-8(fp)
 400e658:	e13ffb17 	ldw	r4,-20(fp)
 400e65c:	103ee83a 	callr	r2
 400e660:	e0bffc15 	stw	r2,-16(fp)
 400e664:	e0bffc17 	ldw	r2,-16(fp)
 400e668:	1000070e 	bge	r2,zero,400e688 <read+0xb8>
        {
          ALT_ERRNO = -rval;
 400e66c:	400e5940 	call	400e594 <alt_get_errno>
 400e670:	1007883a 	mov	r3,r2
 400e674:	e0bffc17 	ldw	r2,-16(fp)
 400e678:	0085c83a 	sub	r2,zero,r2
 400e67c:	18800015 	stw	r2,0(r3)
          return -1;
 400e680:	00bfffc4 	movi	r2,-1
 400e684:	00000c06 	br	400e6b8 <read+0xe8>
        }
        return rval;
 400e688:	e0bffc17 	ldw	r2,-16(fp)
 400e68c:	00000a06 	br	400e6b8 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
 400e690:	400e5940 	call	400e594 <alt_get_errno>
 400e694:	1007883a 	mov	r3,r2
 400e698:	00800344 	movi	r2,13
 400e69c:	18800015 	stw	r2,0(r3)
 400e6a0:	00000406 	br	400e6b4 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 400e6a4:	400e5940 	call	400e594 <alt_get_errno>
 400e6a8:	1007883a 	mov	r3,r2
 400e6ac:	00801444 	movi	r2,81
 400e6b0:	18800015 	stw	r2,0(r3)
  }
  return -1;
 400e6b4:	00bfffc4 	movi	r2,-1
}
 400e6b8:	e037883a 	mov	sp,fp
 400e6bc:	dfc00117 	ldw	ra,4(sp)
 400e6c0:	df000017 	ldw	fp,0(sp)
 400e6c4:	dec00204 	addi	sp,sp,8
 400e6c8:	f800283a 	ret

0400e6cc <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 400e6cc:	defffe04 	addi	sp,sp,-8
 400e6d0:	df000115 	stw	fp,4(sp)
 400e6d4:	df000104 	addi	fp,sp,4
 400e6d8:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 400e6dc:	e0bfff17 	ldw	r2,-4(fp)
 400e6e0:	108000d0 	cmplti	r2,r2,3
 400e6e4:	10000d1e 	bne	r2,zero,400e71c <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
 400e6e8:	00810074 	movhi	r2,1025
 400e6ec:	1084ff04 	addi	r2,r2,5116
 400e6f0:	e0ffff17 	ldw	r3,-4(fp)
 400e6f4:	18c00324 	muli	r3,r3,12
 400e6f8:	10c5883a 	add	r2,r2,r3
 400e6fc:	10800204 	addi	r2,r2,8
 400e700:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 400e704:	00810074 	movhi	r2,1025
 400e708:	1084ff04 	addi	r2,r2,5116
 400e70c:	e0ffff17 	ldw	r3,-4(fp)
 400e710:	18c00324 	muli	r3,r3,12
 400e714:	10c5883a 	add	r2,r2,r3
 400e718:	10000015 	stw	zero,0(r2)
  }
}
 400e71c:	0001883a 	nop
 400e720:	e037883a 	mov	sp,fp
 400e724:	df000017 	ldw	fp,0(sp)
 400e728:	dec00104 	addi	sp,sp,4
 400e72c:	f800283a 	ret

0400e730 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 400e730:	defff904 	addi	sp,sp,-28
 400e734:	df000615 	stw	fp,24(sp)
 400e738:	df000604 	addi	fp,sp,24
 400e73c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400e740:	0005303a 	rdctl	r2,status
 400e744:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400e748:	e0fffe17 	ldw	r3,-8(fp)
 400e74c:	00bfff84 	movi	r2,-2
 400e750:	1884703a 	and	r2,r3,r2
 400e754:	1001703a 	wrctl	status,r2
  
  return context;
 400e758:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 400e75c:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 400e760:	d0a00c17 	ldw	r2,-32720(gp)
 400e764:	10c000c4 	addi	r3,r2,3
 400e768:	00bfff04 	movi	r2,-4
 400e76c:	1884703a 	and	r2,r3,r2
 400e770:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 400e774:	d0e00c17 	ldw	r3,-32720(gp)
 400e778:	e0bfff17 	ldw	r2,-4(fp)
 400e77c:	1887883a 	add	r3,r3,r2
 400e780:	00820034 	movhi	r2,2048
 400e784:	10800004 	addi	r2,r2,0
 400e788:	10c0062e 	bgeu	r2,r3,400e7a4 <sbrk+0x74>
 400e78c:	e0bffb17 	ldw	r2,-20(fp)
 400e790:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400e794:	e0bffa17 	ldw	r2,-24(fp)
 400e798:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 400e79c:	00bfffc4 	movi	r2,-1
 400e7a0:	00000b06 	br	400e7d0 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 400e7a4:	d0a00c17 	ldw	r2,-32720(gp)
 400e7a8:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 400e7ac:	d0e00c17 	ldw	r3,-32720(gp)
 400e7b0:	e0bfff17 	ldw	r2,-4(fp)
 400e7b4:	1885883a 	add	r2,r3,r2
 400e7b8:	d0a00c15 	stw	r2,-32720(gp)
 400e7bc:	e0bffb17 	ldw	r2,-20(fp)
 400e7c0:	e0bffc15 	stw	r2,-16(fp)
 400e7c4:	e0bffc17 	ldw	r2,-16(fp)
 400e7c8:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 400e7cc:	e0bffd17 	ldw	r2,-12(fp)
} 
 400e7d0:	e037883a 	mov	sp,fp
 400e7d4:	df000017 	ldw	fp,0(sp)
 400e7d8:	dec00104 	addi	sp,sp,4
 400e7dc:	f800283a 	ret

0400e7e0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400e7e0:	defffe04 	addi	sp,sp,-8
 400e7e4:	dfc00115 	stw	ra,4(sp)
 400e7e8:	df000015 	stw	fp,0(sp)
 400e7ec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400e7f0:	d0a00b17 	ldw	r2,-32724(gp)
 400e7f4:	10000326 	beq	r2,zero,400e804 <alt_get_errno+0x24>
 400e7f8:	d0a00b17 	ldw	r2,-32724(gp)
 400e7fc:	103ee83a 	callr	r2
 400e800:	00000106 	br	400e808 <alt_get_errno+0x28>
 400e804:	d0a6d504 	addi	r2,gp,-25772
}
 400e808:	e037883a 	mov	sp,fp
 400e80c:	dfc00117 	ldw	ra,4(sp)
 400e810:	df000017 	ldw	fp,0(sp)
 400e814:	dec00204 	addi	sp,sp,8
 400e818:	f800283a 	ret

0400e81c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 400e81c:	defff904 	addi	sp,sp,-28
 400e820:	dfc00615 	stw	ra,24(sp)
 400e824:	df000515 	stw	fp,20(sp)
 400e828:	df000504 	addi	fp,sp,20
 400e82c:	e13ffd15 	stw	r4,-12(fp)
 400e830:	e17ffe15 	stw	r5,-8(fp)
 400e834:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 400e838:	e0bffd17 	ldw	r2,-12(fp)
 400e83c:	10000616 	blt	r2,zero,400e858 <write+0x3c>
 400e840:	e0bffd17 	ldw	r2,-12(fp)
 400e844:	10c00324 	muli	r3,r2,12
 400e848:	00810074 	movhi	r2,1025
 400e84c:	1084ff04 	addi	r2,r2,5116
 400e850:	1885883a 	add	r2,r3,r2
 400e854:	00000106 	br	400e85c <write+0x40>
 400e858:	0005883a 	mov	r2,zero
 400e85c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 400e860:	e0bffb17 	ldw	r2,-20(fp)
 400e864:	10002126 	beq	r2,zero,400e8ec <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 400e868:	e0bffb17 	ldw	r2,-20(fp)
 400e86c:	10800217 	ldw	r2,8(r2)
 400e870:	108000cc 	andi	r2,r2,3
 400e874:	10001826 	beq	r2,zero,400e8d8 <write+0xbc>
 400e878:	e0bffb17 	ldw	r2,-20(fp)
 400e87c:	10800017 	ldw	r2,0(r2)
 400e880:	10800617 	ldw	r2,24(r2)
 400e884:	10001426 	beq	r2,zero,400e8d8 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 400e888:	e0bffb17 	ldw	r2,-20(fp)
 400e88c:	10800017 	ldw	r2,0(r2)
 400e890:	10800617 	ldw	r2,24(r2)
 400e894:	e0ffff17 	ldw	r3,-4(fp)
 400e898:	180d883a 	mov	r6,r3
 400e89c:	e17ffe17 	ldw	r5,-8(fp)
 400e8a0:	e13ffb17 	ldw	r4,-20(fp)
 400e8a4:	103ee83a 	callr	r2
 400e8a8:	e0bffc15 	stw	r2,-16(fp)
 400e8ac:	e0bffc17 	ldw	r2,-16(fp)
 400e8b0:	1000070e 	bge	r2,zero,400e8d0 <write+0xb4>
      {
        ALT_ERRNO = -rval;
 400e8b4:	400e7e00 	call	400e7e0 <alt_get_errno>
 400e8b8:	1007883a 	mov	r3,r2
 400e8bc:	e0bffc17 	ldw	r2,-16(fp)
 400e8c0:	0085c83a 	sub	r2,zero,r2
 400e8c4:	18800015 	stw	r2,0(r3)
        return -1;
 400e8c8:	00bfffc4 	movi	r2,-1
 400e8cc:	00000c06 	br	400e900 <write+0xe4>
      }
      return rval;
 400e8d0:	e0bffc17 	ldw	r2,-16(fp)
 400e8d4:	00000a06 	br	400e900 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
 400e8d8:	400e7e00 	call	400e7e0 <alt_get_errno>
 400e8dc:	1007883a 	mov	r3,r2
 400e8e0:	00800344 	movi	r2,13
 400e8e4:	18800015 	stw	r2,0(r3)
 400e8e8:	00000406 	br	400e8fc <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 400e8ec:	400e7e00 	call	400e7e0 <alt_get_errno>
 400e8f0:	1007883a 	mov	r3,r2
 400e8f4:	00801444 	movi	r2,81
 400e8f8:	18800015 	stw	r2,0(r3)
  }
  return -1;
 400e8fc:	00bfffc4 	movi	r2,-1
}
 400e900:	e037883a 	mov	sp,fp
 400e904:	dfc00117 	ldw	ra,4(sp)
 400e908:	df000017 	ldw	fp,0(sp)
 400e90c:	dec00204 	addi	sp,sp,8
 400e910:	f800283a 	ret

0400e914 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 400e914:	defffd04 	addi	sp,sp,-12
 400e918:	dfc00215 	stw	ra,8(sp)
 400e91c:	df000115 	stw	fp,4(sp)
 400e920:	df000104 	addi	fp,sp,4
 400e924:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 400e928:	d1600804 	addi	r5,gp,-32736
 400e92c:	e13fff17 	ldw	r4,-4(fp)
 400e930:	400f6cc0 	call	400f6cc <alt_dev_llist_insert>
}
 400e934:	e037883a 	mov	sp,fp
 400e938:	dfc00117 	ldw	ra,4(sp)
 400e93c:	df000017 	ldw	fp,0(sp)
 400e940:	dec00204 	addi	sp,sp,8
 400e944:	f800283a 	ret

0400e948 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 400e948:	defffd04 	addi	sp,sp,-12
 400e94c:	dfc00215 	stw	ra,8(sp)
 400e950:	df000115 	stw	fp,4(sp)
 400e954:	df000104 	addi	fp,sp,4
 400e958:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( NIOS2_QSYS_0, nios2_qsys_0);
 400e95c:	40100980 	call	4010098 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 400e960:	00800044 	movi	r2,1
 400e964:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 400e968:	0001883a 	nop
 400e96c:	e037883a 	mov	sp,fp
 400e970:	dfc00117 	ldw	ra,4(sp)
 400e974:	df000017 	ldw	fp,0(sp)
 400e978:	dec00204 	addi	sp,sp,8
 400e97c:	f800283a 	ret

0400e980 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 400e980:	defffe04 	addi	sp,sp,-8
 400e984:	dfc00115 	stw	ra,4(sp)
 400e988:	df000015 	stw	fp,0(sp)
 400e98c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
 400e990:	00820074 	movhi	r2,2049
 400e994:	10a40004 	addi	r2,r2,-28672
 400e998:	d0a6d915 	stw	r2,-25756(gp)
 400e99c:	0080bef4 	movhi	r2,763
 400e9a0:	10bc2004 	addi	r2,r2,-3968
 400e9a4:	d0a6da15 	stw	r2,-25752(gp)
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
 400e9a8:	000d883a 	mov	r6,zero
 400e9ac:	000b883a 	mov	r5,zero
 400e9b0:	01010074 	movhi	r4,1025
 400e9b4:	21056904 	addi	r4,r4,5540
 400e9b8:	400eb480 	call	400eb48 <altera_avalon_jtag_uart_init>
 400e9bc:	01010074 	movhi	r4,1025
 400e9c0:	21055f04 	addi	r4,r4,5500
 400e9c4:	400e9140 	call	400e914 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
 400e9c8:	0001883a 	nop
}
 400e9cc:	0001883a 	nop
 400e9d0:	e037883a 	mov	sp,fp
 400e9d4:	dfc00117 	ldw	ra,4(sp)
 400e9d8:	df000017 	ldw	fp,0(sp)
 400e9dc:	dec00204 	addi	sp,sp,8
 400e9e0:	f800283a 	ret

0400e9e4 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 400e9e4:	defffa04 	addi	sp,sp,-24
 400e9e8:	dfc00515 	stw	ra,20(sp)
 400e9ec:	df000415 	stw	fp,16(sp)
 400e9f0:	df000404 	addi	fp,sp,16
 400e9f4:	e13ffd15 	stw	r4,-12(fp)
 400e9f8:	e17ffe15 	stw	r5,-8(fp)
 400e9fc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 400ea00:	e0bffd17 	ldw	r2,-12(fp)
 400ea04:	10800017 	ldw	r2,0(r2)
 400ea08:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 400ea0c:	e0bffc17 	ldw	r2,-16(fp)
 400ea10:	10c00a04 	addi	r3,r2,40
 400ea14:	e0bffd17 	ldw	r2,-12(fp)
 400ea18:	10800217 	ldw	r2,8(r2)
 400ea1c:	100f883a 	mov	r7,r2
 400ea20:	e1bfff17 	ldw	r6,-4(fp)
 400ea24:	e17ffe17 	ldw	r5,-8(fp)
 400ea28:	1809883a 	mov	r4,r3
 400ea2c:	400f00c0 	call	400f00c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 400ea30:	e037883a 	mov	sp,fp
 400ea34:	dfc00117 	ldw	ra,4(sp)
 400ea38:	df000017 	ldw	fp,0(sp)
 400ea3c:	dec00204 	addi	sp,sp,8
 400ea40:	f800283a 	ret

0400ea44 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 400ea44:	defffa04 	addi	sp,sp,-24
 400ea48:	dfc00515 	stw	ra,20(sp)
 400ea4c:	df000415 	stw	fp,16(sp)
 400ea50:	df000404 	addi	fp,sp,16
 400ea54:	e13ffd15 	stw	r4,-12(fp)
 400ea58:	e17ffe15 	stw	r5,-8(fp)
 400ea5c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 400ea60:	e0bffd17 	ldw	r2,-12(fp)
 400ea64:	10800017 	ldw	r2,0(r2)
 400ea68:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 400ea6c:	e0bffc17 	ldw	r2,-16(fp)
 400ea70:	10c00a04 	addi	r3,r2,40
 400ea74:	e0bffd17 	ldw	r2,-12(fp)
 400ea78:	10800217 	ldw	r2,8(r2)
 400ea7c:	100f883a 	mov	r7,r2
 400ea80:	e1bfff17 	ldw	r6,-4(fp)
 400ea84:	e17ffe17 	ldw	r5,-8(fp)
 400ea88:	1809883a 	mov	r4,r3
 400ea8c:	400f2280 	call	400f228 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 400ea90:	e037883a 	mov	sp,fp
 400ea94:	dfc00117 	ldw	ra,4(sp)
 400ea98:	df000017 	ldw	fp,0(sp)
 400ea9c:	dec00204 	addi	sp,sp,8
 400eaa0:	f800283a 	ret

0400eaa4 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 400eaa4:	defffc04 	addi	sp,sp,-16
 400eaa8:	dfc00315 	stw	ra,12(sp)
 400eaac:	df000215 	stw	fp,8(sp)
 400eab0:	df000204 	addi	fp,sp,8
 400eab4:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 400eab8:	e0bfff17 	ldw	r2,-4(fp)
 400eabc:	10800017 	ldw	r2,0(r2)
 400eac0:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 400eac4:	e0bffe17 	ldw	r2,-8(fp)
 400eac8:	10c00a04 	addi	r3,r2,40
 400eacc:	e0bfff17 	ldw	r2,-4(fp)
 400ead0:	10800217 	ldw	r2,8(r2)
 400ead4:	100b883a 	mov	r5,r2
 400ead8:	1809883a 	mov	r4,r3
 400eadc:	400eeb40 	call	400eeb4 <altera_avalon_jtag_uart_close>
}
 400eae0:	e037883a 	mov	sp,fp
 400eae4:	dfc00117 	ldw	ra,4(sp)
 400eae8:	df000017 	ldw	fp,0(sp)
 400eaec:	dec00204 	addi	sp,sp,8
 400eaf0:	f800283a 	ret

0400eaf4 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 400eaf4:	defffa04 	addi	sp,sp,-24
 400eaf8:	dfc00515 	stw	ra,20(sp)
 400eafc:	df000415 	stw	fp,16(sp)
 400eb00:	df000404 	addi	fp,sp,16
 400eb04:	e13ffd15 	stw	r4,-12(fp)
 400eb08:	e17ffe15 	stw	r5,-8(fp)
 400eb0c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 400eb10:	e0bffd17 	ldw	r2,-12(fp)
 400eb14:	10800017 	ldw	r2,0(r2)
 400eb18:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 400eb1c:	e0bffc17 	ldw	r2,-16(fp)
 400eb20:	10800a04 	addi	r2,r2,40
 400eb24:	e1bfff17 	ldw	r6,-4(fp)
 400eb28:	e17ffe17 	ldw	r5,-8(fp)
 400eb2c:	1009883a 	mov	r4,r2
 400eb30:	400ef1c0 	call	400ef1c <altera_avalon_jtag_uart_ioctl>
}
 400eb34:	e037883a 	mov	sp,fp
 400eb38:	dfc00117 	ldw	ra,4(sp)
 400eb3c:	df000017 	ldw	fp,0(sp)
 400eb40:	dec00204 	addi	sp,sp,8
 400eb44:	f800283a 	ret

0400eb48 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 400eb48:	defffa04 	addi	sp,sp,-24
 400eb4c:	dfc00515 	stw	ra,20(sp)
 400eb50:	df000415 	stw	fp,16(sp)
 400eb54:	df000404 	addi	fp,sp,16
 400eb58:	e13ffd15 	stw	r4,-12(fp)
 400eb5c:	e17ffe15 	stw	r5,-8(fp)
 400eb60:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 400eb64:	e0bffd17 	ldw	r2,-12(fp)
 400eb68:	00c00044 	movi	r3,1
 400eb6c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 400eb70:	e0bffd17 	ldw	r2,-12(fp)
 400eb74:	10800017 	ldw	r2,0(r2)
 400eb78:	10800104 	addi	r2,r2,4
 400eb7c:	1007883a 	mov	r3,r2
 400eb80:	e0bffd17 	ldw	r2,-12(fp)
 400eb84:	10800817 	ldw	r2,32(r2)
 400eb88:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 400eb8c:	e0bffe17 	ldw	r2,-8(fp)
 400eb90:	e0ffff17 	ldw	r3,-4(fp)
 400eb94:	d8000015 	stw	zero,0(sp)
 400eb98:	e1fffd17 	ldw	r7,-12(fp)
 400eb9c:	01810074 	movhi	r6,1025
 400eba0:	31bb0204 	addi	r6,r6,-5112
 400eba4:	180b883a 	mov	r5,r3
 400eba8:	1009883a 	mov	r4,r2
 400ebac:	400f8c00 	call	400f8c0 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 400ebb0:	e0bffd17 	ldw	r2,-12(fp)
 400ebb4:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 400ebb8:	e0bffd17 	ldw	r2,-12(fp)
 400ebbc:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 400ebc0:	d0e6dc17 	ldw	r3,-25744(gp)
 400ebc4:	e1fffd17 	ldw	r7,-12(fp)
 400ebc8:	01810074 	movhi	r6,1025
 400ebcc:	31bb8504 	addi	r6,r6,-4588
 400ebd0:	180b883a 	mov	r5,r3
 400ebd4:	1009883a 	mov	r4,r2
 400ebd8:	400f5640 	call	400f564 <alt_alarm_start>
 400ebdc:	1000040e 	bge	r2,zero,400ebf0 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 400ebe0:	e0fffd17 	ldw	r3,-12(fp)
 400ebe4:	00a00034 	movhi	r2,32768
 400ebe8:	10bfffc4 	addi	r2,r2,-1
 400ebec:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 400ebf0:	0001883a 	nop
 400ebf4:	e037883a 	mov	sp,fp
 400ebf8:	dfc00117 	ldw	ra,4(sp)
 400ebfc:	df000017 	ldw	fp,0(sp)
 400ec00:	dec00204 	addi	sp,sp,8
 400ec04:	f800283a 	ret

0400ec08 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 400ec08:	defff804 	addi	sp,sp,-32
 400ec0c:	df000715 	stw	fp,28(sp)
 400ec10:	df000704 	addi	fp,sp,28
 400ec14:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 400ec18:	e0bfff17 	ldw	r2,-4(fp)
 400ec1c:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 400ec20:	e0bffb17 	ldw	r2,-20(fp)
 400ec24:	10800017 	ldw	r2,0(r2)
 400ec28:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 400ec2c:	e0bffc17 	ldw	r2,-16(fp)
 400ec30:	10800104 	addi	r2,r2,4
 400ec34:	10800037 	ldwio	r2,0(r2)
 400ec38:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 400ec3c:	e0bffd17 	ldw	r2,-12(fp)
 400ec40:	1080c00c 	andi	r2,r2,768
 400ec44:	10006d26 	beq	r2,zero,400edfc <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 400ec48:	e0bffd17 	ldw	r2,-12(fp)
 400ec4c:	1080400c 	andi	r2,r2,256
 400ec50:	10003526 	beq	r2,zero,400ed28 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 400ec54:	00800074 	movhi	r2,1
 400ec58:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400ec5c:	e0bffb17 	ldw	r2,-20(fp)
 400ec60:	10800a17 	ldw	r2,40(r2)
 400ec64:	10800044 	addi	r2,r2,1
 400ec68:	1081ffcc 	andi	r2,r2,2047
 400ec6c:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 400ec70:	e0bffb17 	ldw	r2,-20(fp)
 400ec74:	10c00b17 	ldw	r3,44(r2)
 400ec78:	e0bffe17 	ldw	r2,-8(fp)
 400ec7c:	18801526 	beq	r3,r2,400ecd4 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 400ec80:	e0bffc17 	ldw	r2,-16(fp)
 400ec84:	10800037 	ldwio	r2,0(r2)
 400ec88:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 400ec8c:	e0bff917 	ldw	r2,-28(fp)
 400ec90:	10a0000c 	andi	r2,r2,32768
 400ec94:	10001126 	beq	r2,zero,400ecdc <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 400ec98:	e0bffb17 	ldw	r2,-20(fp)
 400ec9c:	10800a17 	ldw	r2,40(r2)
 400eca0:	e0fff917 	ldw	r3,-28(fp)
 400eca4:	1809883a 	mov	r4,r3
 400eca8:	e0fffb17 	ldw	r3,-20(fp)
 400ecac:	1885883a 	add	r2,r3,r2
 400ecb0:	10800e04 	addi	r2,r2,56
 400ecb4:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400ecb8:	e0bffb17 	ldw	r2,-20(fp)
 400ecbc:	10800a17 	ldw	r2,40(r2)
 400ecc0:	10800044 	addi	r2,r2,1
 400ecc4:	10c1ffcc 	andi	r3,r2,2047
 400ecc8:	e0bffb17 	ldw	r2,-20(fp)
 400eccc:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 400ecd0:	003fe206 	br	400ec5c <__alt_data_end+0xfc00ec5c>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 400ecd4:	0001883a 	nop
 400ecd8:	00000106 	br	400ece0 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 400ecdc:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 400ece0:	e0bff917 	ldw	r2,-28(fp)
 400ece4:	10bfffec 	andhi	r2,r2,65535
 400ece8:	10000f26 	beq	r2,zero,400ed28 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 400ecec:	e0bffb17 	ldw	r2,-20(fp)
 400ecf0:	10c00817 	ldw	r3,32(r2)
 400ecf4:	00bfff84 	movi	r2,-2
 400ecf8:	1886703a 	and	r3,r3,r2
 400ecfc:	e0bffb17 	ldw	r2,-20(fp)
 400ed00:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 400ed04:	e0bffc17 	ldw	r2,-16(fp)
 400ed08:	10800104 	addi	r2,r2,4
 400ed0c:	1007883a 	mov	r3,r2
 400ed10:	e0bffb17 	ldw	r2,-20(fp)
 400ed14:	10800817 	ldw	r2,32(r2)
 400ed18:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 400ed1c:	e0bffc17 	ldw	r2,-16(fp)
 400ed20:	10800104 	addi	r2,r2,4
 400ed24:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 400ed28:	e0bffd17 	ldw	r2,-12(fp)
 400ed2c:	1080800c 	andi	r2,r2,512
 400ed30:	103fbe26 	beq	r2,zero,400ec2c <__alt_data_end+0xfc00ec2c>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 400ed34:	e0bffd17 	ldw	r2,-12(fp)
 400ed38:	1004d43a 	srli	r2,r2,16
 400ed3c:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 400ed40:	00001406 	br	400ed94 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 400ed44:	e0bffc17 	ldw	r2,-16(fp)
 400ed48:	e0fffb17 	ldw	r3,-20(fp)
 400ed4c:	18c00d17 	ldw	r3,52(r3)
 400ed50:	e13ffb17 	ldw	r4,-20(fp)
 400ed54:	20c7883a 	add	r3,r4,r3
 400ed58:	18c20e04 	addi	r3,r3,2104
 400ed5c:	18c00003 	ldbu	r3,0(r3)
 400ed60:	18c03fcc 	andi	r3,r3,255
 400ed64:	18c0201c 	xori	r3,r3,128
 400ed68:	18ffe004 	addi	r3,r3,-128
 400ed6c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400ed70:	e0bffb17 	ldw	r2,-20(fp)
 400ed74:	10800d17 	ldw	r2,52(r2)
 400ed78:	10800044 	addi	r2,r2,1
 400ed7c:	10c1ffcc 	andi	r3,r2,2047
 400ed80:	e0bffb17 	ldw	r2,-20(fp)
 400ed84:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 400ed88:	e0bffa17 	ldw	r2,-24(fp)
 400ed8c:	10bfffc4 	addi	r2,r2,-1
 400ed90:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 400ed94:	e0bffa17 	ldw	r2,-24(fp)
 400ed98:	10000526 	beq	r2,zero,400edb0 <altera_avalon_jtag_uart_irq+0x1a8>
 400ed9c:	e0bffb17 	ldw	r2,-20(fp)
 400eda0:	10c00d17 	ldw	r3,52(r2)
 400eda4:	e0bffb17 	ldw	r2,-20(fp)
 400eda8:	10800c17 	ldw	r2,48(r2)
 400edac:	18bfe51e 	bne	r3,r2,400ed44 <__alt_data_end+0xfc00ed44>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 400edb0:	e0bffa17 	ldw	r2,-24(fp)
 400edb4:	103f9d26 	beq	r2,zero,400ec2c <__alt_data_end+0xfc00ec2c>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 400edb8:	e0bffb17 	ldw	r2,-20(fp)
 400edbc:	10c00817 	ldw	r3,32(r2)
 400edc0:	00bfff44 	movi	r2,-3
 400edc4:	1886703a 	and	r3,r3,r2
 400edc8:	e0bffb17 	ldw	r2,-20(fp)
 400edcc:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 400edd0:	e0bffb17 	ldw	r2,-20(fp)
 400edd4:	10800017 	ldw	r2,0(r2)
 400edd8:	10800104 	addi	r2,r2,4
 400eddc:	1007883a 	mov	r3,r2
 400ede0:	e0bffb17 	ldw	r2,-20(fp)
 400ede4:	10800817 	ldw	r2,32(r2)
 400ede8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 400edec:	e0bffc17 	ldw	r2,-16(fp)
 400edf0:	10800104 	addi	r2,r2,4
 400edf4:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 400edf8:	003f8c06 	br	400ec2c <__alt_data_end+0xfc00ec2c>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 400edfc:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 400ee00:	0001883a 	nop
 400ee04:	e037883a 	mov	sp,fp
 400ee08:	df000017 	ldw	fp,0(sp)
 400ee0c:	dec00104 	addi	sp,sp,4
 400ee10:	f800283a 	ret

0400ee14 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 400ee14:	defff804 	addi	sp,sp,-32
 400ee18:	df000715 	stw	fp,28(sp)
 400ee1c:	df000704 	addi	fp,sp,28
 400ee20:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 400ee24:	e0bffb17 	ldw	r2,-20(fp)
 400ee28:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 400ee2c:	e0bff917 	ldw	r2,-28(fp)
 400ee30:	10800017 	ldw	r2,0(r2)
 400ee34:	10800104 	addi	r2,r2,4
 400ee38:	10800037 	ldwio	r2,0(r2)
 400ee3c:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 400ee40:	e0bffa17 	ldw	r2,-24(fp)
 400ee44:	1081000c 	andi	r2,r2,1024
 400ee48:	10000b26 	beq	r2,zero,400ee78 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 400ee4c:	e0bff917 	ldw	r2,-28(fp)
 400ee50:	10800017 	ldw	r2,0(r2)
 400ee54:	10800104 	addi	r2,r2,4
 400ee58:	1007883a 	mov	r3,r2
 400ee5c:	e0bff917 	ldw	r2,-28(fp)
 400ee60:	10800817 	ldw	r2,32(r2)
 400ee64:	10810014 	ori	r2,r2,1024
 400ee68:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 400ee6c:	e0bff917 	ldw	r2,-28(fp)
 400ee70:	10000915 	stw	zero,36(r2)
 400ee74:	00000a06 	br	400eea0 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 400ee78:	e0bff917 	ldw	r2,-28(fp)
 400ee7c:	10c00917 	ldw	r3,36(r2)
 400ee80:	00a00034 	movhi	r2,32768
 400ee84:	10bfff04 	addi	r2,r2,-4
 400ee88:	10c00536 	bltu	r2,r3,400eea0 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 400ee8c:	e0bff917 	ldw	r2,-28(fp)
 400ee90:	10800917 	ldw	r2,36(r2)
 400ee94:	10c00044 	addi	r3,r2,1
 400ee98:	e0bff917 	ldw	r2,-28(fp)
 400ee9c:	10c00915 	stw	r3,36(r2)
 400eea0:	d0a6dc17 	ldw	r2,-25744(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 400eea4:	e037883a 	mov	sp,fp
 400eea8:	df000017 	ldw	fp,0(sp)
 400eeac:	dec00104 	addi	sp,sp,4
 400eeb0:	f800283a 	ret

0400eeb4 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 400eeb4:	defffd04 	addi	sp,sp,-12
 400eeb8:	df000215 	stw	fp,8(sp)
 400eebc:	df000204 	addi	fp,sp,8
 400eec0:	e13ffe15 	stw	r4,-8(fp)
 400eec4:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 400eec8:	00000506 	br	400eee0 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 400eecc:	e0bfff17 	ldw	r2,-4(fp)
 400eed0:	1090000c 	andi	r2,r2,16384
 400eed4:	10000226 	beq	r2,zero,400eee0 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 400eed8:	00bffd44 	movi	r2,-11
 400eedc:	00000b06 	br	400ef0c <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 400eee0:	e0bffe17 	ldw	r2,-8(fp)
 400eee4:	10c00d17 	ldw	r3,52(r2)
 400eee8:	e0bffe17 	ldw	r2,-8(fp)
 400eeec:	10800c17 	ldw	r2,48(r2)
 400eef0:	18800526 	beq	r3,r2,400ef08 <altera_avalon_jtag_uart_close+0x54>
 400eef4:	e0bffe17 	ldw	r2,-8(fp)
 400eef8:	10c00917 	ldw	r3,36(r2)
 400eefc:	e0bffe17 	ldw	r2,-8(fp)
 400ef00:	10800117 	ldw	r2,4(r2)
 400ef04:	18bff136 	bltu	r3,r2,400eecc <__alt_data_end+0xfc00eecc>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 400ef08:	0005883a 	mov	r2,zero
}
 400ef0c:	e037883a 	mov	sp,fp
 400ef10:	df000017 	ldw	fp,0(sp)
 400ef14:	dec00104 	addi	sp,sp,4
 400ef18:	f800283a 	ret

0400ef1c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 400ef1c:	defffa04 	addi	sp,sp,-24
 400ef20:	df000515 	stw	fp,20(sp)
 400ef24:	df000504 	addi	fp,sp,20
 400ef28:	e13ffd15 	stw	r4,-12(fp)
 400ef2c:	e17ffe15 	stw	r5,-8(fp)
 400ef30:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 400ef34:	00bff9c4 	movi	r2,-25
 400ef38:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 400ef3c:	e0bffe17 	ldw	r2,-8(fp)
 400ef40:	10da8060 	cmpeqi	r3,r2,27137
 400ef44:	1800031e 	bne	r3,zero,400ef54 <altera_avalon_jtag_uart_ioctl+0x38>
 400ef48:	109a80a0 	cmpeqi	r2,r2,27138
 400ef4c:	1000181e 	bne	r2,zero,400efb0 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 400ef50:	00002906 	br	400eff8 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 400ef54:	e0bffd17 	ldw	r2,-12(fp)
 400ef58:	10c00117 	ldw	r3,4(r2)
 400ef5c:	00a00034 	movhi	r2,32768
 400ef60:	10bfffc4 	addi	r2,r2,-1
 400ef64:	18802126 	beq	r3,r2,400efec <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 400ef68:	e0bfff17 	ldw	r2,-4(fp)
 400ef6c:	10800017 	ldw	r2,0(r2)
 400ef70:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 400ef74:	e0bffc17 	ldw	r2,-16(fp)
 400ef78:	10800090 	cmplti	r2,r2,2
 400ef7c:	1000061e 	bne	r2,zero,400ef98 <altera_avalon_jtag_uart_ioctl+0x7c>
 400ef80:	e0fffc17 	ldw	r3,-16(fp)
 400ef84:	00a00034 	movhi	r2,32768
 400ef88:	10bfffc4 	addi	r2,r2,-1
 400ef8c:	18800226 	beq	r3,r2,400ef98 <altera_avalon_jtag_uart_ioctl+0x7c>
 400ef90:	e0bffc17 	ldw	r2,-16(fp)
 400ef94:	00000206 	br	400efa0 <altera_avalon_jtag_uart_ioctl+0x84>
 400ef98:	00a00034 	movhi	r2,32768
 400ef9c:	10bfff84 	addi	r2,r2,-2
 400efa0:	e0fffd17 	ldw	r3,-12(fp)
 400efa4:	18800115 	stw	r2,4(r3)
      rc = 0;
 400efa8:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 400efac:	00000f06 	br	400efec <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 400efb0:	e0bffd17 	ldw	r2,-12(fp)
 400efb4:	10c00117 	ldw	r3,4(r2)
 400efb8:	00a00034 	movhi	r2,32768
 400efbc:	10bfffc4 	addi	r2,r2,-1
 400efc0:	18800c26 	beq	r3,r2,400eff4 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 400efc4:	e0bffd17 	ldw	r2,-12(fp)
 400efc8:	10c00917 	ldw	r3,36(r2)
 400efcc:	e0bffd17 	ldw	r2,-12(fp)
 400efd0:	10800117 	ldw	r2,4(r2)
 400efd4:	1885803a 	cmpltu	r2,r3,r2
 400efd8:	10c03fcc 	andi	r3,r2,255
 400efdc:	e0bfff17 	ldw	r2,-4(fp)
 400efe0:	10c00015 	stw	r3,0(r2)
      rc = 0;
 400efe4:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 400efe8:	00000206 	br	400eff4 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 400efec:	0001883a 	nop
 400eff0:	00000106 	br	400eff8 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 400eff4:	0001883a 	nop

  default:
    break;
  }

  return rc;
 400eff8:	e0bffb17 	ldw	r2,-20(fp)
}
 400effc:	e037883a 	mov	sp,fp
 400f000:	df000017 	ldw	fp,0(sp)
 400f004:	dec00104 	addi	sp,sp,4
 400f008:	f800283a 	ret

0400f00c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 400f00c:	defff304 	addi	sp,sp,-52
 400f010:	dfc00c15 	stw	ra,48(sp)
 400f014:	df000b15 	stw	fp,44(sp)
 400f018:	df000b04 	addi	fp,sp,44
 400f01c:	e13ffc15 	stw	r4,-16(fp)
 400f020:	e17ffd15 	stw	r5,-12(fp)
 400f024:	e1bffe15 	stw	r6,-8(fp)
 400f028:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 400f02c:	e0bffd17 	ldw	r2,-12(fp)
 400f030:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 400f034:	00004706 	br	400f154 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 400f038:	e0bffc17 	ldw	r2,-16(fp)
 400f03c:	10800a17 	ldw	r2,40(r2)
 400f040:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 400f044:	e0bffc17 	ldw	r2,-16(fp)
 400f048:	10800b17 	ldw	r2,44(r2)
 400f04c:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 400f050:	e0fff717 	ldw	r3,-36(fp)
 400f054:	e0bff817 	ldw	r2,-32(fp)
 400f058:	18800536 	bltu	r3,r2,400f070 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 400f05c:	e0fff717 	ldw	r3,-36(fp)
 400f060:	e0bff817 	ldw	r2,-32(fp)
 400f064:	1885c83a 	sub	r2,r3,r2
 400f068:	e0bff615 	stw	r2,-40(fp)
 400f06c:	00000406 	br	400f080 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 400f070:	00c20004 	movi	r3,2048
 400f074:	e0bff817 	ldw	r2,-32(fp)
 400f078:	1885c83a 	sub	r2,r3,r2
 400f07c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 400f080:	e0bff617 	ldw	r2,-40(fp)
 400f084:	10001e26 	beq	r2,zero,400f100 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 400f088:	e0fffe17 	ldw	r3,-8(fp)
 400f08c:	e0bff617 	ldw	r2,-40(fp)
 400f090:	1880022e 	bgeu	r3,r2,400f09c <altera_avalon_jtag_uart_read+0x90>
        n = space;
 400f094:	e0bffe17 	ldw	r2,-8(fp)
 400f098:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 400f09c:	e0bffc17 	ldw	r2,-16(fp)
 400f0a0:	10c00e04 	addi	r3,r2,56
 400f0a4:	e0bff817 	ldw	r2,-32(fp)
 400f0a8:	1885883a 	add	r2,r3,r2
 400f0ac:	e1bff617 	ldw	r6,-40(fp)
 400f0b0:	100b883a 	mov	r5,r2
 400f0b4:	e13ff517 	ldw	r4,-44(fp)
 400f0b8:	40081b00 	call	40081b0 <memcpy>
      ptr   += n;
 400f0bc:	e0fff517 	ldw	r3,-44(fp)
 400f0c0:	e0bff617 	ldw	r2,-40(fp)
 400f0c4:	1885883a 	add	r2,r3,r2
 400f0c8:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 400f0cc:	e0fffe17 	ldw	r3,-8(fp)
 400f0d0:	e0bff617 	ldw	r2,-40(fp)
 400f0d4:	1885c83a 	sub	r2,r3,r2
 400f0d8:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400f0dc:	e0fff817 	ldw	r3,-32(fp)
 400f0e0:	e0bff617 	ldw	r2,-40(fp)
 400f0e4:	1885883a 	add	r2,r3,r2
 400f0e8:	10c1ffcc 	andi	r3,r2,2047
 400f0ec:	e0bffc17 	ldw	r2,-16(fp)
 400f0f0:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 400f0f4:	e0bffe17 	ldw	r2,-8(fp)
 400f0f8:	00bfcf16 	blt	zero,r2,400f038 <__alt_data_end+0xfc00f038>
 400f0fc:	00000106 	br	400f104 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 400f100:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 400f104:	e0fff517 	ldw	r3,-44(fp)
 400f108:	e0bffd17 	ldw	r2,-12(fp)
 400f10c:	1880141e 	bne	r3,r2,400f160 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 400f110:	e0bfff17 	ldw	r2,-4(fp)
 400f114:	1090000c 	andi	r2,r2,16384
 400f118:	1000131e 	bne	r2,zero,400f168 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 400f11c:	0001883a 	nop
 400f120:	e0bffc17 	ldw	r2,-16(fp)
 400f124:	10c00a17 	ldw	r3,40(r2)
 400f128:	e0bff717 	ldw	r2,-36(fp)
 400f12c:	1880051e 	bne	r3,r2,400f144 <altera_avalon_jtag_uart_read+0x138>
 400f130:	e0bffc17 	ldw	r2,-16(fp)
 400f134:	10c00917 	ldw	r3,36(r2)
 400f138:	e0bffc17 	ldw	r2,-16(fp)
 400f13c:	10800117 	ldw	r2,4(r2)
 400f140:	18bff736 	bltu	r3,r2,400f120 <__alt_data_end+0xfc00f120>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 400f144:	e0bffc17 	ldw	r2,-16(fp)
 400f148:	10c00a17 	ldw	r3,40(r2)
 400f14c:	e0bff717 	ldw	r2,-36(fp)
 400f150:	18800726 	beq	r3,r2,400f170 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 400f154:	e0bffe17 	ldw	r2,-8(fp)
 400f158:	00bfb716 	blt	zero,r2,400f038 <__alt_data_end+0xfc00f038>
 400f15c:	00000506 	br	400f174 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 400f160:	0001883a 	nop
 400f164:	00000306 	br	400f174 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 400f168:	0001883a 	nop
 400f16c:	00000106 	br	400f174 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 400f170:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 400f174:	e0fff517 	ldw	r3,-44(fp)
 400f178:	e0bffd17 	ldw	r2,-12(fp)
 400f17c:	18801826 	beq	r3,r2,400f1e0 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400f180:	0005303a 	rdctl	r2,status
 400f184:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400f188:	e0fffb17 	ldw	r3,-20(fp)
 400f18c:	00bfff84 	movi	r2,-2
 400f190:	1884703a 	and	r2,r3,r2
 400f194:	1001703a 	wrctl	status,r2
  
  return context;
 400f198:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 400f19c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 400f1a0:	e0bffc17 	ldw	r2,-16(fp)
 400f1a4:	10800817 	ldw	r2,32(r2)
 400f1a8:	10c00054 	ori	r3,r2,1
 400f1ac:	e0bffc17 	ldw	r2,-16(fp)
 400f1b0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 400f1b4:	e0bffc17 	ldw	r2,-16(fp)
 400f1b8:	10800017 	ldw	r2,0(r2)
 400f1bc:	10800104 	addi	r2,r2,4
 400f1c0:	1007883a 	mov	r3,r2
 400f1c4:	e0bffc17 	ldw	r2,-16(fp)
 400f1c8:	10800817 	ldw	r2,32(r2)
 400f1cc:	18800035 	stwio	r2,0(r3)
 400f1d0:	e0bffa17 	ldw	r2,-24(fp)
 400f1d4:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400f1d8:	e0bff917 	ldw	r2,-28(fp)
 400f1dc:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 400f1e0:	e0fff517 	ldw	r3,-44(fp)
 400f1e4:	e0bffd17 	ldw	r2,-12(fp)
 400f1e8:	18800426 	beq	r3,r2,400f1fc <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 400f1ec:	e0fff517 	ldw	r3,-44(fp)
 400f1f0:	e0bffd17 	ldw	r2,-12(fp)
 400f1f4:	1885c83a 	sub	r2,r3,r2
 400f1f8:	00000606 	br	400f214 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 400f1fc:	e0bfff17 	ldw	r2,-4(fp)
 400f200:	1090000c 	andi	r2,r2,16384
 400f204:	10000226 	beq	r2,zero,400f210 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 400f208:	00bffd44 	movi	r2,-11
 400f20c:	00000106 	br	400f214 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 400f210:	00bffec4 	movi	r2,-5
}
 400f214:	e037883a 	mov	sp,fp
 400f218:	dfc00117 	ldw	ra,4(sp)
 400f21c:	df000017 	ldw	fp,0(sp)
 400f220:	dec00204 	addi	sp,sp,8
 400f224:	f800283a 	ret

0400f228 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 400f228:	defff304 	addi	sp,sp,-52
 400f22c:	dfc00c15 	stw	ra,48(sp)
 400f230:	df000b15 	stw	fp,44(sp)
 400f234:	df000b04 	addi	fp,sp,44
 400f238:	e13ffc15 	stw	r4,-16(fp)
 400f23c:	e17ffd15 	stw	r5,-12(fp)
 400f240:	e1bffe15 	stw	r6,-8(fp)
 400f244:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 400f248:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 400f24c:	e0bffd17 	ldw	r2,-12(fp)
 400f250:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 400f254:	00003706 	br	400f334 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 400f258:	e0bffc17 	ldw	r2,-16(fp)
 400f25c:	10800c17 	ldw	r2,48(r2)
 400f260:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 400f264:	e0bffc17 	ldw	r2,-16(fp)
 400f268:	10800d17 	ldw	r2,52(r2)
 400f26c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 400f270:	e0fff917 	ldw	r3,-28(fp)
 400f274:	e0bff517 	ldw	r2,-44(fp)
 400f278:	1880062e 	bgeu	r3,r2,400f294 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 400f27c:	e0fff517 	ldw	r3,-44(fp)
 400f280:	e0bff917 	ldw	r2,-28(fp)
 400f284:	1885c83a 	sub	r2,r3,r2
 400f288:	10bfffc4 	addi	r2,r2,-1
 400f28c:	e0bff615 	stw	r2,-40(fp)
 400f290:	00000b06 	br	400f2c0 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 400f294:	e0bff517 	ldw	r2,-44(fp)
 400f298:	10000526 	beq	r2,zero,400f2b0 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 400f29c:	00c20004 	movi	r3,2048
 400f2a0:	e0bff917 	ldw	r2,-28(fp)
 400f2a4:	1885c83a 	sub	r2,r3,r2
 400f2a8:	e0bff615 	stw	r2,-40(fp)
 400f2ac:	00000406 	br	400f2c0 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 400f2b0:	00c1ffc4 	movi	r3,2047
 400f2b4:	e0bff917 	ldw	r2,-28(fp)
 400f2b8:	1885c83a 	sub	r2,r3,r2
 400f2bc:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 400f2c0:	e0bff617 	ldw	r2,-40(fp)
 400f2c4:	10001e26 	beq	r2,zero,400f340 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 400f2c8:	e0fffe17 	ldw	r3,-8(fp)
 400f2cc:	e0bff617 	ldw	r2,-40(fp)
 400f2d0:	1880022e 	bgeu	r3,r2,400f2dc <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 400f2d4:	e0bffe17 	ldw	r2,-8(fp)
 400f2d8:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 400f2dc:	e0bffc17 	ldw	r2,-16(fp)
 400f2e0:	10c20e04 	addi	r3,r2,2104
 400f2e4:	e0bff917 	ldw	r2,-28(fp)
 400f2e8:	1885883a 	add	r2,r3,r2
 400f2ec:	e1bff617 	ldw	r6,-40(fp)
 400f2f0:	e17ffd17 	ldw	r5,-12(fp)
 400f2f4:	1009883a 	mov	r4,r2
 400f2f8:	40081b00 	call	40081b0 <memcpy>
      ptr   += n;
 400f2fc:	e0fffd17 	ldw	r3,-12(fp)
 400f300:	e0bff617 	ldw	r2,-40(fp)
 400f304:	1885883a 	add	r2,r3,r2
 400f308:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 400f30c:	e0fffe17 	ldw	r3,-8(fp)
 400f310:	e0bff617 	ldw	r2,-40(fp)
 400f314:	1885c83a 	sub	r2,r3,r2
 400f318:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 400f31c:	e0fff917 	ldw	r3,-28(fp)
 400f320:	e0bff617 	ldw	r2,-40(fp)
 400f324:	1885883a 	add	r2,r3,r2
 400f328:	10c1ffcc 	andi	r3,r2,2047
 400f32c:	e0bffc17 	ldw	r2,-16(fp)
 400f330:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 400f334:	e0bffe17 	ldw	r2,-8(fp)
 400f338:	00bfc716 	blt	zero,r2,400f258 <__alt_data_end+0xfc00f258>
 400f33c:	00000106 	br	400f344 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 400f340:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400f344:	0005303a 	rdctl	r2,status
 400f348:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400f34c:	e0fffb17 	ldw	r3,-20(fp)
 400f350:	00bfff84 	movi	r2,-2
 400f354:	1884703a 	and	r2,r3,r2
 400f358:	1001703a 	wrctl	status,r2
  
  return context;
 400f35c:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 400f360:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 400f364:	e0bffc17 	ldw	r2,-16(fp)
 400f368:	10800817 	ldw	r2,32(r2)
 400f36c:	10c00094 	ori	r3,r2,2
 400f370:	e0bffc17 	ldw	r2,-16(fp)
 400f374:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 400f378:	e0bffc17 	ldw	r2,-16(fp)
 400f37c:	10800017 	ldw	r2,0(r2)
 400f380:	10800104 	addi	r2,r2,4
 400f384:	1007883a 	mov	r3,r2
 400f388:	e0bffc17 	ldw	r2,-16(fp)
 400f38c:	10800817 	ldw	r2,32(r2)
 400f390:	18800035 	stwio	r2,0(r3)
 400f394:	e0bffa17 	ldw	r2,-24(fp)
 400f398:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400f39c:	e0bff817 	ldw	r2,-32(fp)
 400f3a0:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 400f3a4:	e0bffe17 	ldw	r2,-8(fp)
 400f3a8:	0080100e 	bge	zero,r2,400f3ec <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 400f3ac:	e0bfff17 	ldw	r2,-4(fp)
 400f3b0:	1090000c 	andi	r2,r2,16384
 400f3b4:	1000101e 	bne	r2,zero,400f3f8 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 400f3b8:	0001883a 	nop
 400f3bc:	e0bffc17 	ldw	r2,-16(fp)
 400f3c0:	10c00d17 	ldw	r3,52(r2)
 400f3c4:	e0bff517 	ldw	r2,-44(fp)
 400f3c8:	1880051e 	bne	r3,r2,400f3e0 <altera_avalon_jtag_uart_write+0x1b8>
 400f3cc:	e0bffc17 	ldw	r2,-16(fp)
 400f3d0:	10c00917 	ldw	r3,36(r2)
 400f3d4:	e0bffc17 	ldw	r2,-16(fp)
 400f3d8:	10800117 	ldw	r2,4(r2)
 400f3dc:	18bff736 	bltu	r3,r2,400f3bc <__alt_data_end+0xfc00f3bc>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 400f3e0:	e0bffc17 	ldw	r2,-16(fp)
 400f3e4:	10800917 	ldw	r2,36(r2)
 400f3e8:	1000051e 	bne	r2,zero,400f400 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 400f3ec:	e0bffe17 	ldw	r2,-8(fp)
 400f3f0:	00bfd016 	blt	zero,r2,400f334 <__alt_data_end+0xfc00f334>
 400f3f4:	00000306 	br	400f404 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 400f3f8:	0001883a 	nop
 400f3fc:	00000106 	br	400f404 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 400f400:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 400f404:	e0fffd17 	ldw	r3,-12(fp)
 400f408:	e0bff717 	ldw	r2,-36(fp)
 400f40c:	18800426 	beq	r3,r2,400f420 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 400f410:	e0fffd17 	ldw	r3,-12(fp)
 400f414:	e0bff717 	ldw	r2,-36(fp)
 400f418:	1885c83a 	sub	r2,r3,r2
 400f41c:	00000606 	br	400f438 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 400f420:	e0bfff17 	ldw	r2,-4(fp)
 400f424:	1090000c 	andi	r2,r2,16384
 400f428:	10000226 	beq	r2,zero,400f434 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 400f42c:	00bffd44 	movi	r2,-11
 400f430:	00000106 	br	400f438 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 400f434:	00bffec4 	movi	r2,-5
}
 400f438:	e037883a 	mov	sp,fp
 400f43c:	dfc00117 	ldw	ra,4(sp)
 400f440:	df000017 	ldw	fp,0(sp)
 400f444:	dec00204 	addi	sp,sp,8
 400f448:	f800283a 	ret

0400f44c <alt_timestamp_start>:
 * The return value of this function is 0 upon sucess and -1 if in timestamp
 * device has not been registered. 
 */

int alt_timestamp_start(void)
{
 400f44c:	defffe04 	addi	sp,sp,-8
 400f450:	df000115 	stw	fp,4(sp)
 400f454:	df000104 	addi	fp,sp,4
  void* base = altera_avalon_timer_ts_base;
 400f458:	d0a6d917 	ldw	r2,-25756(gp)
 400f45c:	e0bfff15 	stw	r2,-4(fp)

  if (!altera_avalon_timer_ts_freq)
 400f460:	d0a6da17 	ldw	r2,-25752(gp)
 400f464:	1000021e 	bne	r2,zero,400f470 <alt_timestamp_start+0x24>
  {
    return -1;
 400f468:	00bfffc4 	movi	r2,-1
 400f46c:	00001106 	br	400f4b4 <alt_timestamp_start+0x68>
        IOWR_ALTERA_AVALON_TIMER_PERIOD_1 (base, 0xFFFF);;
        IOWR_ALTERA_AVALON_TIMER_PERIOD_2 (base, 0xFFFF);
        IOWR_ALTERA_AVALON_TIMER_PERIOD_3 (base, 0xFFFF);
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base, ALTERA_AVALON_TIMER_CONTROL_START_MSK);
    } else {
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base,ALTERA_AVALON_TIMER_CONTROL_STOP_MSK);
 400f470:	e0bfff17 	ldw	r2,-4(fp)
 400f474:	10800104 	addi	r2,r2,4
 400f478:	00c00204 	movi	r3,8
 400f47c:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_PERIODL (base, 0xFFFF);
 400f480:	e0bfff17 	ldw	r2,-4(fp)
 400f484:	10800204 	addi	r2,r2,8
 400f488:	00ffffd4 	movui	r3,65535
 400f48c:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_PERIODH (base, 0xFFFF);
 400f490:	e0bfff17 	ldw	r2,-4(fp)
 400f494:	10800304 	addi	r2,r2,12
 400f498:	00ffffd4 	movui	r3,65535
 400f49c:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base, ALTERA_AVALON_TIMER_CONTROL_START_MSK); 
 400f4a0:	e0bfff17 	ldw	r2,-4(fp)
 400f4a4:	10800104 	addi	r2,r2,4
 400f4a8:	00c00104 	movi	r3,4
 400f4ac:	10c00035 	stwio	r3,0(r2)
    } 
  }
  return 0;
 400f4b0:	0005883a 	mov	r2,zero
}
 400f4b4:	e037883a 	mov	sp,fp
 400f4b8:	df000017 	ldw	fp,0(sp)
 400f4bc:	dec00104 	addi	sp,sp,4
 400f4c0:	f800283a 	ret

0400f4c4 <alt_timestamp>:
 * The returned timestamp counts up from the last time the period register
 * was reset. 
 */

alt_timestamp_type alt_timestamp(void)
{
 400f4c4:	defffc04 	addi	sp,sp,-16
 400f4c8:	df000315 	stw	fp,12(sp)
 400f4cc:	df000304 	addi	fp,sp,12

  void* base = altera_avalon_timer_ts_base;
 400f4d0:	d0a6d917 	ldw	r2,-25756(gp)
 400f4d4:	e0bffd15 	stw	r2,-12(fp)

  if (!altera_avalon_timer_ts_freq)
 400f4d8:	d0a6da17 	ldw	r2,-25752(gp)
 400f4dc:	1000021e 	bne	r2,zero,400f4e8 <alt_timestamp+0x24>
  {
#if (ALT_TIMESTAMP_COUNTER_SIZE == 64)
        return 0xFFFFFFFFFFFFFFFFULL;
#else
        return 0xFFFFFFFF;
 400f4e0:	00bfffc4 	movi	r2,-1
 400f4e4:	00001306 	br	400f534 <alt_timestamp+0x70>
        alt_timestamp_type snap_2 = IORD_ALTERA_AVALON_TIMER_SNAP_2(base) & ALTERA_AVALON_TIMER_SNAP_2_MSK;
        alt_timestamp_type snap_3 = IORD_ALTERA_AVALON_TIMER_SNAP_3(base) & ALTERA_AVALON_TIMER_SNAP_3_MSK;
        
        return (0xFFFFFFFFFFFFFFFFULL - ( (snap_3 << 48) | (snap_2 << 32) | (snap_1 << 16) | (snap_0) ));
#else
        IOWR_ALTERA_AVALON_TIMER_SNAPL (base, 0);
 400f4e8:	e0bffd17 	ldw	r2,-12(fp)
 400f4ec:	10800404 	addi	r2,r2,16
 400f4f0:	0007883a 	mov	r3,zero
 400f4f4:	10c00035 	stwio	r3,0(r2)
        alt_timestamp_type lower = IORD_ALTERA_AVALON_TIMER_SNAPL(base) & ALTERA_AVALON_TIMER_SNAPL_MSK;
 400f4f8:	e0bffd17 	ldw	r2,-12(fp)
 400f4fc:	10800404 	addi	r2,r2,16
 400f500:	10800037 	ldwio	r2,0(r2)
 400f504:	10bfffcc 	andi	r2,r2,65535
 400f508:	e0bffe15 	stw	r2,-8(fp)
        alt_timestamp_type upper = IORD_ALTERA_AVALON_TIMER_SNAPH(base) & ALTERA_AVALON_TIMER_SNAPH_MSK;
 400f50c:	e0bffd17 	ldw	r2,-12(fp)
 400f510:	10800504 	addi	r2,r2,20
 400f514:	10800037 	ldwio	r2,0(r2)
 400f518:	10bfffcc 	andi	r2,r2,65535
 400f51c:	e0bfff15 	stw	r2,-4(fp)
        
        return (0xFFFFFFFF - ((upper << 16) | lower)); 
 400f520:	e0bfff17 	ldw	r2,-4(fp)
 400f524:	1006943a 	slli	r3,r2,16
 400f528:	e0bffe17 	ldw	r2,-8(fp)
 400f52c:	1884b03a 	or	r2,r3,r2
 400f530:	0084303a 	nor	r2,zero,r2
#endif
  }
}
 400f534:	e037883a 	mov	sp,fp
 400f538:	df000017 	ldw	fp,0(sp)
 400f53c:	dec00104 	addi	sp,sp,4
 400f540:	f800283a 	ret

0400f544 <alt_timestamp_freq>:
 * Return the number of timestamp ticks per second. This will be 0 if no
 * timestamp device has been registered.
 */

alt_u32 alt_timestamp_freq(void)
{
 400f544:	deffff04 	addi	sp,sp,-4
 400f548:	df000015 	stw	fp,0(sp)
 400f54c:	d839883a 	mov	fp,sp
  return altera_avalon_timer_ts_freq;
 400f550:	d0a6da17 	ldw	r2,-25752(gp)
}
 400f554:	e037883a 	mov	sp,fp
 400f558:	df000017 	ldw	fp,0(sp)
 400f55c:	dec00104 	addi	sp,sp,4
 400f560:	f800283a 	ret

0400f564 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 400f564:	defff504 	addi	sp,sp,-44
 400f568:	df000a15 	stw	fp,40(sp)
 400f56c:	df000a04 	addi	fp,sp,40
 400f570:	e13ffc15 	stw	r4,-16(fp)
 400f574:	e17ffd15 	stw	r5,-12(fp)
 400f578:	e1bffe15 	stw	r6,-8(fp)
 400f57c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 400f580:	e03ff615 	stw	zero,-40(fp)
 400f584:	d0a6dc17 	ldw	r2,-25744(gp)
  
  if (alt_ticks_per_second ())
 400f588:	10003c26 	beq	r2,zero,400f67c <alt_alarm_start+0x118>
  {
    if (alarm)
 400f58c:	e0bffc17 	ldw	r2,-16(fp)
 400f590:	10003826 	beq	r2,zero,400f674 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
 400f594:	e0bffc17 	ldw	r2,-16(fp)
 400f598:	e0fffe17 	ldw	r3,-8(fp)
 400f59c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 400f5a0:	e0bffc17 	ldw	r2,-16(fp)
 400f5a4:	e0ffff17 	ldw	r3,-4(fp)
 400f5a8:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400f5ac:	0005303a 	rdctl	r2,status
 400f5b0:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400f5b4:	e0fff917 	ldw	r3,-28(fp)
 400f5b8:	00bfff84 	movi	r2,-2
 400f5bc:	1884703a 	and	r2,r3,r2
 400f5c0:	1001703a 	wrctl	status,r2
  
  return context;
 400f5c4:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 400f5c8:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 400f5cc:	d0a6dd17 	ldw	r2,-25740(gp)
      
      current_nticks = alt_nticks();
 400f5d0:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 400f5d4:	e0fffd17 	ldw	r3,-12(fp)
 400f5d8:	e0bff617 	ldw	r2,-40(fp)
 400f5dc:	1885883a 	add	r2,r3,r2
 400f5e0:	10c00044 	addi	r3,r2,1
 400f5e4:	e0bffc17 	ldw	r2,-16(fp)
 400f5e8:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 400f5ec:	e0bffc17 	ldw	r2,-16(fp)
 400f5f0:	10c00217 	ldw	r3,8(r2)
 400f5f4:	e0bff617 	ldw	r2,-40(fp)
 400f5f8:	1880042e 	bgeu	r3,r2,400f60c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 400f5fc:	e0bffc17 	ldw	r2,-16(fp)
 400f600:	00c00044 	movi	r3,1
 400f604:	10c00405 	stb	r3,16(r2)
 400f608:	00000206 	br	400f614 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 400f60c:	e0bffc17 	ldw	r2,-16(fp)
 400f610:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 400f614:	e0bffc17 	ldw	r2,-16(fp)
 400f618:	d0e00e04 	addi	r3,gp,-32712
 400f61c:	e0fffa15 	stw	r3,-24(fp)
 400f620:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 400f624:	e0bffb17 	ldw	r2,-20(fp)
 400f628:	e0fffa17 	ldw	r3,-24(fp)
 400f62c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 400f630:	e0bffa17 	ldw	r2,-24(fp)
 400f634:	10c00017 	ldw	r3,0(r2)
 400f638:	e0bffb17 	ldw	r2,-20(fp)
 400f63c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 400f640:	e0bffa17 	ldw	r2,-24(fp)
 400f644:	10800017 	ldw	r2,0(r2)
 400f648:	e0fffb17 	ldw	r3,-20(fp)
 400f64c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 400f650:	e0bffa17 	ldw	r2,-24(fp)
 400f654:	e0fffb17 	ldw	r3,-20(fp)
 400f658:	10c00015 	stw	r3,0(r2)
 400f65c:	e0bff817 	ldw	r2,-32(fp)
 400f660:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400f664:	e0bff717 	ldw	r2,-36(fp)
 400f668:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 400f66c:	0005883a 	mov	r2,zero
 400f670:	00000306 	br	400f680 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
 400f674:	00bffa84 	movi	r2,-22
 400f678:	00000106 	br	400f680 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
 400f67c:	00bfde84 	movi	r2,-134
  }
}
 400f680:	e037883a 	mov	sp,fp
 400f684:	df000017 	ldw	fp,0(sp)
 400f688:	dec00104 	addi	sp,sp,4
 400f68c:	f800283a 	ret

0400f690 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400f690:	defffe04 	addi	sp,sp,-8
 400f694:	dfc00115 	stw	ra,4(sp)
 400f698:	df000015 	stw	fp,0(sp)
 400f69c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400f6a0:	d0a00b17 	ldw	r2,-32724(gp)
 400f6a4:	10000326 	beq	r2,zero,400f6b4 <alt_get_errno+0x24>
 400f6a8:	d0a00b17 	ldw	r2,-32724(gp)
 400f6ac:	103ee83a 	callr	r2
 400f6b0:	00000106 	br	400f6b8 <alt_get_errno+0x28>
 400f6b4:	d0a6d504 	addi	r2,gp,-25772
}
 400f6b8:	e037883a 	mov	sp,fp
 400f6bc:	dfc00117 	ldw	ra,4(sp)
 400f6c0:	df000017 	ldw	fp,0(sp)
 400f6c4:	dec00204 	addi	sp,sp,8
 400f6c8:	f800283a 	ret

0400f6cc <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 400f6cc:	defffa04 	addi	sp,sp,-24
 400f6d0:	dfc00515 	stw	ra,20(sp)
 400f6d4:	df000415 	stw	fp,16(sp)
 400f6d8:	df000404 	addi	fp,sp,16
 400f6dc:	e13ffe15 	stw	r4,-8(fp)
 400f6e0:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 400f6e4:	e0bffe17 	ldw	r2,-8(fp)
 400f6e8:	10000326 	beq	r2,zero,400f6f8 <alt_dev_llist_insert+0x2c>
 400f6ec:	e0bffe17 	ldw	r2,-8(fp)
 400f6f0:	10800217 	ldw	r2,8(r2)
 400f6f4:	1000061e 	bne	r2,zero,400f710 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 400f6f8:	400f6900 	call	400f690 <alt_get_errno>
 400f6fc:	1007883a 	mov	r3,r2
 400f700:	00800584 	movi	r2,22
 400f704:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 400f708:	00bffa84 	movi	r2,-22
 400f70c:	00001306 	br	400f75c <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 400f710:	e0bffe17 	ldw	r2,-8(fp)
 400f714:	e0ffff17 	ldw	r3,-4(fp)
 400f718:	e0fffc15 	stw	r3,-16(fp)
 400f71c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 400f720:	e0bffd17 	ldw	r2,-12(fp)
 400f724:	e0fffc17 	ldw	r3,-16(fp)
 400f728:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 400f72c:	e0bffc17 	ldw	r2,-16(fp)
 400f730:	10c00017 	ldw	r3,0(r2)
 400f734:	e0bffd17 	ldw	r2,-12(fp)
 400f738:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 400f73c:	e0bffc17 	ldw	r2,-16(fp)
 400f740:	10800017 	ldw	r2,0(r2)
 400f744:	e0fffd17 	ldw	r3,-12(fp)
 400f748:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 400f74c:	e0bffc17 	ldw	r2,-16(fp)
 400f750:	e0fffd17 	ldw	r3,-12(fp)
 400f754:	10c00015 	stw	r3,0(r2)

  return 0;  
 400f758:	0005883a 	mov	r2,zero
}
 400f75c:	e037883a 	mov	sp,fp
 400f760:	dfc00117 	ldw	ra,4(sp)
 400f764:	df000017 	ldw	fp,0(sp)
 400f768:	dec00204 	addi	sp,sp,8
 400f76c:	f800283a 	ret

0400f770 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 400f770:	defffd04 	addi	sp,sp,-12
 400f774:	dfc00215 	stw	ra,8(sp)
 400f778:	df000115 	stw	fp,4(sp)
 400f77c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 400f780:	00810074 	movhi	r2,1025
 400f784:	1081a204 	addi	r2,r2,1672
 400f788:	e0bfff15 	stw	r2,-4(fp)
 400f78c:	00000606 	br	400f7a8 <_do_ctors+0x38>
        (*ctor) (); 
 400f790:	e0bfff17 	ldw	r2,-4(fp)
 400f794:	10800017 	ldw	r2,0(r2)
 400f798:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 400f79c:	e0bfff17 	ldw	r2,-4(fp)
 400f7a0:	10bfff04 	addi	r2,r2,-4
 400f7a4:	e0bfff15 	stw	r2,-4(fp)
 400f7a8:	e0ffff17 	ldw	r3,-4(fp)
 400f7ac:	00810074 	movhi	r2,1025
 400f7b0:	1081a304 	addi	r2,r2,1676
 400f7b4:	18bff62e 	bgeu	r3,r2,400f790 <__alt_data_end+0xfc00f790>
        (*ctor) (); 
}
 400f7b8:	0001883a 	nop
 400f7bc:	e037883a 	mov	sp,fp
 400f7c0:	dfc00117 	ldw	ra,4(sp)
 400f7c4:	df000017 	ldw	fp,0(sp)
 400f7c8:	dec00204 	addi	sp,sp,8
 400f7cc:	f800283a 	ret

0400f7d0 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 400f7d0:	defffd04 	addi	sp,sp,-12
 400f7d4:	dfc00215 	stw	ra,8(sp)
 400f7d8:	df000115 	stw	fp,4(sp)
 400f7dc:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 400f7e0:	00810074 	movhi	r2,1025
 400f7e4:	1081a204 	addi	r2,r2,1672
 400f7e8:	e0bfff15 	stw	r2,-4(fp)
 400f7ec:	00000606 	br	400f808 <_do_dtors+0x38>
        (*dtor) (); 
 400f7f0:	e0bfff17 	ldw	r2,-4(fp)
 400f7f4:	10800017 	ldw	r2,0(r2)
 400f7f8:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 400f7fc:	e0bfff17 	ldw	r2,-4(fp)
 400f800:	10bfff04 	addi	r2,r2,-4
 400f804:	e0bfff15 	stw	r2,-4(fp)
 400f808:	e0ffff17 	ldw	r3,-4(fp)
 400f80c:	00810074 	movhi	r2,1025
 400f810:	1081a304 	addi	r2,r2,1676
 400f814:	18bff62e 	bgeu	r3,r2,400f7f0 <__alt_data_end+0xfc00f7f0>
        (*dtor) (); 
}
 400f818:	0001883a 	nop
 400f81c:	e037883a 	mov	sp,fp
 400f820:	dfc00117 	ldw	ra,4(sp)
 400f824:	df000017 	ldw	fp,0(sp)
 400f828:	dec00204 	addi	sp,sp,8
 400f82c:	f800283a 	ret

0400f830 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 400f830:	defffb04 	addi	sp,sp,-20
 400f834:	df000415 	stw	fp,16(sp)
 400f838:	df000404 	addi	fp,sp,16
 400f83c:	e13ffe15 	stw	r4,-8(fp)
 400f840:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 400f844:	e0bfff17 	ldw	r2,-4(fp)
 400f848:	10808070 	cmpltui	r2,r2,513
 400f84c:	1000021e 	bne	r2,zero,400f858 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 400f850:	00808004 	movi	r2,512
 400f854:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
 400f858:	e0fffe17 	ldw	r3,-8(fp)
 400f85c:	e0bfff17 	ldw	r2,-4(fp)
 400f860:	1885883a 	add	r2,r3,r2
 400f864:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 400f868:	e0bffe17 	ldw	r2,-8(fp)
 400f86c:	e0bffc15 	stw	r2,-16(fp)
 400f870:	00000506 	br	400f888 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 400f874:	e0bffc17 	ldw	r2,-16(fp)
 400f878:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 400f87c:	e0bffc17 	ldw	r2,-16(fp)
 400f880:	10800804 	addi	r2,r2,32
 400f884:	e0bffc15 	stw	r2,-16(fp)
 400f888:	e0fffc17 	ldw	r3,-16(fp)
 400f88c:	e0bffd17 	ldw	r2,-12(fp)
 400f890:	18bff836 	bltu	r3,r2,400f874 <__alt_data_end+0xfc00f874>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 400f894:	e0bffe17 	ldw	r2,-8(fp)
 400f898:	108007cc 	andi	r2,r2,31
 400f89c:	10000226 	beq	r2,zero,400f8a8 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 400f8a0:	e0bffc17 	ldw	r2,-16(fp)
 400f8a4:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 400f8a8:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 400f8ac:	0001883a 	nop
 400f8b0:	e037883a 	mov	sp,fp
 400f8b4:	df000017 	ldw	fp,0(sp)
 400f8b8:	dec00104 	addi	sp,sp,4
 400f8bc:	f800283a 	ret

0400f8c0 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 400f8c0:	defff904 	addi	sp,sp,-28
 400f8c4:	dfc00615 	stw	ra,24(sp)
 400f8c8:	df000515 	stw	fp,20(sp)
 400f8cc:	df000504 	addi	fp,sp,20
 400f8d0:	e13ffc15 	stw	r4,-16(fp)
 400f8d4:	e17ffd15 	stw	r5,-12(fp)
 400f8d8:	e1bffe15 	stw	r6,-8(fp)
 400f8dc:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 400f8e0:	e0800217 	ldw	r2,8(fp)
 400f8e4:	d8800015 	stw	r2,0(sp)
 400f8e8:	e1ffff17 	ldw	r7,-4(fp)
 400f8ec:	e1bffe17 	ldw	r6,-8(fp)
 400f8f0:	e17ffd17 	ldw	r5,-12(fp)
 400f8f4:	e13ffc17 	ldw	r4,-16(fp)
 400f8f8:	400fa700 	call	400fa70 <alt_iic_isr_register>
}  
 400f8fc:	e037883a 	mov	sp,fp
 400f900:	dfc00117 	ldw	ra,4(sp)
 400f904:	df000017 	ldw	fp,0(sp)
 400f908:	dec00204 	addi	sp,sp,8
 400f90c:	f800283a 	ret

0400f910 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 400f910:	defff904 	addi	sp,sp,-28
 400f914:	df000615 	stw	fp,24(sp)
 400f918:	df000604 	addi	fp,sp,24
 400f91c:	e13ffe15 	stw	r4,-8(fp)
 400f920:	e17fff15 	stw	r5,-4(fp)
 400f924:	e0bfff17 	ldw	r2,-4(fp)
 400f928:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400f92c:	0005303a 	rdctl	r2,status
 400f930:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400f934:	e0fffb17 	ldw	r3,-20(fp)
 400f938:	00bfff84 	movi	r2,-2
 400f93c:	1884703a 	and	r2,r3,r2
 400f940:	1001703a 	wrctl	status,r2
  
  return context;
 400f944:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 400f948:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 400f94c:	00c00044 	movi	r3,1
 400f950:	e0bffa17 	ldw	r2,-24(fp)
 400f954:	1884983a 	sll	r2,r3,r2
 400f958:	1007883a 	mov	r3,r2
 400f95c:	d0a6db17 	ldw	r2,-25748(gp)
 400f960:	1884b03a 	or	r2,r3,r2
 400f964:	d0a6db15 	stw	r2,-25748(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 400f968:	d0a6db17 	ldw	r2,-25748(gp)
 400f96c:	100170fa 	wrctl	ienable,r2
 400f970:	e0bffc17 	ldw	r2,-16(fp)
 400f974:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400f978:	e0bffd17 	ldw	r2,-12(fp)
 400f97c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 400f980:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 400f984:	0001883a 	nop
}
 400f988:	e037883a 	mov	sp,fp
 400f98c:	df000017 	ldw	fp,0(sp)
 400f990:	dec00104 	addi	sp,sp,4
 400f994:	f800283a 	ret

0400f998 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 400f998:	defff904 	addi	sp,sp,-28
 400f99c:	df000615 	stw	fp,24(sp)
 400f9a0:	df000604 	addi	fp,sp,24
 400f9a4:	e13ffe15 	stw	r4,-8(fp)
 400f9a8:	e17fff15 	stw	r5,-4(fp)
 400f9ac:	e0bfff17 	ldw	r2,-4(fp)
 400f9b0:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400f9b4:	0005303a 	rdctl	r2,status
 400f9b8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400f9bc:	e0fffb17 	ldw	r3,-20(fp)
 400f9c0:	00bfff84 	movi	r2,-2
 400f9c4:	1884703a 	and	r2,r3,r2
 400f9c8:	1001703a 	wrctl	status,r2
  
  return context;
 400f9cc:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 400f9d0:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 400f9d4:	00c00044 	movi	r3,1
 400f9d8:	e0bffa17 	ldw	r2,-24(fp)
 400f9dc:	1884983a 	sll	r2,r3,r2
 400f9e0:	0084303a 	nor	r2,zero,r2
 400f9e4:	1007883a 	mov	r3,r2
 400f9e8:	d0a6db17 	ldw	r2,-25748(gp)
 400f9ec:	1884703a 	and	r2,r3,r2
 400f9f0:	d0a6db15 	stw	r2,-25748(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 400f9f4:	d0a6db17 	ldw	r2,-25748(gp)
 400f9f8:	100170fa 	wrctl	ienable,r2
 400f9fc:	e0bffc17 	ldw	r2,-16(fp)
 400fa00:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400fa04:	e0bffd17 	ldw	r2,-12(fp)
 400fa08:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 400fa0c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 400fa10:	0001883a 	nop
}
 400fa14:	e037883a 	mov	sp,fp
 400fa18:	df000017 	ldw	fp,0(sp)
 400fa1c:	dec00104 	addi	sp,sp,4
 400fa20:	f800283a 	ret

0400fa24 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 400fa24:	defffc04 	addi	sp,sp,-16
 400fa28:	df000315 	stw	fp,12(sp)
 400fa2c:	df000304 	addi	fp,sp,12
 400fa30:	e13ffe15 	stw	r4,-8(fp)
 400fa34:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 400fa38:	000530fa 	rdctl	r2,ienable
 400fa3c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 400fa40:	00c00044 	movi	r3,1
 400fa44:	e0bfff17 	ldw	r2,-4(fp)
 400fa48:	1884983a 	sll	r2,r3,r2
 400fa4c:	1007883a 	mov	r3,r2
 400fa50:	e0bffd17 	ldw	r2,-12(fp)
 400fa54:	1884703a 	and	r2,r3,r2
 400fa58:	1004c03a 	cmpne	r2,r2,zero
 400fa5c:	10803fcc 	andi	r2,r2,255
}
 400fa60:	e037883a 	mov	sp,fp
 400fa64:	df000017 	ldw	fp,0(sp)
 400fa68:	dec00104 	addi	sp,sp,4
 400fa6c:	f800283a 	ret

0400fa70 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 400fa70:	defff504 	addi	sp,sp,-44
 400fa74:	dfc00a15 	stw	ra,40(sp)
 400fa78:	df000915 	stw	fp,36(sp)
 400fa7c:	df000904 	addi	fp,sp,36
 400fa80:	e13ffc15 	stw	r4,-16(fp)
 400fa84:	e17ffd15 	stw	r5,-12(fp)
 400fa88:	e1bffe15 	stw	r6,-8(fp)
 400fa8c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 400fa90:	00bffa84 	movi	r2,-22
 400fa94:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 400fa98:	e0bffd17 	ldw	r2,-12(fp)
 400fa9c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 400faa0:	e0bff817 	ldw	r2,-32(fp)
 400faa4:	10800808 	cmpgei	r2,r2,32
 400faa8:	1000271e 	bne	r2,zero,400fb48 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400faac:	0005303a 	rdctl	r2,status
 400fab0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400fab4:	e0fffb17 	ldw	r3,-20(fp)
 400fab8:	00bfff84 	movi	r2,-2
 400fabc:	1884703a 	and	r2,r3,r2
 400fac0:	1001703a 	wrctl	status,r2
  
  return context;
 400fac4:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 400fac8:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
 400facc:	00810074 	movhi	r2,1025
 400fad0:	10905f04 	addi	r2,r2,16764
 400fad4:	e0fff817 	ldw	r3,-32(fp)
 400fad8:	180690fa 	slli	r3,r3,3
 400fadc:	10c5883a 	add	r2,r2,r3
 400fae0:	e0fffe17 	ldw	r3,-8(fp)
 400fae4:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 400fae8:	00810074 	movhi	r2,1025
 400faec:	10905f04 	addi	r2,r2,16764
 400faf0:	e0fff817 	ldw	r3,-32(fp)
 400faf4:	180690fa 	slli	r3,r3,3
 400faf8:	10c5883a 	add	r2,r2,r3
 400fafc:	10800104 	addi	r2,r2,4
 400fb00:	e0ffff17 	ldw	r3,-4(fp)
 400fb04:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 400fb08:	e0bffe17 	ldw	r2,-8(fp)
 400fb0c:	10000526 	beq	r2,zero,400fb24 <alt_iic_isr_register+0xb4>
 400fb10:	e0bff817 	ldw	r2,-32(fp)
 400fb14:	100b883a 	mov	r5,r2
 400fb18:	e13ffc17 	ldw	r4,-16(fp)
 400fb1c:	400f9100 	call	400f910 <alt_ic_irq_enable>
 400fb20:	00000406 	br	400fb34 <alt_iic_isr_register+0xc4>
 400fb24:	e0bff817 	ldw	r2,-32(fp)
 400fb28:	100b883a 	mov	r5,r2
 400fb2c:	e13ffc17 	ldw	r4,-16(fp)
 400fb30:	400f9980 	call	400f998 <alt_ic_irq_disable>
 400fb34:	e0bff715 	stw	r2,-36(fp)
 400fb38:	e0bffa17 	ldw	r2,-24(fp)
 400fb3c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400fb40:	e0bff917 	ldw	r2,-28(fp)
 400fb44:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 400fb48:	e0bff717 	ldw	r2,-36(fp)
}
 400fb4c:	e037883a 	mov	sp,fp
 400fb50:	dfc00117 	ldw	ra,4(sp)
 400fb54:	df000017 	ldw	fp,0(sp)
 400fb58:	dec00204 	addi	sp,sp,8
 400fb5c:	f800283a 	ret

0400fb60 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 400fb60:	defff904 	addi	sp,sp,-28
 400fb64:	dfc00615 	stw	ra,24(sp)
 400fb68:	df000515 	stw	fp,20(sp)
 400fb6c:	df000504 	addi	fp,sp,20
 400fb70:	e13ffc15 	stw	r4,-16(fp)
 400fb74:	e17ffd15 	stw	r5,-12(fp)
 400fb78:	e1bffe15 	stw	r6,-8(fp)
 400fb7c:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 400fb80:	e1bfff17 	ldw	r6,-4(fp)
 400fb84:	e17ffe17 	ldw	r5,-8(fp)
 400fb88:	e13ffd17 	ldw	r4,-12(fp)
 400fb8c:	400fda00 	call	400fda0 <open>
 400fb90:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 400fb94:	e0bffb17 	ldw	r2,-20(fp)
 400fb98:	10001c16 	blt	r2,zero,400fc0c <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
 400fb9c:	00810074 	movhi	r2,1025
 400fba0:	1084ff04 	addi	r2,r2,5116
 400fba4:	e0fffb17 	ldw	r3,-20(fp)
 400fba8:	18c00324 	muli	r3,r3,12
 400fbac:	10c5883a 	add	r2,r2,r3
 400fbb0:	10c00017 	ldw	r3,0(r2)
 400fbb4:	e0bffc17 	ldw	r2,-16(fp)
 400fbb8:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 400fbbc:	00810074 	movhi	r2,1025
 400fbc0:	1084ff04 	addi	r2,r2,5116
 400fbc4:	e0fffb17 	ldw	r3,-20(fp)
 400fbc8:	18c00324 	muli	r3,r3,12
 400fbcc:	10c5883a 	add	r2,r2,r3
 400fbd0:	10800104 	addi	r2,r2,4
 400fbd4:	10c00017 	ldw	r3,0(r2)
 400fbd8:	e0bffc17 	ldw	r2,-16(fp)
 400fbdc:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 400fbe0:	00810074 	movhi	r2,1025
 400fbe4:	1084ff04 	addi	r2,r2,5116
 400fbe8:	e0fffb17 	ldw	r3,-20(fp)
 400fbec:	18c00324 	muli	r3,r3,12
 400fbf0:	10c5883a 	add	r2,r2,r3
 400fbf4:	10800204 	addi	r2,r2,8
 400fbf8:	10c00017 	ldw	r3,0(r2)
 400fbfc:	e0bffc17 	ldw	r2,-16(fp)
 400fc00:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 400fc04:	e13ffb17 	ldw	r4,-20(fp)
 400fc08:	400e6cc0 	call	400e6cc <alt_release_fd>
  }
} 
 400fc0c:	0001883a 	nop
 400fc10:	e037883a 	mov	sp,fp
 400fc14:	dfc00117 	ldw	ra,4(sp)
 400fc18:	df000017 	ldw	fp,0(sp)
 400fc1c:	dec00204 	addi	sp,sp,8
 400fc20:	f800283a 	ret

0400fc24 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 400fc24:	defffb04 	addi	sp,sp,-20
 400fc28:	dfc00415 	stw	ra,16(sp)
 400fc2c:	df000315 	stw	fp,12(sp)
 400fc30:	df000304 	addi	fp,sp,12
 400fc34:	e13ffd15 	stw	r4,-12(fp)
 400fc38:	e17ffe15 	stw	r5,-8(fp)
 400fc3c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 400fc40:	01c07fc4 	movi	r7,511
 400fc44:	01800044 	movi	r6,1
 400fc48:	e17ffd17 	ldw	r5,-12(fp)
 400fc4c:	01010074 	movhi	r4,1025
 400fc50:	21050204 	addi	r4,r4,5128
 400fc54:	400fb600 	call	400fb60 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 400fc58:	01c07fc4 	movi	r7,511
 400fc5c:	000d883a 	mov	r6,zero
 400fc60:	e17ffe17 	ldw	r5,-8(fp)
 400fc64:	01010074 	movhi	r4,1025
 400fc68:	2104ff04 	addi	r4,r4,5116
 400fc6c:	400fb600 	call	400fb60 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 400fc70:	01c07fc4 	movi	r7,511
 400fc74:	01800044 	movi	r6,1
 400fc78:	e17fff17 	ldw	r5,-4(fp)
 400fc7c:	01010074 	movhi	r4,1025
 400fc80:	21050504 	addi	r4,r4,5140
 400fc84:	400fb600 	call	400fb60 <alt_open_fd>
}  
 400fc88:	0001883a 	nop
 400fc8c:	e037883a 	mov	sp,fp
 400fc90:	dfc00117 	ldw	ra,4(sp)
 400fc94:	df000017 	ldw	fp,0(sp)
 400fc98:	dec00204 	addi	sp,sp,8
 400fc9c:	f800283a 	ret

0400fca0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 400fca0:	defffe04 	addi	sp,sp,-8
 400fca4:	dfc00115 	stw	ra,4(sp)
 400fca8:	df000015 	stw	fp,0(sp)
 400fcac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 400fcb0:	d0a00b17 	ldw	r2,-32724(gp)
 400fcb4:	10000326 	beq	r2,zero,400fcc4 <alt_get_errno+0x24>
 400fcb8:	d0a00b17 	ldw	r2,-32724(gp)
 400fcbc:	103ee83a 	callr	r2
 400fcc0:	00000106 	br	400fcc8 <alt_get_errno+0x28>
 400fcc4:	d0a6d504 	addi	r2,gp,-25772
}
 400fcc8:	e037883a 	mov	sp,fp
 400fccc:	dfc00117 	ldw	ra,4(sp)
 400fcd0:	df000017 	ldw	fp,0(sp)
 400fcd4:	dec00204 	addi	sp,sp,8
 400fcd8:	f800283a 	ret

0400fcdc <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 400fcdc:	defffd04 	addi	sp,sp,-12
 400fce0:	df000215 	stw	fp,8(sp)
 400fce4:	df000204 	addi	fp,sp,8
 400fce8:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 400fcec:	e0bfff17 	ldw	r2,-4(fp)
 400fcf0:	10800217 	ldw	r2,8(r2)
 400fcf4:	10d00034 	orhi	r3,r2,16384
 400fcf8:	e0bfff17 	ldw	r2,-4(fp)
 400fcfc:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 400fd00:	e03ffe15 	stw	zero,-8(fp)
 400fd04:	00001d06 	br	400fd7c <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 400fd08:	00810074 	movhi	r2,1025
 400fd0c:	1084ff04 	addi	r2,r2,5116
 400fd10:	e0fffe17 	ldw	r3,-8(fp)
 400fd14:	18c00324 	muli	r3,r3,12
 400fd18:	10c5883a 	add	r2,r2,r3
 400fd1c:	10c00017 	ldw	r3,0(r2)
 400fd20:	e0bfff17 	ldw	r2,-4(fp)
 400fd24:	10800017 	ldw	r2,0(r2)
 400fd28:	1880111e 	bne	r3,r2,400fd70 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 400fd2c:	00810074 	movhi	r2,1025
 400fd30:	1084ff04 	addi	r2,r2,5116
 400fd34:	e0fffe17 	ldw	r3,-8(fp)
 400fd38:	18c00324 	muli	r3,r3,12
 400fd3c:	10c5883a 	add	r2,r2,r3
 400fd40:	10800204 	addi	r2,r2,8
 400fd44:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 400fd48:	1000090e 	bge	r2,zero,400fd70 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 400fd4c:	e0bffe17 	ldw	r2,-8(fp)
 400fd50:	10c00324 	muli	r3,r2,12
 400fd54:	00810074 	movhi	r2,1025
 400fd58:	1084ff04 	addi	r2,r2,5116
 400fd5c:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 400fd60:	e0bfff17 	ldw	r2,-4(fp)
 400fd64:	18800226 	beq	r3,r2,400fd70 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 400fd68:	00bffcc4 	movi	r2,-13
 400fd6c:	00000806 	br	400fd90 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 400fd70:	e0bffe17 	ldw	r2,-8(fp)
 400fd74:	10800044 	addi	r2,r2,1
 400fd78:	e0bffe15 	stw	r2,-8(fp)
 400fd7c:	d0a00a17 	ldw	r2,-32728(gp)
 400fd80:	1007883a 	mov	r3,r2
 400fd84:	e0bffe17 	ldw	r2,-8(fp)
 400fd88:	18bfdf2e 	bgeu	r3,r2,400fd08 <__alt_data_end+0xfc00fd08>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 400fd8c:	0005883a 	mov	r2,zero
}
 400fd90:	e037883a 	mov	sp,fp
 400fd94:	df000017 	ldw	fp,0(sp)
 400fd98:	dec00104 	addi	sp,sp,4
 400fd9c:	f800283a 	ret

0400fda0 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 400fda0:	defff604 	addi	sp,sp,-40
 400fda4:	dfc00915 	stw	ra,36(sp)
 400fda8:	df000815 	stw	fp,32(sp)
 400fdac:	df000804 	addi	fp,sp,32
 400fdb0:	e13ffd15 	stw	r4,-12(fp)
 400fdb4:	e17ffe15 	stw	r5,-8(fp)
 400fdb8:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 400fdbc:	00bfffc4 	movi	r2,-1
 400fdc0:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 400fdc4:	00bffb44 	movi	r2,-19
 400fdc8:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 400fdcc:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 400fdd0:	d1600804 	addi	r5,gp,-32736
 400fdd4:	e13ffd17 	ldw	r4,-12(fp)
 400fdd8:	40100bc0 	call	40100bc <alt_find_dev>
 400fddc:	e0bff815 	stw	r2,-32(fp)
 400fde0:	e0bff817 	ldw	r2,-32(fp)
 400fde4:	1000051e 	bne	r2,zero,400fdfc <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 400fde8:	e13ffd17 	ldw	r4,-12(fp)
 400fdec:	401014c0 	call	401014c <alt_find_file>
 400fdf0:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 400fdf4:	00800044 	movi	r2,1
 400fdf8:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 400fdfc:	e0bff817 	ldw	r2,-32(fp)
 400fe00:	10002926 	beq	r2,zero,400fea8 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
 400fe04:	e13ff817 	ldw	r4,-32(fp)
 400fe08:	40102540 	call	4010254 <alt_get_fd>
 400fe0c:	e0bff915 	stw	r2,-28(fp)
 400fe10:	e0bff917 	ldw	r2,-28(fp)
 400fe14:	1000030e 	bge	r2,zero,400fe24 <open+0x84>
    {
      status = index;
 400fe18:	e0bff917 	ldw	r2,-28(fp)
 400fe1c:	e0bffa15 	stw	r2,-24(fp)
 400fe20:	00002306 	br	400feb0 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
 400fe24:	e0bff917 	ldw	r2,-28(fp)
 400fe28:	10c00324 	muli	r3,r2,12
 400fe2c:	00810074 	movhi	r2,1025
 400fe30:	1084ff04 	addi	r2,r2,5116
 400fe34:	1885883a 	add	r2,r3,r2
 400fe38:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 400fe3c:	e0fffe17 	ldw	r3,-8(fp)
 400fe40:	00900034 	movhi	r2,16384
 400fe44:	10bfffc4 	addi	r2,r2,-1
 400fe48:	1886703a 	and	r3,r3,r2
 400fe4c:	e0bffc17 	ldw	r2,-16(fp)
 400fe50:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 400fe54:	e0bffb17 	ldw	r2,-20(fp)
 400fe58:	1000051e 	bne	r2,zero,400fe70 <open+0xd0>
 400fe5c:	e13ffc17 	ldw	r4,-16(fp)
 400fe60:	400fcdc0 	call	400fcdc <alt_file_locked>
 400fe64:	e0bffa15 	stw	r2,-24(fp)
 400fe68:	e0bffa17 	ldw	r2,-24(fp)
 400fe6c:	10001016 	blt	r2,zero,400feb0 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 400fe70:	e0bff817 	ldw	r2,-32(fp)
 400fe74:	10800317 	ldw	r2,12(r2)
 400fe78:	10000826 	beq	r2,zero,400fe9c <open+0xfc>
 400fe7c:	e0bff817 	ldw	r2,-32(fp)
 400fe80:	10800317 	ldw	r2,12(r2)
 400fe84:	e1ffff17 	ldw	r7,-4(fp)
 400fe88:	e1bffe17 	ldw	r6,-8(fp)
 400fe8c:	e17ffd17 	ldw	r5,-12(fp)
 400fe90:	e13ffc17 	ldw	r4,-16(fp)
 400fe94:	103ee83a 	callr	r2
 400fe98:	00000106 	br	400fea0 <open+0x100>
 400fe9c:	0005883a 	mov	r2,zero
 400fea0:	e0bffa15 	stw	r2,-24(fp)
 400fea4:	00000206 	br	400feb0 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
 400fea8:	00bffb44 	movi	r2,-19
 400feac:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 400feb0:	e0bffa17 	ldw	r2,-24(fp)
 400feb4:	1000090e 	bge	r2,zero,400fedc <open+0x13c>
  {
    alt_release_fd (index);  
 400feb8:	e13ff917 	ldw	r4,-28(fp)
 400febc:	400e6cc0 	call	400e6cc <alt_release_fd>
    ALT_ERRNO = -status;
 400fec0:	400fca00 	call	400fca0 <alt_get_errno>
 400fec4:	1007883a 	mov	r3,r2
 400fec8:	e0bffa17 	ldw	r2,-24(fp)
 400fecc:	0085c83a 	sub	r2,zero,r2
 400fed0:	18800015 	stw	r2,0(r3)
    return -1;
 400fed4:	00bfffc4 	movi	r2,-1
 400fed8:	00000106 	br	400fee0 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
 400fedc:	e0bff917 	ldw	r2,-28(fp)
}
 400fee0:	e037883a 	mov	sp,fp
 400fee4:	dfc00117 	ldw	ra,4(sp)
 400fee8:	df000017 	ldw	fp,0(sp)
 400feec:	dec00204 	addi	sp,sp,8
 400fef0:	f800283a 	ret

0400fef4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 400fef4:	defffa04 	addi	sp,sp,-24
 400fef8:	df000515 	stw	fp,20(sp)
 400fefc:	df000504 	addi	fp,sp,20
 400ff00:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 400ff04:	0005303a 	rdctl	r2,status
 400ff08:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 400ff0c:	e0fffc17 	ldw	r3,-16(fp)
 400ff10:	00bfff84 	movi	r2,-2
 400ff14:	1884703a 	and	r2,r3,r2
 400ff18:	1001703a 	wrctl	status,r2
  
  return context;
 400ff1c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 400ff20:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 400ff24:	e0bfff17 	ldw	r2,-4(fp)
 400ff28:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 400ff2c:	e0bffd17 	ldw	r2,-12(fp)
 400ff30:	10800017 	ldw	r2,0(r2)
 400ff34:	e0fffd17 	ldw	r3,-12(fp)
 400ff38:	18c00117 	ldw	r3,4(r3)
 400ff3c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 400ff40:	e0bffd17 	ldw	r2,-12(fp)
 400ff44:	10800117 	ldw	r2,4(r2)
 400ff48:	e0fffd17 	ldw	r3,-12(fp)
 400ff4c:	18c00017 	ldw	r3,0(r3)
 400ff50:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 400ff54:	e0bffd17 	ldw	r2,-12(fp)
 400ff58:	e0fffd17 	ldw	r3,-12(fp)
 400ff5c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 400ff60:	e0bffd17 	ldw	r2,-12(fp)
 400ff64:	e0fffd17 	ldw	r3,-12(fp)
 400ff68:	10c00015 	stw	r3,0(r2)
 400ff6c:	e0bffb17 	ldw	r2,-20(fp)
 400ff70:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 400ff74:	e0bffe17 	ldw	r2,-8(fp)
 400ff78:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 400ff7c:	0001883a 	nop
 400ff80:	e037883a 	mov	sp,fp
 400ff84:	df000017 	ldw	fp,0(sp)
 400ff88:	dec00104 	addi	sp,sp,4
 400ff8c:	f800283a 	ret

0400ff90 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 400ff90:	defffb04 	addi	sp,sp,-20
 400ff94:	dfc00415 	stw	ra,16(sp)
 400ff98:	df000315 	stw	fp,12(sp)
 400ff9c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 400ffa0:	d0a00e17 	ldw	r2,-32712(gp)
 400ffa4:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 400ffa8:	d0a6dd17 	ldw	r2,-25740(gp)
 400ffac:	10800044 	addi	r2,r2,1
 400ffb0:	d0a6dd15 	stw	r2,-25740(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 400ffb4:	00002e06 	br	4010070 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 400ffb8:	e0bffd17 	ldw	r2,-12(fp)
 400ffbc:	10800017 	ldw	r2,0(r2)
 400ffc0:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 400ffc4:	e0bffd17 	ldw	r2,-12(fp)
 400ffc8:	10800403 	ldbu	r2,16(r2)
 400ffcc:	10803fcc 	andi	r2,r2,255
 400ffd0:	10000426 	beq	r2,zero,400ffe4 <alt_tick+0x54>
 400ffd4:	d0a6dd17 	ldw	r2,-25740(gp)
 400ffd8:	1000021e 	bne	r2,zero,400ffe4 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 400ffdc:	e0bffd17 	ldw	r2,-12(fp)
 400ffe0:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 400ffe4:	e0bffd17 	ldw	r2,-12(fp)
 400ffe8:	10800217 	ldw	r2,8(r2)
 400ffec:	d0e6dd17 	ldw	r3,-25740(gp)
 400fff0:	18801d36 	bltu	r3,r2,4010068 <alt_tick+0xd8>
 400fff4:	e0bffd17 	ldw	r2,-12(fp)
 400fff8:	10800403 	ldbu	r2,16(r2)
 400fffc:	10803fcc 	andi	r2,r2,255
 4010000:	1000191e 	bne	r2,zero,4010068 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 4010004:	e0bffd17 	ldw	r2,-12(fp)
 4010008:	10800317 	ldw	r2,12(r2)
 401000c:	e0fffd17 	ldw	r3,-12(fp)
 4010010:	18c00517 	ldw	r3,20(r3)
 4010014:	1809883a 	mov	r4,r3
 4010018:	103ee83a 	callr	r2
 401001c:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 4010020:	e0bfff17 	ldw	r2,-4(fp)
 4010024:	1000031e 	bne	r2,zero,4010034 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 4010028:	e13ffd17 	ldw	r4,-12(fp)
 401002c:	400fef40 	call	400fef4 <alt_alarm_stop>
 4010030:	00000d06 	br	4010068 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 4010034:	e0bffd17 	ldw	r2,-12(fp)
 4010038:	10c00217 	ldw	r3,8(r2)
 401003c:	e0bfff17 	ldw	r2,-4(fp)
 4010040:	1887883a 	add	r3,r3,r2
 4010044:	e0bffd17 	ldw	r2,-12(fp)
 4010048:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 401004c:	e0bffd17 	ldw	r2,-12(fp)
 4010050:	10c00217 	ldw	r3,8(r2)
 4010054:	d0a6dd17 	ldw	r2,-25740(gp)
 4010058:	1880032e 	bgeu	r3,r2,4010068 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 401005c:	e0bffd17 	ldw	r2,-12(fp)
 4010060:	00c00044 	movi	r3,1
 4010064:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 4010068:	e0bffe17 	ldw	r2,-8(fp)
 401006c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 4010070:	e0fffd17 	ldw	r3,-12(fp)
 4010074:	d0a00e04 	addi	r2,gp,-32712
 4010078:	18bfcf1e 	bne	r3,r2,400ffb8 <__alt_data_end+0xfc00ffb8>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 401007c:	0001883a 	nop
}
 4010080:	0001883a 	nop
 4010084:	e037883a 	mov	sp,fp
 4010088:	dfc00117 	ldw	ra,4(sp)
 401008c:	df000017 	ldw	fp,0(sp)
 4010090:	dec00204 	addi	sp,sp,8
 4010094:	f800283a 	ret

04010098 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
 4010098:	deffff04 	addi	sp,sp,-4
 401009c:	df000015 	stw	fp,0(sp)
 40100a0:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 40100a4:	000170fa 	wrctl	ienable,zero
}
 40100a8:	0001883a 	nop
 40100ac:	e037883a 	mov	sp,fp
 40100b0:	df000017 	ldw	fp,0(sp)
 40100b4:	dec00104 	addi	sp,sp,4
 40100b8:	f800283a 	ret

040100bc <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 40100bc:	defffa04 	addi	sp,sp,-24
 40100c0:	dfc00515 	stw	ra,20(sp)
 40100c4:	df000415 	stw	fp,16(sp)
 40100c8:	df000404 	addi	fp,sp,16
 40100cc:	e13ffe15 	stw	r4,-8(fp)
 40100d0:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 40100d4:	e0bfff17 	ldw	r2,-4(fp)
 40100d8:	10800017 	ldw	r2,0(r2)
 40100dc:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 40100e0:	e13ffe17 	ldw	r4,-8(fp)
 40100e4:	40028240 	call	4002824 <strlen>
 40100e8:	10800044 	addi	r2,r2,1
 40100ec:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 40100f0:	00000d06 	br	4010128 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 40100f4:	e0bffc17 	ldw	r2,-16(fp)
 40100f8:	10800217 	ldw	r2,8(r2)
 40100fc:	e0fffd17 	ldw	r3,-12(fp)
 4010100:	180d883a 	mov	r6,r3
 4010104:	e17ffe17 	ldw	r5,-8(fp)
 4010108:	1009883a 	mov	r4,r2
 401010c:	40103440 	call	4010344 <memcmp>
 4010110:	1000021e 	bne	r2,zero,401011c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 4010114:	e0bffc17 	ldw	r2,-16(fp)
 4010118:	00000706 	br	4010138 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 401011c:	e0bffc17 	ldw	r2,-16(fp)
 4010120:	10800017 	ldw	r2,0(r2)
 4010124:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 4010128:	e0fffc17 	ldw	r3,-16(fp)
 401012c:	e0bfff17 	ldw	r2,-4(fp)
 4010130:	18bff01e 	bne	r3,r2,40100f4 <__alt_data_end+0xfc0100f4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 4010134:	0005883a 	mov	r2,zero
}
 4010138:	e037883a 	mov	sp,fp
 401013c:	dfc00117 	ldw	ra,4(sp)
 4010140:	df000017 	ldw	fp,0(sp)
 4010144:	dec00204 	addi	sp,sp,8
 4010148:	f800283a 	ret

0401014c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 401014c:	defffb04 	addi	sp,sp,-20
 4010150:	dfc00415 	stw	ra,16(sp)
 4010154:	df000315 	stw	fp,12(sp)
 4010158:	df000304 	addi	fp,sp,12
 401015c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 4010160:	d0a00617 	ldw	r2,-32744(gp)
 4010164:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 4010168:	00003106 	br	4010230 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 401016c:	e0bffd17 	ldw	r2,-12(fp)
 4010170:	10800217 	ldw	r2,8(r2)
 4010174:	1009883a 	mov	r4,r2
 4010178:	40028240 	call	4002824 <strlen>
 401017c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 4010180:	e0bffd17 	ldw	r2,-12(fp)
 4010184:	10c00217 	ldw	r3,8(r2)
 4010188:	e0bffe17 	ldw	r2,-8(fp)
 401018c:	10bfffc4 	addi	r2,r2,-1
 4010190:	1885883a 	add	r2,r3,r2
 4010194:	10800003 	ldbu	r2,0(r2)
 4010198:	10803fcc 	andi	r2,r2,255
 401019c:	1080201c 	xori	r2,r2,128
 40101a0:	10bfe004 	addi	r2,r2,-128
 40101a4:	10800bd8 	cmpnei	r2,r2,47
 40101a8:	1000031e 	bne	r2,zero,40101b8 <alt_find_file+0x6c>
    {
      len -= 1;
 40101ac:	e0bffe17 	ldw	r2,-8(fp)
 40101b0:	10bfffc4 	addi	r2,r2,-1
 40101b4:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 40101b8:	e0bffe17 	ldw	r2,-8(fp)
 40101bc:	e0ffff17 	ldw	r3,-4(fp)
 40101c0:	1885883a 	add	r2,r3,r2
 40101c4:	10800003 	ldbu	r2,0(r2)
 40101c8:	10803fcc 	andi	r2,r2,255
 40101cc:	1080201c 	xori	r2,r2,128
 40101d0:	10bfe004 	addi	r2,r2,-128
 40101d4:	10800be0 	cmpeqi	r2,r2,47
 40101d8:	1000081e 	bne	r2,zero,40101fc <alt_find_file+0xb0>
 40101dc:	e0bffe17 	ldw	r2,-8(fp)
 40101e0:	e0ffff17 	ldw	r3,-4(fp)
 40101e4:	1885883a 	add	r2,r3,r2
 40101e8:	10800003 	ldbu	r2,0(r2)
 40101ec:	10803fcc 	andi	r2,r2,255
 40101f0:	1080201c 	xori	r2,r2,128
 40101f4:	10bfe004 	addi	r2,r2,-128
 40101f8:	10000a1e 	bne	r2,zero,4010224 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 40101fc:	e0bffd17 	ldw	r2,-12(fp)
 4010200:	10800217 	ldw	r2,8(r2)
 4010204:	e0fffe17 	ldw	r3,-8(fp)
 4010208:	180d883a 	mov	r6,r3
 401020c:	e17fff17 	ldw	r5,-4(fp)
 4010210:	1009883a 	mov	r4,r2
 4010214:	40103440 	call	4010344 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 4010218:	1000021e 	bne	r2,zero,4010224 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 401021c:	e0bffd17 	ldw	r2,-12(fp)
 4010220:	00000706 	br	4010240 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 4010224:	e0bffd17 	ldw	r2,-12(fp)
 4010228:	10800017 	ldw	r2,0(r2)
 401022c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 4010230:	e0fffd17 	ldw	r3,-12(fp)
 4010234:	d0a00604 	addi	r2,gp,-32744
 4010238:	18bfcc1e 	bne	r3,r2,401016c <__alt_data_end+0xfc01016c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 401023c:	0005883a 	mov	r2,zero
}
 4010240:	e037883a 	mov	sp,fp
 4010244:	dfc00117 	ldw	ra,4(sp)
 4010248:	df000017 	ldw	fp,0(sp)
 401024c:	dec00204 	addi	sp,sp,8
 4010250:	f800283a 	ret

04010254 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 4010254:	defffc04 	addi	sp,sp,-16
 4010258:	df000315 	stw	fp,12(sp)
 401025c:	df000304 	addi	fp,sp,12
 4010260:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 4010264:	00bffa04 	movi	r2,-24
 4010268:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 401026c:	e03ffd15 	stw	zero,-12(fp)
 4010270:	00001906 	br	40102d8 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
 4010274:	00810074 	movhi	r2,1025
 4010278:	1084ff04 	addi	r2,r2,5116
 401027c:	e0fffd17 	ldw	r3,-12(fp)
 4010280:	18c00324 	muli	r3,r3,12
 4010284:	10c5883a 	add	r2,r2,r3
 4010288:	10800017 	ldw	r2,0(r2)
 401028c:	10000f1e 	bne	r2,zero,40102cc <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
 4010290:	00810074 	movhi	r2,1025
 4010294:	1084ff04 	addi	r2,r2,5116
 4010298:	e0fffd17 	ldw	r3,-12(fp)
 401029c:	18c00324 	muli	r3,r3,12
 40102a0:	10c5883a 	add	r2,r2,r3
 40102a4:	e0ffff17 	ldw	r3,-4(fp)
 40102a8:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 40102ac:	d0e00a17 	ldw	r3,-32728(gp)
 40102b0:	e0bffd17 	ldw	r2,-12(fp)
 40102b4:	1880020e 	bge	r3,r2,40102c0 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
 40102b8:	e0bffd17 	ldw	r2,-12(fp)
 40102bc:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
 40102c0:	e0bffd17 	ldw	r2,-12(fp)
 40102c4:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 40102c8:	00000606 	br	40102e4 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 40102cc:	e0bffd17 	ldw	r2,-12(fp)
 40102d0:	10800044 	addi	r2,r2,1
 40102d4:	e0bffd15 	stw	r2,-12(fp)
 40102d8:	e0bffd17 	ldw	r2,-12(fp)
 40102dc:	10800810 	cmplti	r2,r2,32
 40102e0:	103fe41e 	bne	r2,zero,4010274 <__alt_data_end+0xfc010274>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 40102e4:	e0bffe17 	ldw	r2,-8(fp)
}
 40102e8:	e037883a 	mov	sp,fp
 40102ec:	df000017 	ldw	fp,0(sp)
 40102f0:	dec00104 	addi	sp,sp,4
 40102f4:	f800283a 	ret

040102f8 <atexit>:
 40102f8:	200b883a 	mov	r5,r4
 40102fc:	000f883a 	mov	r7,zero
 4010300:	000d883a 	mov	r6,zero
 4010304:	0009883a 	mov	r4,zero
 4010308:	40103c01 	jmpi	40103c0 <__register_exitproc>

0401030c <exit>:
 401030c:	defffe04 	addi	sp,sp,-8
 4010310:	000b883a 	mov	r5,zero
 4010314:	dc000015 	stw	r16,0(sp)
 4010318:	dfc00115 	stw	ra,4(sp)
 401031c:	2021883a 	mov	r16,r4
 4010320:	40104d80 	call	40104d8 <__call_exitprocs>
 4010324:	00810074 	movhi	r2,1025
 4010328:	10897704 	addi	r2,r2,9692
 401032c:	11000017 	ldw	r4,0(r2)
 4010330:	20800f17 	ldw	r2,60(r4)
 4010334:	10000126 	beq	r2,zero,401033c <exit+0x30>
 4010338:	103ee83a 	callr	r2
 401033c:	8009883a 	mov	r4,r16
 4010340:	40106580 	call	4010658 <_exit>

04010344 <memcmp>:
 4010344:	01c000c4 	movi	r7,3
 4010348:	3980192e 	bgeu	r7,r6,40103b0 <memcmp+0x6c>
 401034c:	2144b03a 	or	r2,r4,r5
 4010350:	11c4703a 	and	r2,r2,r7
 4010354:	10000f26 	beq	r2,zero,4010394 <memcmp+0x50>
 4010358:	20800003 	ldbu	r2,0(r4)
 401035c:	28c00003 	ldbu	r3,0(r5)
 4010360:	10c0151e 	bne	r2,r3,40103b8 <memcmp+0x74>
 4010364:	31bfff84 	addi	r6,r6,-2
 4010368:	01ffffc4 	movi	r7,-1
 401036c:	00000406 	br	4010380 <memcmp+0x3c>
 4010370:	20800003 	ldbu	r2,0(r4)
 4010374:	28c00003 	ldbu	r3,0(r5)
 4010378:	31bfffc4 	addi	r6,r6,-1
 401037c:	10c00e1e 	bne	r2,r3,40103b8 <memcmp+0x74>
 4010380:	21000044 	addi	r4,r4,1
 4010384:	29400044 	addi	r5,r5,1
 4010388:	31fff91e 	bne	r6,r7,4010370 <__alt_data_end+0xfc010370>
 401038c:	0005883a 	mov	r2,zero
 4010390:	f800283a 	ret
 4010394:	20c00017 	ldw	r3,0(r4)
 4010398:	28800017 	ldw	r2,0(r5)
 401039c:	18bfee1e 	bne	r3,r2,4010358 <__alt_data_end+0xfc010358>
 40103a0:	31bfff04 	addi	r6,r6,-4
 40103a4:	21000104 	addi	r4,r4,4
 40103a8:	29400104 	addi	r5,r5,4
 40103ac:	39bff936 	bltu	r7,r6,4010394 <__alt_data_end+0xfc010394>
 40103b0:	303fe91e 	bne	r6,zero,4010358 <__alt_data_end+0xfc010358>
 40103b4:	003ff506 	br	401038c <__alt_data_end+0xfc01038c>
 40103b8:	10c5c83a 	sub	r2,r2,r3
 40103bc:	f800283a 	ret

040103c0 <__register_exitproc>:
 40103c0:	defffa04 	addi	sp,sp,-24
 40103c4:	dc000315 	stw	r16,12(sp)
 40103c8:	04010074 	movhi	r16,1025
 40103cc:	84097704 	addi	r16,r16,9692
 40103d0:	80c00017 	ldw	r3,0(r16)
 40103d4:	dc400415 	stw	r17,16(sp)
 40103d8:	dfc00515 	stw	ra,20(sp)
 40103dc:	18805217 	ldw	r2,328(r3)
 40103e0:	2023883a 	mov	r17,r4
 40103e4:	10003726 	beq	r2,zero,40104c4 <__register_exitproc+0x104>
 40103e8:	10c00117 	ldw	r3,4(r2)
 40103ec:	010007c4 	movi	r4,31
 40103f0:	20c00e16 	blt	r4,r3,401042c <__register_exitproc+0x6c>
 40103f4:	1a000044 	addi	r8,r3,1
 40103f8:	8800221e 	bne	r17,zero,4010484 <__register_exitproc+0xc4>
 40103fc:	18c00084 	addi	r3,r3,2
 4010400:	18c7883a 	add	r3,r3,r3
 4010404:	18c7883a 	add	r3,r3,r3
 4010408:	12000115 	stw	r8,4(r2)
 401040c:	10c7883a 	add	r3,r2,r3
 4010410:	19400015 	stw	r5,0(r3)
 4010414:	0005883a 	mov	r2,zero
 4010418:	dfc00517 	ldw	ra,20(sp)
 401041c:	dc400417 	ldw	r17,16(sp)
 4010420:	dc000317 	ldw	r16,12(sp)
 4010424:	dec00604 	addi	sp,sp,24
 4010428:	f800283a 	ret
 401042c:	00800034 	movhi	r2,0
 4010430:	10800004 	addi	r2,r2,0
 4010434:	10002626 	beq	r2,zero,40104d0 <__register_exitproc+0x110>
 4010438:	01006404 	movi	r4,400
 401043c:	d9400015 	stw	r5,0(sp)
 4010440:	d9800115 	stw	r6,4(sp)
 4010444:	d9c00215 	stw	r7,8(sp)
 4010448:	00000000 	call	0 <__alt_mem_new_sdram_controller_0-0x4000000>
 401044c:	d9400017 	ldw	r5,0(sp)
 4010450:	d9800117 	ldw	r6,4(sp)
 4010454:	d9c00217 	ldw	r7,8(sp)
 4010458:	10001d26 	beq	r2,zero,40104d0 <__register_exitproc+0x110>
 401045c:	81000017 	ldw	r4,0(r16)
 4010460:	10000115 	stw	zero,4(r2)
 4010464:	02000044 	movi	r8,1
 4010468:	22405217 	ldw	r9,328(r4)
 401046c:	0007883a 	mov	r3,zero
 4010470:	12400015 	stw	r9,0(r2)
 4010474:	20805215 	stw	r2,328(r4)
 4010478:	10006215 	stw	zero,392(r2)
 401047c:	10006315 	stw	zero,396(r2)
 4010480:	883fde26 	beq	r17,zero,40103fc <__alt_data_end+0xfc0103fc>
 4010484:	18c9883a 	add	r4,r3,r3
 4010488:	2109883a 	add	r4,r4,r4
 401048c:	1109883a 	add	r4,r2,r4
 4010490:	21802215 	stw	r6,136(r4)
 4010494:	01800044 	movi	r6,1
 4010498:	12406217 	ldw	r9,392(r2)
 401049c:	30cc983a 	sll	r6,r6,r3
 40104a0:	4992b03a 	or	r9,r9,r6
 40104a4:	12406215 	stw	r9,392(r2)
 40104a8:	21c04215 	stw	r7,264(r4)
 40104ac:	01000084 	movi	r4,2
 40104b0:	893fd21e 	bne	r17,r4,40103fc <__alt_data_end+0xfc0103fc>
 40104b4:	11006317 	ldw	r4,396(r2)
 40104b8:	218cb03a 	or	r6,r4,r6
 40104bc:	11806315 	stw	r6,396(r2)
 40104c0:	003fce06 	br	40103fc <__alt_data_end+0xfc0103fc>
 40104c4:	18805304 	addi	r2,r3,332
 40104c8:	18805215 	stw	r2,328(r3)
 40104cc:	003fc606 	br	40103e8 <__alt_data_end+0xfc0103e8>
 40104d0:	00bfffc4 	movi	r2,-1
 40104d4:	003fd006 	br	4010418 <__alt_data_end+0xfc010418>

040104d8 <__call_exitprocs>:
 40104d8:	defff504 	addi	sp,sp,-44
 40104dc:	df000915 	stw	fp,36(sp)
 40104e0:	dd400615 	stw	r21,24(sp)
 40104e4:	dc800315 	stw	r18,12(sp)
 40104e8:	dfc00a15 	stw	ra,40(sp)
 40104ec:	ddc00815 	stw	r23,32(sp)
 40104f0:	dd800715 	stw	r22,28(sp)
 40104f4:	dd000515 	stw	r20,20(sp)
 40104f8:	dcc00415 	stw	r19,16(sp)
 40104fc:	dc400215 	stw	r17,8(sp)
 4010500:	dc000115 	stw	r16,4(sp)
 4010504:	d9000015 	stw	r4,0(sp)
 4010508:	2839883a 	mov	fp,r5
 401050c:	04800044 	movi	r18,1
 4010510:	057fffc4 	movi	r21,-1
 4010514:	00810074 	movhi	r2,1025
 4010518:	10897704 	addi	r2,r2,9692
 401051c:	12000017 	ldw	r8,0(r2)
 4010520:	45005217 	ldw	r20,328(r8)
 4010524:	44c05204 	addi	r19,r8,328
 4010528:	a0001c26 	beq	r20,zero,401059c <__call_exitprocs+0xc4>
 401052c:	a0800117 	ldw	r2,4(r20)
 4010530:	15ffffc4 	addi	r23,r2,-1
 4010534:	b8000d16 	blt	r23,zero,401056c <__call_exitprocs+0x94>
 4010538:	14000044 	addi	r16,r2,1
 401053c:	8421883a 	add	r16,r16,r16
 4010540:	8421883a 	add	r16,r16,r16
 4010544:	84402004 	addi	r17,r16,128
 4010548:	a463883a 	add	r17,r20,r17
 401054c:	a421883a 	add	r16,r20,r16
 4010550:	e0001e26 	beq	fp,zero,40105cc <__call_exitprocs+0xf4>
 4010554:	80804017 	ldw	r2,256(r16)
 4010558:	e0801c26 	beq	fp,r2,40105cc <__call_exitprocs+0xf4>
 401055c:	bdffffc4 	addi	r23,r23,-1
 4010560:	843fff04 	addi	r16,r16,-4
 4010564:	8c7fff04 	addi	r17,r17,-4
 4010568:	bd7ff91e 	bne	r23,r21,4010550 <__alt_data_end+0xfc010550>
 401056c:	00800034 	movhi	r2,0
 4010570:	10800004 	addi	r2,r2,0
 4010574:	10000926 	beq	r2,zero,401059c <__call_exitprocs+0xc4>
 4010578:	a0800117 	ldw	r2,4(r20)
 401057c:	1000301e 	bne	r2,zero,4010640 <__call_exitprocs+0x168>
 4010580:	a0800017 	ldw	r2,0(r20)
 4010584:	10003226 	beq	r2,zero,4010650 <__call_exitprocs+0x178>
 4010588:	a009883a 	mov	r4,r20
 401058c:	98800015 	stw	r2,0(r19)
 4010590:	00000000 	call	0 <__alt_mem_new_sdram_controller_0-0x4000000>
 4010594:	9d000017 	ldw	r20,0(r19)
 4010598:	a03fe41e 	bne	r20,zero,401052c <__alt_data_end+0xfc01052c>
 401059c:	dfc00a17 	ldw	ra,40(sp)
 40105a0:	df000917 	ldw	fp,36(sp)
 40105a4:	ddc00817 	ldw	r23,32(sp)
 40105a8:	dd800717 	ldw	r22,28(sp)
 40105ac:	dd400617 	ldw	r21,24(sp)
 40105b0:	dd000517 	ldw	r20,20(sp)
 40105b4:	dcc00417 	ldw	r19,16(sp)
 40105b8:	dc800317 	ldw	r18,12(sp)
 40105bc:	dc400217 	ldw	r17,8(sp)
 40105c0:	dc000117 	ldw	r16,4(sp)
 40105c4:	dec00b04 	addi	sp,sp,44
 40105c8:	f800283a 	ret
 40105cc:	a0800117 	ldw	r2,4(r20)
 40105d0:	80c00017 	ldw	r3,0(r16)
 40105d4:	10bfffc4 	addi	r2,r2,-1
 40105d8:	15c01426 	beq	r2,r23,401062c <__call_exitprocs+0x154>
 40105dc:	80000015 	stw	zero,0(r16)
 40105e0:	183fde26 	beq	r3,zero,401055c <__alt_data_end+0xfc01055c>
 40105e4:	95c8983a 	sll	r4,r18,r23
 40105e8:	a0806217 	ldw	r2,392(r20)
 40105ec:	a5800117 	ldw	r22,4(r20)
 40105f0:	2084703a 	and	r2,r4,r2
 40105f4:	10000b26 	beq	r2,zero,4010624 <__call_exitprocs+0x14c>
 40105f8:	a0806317 	ldw	r2,396(r20)
 40105fc:	2088703a 	and	r4,r4,r2
 4010600:	20000c1e 	bne	r4,zero,4010634 <__call_exitprocs+0x15c>
 4010604:	89400017 	ldw	r5,0(r17)
 4010608:	d9000017 	ldw	r4,0(sp)
 401060c:	183ee83a 	callr	r3
 4010610:	a0800117 	ldw	r2,4(r20)
 4010614:	15bfbf1e 	bne	r2,r22,4010514 <__alt_data_end+0xfc010514>
 4010618:	98800017 	ldw	r2,0(r19)
 401061c:	153fcf26 	beq	r2,r20,401055c <__alt_data_end+0xfc01055c>
 4010620:	003fbc06 	br	4010514 <__alt_data_end+0xfc010514>
 4010624:	183ee83a 	callr	r3
 4010628:	003ff906 	br	4010610 <__alt_data_end+0xfc010610>
 401062c:	a5c00115 	stw	r23,4(r20)
 4010630:	003feb06 	br	40105e0 <__alt_data_end+0xfc0105e0>
 4010634:	89000017 	ldw	r4,0(r17)
 4010638:	183ee83a 	callr	r3
 401063c:	003ff406 	br	4010610 <__alt_data_end+0xfc010610>
 4010640:	a0800017 	ldw	r2,0(r20)
 4010644:	a027883a 	mov	r19,r20
 4010648:	1029883a 	mov	r20,r2
 401064c:	003fb606 	br	4010528 <__alt_data_end+0xfc010528>
 4010650:	0005883a 	mov	r2,zero
 4010654:	003ffb06 	br	4010644 <__alt_data_end+0xfc010644>

04010658 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 4010658:	defffd04 	addi	sp,sp,-12
 401065c:	df000215 	stw	fp,8(sp)
 4010660:	df000204 	addi	fp,sp,8
 4010664:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 4010668:	0001883a 	nop
 401066c:	e0bfff17 	ldw	r2,-4(fp)
 4010670:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 4010674:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 4010678:	10000226 	beq	r2,zero,4010684 <_exit+0x2c>
    ALT_SIM_FAIL();
 401067c:	002af070 	cmpltui	zero,zero,43969
 4010680:	00000106 	br	4010688 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 4010684:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 4010688:	003fff06 	br	4010688 <__alt_data_end+0xfc010688>
